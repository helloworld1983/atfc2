-- Copyright 1986-2015 Xilinx, Inc. All Rights Reserved.
-- --------------------------------------------------------------------------------
-- Tool Version: Vivado v.2015.4.2 (win64) Build 1494164 Fri Feb 26 04:18:56 MST 2016
-- Date        : Wed Nov 22 16:57:03 2017
-- Host        : windowsPC running 64-bit major release  (build 9200)
-- Command     : write_vhdl -force -mode funcsim
--               c:/Users/smkilani/Documents/atfc/firmware/ATFC_demo1/ATFC_demo1.srcs/sources_1/bd/system/ip/system_microblaze_0_0/system_microblaze_0_0_sim_netlist.vhdl
-- Design      : system_microblaze_0_0
-- Purpose     : This VHDL netlist is a functional simulation representation of the design and should not be modified or
--               synthesized. This netlist cannot be used for SDF annotated simulation.
-- Device      : xc7a35tfgg484-1
-- --------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_Byte_Doublet_Handle_gti is
  port (
    wb_read_msb_doublet_sel : out STD_LOGIC;
    \M_AXI_DP_WDATA[31]\ : out STD_LOGIC_VECTOR ( 35 downto 0 );
    \LOCKSTEP_Out_reg[3792]\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    ex_reverse_byteorder : in STD_LOGIC;
    Clk : in STD_LOGIC;
    ex_doublet_access : in STD_LOGIC;
    ex_byte_access : in STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    \EX_Op3_reg[24]\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    D : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_Byte_Doublet_Handle_gti : entity is "Byte_Doublet_Handle_gti";
end system_microblaze_0_0_Byte_Doublet_Handle_gti;

architecture STRUCTURE of system_microblaze_0_0_Byte_Doublet_Handle_gti is
  signal mem_Byte_Access : STD_LOGIC;
  signal mem_Doublet_Access : STD_LOGIC;
  signal mem_byte_selects : STD_LOGIC_VECTOR ( 0 to 1 );
  signal mem_reverse_byteorder : STD_LOGIC;
  signal \wb_read_lsb_1_sel[0]_i_1_n_0\ : STD_LOGIC;
  signal \wb_read_lsb_sel[0]_i_1_n_0\ : STD_LOGIC;
  signal \wb_read_lsb_sel[1]_i_1_n_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \wb_read_lsb_1_sel[0]_i_1\ : label is "soft_lutpair0";
  attribute SOFT_HLUTNM of \wb_read_lsb_sel[0]_i_1\ : label is "soft_lutpair0";
begin
\MEM_DataBus_Byte_Enable_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \Using_FPGA.Native\(3),
      Q => \M_AXI_DP_WDATA[31]\(3),
      R => \out\(0)
    );
\MEM_DataBus_Byte_Enable_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \Using_FPGA.Native\(2),
      Q => \M_AXI_DP_WDATA[31]\(2),
      R => \out\(0)
    );
\MEM_DataBus_Byte_Enable_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \Using_FPGA.Native\(1),
      Q => \M_AXI_DP_WDATA[31]\(1),
      R => \out\(0)
    );
\MEM_DataBus_Byte_Enable_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \Using_FPGA.Native\(0),
      Q => \M_AXI_DP_WDATA[31]\(0),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(31),
      Q => \M_AXI_DP_WDATA[31]\(35),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(21),
      Q => \M_AXI_DP_WDATA[31]\(25),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(20),
      Q => \M_AXI_DP_WDATA[31]\(24),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(19),
      Q => \M_AXI_DP_WDATA[31]\(23),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(18),
      Q => \M_AXI_DP_WDATA[31]\(22),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(17),
      Q => \M_AXI_DP_WDATA[31]\(21),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(16),
      Q => \M_AXI_DP_WDATA[31]\(20),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(15),
      Q => \M_AXI_DP_WDATA[31]\(19),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(14),
      Q => \M_AXI_DP_WDATA[31]\(18),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(13),
      Q => \M_AXI_DP_WDATA[31]\(17),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(12),
      Q => \M_AXI_DP_WDATA[31]\(16),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(30),
      Q => \M_AXI_DP_WDATA[31]\(34),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(11),
      Q => \M_AXI_DP_WDATA[31]\(15),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(10),
      Q => \M_AXI_DP_WDATA[31]\(14),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(9),
      Q => \M_AXI_DP_WDATA[31]\(13),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(8),
      Q => \M_AXI_DP_WDATA[31]\(12),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(7),
      Q => \M_AXI_DP_WDATA[31]\(11),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(6),
      Q => \M_AXI_DP_WDATA[31]\(10),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(5),
      Q => \M_AXI_DP_WDATA[31]\(9),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(4),
      Q => \M_AXI_DP_WDATA[31]\(8),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(3),
      Q => \M_AXI_DP_WDATA[31]\(7),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(2),
      Q => \M_AXI_DP_WDATA[31]\(6),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(29),
      Q => \M_AXI_DP_WDATA[31]\(33),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(1),
      Q => \M_AXI_DP_WDATA[31]\(5),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(0),
      Q => \M_AXI_DP_WDATA[31]\(4),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(28),
      Q => \M_AXI_DP_WDATA[31]\(32),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(27),
      Q => \M_AXI_DP_WDATA[31]\(31),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(26),
      Q => \M_AXI_DP_WDATA[31]\(30),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(25),
      Q => \M_AXI_DP_WDATA[31]\(29),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(24),
      Q => \M_AXI_DP_WDATA[31]\(28),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(23),
      Q => \M_AXI_DP_WDATA[31]\(27),
      R => \out\(0)
    );
\MEM_DataBus_Write_Data_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \EX_Op3_reg[24]\(22),
      Q => \M_AXI_DP_WDATA[31]\(26),
      R => \out\(0)
    );
mem_Byte_Access_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => ex_byte_access,
      Q => mem_Byte_Access,
      R => \out\(0)
    );
mem_Doublet_Access_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => ex_doublet_access,
      Q => mem_Doublet_Access,
      R => \out\(0)
    );
\mem_byte_selects_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => D(1),
      Q => mem_byte_selects(0),
      R => \out\(0)
    );
\mem_byte_selects_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => D(0),
      Q => mem_byte_selects(1),
      R => \out\(0)
    );
mem_reverse_byteorder_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => ex_reverse_byteorder,
      Q => mem_reverse_byteorder,
      R => \out\(0)
    );
\wb_read_lsb_1_sel[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8B"
    )
        port map (
      I0 => mem_byte_selects(0),
      I1 => mem_Doublet_Access,
      I2 => mem_reverse_byteorder,
      O => \wb_read_lsb_1_sel[0]_i_1_n_0\
    );
\wb_read_lsb_1_sel_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \wb_read_lsb_1_sel[0]_i_1_n_0\,
      Q => \LOCKSTEP_Out_reg[3792]\(1),
      R => \out\(0)
    );
\wb_read_lsb_1_sel_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => mem_reverse_byteorder,
      Q => \LOCKSTEP_Out_reg[3792]\(0),
      R => \out\(0)
    );
\wb_read_lsb_sel[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"A8AB"
    )
        port map (
      I0 => mem_byte_selects(0),
      I1 => mem_Byte_Access,
      I2 => mem_Doublet_Access,
      I3 => mem_reverse_byteorder,
      O => \wb_read_lsb_sel[0]_i_1_n_0\
    );
\wb_read_lsb_sel[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8B"
    )
        port map (
      I0 => mem_byte_selects(1),
      I1 => mem_Byte_Access,
      I2 => mem_reverse_byteorder,
      O => \wb_read_lsb_sel[1]_i_1_n_0\
    );
\wb_read_lsb_sel_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \wb_read_lsb_sel[0]_i_1_n_0\,
      Q => Q(1),
      R => \out\(0)
    );
\wb_read_lsb_sel_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \wb_read_lsb_sel[1]_i_1_n_0\,
      Q => Q(0),
      R => \out\(0)
    );
wb_read_msb_doublet_sel_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => mem_reverse_byteorder,
      Q => wb_read_msb_doublet_sel,
      R => \out\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_DAXI_interface is
  port (
    active_access_d1 : out STD_LOGIC;
    mem_daxi_exclusive_failed : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3800]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3800]_0\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3799]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3799]_0\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3798]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3798]_0\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3797]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3797]_0\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3796]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3796]_0\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3795]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3795]_0\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3794]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3794]_0\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3793]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3793]_0\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3792]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3791]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3790]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3789]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3788]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3787]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3786]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3785]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3784]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3783]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3782]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3781]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3780]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3779]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3778]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3777]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3776]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3775]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3774]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3773]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3772]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3771]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3770]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3769]\ : out STD_LOGIC;
    Trace_WB_Jump_Hit_reg : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    M_AXI_DP_BVALID : in STD_LOGIC;
    M_AXI_DP_RVALID : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \wb_read_lsb_sel_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \wb_read_lsb_1_sel_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    wb_read_msb_doublet_sel : in STD_LOGIC;
    DReady : in STD_LOGIC;
    M_AXI_DP_AWVALID_i1 : in STD_LOGIC;
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_AWVALID_i : in STD_LOGIC;
    M_AXI_DP_AWREADY : in STD_LOGIC;
    M_AXI_DP_WREADY : in STD_LOGIC;
    mem_databus_write : in STD_LOGIC;
    M_AXI_DP_ARREADY : in STD_LOGIC;
    M_AXI_DP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_DAXI_interface : entity is "DAXI_interface";
end system_microblaze_0_0_DAXI_interface;

architecture STRUCTURE of system_microblaze_0_0_DAXI_interface is
  signal \^d\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal MEM_DAXI_Data_Strobe : STD_LOGIC;
  signal M_AXI_DP_ARVALID_i_i_1_n_0 : STD_LOGIC;
  signal M_AXI_DP_AWVALID_i_i_1_n_0 : STD_LOGIC;
  signal M_AXI_DP_WVALID_i_i_1_n_0 : STD_LOGIC;
  signal active_access : STD_LOGIC;
  signal active_access_i_1_n_0 : STD_LOGIC;
  signal mem_access_completed0 : STD_LOGIC;
  signal wb_databus_read_data : STD_LOGIC_VECTOR ( 0 to 31 );
  signal wb_dext_Data_Strobe : STD_LOGIC;
  signal wb_dext_read_data : STD_LOGIC_VECTOR ( 0 to 31 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[16]_INST_0_i_2\ : label is "soft_lutpair58";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[16]_INST_0_i_3\ : label is "soft_lutpair66";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[16]_INST_0_i_4\ : label is "soft_lutpair62";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[16]_INST_0_i_5\ : label is "soft_lutpair70";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[17]_INST_0_i_2\ : label is "soft_lutpair55";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[17]_INST_0_i_3\ : label is "soft_lutpair66";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[17]_INST_0_i_4\ : label is "soft_lutpair62";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[17]_INST_0_i_5\ : label is "soft_lutpair70";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[18]_INST_0_i_2\ : label is "soft_lutpair58";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[18]_INST_0_i_3\ : label is "soft_lutpair65";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[18]_INST_0_i_4\ : label is "soft_lutpair61";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[18]_INST_0_i_5\ : label is "soft_lutpair69";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[19]_INST_0_i_2\ : label is "soft_lutpair57";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[19]_INST_0_i_3\ : label is "soft_lutpair65";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[19]_INST_0_i_4\ : label is "soft_lutpair61";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[19]_INST_0_i_5\ : label is "soft_lutpair69";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[20]_INST_0_i_2\ : label is "soft_lutpair56";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[20]_INST_0_i_3\ : label is "soft_lutpair64";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[20]_INST_0_i_4\ : label is "soft_lutpair60";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[20]_INST_0_i_5\ : label is "soft_lutpair68";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[21]_INST_0_i_2\ : label is "soft_lutpair57";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[21]_INST_0_i_3\ : label is "soft_lutpair64";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[21]_INST_0_i_4\ : label is "soft_lutpair60";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[21]_INST_0_i_5\ : label is "soft_lutpair68";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[22]_INST_0_i_2\ : label is "soft_lutpair56";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[22]_INST_0_i_3\ : label is "soft_lutpair63";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[22]_INST_0_i_4\ : label is "soft_lutpair59";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[22]_INST_0_i_5\ : label is "soft_lutpair67";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[23]_INST_0_i_2\ : label is "soft_lutpair55";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[23]_INST_0_i_3\ : label is "soft_lutpair63";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[23]_INST_0_i_4\ : label is "soft_lutpair59";
  attribute SOFT_HLUTNM of \Trace_New_Reg_Value[23]_INST_0_i_5\ : label is "soft_lutpair67";
begin
  D(2 downto 0) <= \^d\(2 downto 0);
M_AXI_DP_ARVALID_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000F44"
    )
        port map (
      I0 => mem_databus_write,
      I1 => M_AXI_DP_AWVALID_i1,
      I2 => M_AXI_DP_ARREADY,
      I3 => \^d\(0),
      I4 => \out\(0),
      O => M_AXI_DP_ARVALID_i_i_1_n_0
    );
M_AXI_DP_ARVALID_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => M_AXI_DP_ARVALID_i_i_1_n_0,
      Q => \^d\(0),
      R => '0'
    );
M_AXI_DP_AWVALID_i_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"003A"
    )
        port map (
      I0 => M_AXI_DP_AWVALID_i,
      I1 => M_AXI_DP_AWREADY,
      I2 => \^d\(2),
      I3 => \out\(0),
      O => M_AXI_DP_AWVALID_i_i_1_n_0
    );
M_AXI_DP_AWVALID_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => M_AXI_DP_AWVALID_i_i_1_n_0,
      Q => \^d\(2),
      R => '0'
    );
M_AXI_DP_WVALID_i_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"003A"
    )
        port map (
      I0 => M_AXI_DP_AWVALID_i,
      I1 => M_AXI_DP_WREADY,
      I2 => \^d\(1),
      I3 => \out\(0),
      O => M_AXI_DP_WVALID_i_i_1_n_0
    );
M_AXI_DP_WVALID_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => M_AXI_DP_WVALID_i_i_1_n_0,
      Q => \^d\(1),
      R => '0'
    );
\Trace_New_Reg_Value[0]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEAAEEAAFFF0F0F0"
    )
        port map (
      I0 => Q(7),
      I1 => wb_dext_read_data(24),
      I2 => Q(31),
      I3 => wb_dext_Data_Strobe,
      I4 => wb_dext_read_data(0),
      I5 => wb_read_msb_doublet_sel,
      O => \LOCKSTEP_Out_reg[3769]\
    );
\Trace_New_Reg_Value[10]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEAAEEAAFFF0F0F0"
    )
        port map (
      I0 => Q(13),
      I1 => wb_dext_read_data(18),
      I2 => Q(21),
      I3 => wb_dext_Data_Strobe,
      I4 => wb_dext_read_data(10),
      I5 => wb_read_msb_doublet_sel,
      O => \LOCKSTEP_Out_reg[3779]\
    );
\Trace_New_Reg_Value[11]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEAAEEAAFFF0F0F0"
    )
        port map (
      I0 => Q(12),
      I1 => wb_dext_read_data(19),
      I2 => Q(20),
      I3 => wb_dext_Data_Strobe,
      I4 => wb_dext_read_data(11),
      I5 => wb_read_msb_doublet_sel,
      O => \LOCKSTEP_Out_reg[3780]\
    );
\Trace_New_Reg_Value[12]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEAAEEAAFFF0F0F0"
    )
        port map (
      I0 => Q(11),
      I1 => wb_dext_read_data(20),
      I2 => Q(19),
      I3 => wb_dext_Data_Strobe,
      I4 => wb_dext_read_data(12),
      I5 => wb_read_msb_doublet_sel,
      O => \LOCKSTEP_Out_reg[3781]\
    );
\Trace_New_Reg_Value[13]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEAAEEAAFFF0F0F0"
    )
        port map (
      I0 => Q(10),
      I1 => wb_dext_read_data(21),
      I2 => Q(18),
      I3 => wb_dext_Data_Strobe,
      I4 => wb_dext_read_data(13),
      I5 => wb_read_msb_doublet_sel,
      O => \LOCKSTEP_Out_reg[3782]\
    );
\Trace_New_Reg_Value[14]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEAAEEAAFFF0F0F0"
    )
        port map (
      I0 => Q(9),
      I1 => wb_dext_read_data(22),
      I2 => Q(17),
      I3 => wb_dext_Data_Strobe,
      I4 => wb_dext_read_data(14),
      I5 => wb_read_msb_doublet_sel,
      O => \LOCKSTEP_Out_reg[3783]\
    );
\Trace_New_Reg_Value[15]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEAAEEAAFFF0F0F0"
    )
        port map (
      I0 => Q(8),
      I1 => wb_dext_read_data(23),
      I2 => Q(16),
      I3 => wb_dext_Data_Strobe,
      I4 => wb_dext_read_data(15),
      I5 => wb_read_msb_doublet_sel,
      O => \LOCKSTEP_Out_reg[3784]\
    );
\Trace_New_Reg_Value[16]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => wb_databus_read_data(24),
      I1 => wb_databus_read_data(8),
      I2 => wb_databus_read_data(16),
      I3 => \wb_read_lsb_1_sel_reg[0]\(1),
      I4 => wb_databus_read_data(0),
      I5 => \wb_read_lsb_1_sel_reg[0]\(0),
      O => \LOCKSTEP_Out_reg[3785]\
    );
\Trace_New_Reg_Value[16]_INST_0_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(7),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(24),
      O => wb_databus_read_data(24)
    );
\Trace_New_Reg_Value[16]_INST_0_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(23),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(8),
      O => wb_databus_read_data(8)
    );
\Trace_New_Reg_Value[16]_INST_0_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(15),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(16),
      O => wb_databus_read_data(16)
    );
\Trace_New_Reg_Value[16]_INST_0_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(31),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(0),
      O => wb_databus_read_data(0)
    );
\Trace_New_Reg_Value[17]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => wb_databus_read_data(25),
      I1 => wb_databus_read_data(9),
      I2 => wb_databus_read_data(17),
      I3 => \wb_read_lsb_1_sel_reg[0]\(1),
      I4 => wb_databus_read_data(1),
      I5 => \wb_read_lsb_1_sel_reg[0]\(0),
      O => \LOCKSTEP_Out_reg[3786]\
    );
\Trace_New_Reg_Value[17]_INST_0_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(6),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(25),
      O => wb_databus_read_data(25)
    );
\Trace_New_Reg_Value[17]_INST_0_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(22),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(9),
      O => wb_databus_read_data(9)
    );
\Trace_New_Reg_Value[17]_INST_0_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(14),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(17),
      O => wb_databus_read_data(17)
    );
\Trace_New_Reg_Value[17]_INST_0_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(30),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(1),
      O => wb_databus_read_data(1)
    );
\Trace_New_Reg_Value[18]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => wb_databus_read_data(26),
      I1 => wb_databus_read_data(10),
      I2 => wb_databus_read_data(18),
      I3 => \wb_read_lsb_1_sel_reg[0]\(1),
      I4 => wb_databus_read_data(2),
      I5 => \wb_read_lsb_1_sel_reg[0]\(0),
      O => \LOCKSTEP_Out_reg[3787]\
    );
\Trace_New_Reg_Value[18]_INST_0_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(5),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(26),
      O => wb_databus_read_data(26)
    );
\Trace_New_Reg_Value[18]_INST_0_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(21),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(10),
      O => wb_databus_read_data(10)
    );
\Trace_New_Reg_Value[18]_INST_0_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(13),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(18),
      O => wb_databus_read_data(18)
    );
\Trace_New_Reg_Value[18]_INST_0_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(29),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(2),
      O => wb_databus_read_data(2)
    );
\Trace_New_Reg_Value[19]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => wb_databus_read_data(27),
      I1 => wb_databus_read_data(11),
      I2 => wb_databus_read_data(19),
      I3 => \wb_read_lsb_1_sel_reg[0]\(1),
      I4 => wb_databus_read_data(3),
      I5 => \wb_read_lsb_1_sel_reg[0]\(0),
      O => \LOCKSTEP_Out_reg[3788]\
    );
\Trace_New_Reg_Value[19]_INST_0_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(4),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(27),
      O => wb_databus_read_data(27)
    );
\Trace_New_Reg_Value[19]_INST_0_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(20),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(11),
      O => wb_databus_read_data(11)
    );
\Trace_New_Reg_Value[19]_INST_0_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(12),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(19),
      O => wb_databus_read_data(19)
    );
\Trace_New_Reg_Value[19]_INST_0_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(28),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(3),
      O => wb_databus_read_data(3)
    );
\Trace_New_Reg_Value[1]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEAAEEAAFFF0F0F0"
    )
        port map (
      I0 => Q(6),
      I1 => wb_dext_read_data(25),
      I2 => Q(30),
      I3 => wb_dext_Data_Strobe,
      I4 => wb_dext_read_data(1),
      I5 => wb_read_msb_doublet_sel,
      O => \LOCKSTEP_Out_reg[3770]\
    );
\Trace_New_Reg_Value[20]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => wb_databus_read_data(28),
      I1 => wb_databus_read_data(12),
      I2 => wb_databus_read_data(20),
      I3 => \wb_read_lsb_1_sel_reg[0]\(1),
      I4 => wb_databus_read_data(4),
      I5 => \wb_read_lsb_1_sel_reg[0]\(0),
      O => \LOCKSTEP_Out_reg[3789]\
    );
\Trace_New_Reg_Value[20]_INST_0_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(3),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(28),
      O => wb_databus_read_data(28)
    );
\Trace_New_Reg_Value[20]_INST_0_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(19),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(12),
      O => wb_databus_read_data(12)
    );
\Trace_New_Reg_Value[20]_INST_0_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(11),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(20),
      O => wb_databus_read_data(20)
    );
\Trace_New_Reg_Value[20]_INST_0_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(27),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(4),
      O => wb_databus_read_data(4)
    );
\Trace_New_Reg_Value[21]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => wb_databus_read_data(29),
      I1 => wb_databus_read_data(13),
      I2 => wb_databus_read_data(21),
      I3 => \wb_read_lsb_1_sel_reg[0]\(1),
      I4 => wb_databus_read_data(5),
      I5 => \wb_read_lsb_1_sel_reg[0]\(0),
      O => \LOCKSTEP_Out_reg[3790]\
    );
\Trace_New_Reg_Value[21]_INST_0_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(2),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(29),
      O => wb_databus_read_data(29)
    );
\Trace_New_Reg_Value[21]_INST_0_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(18),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(13),
      O => wb_databus_read_data(13)
    );
\Trace_New_Reg_Value[21]_INST_0_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(10),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(21),
      O => wb_databus_read_data(21)
    );
\Trace_New_Reg_Value[21]_INST_0_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(26),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(5),
      O => wb_databus_read_data(5)
    );
\Trace_New_Reg_Value[22]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => wb_databus_read_data(30),
      I1 => wb_databus_read_data(14),
      I2 => wb_databus_read_data(22),
      I3 => \wb_read_lsb_1_sel_reg[0]\(1),
      I4 => wb_databus_read_data(6),
      I5 => \wb_read_lsb_1_sel_reg[0]\(0),
      O => \LOCKSTEP_Out_reg[3791]\
    );
\Trace_New_Reg_Value[22]_INST_0_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(1),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(30),
      O => wb_databus_read_data(30)
    );
\Trace_New_Reg_Value[22]_INST_0_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(17),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(14),
      O => wb_databus_read_data(14)
    );
\Trace_New_Reg_Value[22]_INST_0_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(9),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(22),
      O => wb_databus_read_data(22)
    );
\Trace_New_Reg_Value[22]_INST_0_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(25),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(6),
      O => wb_databus_read_data(6)
    );
\Trace_New_Reg_Value[23]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => wb_databus_read_data(31),
      I1 => wb_databus_read_data(15),
      I2 => wb_databus_read_data(23),
      I3 => \wb_read_lsb_1_sel_reg[0]\(1),
      I4 => wb_databus_read_data(7),
      I5 => \wb_read_lsb_1_sel_reg[0]\(0),
      O => \LOCKSTEP_Out_reg[3792]\
    );
\Trace_New_Reg_Value[23]_INST_0_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(0),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(31),
      O => wb_databus_read_data(31)
    );
\Trace_New_Reg_Value[23]_INST_0_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(16),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(15),
      O => wb_databus_read_data(15)
    );
\Trace_New_Reg_Value[23]_INST_0_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(8),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(23),
      O => wb_databus_read_data(23)
    );
\Trace_New_Reg_Value[23]_INST_0_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => Q(24),
      I1 => wb_dext_Data_Strobe,
      I2 => wb_dext_read_data(7),
      O => wb_databus_read_data(7)
    );
\Trace_New_Reg_Value[24]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => Q(15),
      I1 => wb_dext_read_data(16),
      I2 => \wb_read_lsb_sel_reg[0]\(0),
      I3 => Q(31),
      I4 => wb_dext_Data_Strobe,
      I5 => wb_dext_read_data(0),
      O => \LOCKSTEP_Out_reg[3793]\
    );
\Trace_New_Reg_Value[24]_INST_0_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => Q(7),
      I1 => wb_dext_read_data(24),
      I2 => \wb_read_lsb_sel_reg[0]\(0),
      I3 => Q(23),
      I4 => wb_dext_Data_Strobe,
      I5 => wb_dext_read_data(8),
      O => \LOCKSTEP_Out_reg[3793]_0\
    );
\Trace_New_Reg_Value[25]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => Q(14),
      I1 => wb_dext_read_data(17),
      I2 => \wb_read_lsb_sel_reg[0]\(0),
      I3 => Q(30),
      I4 => wb_dext_Data_Strobe,
      I5 => wb_dext_read_data(1),
      O => \LOCKSTEP_Out_reg[3794]\
    );
\Trace_New_Reg_Value[25]_INST_0_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => Q(6),
      I1 => wb_dext_read_data(25),
      I2 => \wb_read_lsb_sel_reg[0]\(0),
      I3 => Q(22),
      I4 => wb_dext_Data_Strobe,
      I5 => wb_dext_read_data(9),
      O => \LOCKSTEP_Out_reg[3794]_0\
    );
\Trace_New_Reg_Value[26]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => Q(13),
      I1 => wb_dext_read_data(18),
      I2 => \wb_read_lsb_sel_reg[0]\(0),
      I3 => Q(29),
      I4 => wb_dext_Data_Strobe,
      I5 => wb_dext_read_data(2),
      O => \LOCKSTEP_Out_reg[3795]\
    );
\Trace_New_Reg_Value[26]_INST_0_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => Q(5),
      I1 => wb_dext_read_data(26),
      I2 => \wb_read_lsb_sel_reg[0]\(0),
      I3 => Q(21),
      I4 => wb_dext_Data_Strobe,
      I5 => wb_dext_read_data(10),
      O => \LOCKSTEP_Out_reg[3795]_0\
    );
\Trace_New_Reg_Value[27]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => Q(12),
      I1 => wb_dext_read_data(19),
      I2 => \wb_read_lsb_sel_reg[0]\(0),
      I3 => Q(28),
      I4 => wb_dext_Data_Strobe,
      I5 => wb_dext_read_data(3),
      O => \LOCKSTEP_Out_reg[3796]\
    );
\Trace_New_Reg_Value[27]_INST_0_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => Q(4),
      I1 => wb_dext_read_data(27),
      I2 => \wb_read_lsb_sel_reg[0]\(0),
      I3 => Q(20),
      I4 => wb_dext_Data_Strobe,
      I5 => wb_dext_read_data(11),
      O => \LOCKSTEP_Out_reg[3796]_0\
    );
\Trace_New_Reg_Value[28]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => Q(11),
      I1 => wb_dext_read_data(20),
      I2 => \wb_read_lsb_sel_reg[0]\(0),
      I3 => Q(27),
      I4 => wb_dext_Data_Strobe,
      I5 => wb_dext_read_data(4),
      O => \LOCKSTEP_Out_reg[3797]\
    );
\Trace_New_Reg_Value[28]_INST_0_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => Q(3),
      I1 => wb_dext_read_data(28),
      I2 => \wb_read_lsb_sel_reg[0]\(0),
      I3 => Q(19),
      I4 => wb_dext_Data_Strobe,
      I5 => wb_dext_read_data(12),
      O => \LOCKSTEP_Out_reg[3797]_0\
    );
\Trace_New_Reg_Value[29]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => Q(10),
      I1 => wb_dext_read_data(21),
      I2 => \wb_read_lsb_sel_reg[0]\(0),
      I3 => Q(26),
      I4 => wb_dext_Data_Strobe,
      I5 => wb_dext_read_data(5),
      O => \LOCKSTEP_Out_reg[3798]\
    );
\Trace_New_Reg_Value[29]_INST_0_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => Q(2),
      I1 => wb_dext_read_data(29),
      I2 => \wb_read_lsb_sel_reg[0]\(0),
      I3 => Q(18),
      I4 => wb_dext_Data_Strobe,
      I5 => wb_dext_read_data(13),
      O => \LOCKSTEP_Out_reg[3798]_0\
    );
\Trace_New_Reg_Value[2]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEAAEEAAFFF0F0F0"
    )
        port map (
      I0 => Q(5),
      I1 => wb_dext_read_data(26),
      I2 => Q(29),
      I3 => wb_dext_Data_Strobe,
      I4 => wb_dext_read_data(2),
      I5 => wb_read_msb_doublet_sel,
      O => \LOCKSTEP_Out_reg[3771]\
    );
\Trace_New_Reg_Value[30]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => Q(9),
      I1 => wb_dext_read_data(22),
      I2 => \wb_read_lsb_sel_reg[0]\(0),
      I3 => Q(25),
      I4 => wb_dext_Data_Strobe,
      I5 => wb_dext_read_data(6),
      O => \LOCKSTEP_Out_reg[3799]\
    );
\Trace_New_Reg_Value[30]_INST_0_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => Q(1),
      I1 => wb_dext_read_data(30),
      I2 => \wb_read_lsb_sel_reg[0]\(0),
      I3 => Q(17),
      I4 => wb_dext_Data_Strobe,
      I5 => wb_dext_read_data(14),
      O => \LOCKSTEP_Out_reg[3799]_0\
    );
\Trace_New_Reg_Value[31]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => Q(8),
      I1 => wb_dext_read_data(23),
      I2 => \wb_read_lsb_sel_reg[0]\(0),
      I3 => Q(24),
      I4 => wb_dext_Data_Strobe,
      I5 => wb_dext_read_data(7),
      O => \LOCKSTEP_Out_reg[3800]\
    );
\Trace_New_Reg_Value[31]_INST_0_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFAFA0EFE0AFA0"
    )
        port map (
      I0 => Q(0),
      I1 => wb_dext_read_data(31),
      I2 => \wb_read_lsb_sel_reg[0]\(0),
      I3 => Q(16),
      I4 => wb_dext_Data_Strobe,
      I5 => wb_dext_read_data(15),
      O => \LOCKSTEP_Out_reg[3800]_0\
    );
\Trace_New_Reg_Value[3]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEAAEEAAFFF0F0F0"
    )
        port map (
      I0 => Q(4),
      I1 => wb_dext_read_data(27),
      I2 => Q(28),
      I3 => wb_dext_Data_Strobe,
      I4 => wb_dext_read_data(3),
      I5 => wb_read_msb_doublet_sel,
      O => \LOCKSTEP_Out_reg[3772]\
    );
\Trace_New_Reg_Value[4]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEAAEEAAFFF0F0F0"
    )
        port map (
      I0 => Q(3),
      I1 => wb_dext_read_data(28),
      I2 => Q(27),
      I3 => wb_dext_Data_Strobe,
      I4 => wb_dext_read_data(4),
      I5 => wb_read_msb_doublet_sel,
      O => \LOCKSTEP_Out_reg[3773]\
    );
\Trace_New_Reg_Value[5]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEAAEEAAFFF0F0F0"
    )
        port map (
      I0 => Q(2),
      I1 => wb_dext_read_data(29),
      I2 => Q(26),
      I3 => wb_dext_Data_Strobe,
      I4 => wb_dext_read_data(5),
      I5 => wb_read_msb_doublet_sel,
      O => \LOCKSTEP_Out_reg[3774]\
    );
\Trace_New_Reg_Value[6]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEAAEEAAFFF0F0F0"
    )
        port map (
      I0 => Q(1),
      I1 => wb_dext_read_data(30),
      I2 => Q(25),
      I3 => wb_dext_Data_Strobe,
      I4 => wb_dext_read_data(6),
      I5 => wb_read_msb_doublet_sel,
      O => \LOCKSTEP_Out_reg[3775]\
    );
\Trace_New_Reg_Value[7]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEAAEEAAFFF0F0F0"
    )
        port map (
      I0 => Q(0),
      I1 => wb_dext_read_data(31),
      I2 => Q(24),
      I3 => wb_dext_Data_Strobe,
      I4 => wb_dext_read_data(7),
      I5 => wb_read_msb_doublet_sel,
      O => \LOCKSTEP_Out_reg[3776]\
    );
\Trace_New_Reg_Value[8]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEAAEEAAFFF0F0F0"
    )
        port map (
      I0 => Q(15),
      I1 => wb_dext_read_data(16),
      I2 => Q(23),
      I3 => wb_dext_Data_Strobe,
      I4 => wb_dext_read_data(8),
      I5 => wb_read_msb_doublet_sel,
      O => \LOCKSTEP_Out_reg[3777]\
    );
\Trace_New_Reg_Value[9]_INST_0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEAAEEAAFFF0F0F0"
    )
        port map (
      I0 => Q(14),
      I1 => wb_dext_read_data(17),
      I2 => Q(22),
      I3 => wb_dext_Data_Strobe,
      I4 => wb_dext_read_data(9),
      I5 => wb_read_msb_doublet_sel,
      O => \LOCKSTEP_Out_reg[3778]\
    );
\Using_FPGA.Native_i_1__183\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => DReady,
      I1 => MEM_DAXI_Data_Strobe,
      O => Trace_WB_Jump_Hit_reg
    );
WB_DAXI_Data_Strobe_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => MEM_DAXI_Data_Strobe,
      Q => wb_dext_Data_Strobe,
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(31),
      Q => wb_dext_read_data(0),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(21),
      Q => wb_dext_read_data(10),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(20),
      Q => wb_dext_read_data(11),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(19),
      Q => wb_dext_read_data(12),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(18),
      Q => wb_dext_read_data(13),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(17),
      Q => wb_dext_read_data(14),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(16),
      Q => wb_dext_read_data(15),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(15),
      Q => wb_dext_read_data(16),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(14),
      Q => wb_dext_read_data(17),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(13),
      Q => wb_dext_read_data(18),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(12),
      Q => wb_dext_read_data(19),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(30),
      Q => wb_dext_read_data(1),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(11),
      Q => wb_dext_read_data(20),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(10),
      Q => wb_dext_read_data(21),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(9),
      Q => wb_dext_read_data(22),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(8),
      Q => wb_dext_read_data(23),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(7),
      Q => wb_dext_read_data(24),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(6),
      Q => wb_dext_read_data(25),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(5),
      Q => wb_dext_read_data(26),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(4),
      Q => wb_dext_read_data(27),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(3),
      Q => wb_dext_read_data(28),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(2),
      Q => wb_dext_read_data(29),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(29),
      Q => wb_dext_read_data(2),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(1),
      Q => wb_dext_read_data(30),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(0),
      Q => wb_dext_read_data(31),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(28),
      Q => wb_dext_read_data(3),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(27),
      Q => wb_dext_read_data(4),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(26),
      Q => wb_dext_read_data(5),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(25),
      Q => wb_dext_read_data(6),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(24),
      Q => wb_dext_read_data(7),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(23),
      Q => wb_dext_read_data(8),
      R => \out\(0)
    );
\WB_DAXI_Read_Data_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => M_AXI_DP_RVALID,
      D => M_AXI_DP_RDATA(22),
      Q => wb_dext_read_data(9),
      R => \out\(0)
    );
active_access_d1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => active_access,
      Q => active_access_d1,
      R => \out\(0)
    );
active_access_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000000E"
    )
        port map (
      I0 => active_access,
      I1 => M_AXI_DP_AWVALID_i1,
      I2 => LOCKSTEP_Master_Out(0),
      I3 => \out\(0),
      I4 => M_AXI_DP_RVALID,
      I5 => M_AXI_DP_BVALID,
      O => active_access_i_1_n_0
    );
active_access_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => active_access_i_1_n_0,
      Q => active_access,
      R => '0'
    );
mem_access_completed_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => M_AXI_DP_BVALID,
      I1 => M_AXI_DP_RVALID,
      O => mem_access_completed0
    );
mem_access_completed_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_access_completed0,
      Q => MEM_DAXI_Data_Strobe,
      R => \out\(0)
    );
mem_access_failed_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => mem_daxi_exclusive_failed,
      R => \out\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_AND2B1L is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    mem_valid_reg : in STD_LOGIC;
    SRI : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_AND2B1L : entity is "MB_AND2B1L";
end system_microblaze_0_0_MB_AND2B1L;

architecture STRUCTURE of system_microblaze_0_0_MB_AND2B1L is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.AND2B1L
    generic map(
      IS_SRI_INVERTED => '0'
    )
        port map (
      DI => mem_valid_reg,
      O => D(0),
      SRI => SRI
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE is
  port (
    \LOCKSTEP_Out_reg[3708]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_31 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_31,
      Q => \LOCKSTEP_Out_reg[3708]\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_272 is
  port (
    \LOCKSTEP_Out_reg[3718]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_21 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_272 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_272;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_272 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_21,
      Q => \LOCKSTEP_Out_reg[3718]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_274 is
  port (
    \LOCKSTEP_Out_reg[3719]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_20 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_274 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_274;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_274 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_20,
      Q => \LOCKSTEP_Out_reg[3719]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_276 is
  port (
    \LOCKSTEP_Out_reg[3720]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_19 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_276 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_276;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_276 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_19,
      Q => \LOCKSTEP_Out_reg[3720]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_278 is
  port (
    \LOCKSTEP_Out_reg[3721]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_18 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_278 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_278;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_278 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_18,
      Q => \LOCKSTEP_Out_reg[3721]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_280 is
  port (
    \LOCKSTEP_Out_reg[3722]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_17 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_280 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_280;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_280 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_17,
      Q => \LOCKSTEP_Out_reg[3722]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_282 is
  port (
    \LOCKSTEP_Out_reg[3723]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_16 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_282 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_282;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_282 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_16,
      Q => \LOCKSTEP_Out_reg[3723]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_284 is
  port (
    \LOCKSTEP_Out_reg[3724]\ : out STD_LOGIC;
    \data_rd_reg_reg[16]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_15 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    read_register_MSR_1_reg : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : in STD_LOGIC;
    WB_Byte_Access_reg : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_284 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_284;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_284 is
  signal \^lockstep_out_reg[3724]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \LOCKSTEP_Out_reg[3724]\ <= \^lockstep_out_reg[3724]\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_15,
      Q => \^lockstep_out_reg[3724]\,
      R => '0'
    );
\data_rd_reg[16]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F2220222"
    )
        port map (
      I0 => \^lockstep_out_reg[3724]\,
      I1 => read_register_MSR_1_reg,
      I2 => wb_gpr_wr_dbg,
      I3 => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      I4 => WB_Byte_Access_reg(0),
      O => \data_rd_reg_reg[16]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_286 is
  port (
    \LOCKSTEP_Out_reg[3725]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_14 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_286 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_286;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_286 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_14,
      Q => \LOCKSTEP_Out_reg[3725]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_288 is
  port (
    \LOCKSTEP_Out_reg[3726]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_13 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_288 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_288;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_288 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_13,
      Q => \LOCKSTEP_Out_reg[3726]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_290 is
  port (
    \LOCKSTEP_Out_reg[3727]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_12 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_290 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_290;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_290 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_12,
      Q => \LOCKSTEP_Out_reg[3727]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_292 is
  port (
    \LOCKSTEP_Out_reg[3709]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_30 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_292 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_292;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_292 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_30,
      Q => \LOCKSTEP_Out_reg[3709]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_294 is
  port (
    \LOCKSTEP_Out_reg[3728]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_11 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_294 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_294;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_294 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_11,
      Q => \LOCKSTEP_Out_reg[3728]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_296 is
  port (
    \LOCKSTEP_Out_reg[3729]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_10 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_296 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_296;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_296 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_10,
      Q => \LOCKSTEP_Out_reg[3729]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_298 is
  port (
    \LOCKSTEP_Out_reg[3730]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_9 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_298 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_298;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_298 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_9,
      Q => \LOCKSTEP_Out_reg[3730]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_300 is
  port (
    \LOCKSTEP_Out_reg[3731]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_8 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_300 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_300;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_300 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_8,
      Q => \LOCKSTEP_Out_reg[3731]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_302 is
  port (
    \LOCKSTEP_Out_reg[3732]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_7 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_302 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_302;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_302 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_7,
      Q => \LOCKSTEP_Out_reg[3732]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_304 is
  port (
    \LOCKSTEP_Out_reg[3733]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_6 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_304 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_304;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_304 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_6,
      Q => \LOCKSTEP_Out_reg[3733]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_306 is
  port (
    \LOCKSTEP_Out_reg[3734]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_5 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_306 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_306;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_306 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_5,
      Q => \LOCKSTEP_Out_reg[3734]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_308 is
  port (
    \LOCKSTEP_Out_reg[3735]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_4 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_308 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_308;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_308 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_4,
      Q => \LOCKSTEP_Out_reg[3735]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_310 is
  port (
    \LOCKSTEP_Out_reg[3736]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_3 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_310 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_310;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_310 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_3,
      Q => \LOCKSTEP_Out_reg[3736]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_312 is
  port (
    \LOCKSTEP_Out_reg[3737]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_2 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_312 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_312;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_312 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_2,
      Q => \LOCKSTEP_Out_reg[3737]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_314 is
  port (
    \LOCKSTEP_Out_reg[3710]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_29 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_314 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_314;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_314 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_29,
      Q => \LOCKSTEP_Out_reg[3710]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_316 is
  port (
    \LOCKSTEP_Out_reg[3738]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_1 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_316 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_316;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_316 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_1,
      Q => \LOCKSTEP_Out_reg[3738]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_318 is
  port (
    DI : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_0 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_318 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_318;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_318 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_0,
      Q => DI,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_320 is
  port (
    \LOCKSTEP_Out_reg[3711]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_28 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_320 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_320;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_320 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_28,
      Q => \LOCKSTEP_Out_reg[3711]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_322 is
  port (
    \LOCKSTEP_Out_reg[3712]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_27 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_322 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_322;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_322 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_27,
      Q => \LOCKSTEP_Out_reg[3712]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_324 is
  port (
    \LOCKSTEP_Out_reg[3713]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_26 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_324 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_324;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_324 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_26,
      Q => \LOCKSTEP_Out_reg[3713]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_326 is
  port (
    \LOCKSTEP_Out_reg[3714]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_25 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_326 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_326;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_326 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_25,
      Q => \LOCKSTEP_Out_reg[3714]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_328 is
  port (
    \LOCKSTEP_Out_reg[3715]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_24 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_328 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_328;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_328 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_24,
      Q => \LOCKSTEP_Out_reg[3715]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_330 is
  port (
    \LOCKSTEP_Out_reg[3716]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_23 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_330 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_330;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_330 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_23,
      Q => \LOCKSTEP_Out_reg[3716]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDE_332 is
  port (
    \LOCKSTEP_Out_reg[3717]\ : out STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    wb_PC_II_22 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDE_332 : entity is "MB_FDE";
end system_microblaze_0_0_MB_FDE_332;

architecture STRUCTURE of system_microblaze_0_0_MB_FDE_332 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDE";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => mem_valid_reg,
      D => wb_PC_II_22,
      Q => \LOCKSTEP_Out_reg[3717]\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR is
  port (
    p_82_in : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    ex_Take_Intr_or_Exc_reg : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 5 downto 0 );
    \ex_which_branch_reg[9]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR is
  signal \Using_FPGA.Native_i_1__185_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3__1_n_0\ : STD_LOGIC;
  signal of_clear_MSR_BIP_hold_s : STD_LOGIC;
  signal \^p_82_in\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__184\ : label is "soft_lutpair26";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__185\ : label is "soft_lutpair26";
begin
  p_82_in <= \^p_82_in\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_i_1__185_n_0\,
      Q => of_clear_MSR_BIP_hold_s,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__184\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => \ex_which_branch_reg[9]\(0),
      I1 => \^p_82_in\,
      I2 => of_clear_MSR_BIP_hold_s,
      O => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_1__185\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000F8F0"
    )
        port map (
      I0 => \ex_which_branch_reg[9]\(0),
      I1 => \^p_82_in\,
      I2 => of_clear_MSR_BIP_hold_s,
      I3 => ex_branch_with_delayslot_reg,
      I4 => \Using_FPGA.Native_1\,
      O => \Using_FPGA.Native_i_1__185_n_0\
    );
\Using_FPGA.Native_i_2__34\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"40000000"
    )
        port map (
      I0 => \Using_FPGA.Native_i_3__1_n_0\,
      I1 => ex_Take_Intr_or_Exc_reg,
      I2 => Q(0),
      I3 => Q(3),
      I4 => Q(2),
      O => \^p_82_in\
    );
\Using_FPGA.Native_i_3__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FB"
    )
        port map (
      I0 => Q(4),
      I1 => Q(5),
      I2 => Q(1),
      O => \Using_FPGA.Native_i_3__1_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    Clk : in STD_LOGIC;
    mem_exception_from_ex : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE is
  signal Q3_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => '0',
      Q => Q3_out,
      R => \out\(0)
    );
\wb_exception_kind_i[27]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => mem_exception_from_ex,
      I1 => Q3_out,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_34 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    Clk : in STD_LOGIC;
    ex_Interrupt_i : in STD_LOGIC;
    ex_valid : in STD_LOGIC;
    dbg_stop_if_delay_i : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC;
    \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\ : in STD_LOGIC;
    mem_exception_from_ex : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_34 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_34;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_34 is
  signal Q2_out : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__73_n_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \Using_FPGA.Native_i_1__73_n_0\,
      Q => Q2_out,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__73\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"888F8888"
    )
        port map (
      I0 => ex_Interrupt_i,
      I1 => ex_valid,
      I2 => dbg_stop_if_delay_i,
      I3 => Dbg_Disable,
      I4 => \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\,
      O => \Using_FPGA.Native_i_1__73_n_0\
    );
\wb_exception_kind_i[28]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => mem_exception_from_ex,
      I1 => Q2_out,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_35 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    Clk : in STD_LOGIC;
    mem_exception_from_ex : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_35 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_35;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_35 is
  signal Q1_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => '0',
      Q => Q1_out,
      R => \out\(0)
    );
\wb_exception_kind_i[29]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => mem_exception_from_ex,
      I1 => Q1_out,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_36 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    Clk : in STD_LOGIC;
    mem_exception_from_ex : in STD_LOGIC;
    ex_Interrupt_i : in STD_LOGIC;
    ex_valid : in STD_LOGIC;
    dbg_stop_if_delay_i : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC;
    \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_36 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_36;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_36 is
  signal Q0_out : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__175_n_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \Using_FPGA.Native_i_1__175_n_0\,
      Q => Q0_out,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__175\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"88808888"
    )
        port map (
      I0 => ex_Interrupt_i,
      I1 => ex_valid,
      I2 => dbg_stop_if_delay_i,
      I3 => Dbg_Disable,
      I4 => \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\,
      O => \Using_FPGA.Native_i_1__175_n_0\
    );
\wb_exception_kind_i[30]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => mem_exception_from_ex,
      I1 => Q0_out,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_37 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    mem_exception_from_ex : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_37 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_37;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_37 is
  signal \Using_FPGA.Native_n_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\,
      Q => \Using_FPGA.Native_n_0\,
      R => \out\(0)
    );
\wb_exception_kind_i[31]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => mem_exception_from_ex,
      I1 => \Using_FPGA.Native_n_0\,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_38 is
  port (
    mem_byte_access_reg : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_38 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_38;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_38 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\,
      Q => mem_byte_access_reg,
      R => \out\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_387 is
  port (
    \WB_MEM_Result_reg[0]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_387 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_387;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_387 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[0]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_388 is
  port (
    \WB_MEM_Result_reg[10]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_388 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_388;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_388 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[10]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_389 is
  port (
    \WB_MEM_Result_reg[11]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_389 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_389;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_389 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[11]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_39 is
  port (
    mem_doublet_access_reg : out STD_LOGIC;
    \Byte_Enable[0]\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \EX_Op1_reg[31]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op2_reg[31]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_39 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_39;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_39 is
  signal \^mem_doublet_access_reg\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  mem_doublet_access_reg <= \^mem_doublet_access_reg\;
\Byte_Enable[0]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00005555C33CFFFF"
    )
        port map (
      I0 => \^mem_doublet_access_reg\,
      I1 => \EX_Op1_reg[31]\(0),
      I2 => \EX_Op2_reg[31]\(0),
      I3 => \Using_FPGA.Native_2\,
      I4 => \Using_FPGA.Native_3\,
      I5 => \Using_FPGA.Native_4\(0),
      O => \Byte_Enable[0]\(3)
    );
\Byte_Enable[1]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"111111113FF3F33F"
    )
        port map (
      I0 => \^mem_doublet_access_reg\,
      I1 => \Using_FPGA.Native_3\,
      I2 => \EX_Op1_reg[31]\(0),
      I3 => \EX_Op2_reg[31]\(0),
      I4 => \Using_FPGA.Native_2\,
      I5 => \Using_FPGA.Native_4\(0),
      O => \Byte_Enable[0]\(2)
    );
\Byte_Enable[2]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C33CFFFF00005555"
    )
        port map (
      I0 => \^mem_doublet_access_reg\,
      I1 => \EX_Op1_reg[31]\(0),
      I2 => \EX_Op2_reg[31]\(0),
      I3 => \Using_FPGA.Native_2\,
      I4 => \Using_FPGA.Native_3\,
      I5 => \Using_FPGA.Native_4\(0),
      O => \Byte_Enable[0]\(1)
    );
\Byte_Enable[3]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3CC3FFFF00005555"
    )
        port map (
      I0 => \^mem_doublet_access_reg\,
      I1 => \EX_Op1_reg[31]\(0),
      I2 => \EX_Op2_reg[31]\(0),
      I3 => \Using_FPGA.Native_2\,
      I4 => \Using_FPGA.Native_3\,
      I5 => \Using_FPGA.Native_4\(0),
      O => \Byte_Enable[0]\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\,
      Q => \^mem_doublet_access_reg\,
      R => \out\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_390 is
  port (
    \WB_MEM_Result_reg[12]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_390 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_390;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_390 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[12]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_391 is
  port (
    \WB_MEM_Result_reg[13]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_391 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_391;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_391 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[13]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_392 is
  port (
    \WB_MEM_Result_reg[14]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_392 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_392;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_392 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[14]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_393 is
  port (
    \WB_MEM_Result_reg[15]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_393 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_393;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_393 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[15]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_394 is
  port (
    \WB_MEM_Result_reg[16]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_394 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_394;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_394 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[16]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_395 is
  port (
    \WB_MEM_Result_reg[17]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_395 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_395;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_395 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[17]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_396 is
  port (
    \WB_MEM_Result_reg[18]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_396 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_396;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_396 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[18]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_397 is
  port (
    \WB_MEM_Result_reg[19]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_397 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_397;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_397 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[19]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_398 is
  port (
    \WB_MEM_Result_reg[1]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_398 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_398;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_398 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[1]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_399 is
  port (
    \WB_MEM_Result_reg[20]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_399 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_399;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_399 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[20]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_40 is
  port (
    Read_Strobe : out STD_LOGIC_VECTOR ( 1 downto 0 );
    mem_is_multi_or_load_instr0 : out STD_LOGIC;
    MEM_Sel_MEM_Res_I_reg : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    ex_Interrupt_i : in STD_LOGIC;
    ex_Take_Intr_or_Exc : in STD_LOGIC;
    \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\ : in STD_LOGIC;
    ex_valid : in STD_LOGIC;
    ex_is_multi_instr2 : in STD_LOGIC;
    ex_load_store_instr_s : in STD_LOGIC;
    ex_valid_reg : in STD_LOGIC;
    ex_reservation : in STD_LOGIC;
    ex_is_swx_instr_s : in STD_LOGIC;
    ex_Sel_SPR_PVR : in STD_LOGIC;
    ex_Sel_SPR_EAR : in STD_LOGIC;
    ex_Sel_SPR_EDR_reg : in STD_LOGIC;
    ex_Sel_SPR_SLR : in STD_LOGIC;
    ex_div_unsigned : in STD_LOGIC;
    ex_Sel_SPR_SHR : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_40 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_40;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_40 is
  signal MEM_Sel_MEM_Res_I_i_3_n_0 : STD_LOGIC;
  signal ex_is_load_instr_s : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of MEM_Sel_MEM_Res_I_i_3 : label is "soft_lutpair23";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM of mem_is_multi_or_load_instr_i_1 : label is "soft_lutpair23";
begin
MEM_Sel_MEM_Res_I_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0001"
    )
        port map (
      I0 => ex_Sel_SPR_PVR,
      I1 => ex_Sel_SPR_EAR,
      I2 => ex_Sel_SPR_EDR_reg,
      I3 => MEM_Sel_MEM_Res_I_i_3_n_0,
      O => MEM_Sel_MEM_Res_I_reg
    );
MEM_Sel_MEM_Res_I_i_3: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => ex_is_load_instr_s,
      I1 => ex_Sel_SPR_SLR,
      I2 => ex_div_unsigned,
      I3 => ex_Sel_SPR_SHR,
      O => MEM_Sel_MEM_Res_I_i_3_n_0
    );
Read_Strobe_INST_0: unisim.vcomponents.LUT5
    generic map(
      INIT => X"01000000"
    )
        port map (
      I0 => ex_Interrupt_i,
      I1 => ex_Take_Intr_or_Exc,
      I2 => \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\,
      I3 => ex_valid,
      I4 => ex_is_load_instr_s,
      O => Read_Strobe(1)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\,
      Q => ex_is_load_instr_s,
      R => \out\(0)
    );
Write_Strobe_INST_0: unisim.vcomponents.LUT5
    generic map(
      INIT => X"40004040"
    )
        port map (
      I0 => ex_is_load_instr_s,
      I1 => ex_load_store_instr_s,
      I2 => ex_valid_reg,
      I3 => ex_reservation,
      I4 => ex_is_swx_instr_s,
      O => Read_Strobe(0)
    );
mem_is_multi_or_load_instr_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => ex_is_multi_instr2,
      I1 => ex_is_load_instr_s,
      O => mem_is_multi_or_load_instr0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_400 is
  port (
    \WB_MEM_Result_reg[21]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_400 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_400;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_400 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[21]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_401 is
  port (
    \WB_MEM_Result_reg[22]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_401 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_401;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_401 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[22]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_402 is
  port (
    \WB_MEM_Result_reg[23]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_402 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_402;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_402 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[23]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_403 is
  port (
    \WB_MEM_Result_reg[24]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_403 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_403;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_403 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[24]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_404 is
  port (
    \WB_MEM_Result_reg[25]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_404 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_404;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_404 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[25]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_405 is
  port (
    \WB_MEM_Result_reg[26]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_405 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_405;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_405 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[26]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_406 is
  port (
    \WB_MEM_Result_reg[27]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_406 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_406;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_406 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[27]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_407 is
  port (
    \WB_MEM_Result_reg[28]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_407 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_407;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_407 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[28]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_408 is
  port (
    mem_ex_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_408 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_408;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_408 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => mem_ex_result(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_409 is
  port (
    \WB_MEM_Result_reg[2]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_409 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_409;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_409 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[2]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_41 is
  port (
    ex_is_lwx_instr_s : out STD_LOGIC;
    \Using_LWX_SWX_instr.ex_reservation_reg\ : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    ex_load_store_instr_s : in STD_LOGIC;
    ex_valid_reg : in STD_LOGIC;
    mem_exception_from_ex : in STD_LOGIC;
    mem_valid_instr : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    ex_reservation : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    ex_MSR_Set_SW_BIP : in STD_LOGIC;
    \wb_exception_kind_i_reg[27]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_41 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_41;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_41 is
  signal \^ex_is_lwx_instr_s\ : STD_LOGIC;
  signal p_40_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_is_lwx_instr_s <= \^ex_is_lwx_instr_s\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\,
      Q => \^ex_is_lwx_instr_s\,
      R => \out\(0)
    );
\Using_LWX_SWX_instr.ex_reservation_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000E0000000E000E"
    )
        port map (
      I0 => ex_reservation,
      I1 => p_40_out,
      I2 => \Using_FPGA.Native_2\,
      I3 => ex_MSR_Set_SW_BIP,
      I4 => \wb_exception_kind_i_reg[27]\,
      I5 => wb_exception_i_reg,
      O => \Using_LWX_SWX_instr.ex_reservation_reg\
    );
\Using_LWX_SWX_instr.ex_reservation_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000808080"
    )
        port map (
      I0 => \^ex_is_lwx_instr_s\,
      I1 => ex_load_store_instr_s,
      I2 => ex_valid_reg,
      I3 => mem_exception_from_ex,
      I4 => mem_valid_instr,
      I5 => wb_exception_i_reg,
      O => p_40_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_410 is
  port (
    mem_ex_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_410 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_410;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_410 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => mem_ex_result(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_411 is
  port (
    \WB_MEM_Result_reg[31]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_411 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_411;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_411 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[31]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_412 is
  port (
    \WB_MEM_Result_reg[3]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_412 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_412;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_412 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[3]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_413 is
  port (
    \WB_MEM_Result_reg[4]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_413 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_413;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_413 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[4]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_414 is
  port (
    \WB_MEM_Result_reg[5]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_414 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_414;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_414 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[5]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_415 is
  port (
    \WB_MEM_Result_reg[6]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_415 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_415;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_415 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[6]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_416 is
  port (
    \WB_MEM_Result_reg[7]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_416 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_416;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_416 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[7]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_417 is
  port (
    \WB_MEM_Result_reg[8]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_417 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_417;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_417 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[8]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_418 is
  port (
    \WB_MEM_Result_reg[9]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_418 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_418;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_418 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => ex_branch_with_delayslot_reg,
      D => EX_Fwd(0),
      Q => \WB_MEM_Result_reg[9]\(0),
      R => R
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_42 is
  port (
    ex_is_swx_instr_s : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    SRI : out STD_LOGIC;
    MEM_DataBus_Access_reg : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    D122_out : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    ex_MSR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \wb_exception_kind_i_reg[27]\ : in STD_LOGIC;
    ex_reservation : in STD_LOGIC;
    ex_load_alu_carry_reg : in STD_LOGIC;
    ex_MSR_Load_LWX_SWX_C : in STD_LOGIC;
    p_20_in : in STD_LOGIC;
    \EX_Op1_reg[29]\ : in STD_LOGIC;
    p_126_in : in STD_LOGIC;
    MEM_DataBus_Access_reg_0 : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_42 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_42;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_42 is
  signal MEM_DataBus_Access_i_2_n_0 : STD_LOGIC;
  signal \Using_FPGA.Native_i_2__32_n_0\ : STD_LOGIC;
  signal \^ex_is_swx_instr_s\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of MEM_DataBus_Access_i_2 : label is "soft_lutpair24";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__35\ : label is "soft_lutpair24";
begin
  ex_is_swx_instr_s <= \^ex_is_swx_instr_s\;
MEM_DataBus_Access_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000C0C000AA"
    )
        port map (
      I0 => MEM_DataBus_Access_reg_0,
      I1 => MEM_DataBus_Access_i_2_n_0,
      I2 => p_126_in,
      I3 => E(0),
      I4 => ex_branch_with_delayslot_reg,
      I5 => \out\(0),
      O => MEM_DataBus_Access_reg
    );
MEM_DataBus_Access_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => ex_reservation,
      I1 => \^ex_is_swx_instr_s\,
      O => MEM_DataBus_Access_i_2_n_0
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_1\,
      D => D122_out,
      Q => \^ex_is_swx_instr_s\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__34\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \Using_FPGA.Native_2\(0),
      I1 => \Using_FPGA.Native_i_2__32_n_0\,
      I2 => ex_branch_with_delayslot_reg,
      I3 => ex_MSR(0),
      I4 => \wb_exception_kind_i_reg[27]\,
      O => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_1__35\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"4F"
    )
        port map (
      I0 => ex_reservation,
      I1 => \^ex_is_swx_instr_s\,
      I2 => p_126_in,
      O => SRI
    );
\Using_FPGA.Native_i_2__32\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F2FFF0F0F2F0F0F0"
    )
        port map (
      I0 => \^ex_is_swx_instr_s\,
      I1 => ex_reservation,
      I2 => ex_load_alu_carry_reg,
      I3 => ex_MSR_Load_LWX_SWX_C,
      I4 => p_20_in,
      I5 => \EX_Op1_reg[29]\,
      O => \Using_FPGA.Native_i_2__32_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_43 is
  port (
    ex_load_store_instr_s : out STD_LOGIC;
    ex_MSR_Load_LWX_SWX_C : out STD_LOGIC;
    p_126_in : out STD_LOGIC;
    \Using_LWX_SWX_instr.ex_reservation_reg\ : out STD_LOGIC;
    mem_load_store_access0 : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    ex_is_lwx_instr_s : in STD_LOGIC;
    ex_is_swx_instr_s : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    mem_valid_instr : in STD_LOGIC;
    mem_exception_from_ex : in STD_LOGIC;
    ex_valid_reg : in STD_LOGIC;
    ex_Take_Intr_or_Exc : in STD_LOGIC;
    ex_reservation : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_43 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_43;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_43 is
  signal \^ex_load_store_instr_s\ : STD_LOGIC;
  signal \^p_126_in\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_4\ : label is "soft_lutpair25";
  attribute SOFT_HLUTNM of \Using_LWX_SWX_instr.ex_reservation_i_3\ : label is "soft_lutpair25";
begin
  ex_load_store_instr_s <= \^ex_load_store_instr_s\;
  p_126_in <= \^p_126_in\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\,
      Q => \^ex_load_store_instr_s\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_2__33\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"15000000"
    )
        port map (
      I0 => wb_exception_i_reg,
      I1 => mem_valid_instr,
      I2 => mem_exception_from_ex,
      I3 => ex_valid_reg,
      I4 => \^ex_load_store_instr_s\,
      O => \^p_126_in\
    );
\Using_FPGA.Native_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A8"
    )
        port map (
      I0 => \^p_126_in\,
      I1 => ex_is_lwx_instr_s,
      I2 => ex_is_swx_instr_s,
      O => ex_MSR_Load_LWX_SWX_C
    );
\Using_LWX_SWX_instr.ex_reservation_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FF80"
    )
        port map (
      I0 => \^p_126_in\,
      I1 => ex_is_swx_instr_s,
      I2 => ex_branch_with_delayslot_reg,
      I3 => \out\(0),
      O => \Using_LWX_SWX_instr.ex_reservation_reg\
    );
mem_load_store_access_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00002022"
    )
        port map (
      I0 => \^ex_load_store_instr_s\,
      I1 => ex_Take_Intr_or_Exc,
      I2 => ex_reservation,
      I3 => ex_is_swx_instr_s,
      I4 => \Performace_Debug_Control.dbg_stop_if_delay_i_reg\,
      O => mem_load_store_access0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_44 is
  port (
    ex_reverse_byteorder : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_44 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_44;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_44 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_FPGA.Native_1\,
      Q => ex_reverse_byteorder,
      R => \out\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDRE_45 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \ex_which_branch_reg[9]\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    wb_MSR_cmb : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_MSR : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_MSR_Set_SW_BIP : in STD_LOGIC;
    \wb_exception_kind_i_reg[27]\ : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    ex_MSR : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_set_bip_reg : in STD_LOGIC;
    ex_Take_Intr_or_Exc_reg : in STD_LOGIC;
    \EX_Op1_reg[28]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDRE_45 : entity is "MB_FDRE";
end system_microblaze_0_0_MB_FDRE_45;

architecture STRUCTURE of system_microblaze_0_0_MB_FDRE_45 is
  signal \Using_FPGA.Native_i_2__35_n_0\ : STD_LOGIC;
  signal ex_clear_MSR_BIP_instr_s : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0',
      IS_C_INVERTED => '0',
      IS_D_INVERTED => '0',
      IS_R_INVERTED => '0'
    )
        port map (
      C => Clk,
      CE => \Using_FPGA.Native_2\,
      D => \ex_which_branch_reg[9]\,
      Q => ex_clear_MSR_BIP_instr_s,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__36\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAACFCFCFC0"
    )
        port map (
      I0 => wb_MSR_cmb(0),
      I1 => \Using_FPGA.Native_i_2__35_n_0\,
      I2 => \Using_FPGA.Native_2\,
      I3 => of_MSR(0),
      I4 => ex_MSR_Set_SW_BIP,
      I5 => \wb_exception_kind_i_reg[27]\,
      O => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_1__37\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => wb_MSR_cmb(0),
      I1 => \Using_FPGA.Native_i_2__35_n_0\,
      I2 => ex_branch_with_delayslot_reg,
      I3 => ex_MSR(0),
      I4 => \wb_exception_kind_i_reg[27]\,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_2__35\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BFA0"
    )
        port map (
      I0 => ex_set_bip_reg,
      I1 => ex_clear_MSR_BIP_instr_s,
      I2 => ex_Take_Intr_or_Exc_reg,
      I3 => \EX_Op1_reg[28]\,
      O => \Using_FPGA.Native_i_2__35_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_101 is
  port (
    \ex_instr_reg[1]\ : out STD_LOGIC;
    ex_op1_cmp_eq_n5_out : out STD_LOGIC;
    force2_reg : out STD_LOGIC;
    use_Reg_Neg_DI1_out : out STD_LOGIC;
    force_Val10_out : out STD_LOGIC;
    use_Reg_Neg_S3_out : out STD_LOGIC;
    force12_out : out STD_LOGIC;
    I0165_out : out STD_LOGIC;
    ex_op1_cmp_eq : out STD_LOGIC;
    ex_enable_sext_shift_i0 : out STD_LOGIC;
    \EX_Sext_Op_reg[0]\ : out STD_LOGIC;
    ex_alu_sel_logic_i_reg : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_41 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    EX_ALU_Op1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_101 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_101;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_101 is
  signal \^ex_instr_reg[1]\ : STD_LOGIC;
  signal \^force2_reg\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of ex_enable_sext_shift_i_i_1 : label is "soft_lutpair8";
  attribute SOFT_HLUTNM of ex_op1_cmp_eq_i_1 : label is "soft_lutpair10";
  attribute SOFT_HLUTNM of ex_op1_cmp_eq_n_i_1 : label is "soft_lutpair9";
  attribute SOFT_HLUTNM of force1_i_1 : label is "soft_lutpair11";
  attribute SOFT_HLUTNM of force2_i_1 : label is "soft_lutpair8";
  attribute SOFT_HLUTNM of force_Val1_i_1 : label is "soft_lutpair11";
  attribute SOFT_HLUTNM of use_Reg_Neg_DI_i_1 : label is "soft_lutpair9";
  attribute SOFT_HLUTNM of use_Reg_Neg_S_i_1 : label is "soft_lutpair10";
begin
  \ex_instr_reg[1]\ <= \^ex_instr_reg[1]\;
  force2_reg <= \^force2_reg\;
\EX_Sext_Op[0]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FEFF"
    )
        port map (
      I0 => \^ex_instr_reg[1]\,
      I1 => \Using_FPGA.Native_8\,
      I2 => \Using_FPGA.Native_7\,
      I3 => \Using_FPGA.Native_4\,
      O => \EX_Sext_Op_reg[0]\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_41,
      Q => \^ex_instr_reg[1]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__105\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[1]\,
      I2 => \Using_FPGA.Native_3\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I0165_out
    );
ex_alu_sel_logic_i_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0006"
    )
        port map (
      I0 => \^ex_instr_reg[1]\,
      I1 => \Using_FPGA.Native_5\,
      I2 => \Using_FPGA.Native_4\,
      I3 => EX_ALU_Op1,
      O => ex_alu_sel_logic_i_reg
    );
ex_enable_sext_shift_i_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => \^ex_instr_reg[1]\,
      I1 => \Using_FPGA.Native_4\,
      I2 => \Using_FPGA.Native_5\,
      O => ex_enable_sext_shift_i0
    );
ex_op1_cmp_eq_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FDDF"
    )
        port map (
      I0 => \^force2_reg\,
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      I3 => \Using_FPGA.Native_2\,
      O => ex_op1_cmp_eq
    );
ex_op1_cmp_eq_n_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0220"
    )
        port map (
      I0 => \^force2_reg\,
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      I3 => \Using_FPGA.Native_2\,
      O => ex_op1_cmp_eq_n5_out
    );
force1_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => \^force2_reg\,
      I1 => \Using_FPGA.Native_2\,
      I2 => \Using_FPGA.Native_0\,
      O => force12_out
    );
force2_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"40000000"
    )
        port map (
      I0 => \^ex_instr_reg[1]\,
      I1 => \Using_FPGA.Native_5\,
      I2 => \Using_FPGA.Native_4\,
      I3 => \Using_FPGA.Native_6\,
      I4 => \Using_FPGA.Native_7\,
      O => \^force2_reg\
    );
force_Val1_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"20"
    )
        port map (
      I0 => \^force2_reg\,
      I1 => \Using_FPGA.Native_2\,
      I2 => \Using_FPGA.Native_0\,
      O => force_Val10_out
    );
use_Reg_Neg_DI_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0820"
    )
        port map (
      I0 => \^force2_reg\,
      I1 => \Using_FPGA.Native_2\,
      I2 => \Using_FPGA.Native_0\,
      I3 => \Using_FPGA.Native_1\,
      O => use_Reg_Neg_DI1_out
    );
use_Reg_Neg_S_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0820"
    )
        port map (
      I0 => \^force2_reg\,
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_2\,
      I3 => \Using_FPGA.Native_1\,
      O => use_Reg_Neg_S3_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_103 is
  port (
    \ex_instr_reg[20]\ : out STD_LOGIC;
    I089_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_22 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_103 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_103;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_103 is
  signal \^ex_instr_reg[20]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \ex_instr_reg[20]\ <= \^ex_instr_reg[20]\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_22,
      Q => \^ex_instr_reg[20]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__108\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[20]\,
      I2 => \Using_FPGA.Native_0\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I089_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_105 is
  port (
    \ex_instr_reg[21]\ : out STD_LOGIC;
    I085_out : out STD_LOGIC;
    \Performace_Debug_Control.ex_brki_hit_reg\ : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_21 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \control_reg_reg[8]\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_105 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_105;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_105 is
  signal \Performace_Debug_Control.ex_brki_hit_i_2_n_0\ : STD_LOGIC;
  signal \Performace_Debug_Control.ex_brki_hit_i_5_n_0\ : STD_LOGIC;
  signal \^ex_instr_reg[21]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \ex_instr_reg[21]\ <= \^ex_instr_reg[21]\;
\Performace_Debug_Control.ex_brki_hit_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0100"
    )
        port map (
      I0 => \Performace_Debug_Control.ex_brki_hit_i_2_n_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => \Using_FPGA.Native_6\,
      I3 => \control_reg_reg[8]\(0),
      O => \Performace_Debug_Control.ex_brki_hit_reg\
    );
\Performace_Debug_Control.ex_brki_hit_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFD"
    )
        port map (
      I0 => \Performace_Debug_Control.ex_brki_hit_i_5_n_0\,
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      I3 => \Using_FPGA.Native_2\,
      O => \Performace_Debug_Control.ex_brki_hit_i_2_n_0\
    );
\Performace_Debug_Control.ex_brki_hit_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0001"
    )
        port map (
      I0 => \^ex_instr_reg[21]\,
      I1 => \Using_FPGA.Native_3\(2),
      I2 => \Using_FPGA.Native_3\(0),
      I3 => \Using_FPGA.Native_3\(1),
      O => \Performace_Debug_Control.ex_brki_hit_i_5_n_0\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_21,
      Q => \^ex_instr_reg[21]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__95\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[21]\,
      I2 => \Using_FPGA.Native_4\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I085_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_107 is
  port (
    \ex_instr_reg[22]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    I081_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_20 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_107 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_107;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_107 is
  signal \^ex_instr_reg[22]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \ex_instr_reg[22]\(0) <= \^ex_instr_reg[22]\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_20,
      Q => \^ex_instr_reg[22]\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__182\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^ex_instr_reg[22]\(0),
      I1 => \Using_FPGA.Native_2\,
      O => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_1__94\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[22]\(0),
      I2 => \Using_FPGA.Native_1\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I081_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_109 is
  port (
    \ex_instr_reg[23]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    I077_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_19 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_109 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_109;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_109 is
  signal \^ex_instr_reg[23]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \ex_instr_reg[23]\(0) <= \^ex_instr_reg[23]\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_19,
      Q => \^ex_instr_reg[23]\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__93\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[23]\(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I077_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_111 is
  port (
    \ex_instr_reg[24]\ : out STD_LOGIC;
    I073_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_18 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_111 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_111;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_111 is
  signal \^ex_instr_reg[24]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \ex_instr_reg[24]\ <= \^ex_instr_reg[24]\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_18,
      Q => \^ex_instr_reg[24]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__92\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[24]\,
      I2 => \Using_FPGA.Native_0\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I073_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_113 is
  port (
    \EX_Shift_Op_reg[0]\ : out STD_LOGIC;
    I069_out : out STD_LOGIC;
    \EX_Sext_Op_reg[0]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_17 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_113 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_113;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_113 is
  signal \^ex_shift_op_reg[0]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \EX_Shift_Op_reg[0]\ <= \^ex_shift_op_reg[0]\;
\EX_Sext_Op[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF7FF"
    )
        port map (
      I0 => \^ex_shift_op_reg[0]\,
      I1 => \Using_FPGA.Native_1\,
      I2 => \Using_FPGA.Native_2\,
      I3 => \Using_FPGA.Native_3\,
      I4 => \Using_FPGA.Native_4\,
      O => \EX_Sext_Op_reg[0]\(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_17,
      Q => \^ex_shift_op_reg[0]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__91\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_shift_op_reg[0]\,
      I2 => \Using_FPGA.Native_0\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I069_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_115 is
  port (
    \EX_Shift_Op_reg[1]\ : out STD_LOGIC;
    EX_SWAP_Instr_reg : out STD_LOGIC;
    I065_out : out STD_LOGIC;
    \EX_Sext_Op_reg[1]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_16 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_115 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_115;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_115 is
  signal EX_SWAP_Instr_i_2_n_0 : STD_LOGIC;
  signal \EX_Sext_Op[1]_i_2_n_0\ : STD_LOGIC;
  signal \^ex_shift_op_reg[1]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \EX_Shift_Op_reg[1]\ <= \^ex_shift_op_reg[1]\;
EX_SWAP_Instr_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000001"
    )
        port map (
      I0 => EX_SWAP_Instr_i_2_n_0,
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      I3 => \Using_FPGA.Native_2\,
      I4 => \Using_FPGA.Native_3\,
      O => EX_SWAP_Instr_reg
    );
EX_SWAP_Instr_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7FFFFFFF"
    )
        port map (
      I0 => \^ex_shift_op_reg[1]\,
      I1 => \Using_FPGA.Native_4\,
      I2 => \Using_FPGA.Native_5\(0),
      I3 => \Using_FPGA.Native_6\,
      I4 => \Using_FPGA.Native_7\,
      O => EX_SWAP_Instr_i_2_n_0
    );
\EX_Sext_Op[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000001"
    )
        port map (
      I0 => \EX_Sext_Op[1]_i_2_n_0\,
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      I3 => \Using_FPGA.Native_2\,
      I4 => \Using_FPGA.Native_3\,
      O => \EX_Sext_Op_reg[1]\(0)
    );
\EX_Sext_Op[1]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"08FFFFFF"
    )
        port map (
      I0 => \^ex_shift_op_reg[1]\,
      I1 => \Using_FPGA.Native_4\,
      I2 => \Using_FPGA.Native_9\,
      I3 => \Using_FPGA.Native_6\,
      I4 => \Using_FPGA.Native_7\,
      O => \EX_Sext_Op[1]_i_2_n_0\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_16,
      Q => \^ex_shift_op_reg[1]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__90\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_shift_op_reg[1]\,
      I2 => \Using_FPGA.Native_8\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I065_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_117 is
  port (
    \ex_instr_reg[27]\ : out STD_LOGIC;
    \EX_Op2_reg[27]\ : out STD_LOGIC;
    I061_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_15 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    GPR_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op2_sel_imm : in STD_LOGIC;
    of_op2_sel : in STD_LOGIC_VECTOR ( 0 to 0 );
    \interrupt_address_d1_reg[27]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_Take_Interrupt_hold_reg : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_117 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_117;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_117 is
  signal \^ex_instr_reg[27]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \ex_instr_reg[27]\ <= \^ex_instr_reg[27]\;
\EX_Op2[27]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FFFFFF53FF53"
    )
        port map (
      I0 => \^ex_instr_reg[27]\,
      I1 => GPR_Op2(0),
      I2 => of_op2_sel_imm,
      I3 => of_op2_sel(0),
      I4 => \interrupt_address_d1_reg[27]\(0),
      I5 => of_Take_Interrupt_hold_reg,
      O => \EX_Op2_reg[27]\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_15,
      Q => \^ex_instr_reg[27]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__89\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[27]\,
      I2 => \Using_FPGA.Native_0\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I061_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_119 is
  port (
    \ex_instr_reg[28]\ : out STD_LOGIC;
    \EX_Op2_reg[28]\ : out STD_LOGIC;
    \Performace_Debug_Control.ex_brki_hit_reg\ : out STD_LOGIC;
    I057_out : out STD_LOGIC;
    of_Sel_SPR_MSR3_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_14 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    GPR_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op2_sel_imm : in STD_LOGIC;
    of_op2_sel : in STD_LOGIC_VECTOR ( 0 to 0 );
    \interrupt_address_d1_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_Take_Interrupt_hold_reg : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 6 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_119 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_119;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_119 is
  signal \^ex_instr_reg[28]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \ex_instr_reg[28]\ <= \^ex_instr_reg[28]\;
\EX_Op2[28]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FFFFFF53FF53"
    )
        port map (
      I0 => \^ex_instr_reg[28]\,
      I1 => GPR_Op2(0),
      I2 => of_op2_sel_imm,
      I3 => of_op2_sel(0),
      I4 => \interrupt_address_d1_reg[28]\(0),
      I5 => of_Take_Interrupt_hold_reg,
      O => \EX_Op2_reg[28]\
    );
\Performace_Debug_Control.ex_brki_hit_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFD"
    )
        port map (
      I0 => \^ex_instr_reg[28]\,
      I1 => \Using_FPGA.Native_0\(4),
      I2 => \Using_FPGA.Native_0\(3),
      I3 => \Using_FPGA.Native_0\(5),
      I4 => \Using_FPGA.Native_0\(6),
      O => \Performace_Debug_Control.ex_brki_hit_reg\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_14,
      Q => \^ex_instr_reg[28]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__88\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[28]\,
      I2 => \Using_FPGA.Native_1\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I057_out
    );
ex_mfsmsr_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"01000000"
    )
        port map (
      I0 => \^ex_instr_reg[28]\,
      I1 => \Using_FPGA.Native_0\(1),
      I2 => \Using_FPGA.Native_0\(2),
      I3 => \Using_FPGA.Native_0\(0),
      I4 => \Using_FPGA.Native_2\,
      O => of_Sel_SPR_MSR3_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_121 is
  port (
    \ex_instr_reg[29]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_move_to_MSR_instr29_out : out STD_LOGIC;
    I053_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_13 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_121 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_121;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_121 is
  signal \^ex_instr_reg[29]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \ex_instr_reg[29]\(0) <= \^ex_instr_reg[29]\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_13,
      Q => \^ex_instr_reg[29]\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__87\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[29]\(0),
      I2 => \Using_FPGA.Native_2\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I053_out
    );
ex_move_to_MSR_instr_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0100000000000000"
    )
        port map (
      I0 => \^ex_instr_reg[29]\(0),
      I1 => \Using_FPGA.Native_0\(2),
      I2 => \Using_FPGA.Native_0\(1),
      I3 => \Using_FPGA.Native_0\(3),
      I4 => \Using_FPGA.Native_1\,
      I5 => \Using_FPGA.Native_0\(0),
      O => ex_move_to_MSR_instr29_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_123 is
  port (
    \ex_instr_reg[2]\ : out STD_LOGIC;
    I0161_out : out STD_LOGIC;
    ex_move_to_MSR_instr_reg : out STD_LOGIC;
    \EX_ALU_Op_reg[1]\ : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_40 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_123 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_123;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_123 is
  signal \^ex_instr_reg[2]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \ex_instr_reg[2]\ <= \^ex_instr_reg[2]\;
\EX_ALU_Op[0]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => \^ex_instr_reg[2]\,
      I1 => \Using_FPGA.Native_6\,
      I2 => \Using_FPGA.Native_2\,
      O => \EX_ALU_Op_reg[1]\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_40,
      Q => \^ex_instr_reg[2]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__104\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[2]\,
      I2 => \Using_FPGA.Native_0\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I0161_out
    );
ex_move_to_MSR_instr_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000400000"
    )
        port map (
      I0 => \^ex_instr_reg[2]\,
      I1 => \Using_FPGA.Native_1\,
      I2 => \Using_FPGA.Native_2\,
      I3 => \Using_FPGA.Native_3\,
      I4 => \Using_FPGA.Native_4\,
      I5 => \Using_FPGA.Native_5\,
      O => ex_move_to_MSR_instr_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_125 is
  port (
    \ex_instr_reg[30]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.ex_brki_hit_reg\ : out STD_LOGIC;
    EX_SWAP_BYTE_Instr_reg : out STD_LOGIC;
    I049_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_12 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_set_bip0 : in STD_LOGIC;
    p_1_in16_in : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_125 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_125;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_125 is
  signal \^ex_instr_reg[30]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \ex_instr_reg[30]\(0) <= \^ex_instr_reg[30]\(0);
EX_SWAP_BYTE_Instr_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^ex_instr_reg[30]\(0),
      O => EX_SWAP_BYTE_Instr_reg
    );
\Performace_Debug_Control.ex_brki_hit_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFFFFFFFFFF"
    )
        port map (
      I0 => \^ex_instr_reg[30]\(0),
      I1 => \Using_FPGA.Native_0\(0),
      I2 => \Using_FPGA.Native_0\(1),
      I3 => ex_set_bip0,
      I4 => p_1_in16_in,
      I5 => \Using_FPGA.Native_1\(0),
      O => \Performace_Debug_Control.ex_brki_hit_reg\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_12,
      Q => \^ex_instr_reg[30]\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__86\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[30]\(0),
      I2 => \Using_FPGA.Native_2\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I049_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_127 is
  port (
    \ex_instr_reg[31]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    I045_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_11 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_127 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_127;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_127 is
  signal \^ex_instr_reg[31]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \ex_instr_reg[31]\(0) <= \^ex_instr_reg[31]\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_11,
      Q => \^ex_instr_reg[31]\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__85\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[31]\(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I045_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_129 is
  port (
    use_Reg_Neg_S_reg : out STD_LOGIC;
    \EX_Op3_reg[15]\ : out STD_LOGIC;
    \EX_Op3_reg[15]_0\ : out STD_LOGIC;
    \EX_Op3_reg[15]_1\ : out STD_LOGIC;
    of_pipe_ctrl : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_10 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    mem_gpr_write : in STD_LOGIC;
    mem_valid_instr : in STD_LOGIC;
    wb_valid_reg : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    wb_gpr_write_i : in STD_LOGIC;
    wb_reset : in STD_LOGIC;
    \ex_gpr_write_addr_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \ex_gpr_write_addr_reg[4]\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    of_read_ex_write_op3_conflict_part1 : in STD_LOGIC;
    of_read_ex_write_op3_conflict_part2 : in STD_LOGIC;
    ex_is_multi_or_load_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_129 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_129;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_129 is
  signal \^use_reg_neg_s_reg\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  use_Reg_Neg_S_reg <= \^use_reg_neg_s_reg\;
\EX_Op3[0]_i_11\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAA0800"
    )
        port map (
      I0 => \^use_reg_neg_s_reg\,
      I1 => wb_valid_reg,
      I2 => wb_exception_i_reg,
      I3 => wb_gpr_write_i,
      I4 => wb_reset,
      O => \EX_Op3_reg[15]_0\
    );
\EX_Op3[0]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8200000000008200"
    )
        port map (
      I0 => \^use_reg_neg_s_reg\,
      I1 => \ex_gpr_write_addr_reg[0]\(1),
      I2 => \Using_FPGA.Native_0\,
      I3 => \ex_gpr_write_addr_reg[4]\,
      I4 => \Using_FPGA.Native_1\,
      I5 => \ex_gpr_write_addr_reg[0]\(0),
      O => \EX_Op3_reg[15]_1\
    );
\EX_Op3[0]_i_9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => \^use_reg_neg_s_reg\,
      I1 => mem_gpr_write,
      I2 => mem_valid_instr,
      O => \EX_Op3_reg[15]\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_10,
      Q => \^use_reg_neg_s_reg\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__129\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7FFF"
    )
        port map (
      I0 => \^use_reg_neg_s_reg\,
      I1 => of_read_ex_write_op3_conflict_part1,
      I2 => of_read_ex_write_op3_conflict_part2,
      I3 => ex_is_multi_or_load_instr,
      O => of_pipe_ctrl(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_131 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[0]\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    \EX_Branch_CMP_Op1_reg[15]\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[15]_0\ : out STD_LOGIC;
    I037_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_9 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    WB_Doublet_Access_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 15 downto 0 );
    WB_Doublet_Access_reg_0 : in STD_LOGIC;
    WB_Doublet_Access_reg_1 : in STD_LOGIC;
    WB_Doublet_Access_reg_2 : in STD_LOGIC;
    WB_Doublet_Access_reg_3 : in STD_LOGIC;
    WB_Doublet_Access_reg_4 : in STD_LOGIC;
    WB_Doublet_Access_reg_5 : in STD_LOGIC;
    WB_Doublet_Access_reg_6 : in STD_LOGIC;
    WB_Doublet_Access_reg_7 : in STD_LOGIC;
    WB_Doublet_Access_reg_8 : in STD_LOGIC;
    WB_Doublet_Access_reg_9 : in STD_LOGIC;
    WB_Doublet_Access_reg_10 : in STD_LOGIC;
    WB_Doublet_Access_reg_11 : in STD_LOGIC;
    WB_Doublet_Access_reg_12 : in STD_LOGIC;
    WB_Doublet_Access_reg_13 : in STD_LOGIC;
    WB_Doublet_Access_reg_14 : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \mem_gpr_write_addr_reg[4]\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    p_109_in : in STD_LOGIC;
    \wb_gpr_write_addr_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \wb_gpr_write_addr_reg[4]\ : in STD_LOGIC;
    p_19_in : in STD_LOGIC;
    \ex_gpr_write_addr_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \ex_gpr_write_addr_reg[4]\ : in STD_LOGIC;
    p_112_in : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_131 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_131;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_131 is
  signal \^ex_branch_cmp_op1_reg[15]\ : STD_LOGIC;
  signal \^ex_branch_cmp_op1_reg[15]_0\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal of_read_ex_write_op1_conflict : STD_LOGIC;
  signal of_read_mem_write_op1_conflict : STD_LOGIC;
  signal of_read_wb_write_op1_conflict : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_4__0\ : label is "soft_lutpair12";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_5__0\ : label is "soft_lutpair12";
begin
  \EX_Branch_CMP_Op1_reg[15]\ <= \^ex_branch_cmp_op1_reg[15]\;
  \EX_Branch_CMP_Op1_reg[15]_0\ <= \^ex_branch_cmp_op1_reg[15]_0\;
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_9,
      Q => \^using_fpga.native_0\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__125\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_4\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I037_out
    );
\Using_FPGA.Native_i_1__58\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native_1\(0),
      I3 => \^ex_branch_cmp_op1_reg[15]\,
      I4 => GPR_Op1(0),
      I5 => \^ex_branch_cmp_op1_reg[15]_0\,
      O => \EX_Branch_CMP_Op1_reg[0]\(0)
    );
\Using_FPGA.Native_i_1__59\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_0,
      I1 => EX_Fwd(1),
      I2 => \Using_FPGA.Native_1\(1),
      I3 => \^ex_branch_cmp_op1_reg[15]\,
      I4 => GPR_Op1(1),
      I5 => \^ex_branch_cmp_op1_reg[15]_0\,
      O => \EX_Branch_CMP_Op1_reg[0]\(1)
    );
\Using_FPGA.Native_i_1__60\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_1,
      I1 => EX_Fwd(2),
      I2 => \Using_FPGA.Native_1\(2),
      I3 => \^ex_branch_cmp_op1_reg[15]\,
      I4 => GPR_Op1(2),
      I5 => \^ex_branch_cmp_op1_reg[15]_0\,
      O => \EX_Branch_CMP_Op1_reg[0]\(2)
    );
\Using_FPGA.Native_i_1__61\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_2,
      I1 => EX_Fwd(3),
      I2 => \Using_FPGA.Native_1\(3),
      I3 => \^ex_branch_cmp_op1_reg[15]\,
      I4 => GPR_Op1(3),
      I5 => \^ex_branch_cmp_op1_reg[15]_0\,
      O => \EX_Branch_CMP_Op1_reg[0]\(3)
    );
\Using_FPGA.Native_i_1__62\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_3,
      I1 => EX_Fwd(4),
      I2 => \Using_FPGA.Native_1\(4),
      I3 => \^ex_branch_cmp_op1_reg[15]\,
      I4 => GPR_Op1(4),
      I5 => \^ex_branch_cmp_op1_reg[15]_0\,
      O => \EX_Branch_CMP_Op1_reg[0]\(4)
    );
\Using_FPGA.Native_i_1__63\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_4,
      I1 => EX_Fwd(5),
      I2 => \Using_FPGA.Native_1\(5),
      I3 => \^ex_branch_cmp_op1_reg[15]\,
      I4 => GPR_Op1(5),
      I5 => \^ex_branch_cmp_op1_reg[15]_0\,
      O => \EX_Branch_CMP_Op1_reg[0]\(5)
    );
\Using_FPGA.Native_i_1__64\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_5,
      I1 => EX_Fwd(6),
      I2 => \Using_FPGA.Native_1\(6),
      I3 => \^ex_branch_cmp_op1_reg[15]\,
      I4 => GPR_Op1(6),
      I5 => \^ex_branch_cmp_op1_reg[15]_0\,
      O => \EX_Branch_CMP_Op1_reg[0]\(6)
    );
\Using_FPGA.Native_i_1__65\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_6,
      I1 => EX_Fwd(7),
      I2 => \Using_FPGA.Native_1\(7),
      I3 => \^ex_branch_cmp_op1_reg[15]\,
      I4 => GPR_Op1(7),
      I5 => \^ex_branch_cmp_op1_reg[15]_0\,
      O => \EX_Branch_CMP_Op1_reg[0]\(7)
    );
\Using_FPGA.Native_i_1__66\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_7,
      I1 => EX_Fwd(8),
      I2 => \Using_FPGA.Native_1\(8),
      I3 => \^ex_branch_cmp_op1_reg[15]\,
      I4 => GPR_Op1(8),
      I5 => \^ex_branch_cmp_op1_reg[15]_0\,
      O => \EX_Branch_CMP_Op1_reg[0]\(8)
    );
\Using_FPGA.Native_i_1__67\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_8,
      I1 => EX_Fwd(9),
      I2 => \Using_FPGA.Native_1\(9),
      I3 => \^ex_branch_cmp_op1_reg[15]\,
      I4 => GPR_Op1(9),
      I5 => \^ex_branch_cmp_op1_reg[15]_0\,
      O => \EX_Branch_CMP_Op1_reg[0]\(9)
    );
\Using_FPGA.Native_i_1__68\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_9,
      I1 => EX_Fwd(10),
      I2 => \Using_FPGA.Native_1\(10),
      I3 => \^ex_branch_cmp_op1_reg[15]\,
      I4 => GPR_Op1(10),
      I5 => \^ex_branch_cmp_op1_reg[15]_0\,
      O => \EX_Branch_CMP_Op1_reg[0]\(10)
    );
\Using_FPGA.Native_i_1__69\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_10,
      I1 => EX_Fwd(11),
      I2 => \Using_FPGA.Native_1\(11),
      I3 => \^ex_branch_cmp_op1_reg[15]\,
      I4 => GPR_Op1(11),
      I5 => \^ex_branch_cmp_op1_reg[15]_0\,
      O => \EX_Branch_CMP_Op1_reg[0]\(11)
    );
\Using_FPGA.Native_i_1__70\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_11,
      I1 => EX_Fwd(12),
      I2 => \Using_FPGA.Native_1\(12),
      I3 => \^ex_branch_cmp_op1_reg[15]\,
      I4 => GPR_Op1(12),
      I5 => \^ex_branch_cmp_op1_reg[15]_0\,
      O => \EX_Branch_CMP_Op1_reg[0]\(12)
    );
\Using_FPGA.Native_i_1__71\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_12,
      I1 => EX_Fwd(13),
      I2 => \Using_FPGA.Native_1\(13),
      I3 => \^ex_branch_cmp_op1_reg[15]\,
      I4 => GPR_Op1(13),
      I5 => \^ex_branch_cmp_op1_reg[15]_0\,
      O => \EX_Branch_CMP_Op1_reg[0]\(13)
    );
\Using_FPGA.Native_i_1__72\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_13,
      I1 => EX_Fwd(14),
      I2 => \Using_FPGA.Native_1\(14),
      I3 => \^ex_branch_cmp_op1_reg[15]\,
      I4 => GPR_Op1(14),
      I5 => \^ex_branch_cmp_op1_reg[15]_0\,
      O => \EX_Branch_CMP_Op1_reg[0]\(14)
    );
\Using_FPGA.Native_i_2__38\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_14,
      I1 => EX_Fwd(15),
      I2 => \Using_FPGA.Native_2\(0),
      I3 => \^ex_branch_cmp_op1_reg[15]\,
      I4 => GPR_Op1(15),
      I5 => \^ex_branch_cmp_op1_reg[15]_0\,
      O => \EX_Branch_CMP_Op1_reg[0]\(15)
    );
\Using_FPGA.Native_i_4__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"54"
    )
        port map (
      I0 => of_read_ex_write_op1_conflict,
      I1 => of_read_mem_write_op1_conflict,
      I2 => of_read_wb_write_op1_conflict,
      O => \^ex_branch_cmp_op1_reg[15]\
    );
\Using_FPGA.Native_i_5__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => of_read_ex_write_op1_conflict,
      I1 => of_read_mem_write_op1_conflict,
      I2 => of_read_wb_write_op1_conflict,
      O => \^ex_branch_cmp_op1_reg[15]_0\
    );
\Using_FPGA.Native_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9000009000000000"
    )
        port map (
      I0 => \ex_gpr_write_addr_reg[0]\(1),
      I1 => \^using_fpga.native_0\,
      I2 => \ex_gpr_write_addr_reg[4]\,
      I3 => \Using_FPGA.Native_3\,
      I4 => \ex_gpr_write_addr_reg[0]\(0),
      I5 => p_112_in,
      O => of_read_ex_write_op1_conflict
    );
\Using_FPGA.Native_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9000009000000000"
    )
        port map (
      I0 => Q(1),
      I1 => \^using_fpga.native_0\,
      I2 => \mem_gpr_write_addr_reg[4]\,
      I3 => \Using_FPGA.Native_3\,
      I4 => Q(0),
      I5 => p_109_in,
      O => of_read_mem_write_op1_conflict
    );
\Using_FPGA.Native_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9000009000000000"
    )
        port map (
      I0 => \wb_gpr_write_addr_reg[0]\(1),
      I1 => \^using_fpga.native_0\,
      I2 => \wb_gpr_write_addr_reg[4]\,
      I3 => \Using_FPGA.Native_3\,
      I4 => \wb_gpr_write_addr_reg[0]\(0),
      I5 => p_19_in,
      O => of_read_wb_write_op1_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_133 is
  port (
    of_predecode : out STD_LOGIC_VECTOR ( 0 to 0 );
    I033_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_8 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_133 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_133;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_133 is
  signal \^of_predecode\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  of_predecode(0) <= \^of_predecode\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_8,
      Q => \^of_predecode\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__123\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^of_predecode\(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I033_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_135 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    I029_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_7 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_135 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_135;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_135 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_7,
      Q => \^using_fpga.native_0\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__121\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_1\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I029_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_137 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    I025_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_6 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_137 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_137;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_137 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_6,
      Q => \^using_fpga.native_0\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__119\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_1\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I025_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_139 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    I021_out : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[15]\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[15]_0\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[15]_1\ : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_5 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \wb_gpr_write_addr_reg[2]\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \ex_gpr_write_addr_reg[2]\ : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_139 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_139;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_139 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_5,
      Q => \^using_fpga.native_0\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \ex_gpr_write_addr_reg[2]\(0),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_2\,
      I3 => \ex_gpr_write_addr_reg[2]\(2),
      I4 => \Using_FPGA.Native_3\,
      I5 => \ex_gpr_write_addr_reg[2]\(1),
      O => \EX_Branch_CMP_Op1_reg[15]_1\
    );
\Using_FPGA.Native_i_12\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => Q(0),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_2\,
      I3 => Q(2),
      I4 => \Using_FPGA.Native_3\,
      I5 => Q(1),
      O => \EX_Branch_CMP_Op1_reg[15]\
    );
\Using_FPGA.Native_i_14\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \wb_gpr_write_addr_reg[2]\(0),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_2\,
      I3 => \wb_gpr_write_addr_reg[2]\(2),
      I4 => \Using_FPGA.Native_3\,
      I5 => \wb_gpr_write_addr_reg[2]\(1),
      O => \EX_Branch_CMP_Op1_reg[15]_0\
    );
\Using_FPGA.Native_i_1__117\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_1\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I021_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_141 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \EX_Op2_reg[0]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    of_op2_sel : out STD_LOGIC_VECTOR ( 0 to 0 );
    I017_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_4 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 6 downto 0 );
    GPR_Op2 : in STD_LOGIC_VECTOR ( 28 downto 0 );
    of_op2_sel_imm : in STD_LOGIC;
    WB_Byte_Access_reg : in STD_LOGIC_VECTOR ( 15 downto 0 );
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 31 );
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 29 downto 0 );
    \interrupt_address_d1_reg[31]\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \interrupt_address_d1_reg[30]\ : in STD_LOGIC;
    \interrupt_address_d1_reg[29]\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \interrupt_address_d1_reg[26]\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \interrupt_address_d1_reg[25]\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \interrupt_address_d1_reg[24]\ : in STD_LOGIC;
    \interrupt_address_d1_reg[23]\ : in STD_LOGIC;
    \interrupt_address_d1_reg[22]\ : in STD_LOGIC;
    \interrupt_address_d1_reg[21]\ : in STD_LOGIC;
    \interrupt_address_d1_reg[20]\ : in STD_LOGIC;
    \interrupt_address_d1_reg[19]\ : in STD_LOGIC;
    \interrupt_address_d1_reg[18]\ : in STD_LOGIC;
    \interrupt_address_d1_reg[17]\ : in STD_LOGIC;
    \interrupt_address_d1_reg[16]\ : in STD_LOGIC;
    \imm_reg_reg[15]\ : in STD_LOGIC;
    WB_Doublet_Access_reg : in STD_LOGIC;
    \interrupt_address_d1_reg[15]\ : in STD_LOGIC;
    \imm_reg_reg[14]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_0 : in STD_LOGIC;
    \interrupt_address_d1_reg[14]\ : in STD_LOGIC;
    \imm_reg_reg[13]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_1 : in STD_LOGIC;
    \interrupt_address_d1_reg[13]\ : in STD_LOGIC;
    \imm_reg_reg[12]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_2 : in STD_LOGIC;
    \interrupt_address_d1_reg[12]\ : in STD_LOGIC;
    \imm_reg_reg[11]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_3 : in STD_LOGIC;
    \interrupt_address_d1_reg[11]\ : in STD_LOGIC;
    \imm_reg_reg[10]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_4 : in STD_LOGIC;
    \interrupt_address_d1_reg[10]\ : in STD_LOGIC;
    \imm_reg_reg[9]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_5 : in STD_LOGIC;
    \interrupt_address_d1_reg[9]\ : in STD_LOGIC;
    \imm_reg_reg[8]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_6 : in STD_LOGIC;
    \interrupt_address_d1_reg[8]\ : in STD_LOGIC;
    \imm_reg_reg[7]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_7 : in STD_LOGIC;
    \interrupt_address_d1_reg[7]\ : in STD_LOGIC;
    \imm_reg_reg[6]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_8 : in STD_LOGIC;
    \interrupt_address_d1_reg[6]\ : in STD_LOGIC;
    \imm_reg_reg[5]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_9 : in STD_LOGIC;
    \interrupt_address_d1_reg[5]\ : in STD_LOGIC;
    \imm_reg_reg[4]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_10 : in STD_LOGIC;
    \interrupt_address_d1_reg[4]\ : in STD_LOGIC;
    \imm_reg_reg[3]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_11 : in STD_LOGIC;
    \interrupt_address_d1_reg[3]\ : in STD_LOGIC;
    \imm_reg_reg[2]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_12 : in STD_LOGIC;
    \interrupt_address_d1_reg[2]\ : in STD_LOGIC;
    \imm_reg_reg[1]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_13 : in STD_LOGIC;
    \interrupt_address_d1_reg[1]\ : in STD_LOGIC;
    \interrupt_address_d1_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \imm_reg_reg[0]\ : in STD_LOGIC;
    of_Take_Interrupt_hold_reg : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC;
    WB_Doublet_Access_reg_14 : in STD_LOGIC;
    of_use_op2_s : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \mem_gpr_write_addr_reg[4]\ : in STD_LOGIC;
    \Using_FPGA.Native_10\ : in STD_LOGIC;
    p_109_in : in STD_LOGIC;
    \ex_gpr_write_addr_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \ex_gpr_write_addr_reg[4]\ : in STD_LOGIC;
    p_112_in : in STD_LOGIC;
    \wb_gpr_write_addr_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \wb_gpr_write_addr_reg[4]\ : in STD_LOGIC;
    p_19_in : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_11\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    wb_MSR_cmb : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_141 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_141;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_141 is
  signal \EX_Op2[0]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[0]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[0]_i_5_n_0\ : STD_LOGIC;
  signal \EX_Op2[10]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[11]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[12]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[13]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[14]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[15]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[16]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[17]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[18]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[19]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[1]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[1]_i_5_n_0\ : STD_LOGIC;
  signal \EX_Op2[20]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[21]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[22]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[23]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[24]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[25]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[26]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[28]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[29]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[2]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[30]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[31]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[3]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[4]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[5]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[6]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[7]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[8]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[9]_i_2_n_0\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^of_op2_sel\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \of_op2_sel__0\ : STD_LOGIC_VECTOR ( 1 to 1 );
  signal of_read_ex_write_op2_conflict : STD_LOGIC;
  signal of_read_mem_write_op2_conflict : STD_LOGIC;
  signal of_read_wb_write_op2_conflict : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \EX_Op2[0]_i_2\ : label is "soft_lutpair13";
  attribute SOFT_HLUTNM of \EX_Op2[0]_i_3\ : label is "soft_lutpair14";
  attribute SOFT_HLUTNM of \EX_Op2[0]_i_5\ : label is "soft_lutpair13";
  attribute SOFT_HLUTNM of \EX_Op2[1]_i_5\ : label is "soft_lutpair14";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  of_op2_sel(0) <= \^of_op2_sel\(0);
\EX_Op2[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BFBF3F3FFF3F3F3F"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(0),
      I1 => \EX_Op2[0]_i_2_n_0\,
      I2 => \EX_Op2[0]_i_3_n_0\,
      I3 => \imm_reg_reg[0]\,
      I4 => \EX_Op2[0]_i_5_n_0\,
      I5 => of_Take_Interrupt_hold_reg,
      O => \EX_Op2_reg[0]\(31)
    );
\EX_Op2[0]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF775F"
    )
        port map (
      I0 => \^of_op2_sel\(0),
      I1 => \Using_FPGA.Native_9\(0),
      I2 => \Using_FPGA.Native_2\(29),
      I3 => mem_sel_msr,
      I4 => \of_op2_sel__0\(1),
      O => \EX_Op2[0]_i_2_n_0\
    );
\EX_Op2[0]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"57DF"
    )
        port map (
      I0 => \of_op2_sel__0\(1),
      I1 => \^of_op2_sel\(0),
      I2 => EX_Fwd(0),
      I3 => WB_Doublet_Access_reg_14,
      O => \EX_Op2[0]_i_3_n_0\
    );
\EX_Op2[0]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \of_op2_sel__0\(1),
      I1 => \^of_op2_sel\(0),
      O => \EX_Op2[0]_i_5_n_0\
    );
\EX_Op2[10]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[10]_i_2_n_0\,
      I1 => \imm_reg_reg[10]\,
      I2 => GPR_Op2(19),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(21)
    );
\EX_Op2[10]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Doublet_Access_reg_4,
      I1 => EX_Fwd(10),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(19),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[10]\,
      O => \EX_Op2[10]_i_2_n_0\
    );
\EX_Op2[11]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[11]_i_2_n_0\,
      I1 => \imm_reg_reg[11]\,
      I2 => GPR_Op2(18),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(20)
    );
\EX_Op2[11]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Doublet_Access_reg_3,
      I1 => EX_Fwd(11),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(18),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[11]\,
      O => \EX_Op2[11]_i_2_n_0\
    );
\EX_Op2[12]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[12]_i_2_n_0\,
      I1 => \imm_reg_reg[12]\,
      I2 => GPR_Op2(17),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(19)
    );
\EX_Op2[12]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Doublet_Access_reg_2,
      I1 => EX_Fwd(12),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(17),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[12]\,
      O => \EX_Op2[12]_i_2_n_0\
    );
\EX_Op2[13]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[13]_i_2_n_0\,
      I1 => \imm_reg_reg[13]\,
      I2 => GPR_Op2(16),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(18)
    );
\EX_Op2[13]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Doublet_Access_reg_1,
      I1 => EX_Fwd(13),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(16),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[13]\,
      O => \EX_Op2[13]_i_2_n_0\
    );
\EX_Op2[14]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[14]_i_2_n_0\,
      I1 => \imm_reg_reg[14]\,
      I2 => GPR_Op2(15),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(17)
    );
\EX_Op2[14]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Doublet_Access_reg_0,
      I1 => EX_Fwd(14),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(15),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[14]\,
      O => \EX_Op2[14]_i_2_n_0\
    );
\EX_Op2[15]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[15]_i_2_n_0\,
      I1 => \imm_reg_reg[15]\,
      I2 => GPR_Op2(14),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(16)
    );
\EX_Op2[15]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Doublet_Access_reg,
      I1 => EX_Fwd(15),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(14),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[15]\,
      O => \EX_Op2[15]_i_2_n_0\
    );
\EX_Op2[16]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[16]_i_2_n_0\,
      I1 => \Using_FPGA.Native_1\(6),
      I2 => GPR_Op2(13),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(15)
    );
\EX_Op2[16]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Byte_Access_reg(15),
      I1 => EX_Fwd(16),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(13),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[16]\,
      O => \EX_Op2[16]_i_2_n_0\
    );
\EX_Op2[17]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[17]_i_2_n_0\,
      I1 => \Using_FPGA.Native_1\(5),
      I2 => GPR_Op2(12),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(14)
    );
\EX_Op2[17]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Byte_Access_reg(14),
      I1 => EX_Fwd(17),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(12),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[17]\,
      O => \EX_Op2[17]_i_2_n_0\
    );
\EX_Op2[18]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[18]_i_2_n_0\,
      I1 => \Using_FPGA.Native_1\(4),
      I2 => GPR_Op2(11),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(13)
    );
\EX_Op2[18]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Byte_Access_reg(13),
      I1 => EX_Fwd(18),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(11),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[18]\,
      O => \EX_Op2[18]_i_2_n_0\
    );
\EX_Op2[19]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[19]_i_2_n_0\,
      I1 => \Using_FPGA.Native_1\(3),
      I2 => GPR_Op2(10),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(12)
    );
\EX_Op2[19]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Byte_Access_reg(12),
      I1 => EX_Fwd(19),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(10),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[19]\,
      O => \EX_Op2[19]_i_2_n_0\
    );
\EX_Op2[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[1]_i_2_n_0\,
      I1 => \imm_reg_reg[1]\,
      I2 => GPR_Op2(28),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(30)
    );
\EX_Op2[1]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Doublet_Access_reg_13,
      I1 => EX_Fwd(1),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(28),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[1]\,
      O => \EX_Op2[1]_i_2_n_0\
    );
\EX_Op2[1]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"01"
    )
        port map (
      I0 => \^of_op2_sel\(0),
      I1 => \of_op2_sel__0\(1),
      I2 => of_Take_Interrupt_hold_reg,
      O => \EX_Op2[1]_i_5_n_0\
    );
\EX_Op2[20]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[20]_i_2_n_0\,
      I1 => \Using_FPGA.Native_8\(4),
      I2 => GPR_Op2(9),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(11)
    );
\EX_Op2[20]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Byte_Access_reg(11),
      I1 => EX_Fwd(20),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(9),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[20]\,
      O => \EX_Op2[20]_i_2_n_0\
    );
\EX_Op2[21]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[21]_i_2_n_0\,
      I1 => \Using_FPGA.Native_8\(3),
      I2 => GPR_Op2(8),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(10)
    );
\EX_Op2[21]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Byte_Access_reg(10),
      I1 => EX_Fwd(21),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(8),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[21]\,
      O => \EX_Op2[21]_i_2_n_0\
    );
\EX_Op2[22]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[22]_i_2_n_0\,
      I1 => \Using_FPGA.Native_8\(2),
      I2 => GPR_Op2(7),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(9)
    );
\EX_Op2[22]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Byte_Access_reg(9),
      I1 => EX_Fwd(22),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(7),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[22]\,
      O => \EX_Op2[22]_i_2_n_0\
    );
\EX_Op2[23]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[23]_i_2_n_0\,
      I1 => \Using_FPGA.Native_8\(1),
      I2 => GPR_Op2(6),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(8)
    );
\EX_Op2[23]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Byte_Access_reg(8),
      I1 => EX_Fwd(23),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(6),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[23]\,
      O => \EX_Op2[23]_i_2_n_0\
    );
\EX_Op2[24]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[24]_i_2_n_0\,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => GPR_Op2(5),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(7)
    );
\EX_Op2[24]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Byte_Access_reg(7),
      I1 => EX_Fwd(24),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(5),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[24]\,
      O => \EX_Op2[24]_i_2_n_0\
    );
\EX_Op2[25]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[25]_i_2_n_0\,
      I1 => \Using_FPGA.Native_7\,
      I2 => GPR_Op2(4),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(6)
    );
\EX_Op2[25]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Byte_Access_reg(6),
      I1 => EX_Fwd(25),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(4),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[25]\,
      O => \EX_Op2[25]_i_2_n_0\
    );
\EX_Op2[26]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"D5DDD555"
    )
        port map (
      I0 => \EX_Op2[26]_i_2_n_0\,
      I1 => \EX_Op2[1]_i_5_n_0\,
      I2 => \Using_FPGA.Native_6\,
      I3 => of_op2_sel_imm,
      I4 => GPR_Op2(3),
      O => \EX_Op2_reg[0]\(5)
    );
\EX_Op2[26]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Byte_Access_reg(5),
      I1 => EX_Fwd(26),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(3),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[26]\,
      O => \EX_Op2[26]_i_2_n_0\
    );
\EX_Op2[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ACACACACF000FFFF"
    )
        port map (
      I0 => WB_Byte_Access_reg(4),
      I1 => EX_Fwd(27),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(2),
      I4 => \Using_FPGA.Native_5\,
      I5 => \of_op2_sel__0\(1),
      O => \EX_Op2_reg[0]\(4)
    );
\EX_Op2[27]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00005400"
    )
        port map (
      I0 => of_read_ex_write_op2_conflict,
      I1 => of_read_wb_write_op2_conflict,
      I2 => of_read_mem_write_op2_conflict,
      I3 => of_use_op2_s,
      I4 => of_Take_Interrupt_hold_reg,
      O => \^of_op2_sel\(0)
    );
\EX_Op2[27]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"44440040"
    )
        port map (
      I0 => of_Take_Interrupt_hold_reg,
      I1 => of_use_op2_s,
      I2 => of_read_wb_write_op2_conflict,
      I3 => of_read_mem_write_op2_conflict,
      I4 => of_read_ex_write_op2_conflict,
      O => \of_op2_sel__0\(1)
    );
\EX_Op2[27]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9000009000000000"
    )
        port map (
      I0 => \ex_gpr_write_addr_reg[0]\(1),
      I1 => \^using_fpga.native_0\,
      I2 => \ex_gpr_write_addr_reg[4]\,
      I3 => \Using_FPGA.Native_10\,
      I4 => \ex_gpr_write_addr_reg[0]\(0),
      I5 => p_112_in,
      O => of_read_ex_write_op2_conflict
    );
\EX_Op2[27]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9000009000000000"
    )
        port map (
      I0 => \wb_gpr_write_addr_reg[0]\(1),
      I1 => \^using_fpga.native_0\,
      I2 => \wb_gpr_write_addr_reg[4]\,
      I3 => \Using_FPGA.Native_10\,
      I4 => \wb_gpr_write_addr_reg[0]\(0),
      I5 => p_19_in,
      O => of_read_wb_write_op2_conflict
    );
\EX_Op2[27]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9000009000000000"
    )
        port map (
      I0 => Q(1),
      I1 => \^using_fpga.native_0\,
      I2 => \mem_gpr_write_addr_reg[4]\,
      I3 => \Using_FPGA.Native_10\,
      I4 => Q(0),
      I5 => p_109_in,
      O => of_read_mem_write_op2_conflict
    );
\EX_Op2[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8B800FFFFFF"
    )
        port map (
      I0 => WB_Byte_Access_reg(3),
      I1 => \^of_op2_sel\(0),
      I2 => EX_Fwd(28),
      I3 => \EX_Op2[28]_i_2_n_0\,
      I4 => \Using_FPGA.Native_4\,
      I5 => \of_op2_sel__0\(1),
      O => \EX_Op2_reg[0]\(3)
    );
\EX_Op2[28]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1BFF"
    )
        port map (
      I0 => mem_sel_msr,
      I1 => \Using_FPGA.Native_2\(1),
      I2 => wb_MSR_cmb(0),
      I3 => \^of_op2_sel\(0),
      O => \EX_Op2[28]_i_2_n_0\
    );
\EX_Op2[29]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[29]_i_2_n_0\,
      I1 => \Using_FPGA.Native_1\(2),
      I2 => GPR_Op2(2),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(2)
    );
\EX_Op2[29]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Byte_Access_reg(2),
      I1 => EX_Fwd(29),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_3\(1),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[29]\,
      O => \EX_Op2[29]_i_2_n_0\
    );
\EX_Op2[2]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[2]_i_2_n_0\,
      I1 => \imm_reg_reg[2]\,
      I2 => GPR_Op2(27),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(29)
    );
\EX_Op2[2]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Doublet_Access_reg_12,
      I1 => EX_Fwd(2),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(27),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[2]\,
      O => \EX_Op2[2]_i_2_n_0\
    );
\EX_Op2[30]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[30]_i_2_n_0\,
      I1 => \Using_FPGA.Native_1\(1),
      I2 => GPR_Op2(1),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(1)
    );
\EX_Op2[30]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Byte_Access_reg(1),
      I1 => EX_Fwd(30),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_3\(0),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[30]\,
      O => \EX_Op2[30]_i_2_n_0\
    );
\EX_Op2[31]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[31]_i_2_n_0\,
      I1 => \Using_FPGA.Native_1\(0),
      I2 => GPR_Op2(0),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(0)
    );
\EX_Op2[31]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Byte_Access_reg(0),
      I1 => EX_Fwd(31),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(0),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[31]\,
      O => \EX_Op2[31]_i_2_n_0\
    );
\EX_Op2[3]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[3]_i_2_n_0\,
      I1 => \imm_reg_reg[3]\,
      I2 => GPR_Op2(26),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(28)
    );
\EX_Op2[3]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Doublet_Access_reg_11,
      I1 => EX_Fwd(3),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(26),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[3]\,
      O => \EX_Op2[3]_i_2_n_0\
    );
\EX_Op2[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[4]_i_2_n_0\,
      I1 => \imm_reg_reg[4]\,
      I2 => GPR_Op2(25),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(27)
    );
\EX_Op2[4]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Doublet_Access_reg_10,
      I1 => EX_Fwd(4),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(25),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[4]\,
      O => \EX_Op2[4]_i_2_n_0\
    );
\EX_Op2[5]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[5]_i_2_n_0\,
      I1 => \imm_reg_reg[5]\,
      I2 => GPR_Op2(24),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(26)
    );
\EX_Op2[5]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Doublet_Access_reg_9,
      I1 => EX_Fwd(5),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(24),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[5]\,
      O => \EX_Op2[5]_i_2_n_0\
    );
\EX_Op2[6]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[6]_i_2_n_0\,
      I1 => \imm_reg_reg[6]\,
      I2 => GPR_Op2(23),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(25)
    );
\EX_Op2[6]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Doublet_Access_reg_8,
      I1 => EX_Fwd(6),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(23),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[6]\,
      O => \EX_Op2[6]_i_2_n_0\
    );
\EX_Op2[7]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[7]_i_2_n_0\,
      I1 => \imm_reg_reg[7]\,
      I2 => GPR_Op2(22),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(24)
    );
\EX_Op2[7]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Doublet_Access_reg_7,
      I1 => EX_Fwd(7),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(22),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[7]\,
      O => \EX_Op2[7]_i_2_n_0\
    );
\EX_Op2[8]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[8]_i_2_n_0\,
      I1 => \imm_reg_reg[8]\,
      I2 => GPR_Op2(21),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(23)
    );
\EX_Op2[8]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Doublet_Access_reg_6,
      I1 => EX_Fwd(8),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(21),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[8]\,
      O => \EX_Op2[8]_i_2_n_0\
    );
\EX_Op2[9]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DDF55555"
    )
        port map (
      I0 => \EX_Op2[9]_i_2_n_0\,
      I1 => \imm_reg_reg[9]\,
      I2 => GPR_Op2(20),
      I3 => of_op2_sel_imm,
      I4 => \EX_Op2[1]_i_5_n_0\,
      O => \EX_Op2_reg[0]\(22)
    );
\EX_Op2[9]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"53530FFF535300F0"
    )
        port map (
      I0 => WB_Doublet_Access_reg_5,
      I1 => EX_Fwd(9),
      I2 => \^of_op2_sel\(0),
      I3 => \Using_FPGA.Native_2\(20),
      I4 => \of_op2_sel__0\(1),
      I5 => \interrupt_address_d1_reg[9]\,
      O => \EX_Op2[9]_i_2_n_0\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_4,
      Q => \^using_fpga.native_0\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__115\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_11\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I017_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_143 is
  port (
    of_predecode : out STD_LOGIC_VECTOR ( 0 to 0 );
    I013_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_3 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_143 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_143;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_143 is
  signal \^of_predecode\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  of_predecode(0) <= \^of_predecode\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_3,
      Q => \^of_predecode\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__113\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^of_predecode\(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I013_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_145 is
  port (
    \ex_instr_reg[3]\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    I0157_out : out STD_LOGIC;
    ex_sel_alu_i0 : out STD_LOGIC;
    ex_load_alu_carry_reg : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_39 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    EX_ALU_Op1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_145 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_145;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_145 is
  signal \^ex_instr_reg[3]\ : STD_LOGIC;
  signal p_1_in89_in : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__74\ : label is "soft_lutpair15";
  attribute SOFT_HLUTNM of ex_sel_alu_i_i_1 : label is "soft_lutpair15";
begin
  \ex_instr_reg[3]\ <= \^ex_instr_reg[3]\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_39,
      Q => \^ex_instr_reg[3]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__103\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[3]\,
      I2 => \Using_FPGA.Native_2\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I0157_out
    );
\Using_FPGA.Native_i_1__74\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => p_1_in89_in,
      I1 => \Using_FPGA.Native_1\(0),
      O => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__83\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0100000000000000"
    )
        port map (
      I0 => \^ex_instr_reg[3]\,
      I1 => \Using_FPGA.Native_5\,
      I2 => \Using_FPGA.Native_4\,
      I3 => \Using_FPGA.Native_3\,
      I4 => \Using_FPGA.Native_6\,
      I5 => \Using_FPGA.Native_7\,
      O => p_1_in89_in
    );
ex_load_alu_carry_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0001"
    )
        port map (
      I0 => \^ex_instr_reg[3]\,
      I1 => \Using_FPGA.Native_3\,
      I2 => \Using_FPGA.Native_7\,
      I3 => EX_ALU_Op1,
      O => ex_load_alu_carry_reg
    );
ex_sel_alu_i_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"5F1F"
    )
        port map (
      I0 => \^ex_instr_reg[3]\,
      I1 => \Using_FPGA.Native_1\(0),
      I2 => \Using_FPGA.Native_3\,
      I3 => \Using_FPGA.Native_4\,
      O => ex_sel_alu_i0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_147 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    I09_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_2 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_147 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_147;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_147 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_2,
      Q => \^using_fpga.native_0\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__111\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_1\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I09_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_149 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    I05_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_1 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_149 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_149;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_149 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_1,
      Q => \^using_fpga.native_0\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__109\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_1\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I05_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_151 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \EX_Op2_reg[27]\ : out STD_LOGIC;
    \EX_Op2_reg[27]_0\ : out STD_LOGIC;
    \EX_Op2_reg[27]_1\ : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_0 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \wb_gpr_write_addr_reg[2]\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \ex_gpr_write_addr_reg[2]\ : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_151 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_151;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_151 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\EX_Op2[27]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => Q(0),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_3\,
      I3 => Q(2),
      I4 => \Using_FPGA.Native_4\,
      I5 => Q(1),
      O => \EX_Op2_reg[27]\
    );
\EX_Op2[27]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \ex_gpr_write_addr_reg[2]\(0),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_3\,
      I3 => \ex_gpr_write_addr_reg[2]\(2),
      I4 => \Using_FPGA.Native_4\,
      I5 => \ex_gpr_write_addr_reg[2]\(1),
      O => \EX_Op2_reg[27]_1\
    );
\EX_Op2[27]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \wb_gpr_write_addr_reg[2]\(0),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_3\,
      I3 => \wb_gpr_write_addr_reg[2]\(2),
      I4 => \Using_FPGA.Native_4\,
      I5 => \wb_gpr_write_addr_reg[2]\(1),
      O => \EX_Op2_reg[27]_0\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_0,
      Q => \^using_fpga.native_0\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__107\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^using_fpga.native_0\,
      I2 => \Using_FPGA.Native_2\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => \Using_FPGA.Native_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_153 is
  port (
    \ex_instr_reg[4]\ : out STD_LOGIC;
    force_Val2_N_reg : out STD_LOGIC;
    of_pipe_ctrl : out STD_LOGIC_VECTOR ( 1 downto 0 );
    of_use_op2_s : out STD_LOGIC;
    of_op2_sel_imm : out STD_LOGIC;
    ex_is_multi_or_load_instr0 : out STD_LOGIC;
    ex_is_multi_instr2_reg : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    I0153_out : out STD_LOGIC;
    p_1_in16_in : out STD_LOGIC;
    I1 : out STD_LOGIC;
    \EX_Op1_reg[28]\ : out STD_LOGIC;
    \EX_Op1_reg[29]\ : out STD_LOGIC;
    \EX_Op1_reg[30]\ : out STD_LOGIC;
    \EX_Op1_reg[31]\ : out STD_LOGIC;
    \EX_Op1_reg[27]\ : out STD_LOGIC;
    \EX_Op1_reg[26]\ : out STD_LOGIC;
    \EX_Op1_reg[25]\ : out STD_LOGIC;
    \EX_Op1_reg[24]\ : out STD_LOGIC;
    \EX_Op1_reg[23]\ : out STD_LOGIC;
    \EX_Op1_reg[22]\ : out STD_LOGIC;
    \EX_Op1_reg[21]\ : out STD_LOGIC;
    \EX_Op1_reg[20]\ : out STD_LOGIC;
    \EX_Op1_reg[19]\ : out STD_LOGIC;
    \EX_Op1_reg[18]\ : out STD_LOGIC;
    \EX_Op1_reg[17]\ : out STD_LOGIC;
    \EX_Op1_reg[16]\ : out STD_LOGIC;
    \EX_Op1_reg[15]\ : out STD_LOGIC;
    \EX_Op1_reg[14]\ : out STD_LOGIC;
    \EX_Op1_reg[13]\ : out STD_LOGIC;
    \EX_Op1_reg[12]\ : out STD_LOGIC;
    \EX_Op1_reg[11]\ : out STD_LOGIC;
    \EX_Op1_reg[10]\ : out STD_LOGIC;
    \EX_Op1_reg[9]\ : out STD_LOGIC;
    \EX_Op1_reg[8]\ : out STD_LOGIC;
    \EX_Op1_reg[7]\ : out STD_LOGIC;
    \EX_Op1_reg[6]\ : out STD_LOGIC;
    \EX_Op1_reg[5]\ : out STD_LOGIC;
    \EX_Op1_reg[4]\ : out STD_LOGIC;
    \EX_Op1_reg[3]\ : out STD_LOGIC;
    \EX_Op1_reg[2]\ : out STD_LOGIC;
    \EX_Op1_reg[1]\ : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_38 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    ex_is_multi_or_load_instr : in STD_LOGIC;
    of_read_ex_write_op2_conflict_part2 : in STD_LOGIC;
    of_read_ex_write_op2_conflict_part1 : in STD_LOGIC;
    of_read_mem_write_op2_conflict_part2 : in STD_LOGIC;
    mem_is_multi_or_load_instr : in STD_LOGIC;
    of_read_mem_write_op2_conflict_part1 : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_9\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    ex_MSR : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_153 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_153;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_153 is
  signal OF_Op1_Sel_SPR_PC0 : STD_LOGIC;
  signal \^ex_instr_reg[4]\ : STD_LOGIC;
  signal \^ex_is_multi_instr2_reg\ : STD_LOGIC;
  signal \^of_use_op2_s\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \ex_instr_reg[4]\ <= \^ex_instr_reg[4]\;
  ex_is_multi_instr2_reg <= \^ex_is_multi_instr2_reg\;
  of_use_op2_s <= \^of_use_op2_s\;
\EX_Op2[1]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF04000000"
    )
        port map (
      I0 => \^ex_instr_reg[4]\,
      I1 => \Using_FPGA.Native_3\,
      I2 => \Using_FPGA.Native_2\,
      I3 => \Using_FPGA.Native_5\,
      I4 => \Using_FPGA.Native_4\,
      I5 => \Using_FPGA.Native_1\,
      O => of_op2_sel_imm
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_38,
      Q => \^ex_instr_reg[4]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__102\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[4]\,
      I2 => \Using_FPGA.Native_6\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I0153_out
    );
\Using_FPGA.Native_i_1__40\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7FFF"
    )
        port map (
      I0 => \^of_use_op2_s\,
      I1 => ex_is_multi_or_load_instr,
      I2 => of_read_ex_write_op2_conflict_part2,
      I3 => of_read_ex_write_op2_conflict_part1,
      O => of_pipe_ctrl(1)
    );
\Using_FPGA.Native_i_1__41\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7FFF"
    )
        port map (
      I0 => \^of_use_op2_s\,
      I1 => of_read_mem_write_op2_conflict_part2,
      I2 => mem_is_multi_or_load_instr,
      I3 => of_read_mem_write_op2_conflict_part1,
      O => of_pipe_ctrl(0)
    );
\Using_FPGA.Native_i_1__77\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^ex_instr_reg[4]\,
      I1 => \Using_FPGA.Native_3\,
      O => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__116\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"32333333"
    )
        port map (
      I0 => \^ex_instr_reg[4]\,
      I1 => \Using_FPGA.Native_1\,
      I2 => \Using_FPGA.Native_2\,
      I3 => \Using_FPGA.Native_5\,
      I4 => \Using_FPGA.Native_4\,
      O => \^of_use_op2_s\
    );
\Using_FPGA.Native_i_2__119\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF45BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(3),
      I4 => ex_MSR(2),
      O => \EX_Op1_reg[28]\
    );
\Using_FPGA.Native_i_2__120\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF45BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(2),
      I4 => ex_MSR(1),
      O => \EX_Op1_reg[29]\
    );
\Using_FPGA.Native_i_2__121\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF45BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(1),
      I4 => ex_MSR(0),
      O => \EX_Op1_reg[30]\
    );
\Using_FPGA.Native_i_2__122\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(0),
      O => \EX_Op1_reg[31]\
    );
\Using_FPGA.Native_i_2__123\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(4),
      O => \EX_Op1_reg[27]\
    );
\Using_FPGA.Native_i_2__124\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(5),
      O => \EX_Op1_reg[26]\
    );
\Using_FPGA.Native_i_2__125\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(6),
      O => \EX_Op1_reg[25]\
    );
\Using_FPGA.Native_i_2__126\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(7),
      O => \EX_Op1_reg[24]\
    );
\Using_FPGA.Native_i_2__127\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(8),
      O => \EX_Op1_reg[23]\
    );
\Using_FPGA.Native_i_2__128\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(9),
      O => \EX_Op1_reg[22]\
    );
\Using_FPGA.Native_i_2__129\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(10),
      O => \EX_Op1_reg[21]\
    );
\Using_FPGA.Native_i_2__130\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(11),
      O => \EX_Op1_reg[20]\
    );
\Using_FPGA.Native_i_2__131\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(12),
      O => \EX_Op1_reg[19]\
    );
\Using_FPGA.Native_i_2__132\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(13),
      O => \EX_Op1_reg[18]\
    );
\Using_FPGA.Native_i_2__133\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(14),
      O => \EX_Op1_reg[17]\
    );
\Using_FPGA.Native_i_2__134\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(15),
      O => \EX_Op1_reg[16]\
    );
\Using_FPGA.Native_i_2__135\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(16),
      O => \EX_Op1_reg[15]\
    );
\Using_FPGA.Native_i_2__136\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(17),
      O => \EX_Op1_reg[14]\
    );
\Using_FPGA.Native_i_2__137\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(18),
      O => \EX_Op1_reg[13]\
    );
\Using_FPGA.Native_i_2__138\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(19),
      O => \EX_Op1_reg[12]\
    );
\Using_FPGA.Native_i_2__139\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(20),
      O => \EX_Op1_reg[11]\
    );
\Using_FPGA.Native_i_2__140\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(21),
      O => \EX_Op1_reg[10]\
    );
\Using_FPGA.Native_i_2__141\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(22),
      O => \EX_Op1_reg[9]\
    );
\Using_FPGA.Native_i_2__142\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(23),
      O => \EX_Op1_reg[8]\
    );
\Using_FPGA.Native_i_2__143\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(24),
      O => \EX_Op1_reg[7]\
    );
\Using_FPGA.Native_i_2__144\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(25),
      O => \EX_Op1_reg[6]\
    );
\Using_FPGA.Native_i_2__145\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(26),
      O => \EX_Op1_reg[5]\
    );
\Using_FPGA.Native_i_2__146\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(27),
      O => \EX_Op1_reg[4]\
    );
\Using_FPGA.Native_i_2__147\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(28),
      O => \EX_Op1_reg[3]\
    );
\Using_FPGA.Native_i_2__148\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(29),
      O => \EX_Op1_reg[2]\
    );
\Using_FPGA.Native_i_2__149\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(30),
      O => \EX_Op1_reg[1]\
    );
\Using_FPGA.Native_i_3__34\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF45BA00"
    )
        port map (
      I0 => OF_Op1_Sel_SPR_PC0,
      I1 => \Using_FPGA.Native_8\(0),
      I2 => \^ex_is_multi_instr2_reg\,
      I3 => \Using_FPGA.Native_9\(31),
      I4 => ex_MSR(1),
      O => I1
    );
\Using_FPGA.Native_i_6__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => \^ex_instr_reg[4]\,
      I1 => \Using_FPGA.Native_4\,
      I2 => \Using_FPGA.Native_5\,
      I3 => \Using_FPGA.Native_2\,
      O => OF_Op1_Sel_SPR_PC0
    );
ex_is_multi_instr2_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000004"
    )
        port map (
      I0 => \^ex_instr_reg[4]\,
      I1 => \Using_FPGA.Native_3\,
      I2 => \Using_FPGA.Native_2\,
      I3 => \Using_FPGA.Native_7\,
      I4 => \Using_FPGA.Native_1\,
      I5 => \Using_FPGA.Native_8\(1),
      O => \^ex_is_multi_instr2_reg\
    );
ex_is_multi_or_load_instr_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BAFA"
    )
        port map (
      I0 => \^ex_is_multi_instr2_reg\,
      I1 => \Using_FPGA.Native_4\,
      I2 => \Using_FPGA.Native_2\,
      I3 => \Using_FPGA.Native_5\,
      O => ex_is_multi_or_load_instr0
    );
ex_mbar_decode_cmb_inferred_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000008000"
    )
        port map (
      I0 => \^ex_instr_reg[4]\,
      I1 => \Using_FPGA.Native_1\,
      I2 => \Using_FPGA.Native_4\,
      I3 => \Using_FPGA.Native_5\,
      I4 => \Using_FPGA.Native_2\,
      I5 => \Using_FPGA.Native_3\,
      O => p_1_in16_in
    );
force_Val2_N_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FBF5FFFFFFFFFFFF"
    )
        port map (
      I0 => \^ex_instr_reg[4]\,
      I1 => \Using_FPGA.Native_1\,
      I2 => \Using_FPGA.Native_2\,
      I3 => \Using_FPGA.Native_3\,
      I4 => \Using_FPGA.Native_4\,
      I5 => \Using_FPGA.Native_5\,
      O => force_Val2_N_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_155 is
  port (
    \ex_instr_reg[5]\ : out STD_LOGIC;
    \EX_ALU_Op_reg[0]\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    EX_ALU_Op1 : out STD_LOGIC;
    ex_enable_alu_i_reg : out STD_LOGIC;
    D122_out : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    I0149_out : out STD_LOGIC;
    ex_set_bip : out STD_LOGIC;
    p_9_in : out STD_LOGIC;
    ex_gpr_write_reg : out STD_LOGIC;
    ex_is_div_instr_I_reg : out STD_LOGIC;
    ex_gpr_write_dbg_reg : out STD_LOGIC;
    ex_load_shift_carry_reg : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_37 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_Take_Interrupt_hold_reg : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC_VECTOR ( 6 downto 0 );
    \Using_FPGA.Native_9\ : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_10\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    ex_set_bip0 : in STD_LOGIC;
    ex_gpr_write_reg_0 : in STD_LOGIC;
    \Using_FPGA.Native_11\ : in STD_LOGIC;
    ex_gpr_write27_out : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    EX_Is_Div_Instr : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    ex_gpr_write_dbg : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_155 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_155;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_155 is
  signal \^ex_alu_op1\ : STD_LOGIC;
  signal ex_gpr_write : STD_LOGIC;
  signal ex_gpr_write_i_4_n_0 : STD_LOGIC;
  signal \^ex_instr_reg[5]\ : STD_LOGIC;
  signal ex_is_div_instr_I0 : STD_LOGIC;
  signal p_18_in : STD_LOGIC;
  signal p_1_in21_in : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of EX_CMP_Op_i_3 : label is "soft_lutpair16";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM of ex_is_div_instr_I_i_2 : label is "soft_lutpair16";
begin
  EX_ALU_Op1 <= \^ex_alu_op1\;
  \ex_instr_reg[5]\ <= \^ex_instr_reg[5]\;
\EX_ALU_Op[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555555555555445"
    )
        port map (
      I0 => \^ex_alu_op1\,
      I1 => \Using_FPGA.Native_2\,
      I2 => \Using_FPGA.Native_4\,
      I3 => \Using_FPGA.Native_3\,
      I4 => \Using_FPGA.Native_1\,
      I5 => \Using_FPGA.Native_5\,
      O => \EX_ALU_Op_reg[0]\(1)
    );
\EX_ALU_Op[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAABAAABAAFFAA"
    )
        port map (
      I0 => \^ex_alu_op1\,
      I1 => \Using_FPGA.Native_1\,
      I2 => \Using_FPGA.Native_2\,
      I3 => \^ex_instr_reg[5]\,
      I4 => \Using_FPGA.Native_3\,
      I5 => \Using_FPGA.Native_4\,
      O => \EX_ALU_Op_reg[0]\(0)
    );
EX_CMP_Op_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => of_Take_Interrupt_hold_reg,
      I1 => p_18_in,
      I2 => \Using_FPGA.Native_8\(6),
      O => \^ex_alu_op1\
    );
EX_CMP_Op_i_3: unisim.vcomponents.LUT5
    generic map(
      INIT => X"10000000"
    )
        port map (
      I0 => \^ex_instr_reg[5]\,
      I1 => \Using_FPGA.Native_3\,
      I2 => \Using_FPGA.Native_1\,
      I3 => \Using_FPGA.Native_4\,
      I4 => \Using_FPGA.Native_5\,
      O => p_18_in
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_37,
      Q => \^ex_instr_reg[5]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__101\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[5]\,
      I2 => \Using_FPGA.Native_10\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I0149_out
    );
\Using_FPGA.Native_i_1__75\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0010000000000000"
    )
        port map (
      I0 => \^ex_instr_reg[5]\,
      I1 => \Using_FPGA.Native_6\,
      I2 => \Using_FPGA.Native_3\,
      I3 => \Using_FPGA.Native_9\,
      I4 => \Using_FPGA.Native_5\,
      I5 => \Using_FPGA.Native_7\(0),
      O => D122_out
    );
\Using_FPGA.Native_i_1__78\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^ex_instr_reg[5]\,
      I1 => \Using_FPGA.Native_5\,
      O => \Using_FPGA.Native_0\
    );
ex_enable_alu_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFEBFFFF"
    )
        port map (
      I0 => \^ex_alu_op1\,
      I1 => \Using_FPGA.Native_3\,
      I2 => \Using_FPGA.Native_4\,
      I3 => \Using_FPGA.Native_6\,
      I4 => \Using_FPGA.Native_7\(0),
      I5 => \Using_FPGA.Native_1\,
      O => ex_enable_alu_i_reg
    );
ex_gpr_write_dbg_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0202000302020000"
    )
        port map (
      I0 => ex_gpr_write,
      I1 => wb_exception_i_reg,
      I2 => \out\(0),
      I3 => ex_branch_with_delayslot_reg,
      I4 => \Using_FPGA.Native_11\,
      I5 => ex_gpr_write_dbg,
      O => ex_gpr_write_dbg_reg
    );
ex_gpr_write_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000000000E2"
    )
        port map (
      I0 => ex_gpr_write_reg_0,
      I1 => \Using_FPGA.Native_11\,
      I2 => ex_gpr_write,
      I3 => ex_gpr_write27_out,
      I4 => \out\(0),
      I5 => wb_exception_i_reg,
      O => ex_gpr_write_reg
    );
ex_gpr_write_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000E2E2E2E2E2"
    )
        port map (
      I0 => ex_gpr_write_i_4_n_0,
      I1 => p_18_in,
      I2 => \Using_FPGA.Native_8\(5),
      I3 => \Using_FPGA.Native_8\(0),
      I4 => \Using_FPGA.Native_8\(1),
      I5 => p_1_in21_in,
      O => ex_gpr_write
    );
ex_gpr_write_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFA5FF01FFA5FF03"
    )
        port map (
      I0 => \^ex_instr_reg[5]\,
      I1 => \Using_FPGA.Native_6\,
      I2 => \Using_FPGA.Native_3\,
      I3 => \Using_FPGA.Native_9\,
      I4 => \Using_FPGA.Native_5\,
      I5 => \Using_FPGA.Native_8\(4),
      O => ex_gpr_write_i_4_n_0
    );
ex_is_div_instr_I_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000CC0A"
    )
        port map (
      I0 => EX_Is_Div_Instr,
      I1 => ex_is_div_instr_I0,
      I2 => ex_branch_with_delayslot_reg,
      I3 => \Using_FPGA.Native_11\,
      I4 => \out\(0),
      O => ex_is_div_instr_I_reg
    );
ex_is_div_instr_I_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00001000"
    )
        port map (
      I0 => \^ex_instr_reg[5]\,
      I1 => \Using_FPGA.Native_1\,
      I2 => \Using_FPGA.Native_5\,
      I3 => \Using_FPGA.Native_3\,
      I4 => \Using_FPGA.Native_4\,
      O => ex_is_div_instr_I0
    );
ex_load_shift_carry_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"2A"
    )
        port map (
      I0 => p_1_in21_in,
      I1 => \Using_FPGA.Native_8\(3),
      I2 => \Using_FPGA.Native_8\(2),
      O => ex_load_shift_carry_reg
    );
ex_load_shift_carry_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000040"
    )
        port map (
      I0 => \^ex_instr_reg[5]\,
      I1 => \Using_FPGA.Native_4\,
      I2 => \Using_FPGA.Native_1\,
      I3 => \Using_FPGA.Native_3\,
      I4 => \Using_FPGA.Native_6\,
      I5 => \Using_FPGA.Native_5\,
      O => p_1_in21_in
    );
ex_set_bip_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1000000000000000"
    )
        port map (
      I0 => \^ex_instr_reg[5]\,
      I1 => \Using_FPGA.Native_3\,
      I2 => \Using_FPGA.Native_1\,
      I3 => ex_set_bip0,
      I4 => \Using_FPGA.Native_4\,
      I5 => \Using_FPGA.Native_5\,
      O => ex_set_bip
    );
of_read_imm_reg_ii_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000004000"
    )
        port map (
      I0 => \^ex_instr_reg[5]\,
      I1 => \Using_FPGA.Native_6\,
      I2 => \Using_FPGA.Native_4\,
      I3 => \Using_FPGA.Native_1\,
      I4 => \Using_FPGA.Native_3\,
      I5 => \Using_FPGA.Native_5\,
      O => p_9_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_157 is
  port (
    \ex_gpr_write_addr_reg[0]\ : out STD_LOGIC;
    ex_atomic_Instruction_Pair0 : out STD_LOGIC;
    ex_branch_with_delayslot_reg : out STD_LOGIC;
    \EX_Op3_reg[0]\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    \EX_Op3_reg[15]\ : out STD_LOGIC;
    \EX_Op3_reg[15]_0\ : out STD_LOGIC;
    ex_mbar_is_sleep_reg : out STD_LOGIC;
    I0145_out : out STD_LOGIC;
    ex_branch_with_delayslot_i_reg : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_36 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Doublet_Access_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    GPR_Op3 : in STD_LOGIC_VECTOR ( 15 downto 0 );
    WB_Doublet_Access_reg_0 : in STD_LOGIC;
    WB_Doublet_Access_reg_1 : in STD_LOGIC;
    WB_Doublet_Access_reg_2 : in STD_LOGIC;
    WB_Doublet_Access_reg_3 : in STD_LOGIC;
    WB_Doublet_Access_reg_4 : in STD_LOGIC;
    WB_Doublet_Access_reg_5 : in STD_LOGIC;
    WB_Doublet_Access_reg_6 : in STD_LOGIC;
    WB_Doublet_Access_reg_7 : in STD_LOGIC;
    WB_Doublet_Access_reg_8 : in STD_LOGIC;
    WB_Doublet_Access_reg_9 : in STD_LOGIC;
    WB_Doublet_Access_reg_10 : in STD_LOGIC;
    WB_Doublet_Access_reg_11 : in STD_LOGIC;
    WB_Doublet_Access_reg_12 : in STD_LOGIC;
    WB_Doublet_Access_reg_13 : in STD_LOGIC;
    WB_Doublet_Access_reg_14 : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \mem_gpr_write_addr_reg[4]\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    ex_mbar_is_sleep : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \wb_gpr_write_addr_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \wb_gpr_write_addr_reg[4]\ : in STD_LOGIC;
    \Using_FPGA.Native_10\ : in STD_LOGIC;
    ex_branch_with_delayslot_i : in STD_LOGIC;
    \wb_exception_kind_i_reg[27]\ : in STD_LOGIC;
    \Using_FPGA.Native_11\ : in STD_LOGIC;
    \Using_FPGA.Native_12\ : in STD_LOGIC;
    \Using_FPGA.Native_13\ : in STD_LOGIC;
    of_Take_Interrupt_hold_reg : in STD_LOGIC;
    ex_valid : in STD_LOGIC;
    ex_gpr_write_reg : in STD_LOGIC;
    \Using_FPGA.Native_14\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_157 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_157;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_157 is
  signal \^ex_op3_reg[15]\ : STD_LOGIC;
  signal \^ex_op3_reg[15]_0\ : STD_LOGIC;
  signal ex_branch_with_delayslot_i_2_n_0 : STD_LOGIC;
  signal \^ex_branch_with_delayslot_reg\ : STD_LOGIC;
  signal \^ex_gpr_write_addr_reg[0]\ : STD_LOGIC;
  signal of_read_mem_write_op3_conflict : STD_LOGIC;
  signal of_read_wb_write_op3_conflict : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \EX_Op3[0]_i_2\ : label is "soft_lutpair17";
  attribute SOFT_HLUTNM of \EX_Op3[0]_i_3\ : label is "soft_lutpair17";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \EX_Op3_reg[15]\ <= \^ex_op3_reg[15]\;
  \EX_Op3_reg[15]_0\ <= \^ex_op3_reg[15]_0\;
  ex_branch_with_delayslot_reg <= \^ex_branch_with_delayslot_reg\;
  \ex_gpr_write_addr_reg[0]\ <= \^ex_gpr_write_addr_reg[0]\;
\EX_Op3[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_14,
      I1 => EX_Fwd(15),
      I2 => \Using_FPGA.Native_1\(0),
      I3 => \^ex_op3_reg[15]\,
      I4 => GPR_Op3(15),
      I5 => \^ex_op3_reg[15]_0\,
      O => \EX_Op3_reg[0]\(15)
    );
\EX_Op3[0]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7F7F7F00"
    )
        port map (
      I0 => ex_valid,
      I1 => ex_gpr_write_reg,
      I2 => \Using_FPGA.Native_14\,
      I3 => of_read_mem_write_op3_conflict,
      I4 => of_read_wb_write_op3_conflict,
      O => \^ex_op3_reg[15]\
    );
\EX_Op3[0]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"80FF8080"
    )
        port map (
      I0 => ex_valid,
      I1 => ex_gpr_write_reg,
      I2 => \Using_FPGA.Native_14\,
      I3 => of_read_mem_write_op3_conflict,
      I4 => of_read_wb_write_op3_conflict,
      O => \^ex_op3_reg[15]_0\
    );
\EX_Op3[0]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9000009000000000"
    )
        port map (
      I0 => Q(1),
      I1 => \^ex_gpr_write_addr_reg[0]\,
      I2 => \mem_gpr_write_addr_reg[4]\,
      I3 => \Using_FPGA.Native_2\,
      I4 => Q(0),
      I5 => \Using_FPGA.Native_3\,
      O => of_read_mem_write_op3_conflict
    );
\EX_Op3[0]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9000009000000000"
    )
        port map (
      I0 => \wb_gpr_write_addr_reg[0]\(1),
      I1 => \^ex_gpr_write_addr_reg[0]\,
      I2 => \wb_gpr_write_addr_reg[4]\,
      I3 => \Using_FPGA.Native_2\,
      I4 => \wb_gpr_write_addr_reg[0]\(0),
      I5 => \Using_FPGA.Native_10\,
      O => of_read_wb_write_op3_conflict
    );
\EX_Op3[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_4,
      I1 => EX_Fwd(5),
      I2 => \Using_FPGA.Native_0\(5),
      I3 => \^ex_op3_reg[15]\,
      I4 => GPR_Op3(5),
      I5 => \^ex_op3_reg[15]_0\,
      O => \EX_Op3_reg[0]\(5)
    );
\EX_Op3[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_3,
      I1 => EX_Fwd(4),
      I2 => \Using_FPGA.Native_0\(4),
      I3 => \^ex_op3_reg[15]\,
      I4 => GPR_Op3(4),
      I5 => \^ex_op3_reg[15]_0\,
      O => \EX_Op3_reg[0]\(4)
    );
\EX_Op3[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_2,
      I1 => EX_Fwd(3),
      I2 => \Using_FPGA.Native_0\(3),
      I3 => \^ex_op3_reg[15]\,
      I4 => GPR_Op3(3),
      I5 => \^ex_op3_reg[15]_0\,
      O => \EX_Op3_reg[0]\(3)
    );
\EX_Op3[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_1,
      I1 => EX_Fwd(2),
      I2 => \Using_FPGA.Native_0\(2),
      I3 => \^ex_op3_reg[15]\,
      I4 => GPR_Op3(2),
      I5 => \^ex_op3_reg[15]_0\,
      O => \EX_Op3_reg[0]\(2)
    );
\EX_Op3[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_0,
      I1 => EX_Fwd(1),
      I2 => \Using_FPGA.Native_0\(1),
      I3 => \^ex_op3_reg[15]\,
      I4 => GPR_Op3(1),
      I5 => \^ex_op3_reg[15]_0\,
      O => \EX_Op3_reg[0]\(1)
    );
\EX_Op3[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native_0\(0),
      I3 => \^ex_op3_reg[15]\,
      I4 => GPR_Op3(0),
      I5 => \^ex_op3_reg[15]_0\,
      O => \EX_Op3_reg[0]\(0)
    );
\EX_Op3[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_13,
      I1 => EX_Fwd(14),
      I2 => \Using_FPGA.Native_0\(14),
      I3 => \^ex_op3_reg[15]\,
      I4 => GPR_Op3(14),
      I5 => \^ex_op3_reg[15]_0\,
      O => \EX_Op3_reg[0]\(14)
    );
\EX_Op3[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_12,
      I1 => EX_Fwd(13),
      I2 => \Using_FPGA.Native_0\(13),
      I3 => \^ex_op3_reg[15]\,
      I4 => GPR_Op3(13),
      I5 => \^ex_op3_reg[15]_0\,
      O => \EX_Op3_reg[0]\(13)
    );
\EX_Op3[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_11,
      I1 => EX_Fwd(12),
      I2 => \Using_FPGA.Native_0\(12),
      I3 => \^ex_op3_reg[15]\,
      I4 => GPR_Op3(12),
      I5 => \^ex_op3_reg[15]_0\,
      O => \EX_Op3_reg[0]\(12)
    );
\EX_Op3[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_10,
      I1 => EX_Fwd(11),
      I2 => \Using_FPGA.Native_0\(11),
      I3 => \^ex_op3_reg[15]\,
      I4 => GPR_Op3(11),
      I5 => \^ex_op3_reg[15]_0\,
      O => \EX_Op3_reg[0]\(11)
    );
\EX_Op3[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_9,
      I1 => EX_Fwd(10),
      I2 => \Using_FPGA.Native_0\(10),
      I3 => \^ex_op3_reg[15]\,
      I4 => GPR_Op3(10),
      I5 => \^ex_op3_reg[15]_0\,
      O => \EX_Op3_reg[0]\(10)
    );
\EX_Op3[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_8,
      I1 => EX_Fwd(9),
      I2 => \Using_FPGA.Native_0\(9),
      I3 => \^ex_op3_reg[15]\,
      I4 => GPR_Op3(9),
      I5 => \^ex_op3_reg[15]_0\,
      O => \EX_Op3_reg[0]\(9)
    );
\EX_Op3[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_7,
      I1 => EX_Fwd(8),
      I2 => \Using_FPGA.Native_0\(8),
      I3 => \^ex_op3_reg[15]\,
      I4 => GPR_Op3(8),
      I5 => \^ex_op3_reg[15]_0\,
      O => \EX_Op3_reg[0]\(8)
    );
\EX_Op3[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_6,
      I1 => EX_Fwd(7),
      I2 => \Using_FPGA.Native_0\(7),
      I3 => \^ex_op3_reg[15]\,
      I4 => GPR_Op3(7),
      I5 => \^ex_op3_reg[15]_0\,
      O => \EX_Op3_reg[0]\(7)
    );
\EX_Op3[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => WB_Doublet_Access_reg_5,
      I1 => EX_Fwd(6),
      I2 => \Using_FPGA.Native_0\(6),
      I3 => \^ex_op3_reg[15]\,
      I4 => GPR_Op3(6),
      I5 => \^ex_op3_reg[15]_0\,
      O => \EX_Op3_reg[0]\(6)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_36,
      Q => \^ex_gpr_write_addr_reg[0]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__100\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_gpr_write_addr_reg[0]\,
      I2 => \Using_FPGA.Native_5\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I0145_out
    );
ex_atomic_Instruction_Pair_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ex_branch_with_delayslot_reg\,
      I1 => E(0),
      O => ex_atomic_Instruction_Pair0
    );
ex_branch_with_delayslot_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000080"
    )
        port map (
      I0 => ex_branch_with_delayslot_i_2_n_0,
      I1 => \Using_FPGA.Native_11\,
      I2 => \Using_FPGA.Native_12\,
      I3 => \Using_FPGA.Native_13\,
      I4 => of_Take_Interrupt_hold_reg,
      O => \^ex_branch_with_delayslot_reg\
    );
ex_branch_with_delayslot_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AFC0A0C0"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \Using_FPGA.Native_6\,
      I2 => \Using_FPGA.Native_7\,
      I3 => \Using_FPGA.Native_8\,
      I4 => \Using_FPGA.Native_9\(0),
      O => ex_branch_with_delayslot_i_2_n_0
    );
ex_branch_with_delayslot_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000E2"
    )
        port map (
      I0 => ex_branch_with_delayslot_i,
      I1 => \Using_FPGA.Native_4\,
      I2 => \^ex_branch_with_delayslot_reg\,
      I3 => \out\(0),
      I4 => \wb_exception_kind_i_reg[27]\,
      O => ex_branch_with_delayslot_i_reg
    );
ex_mbar_is_sleep_cmb_inferred_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ex_gpr_write_addr_reg[0]\,
      I1 => \Using_FPGA.Native_4\,
      I2 => ex_mbar_is_sleep,
      O => ex_mbar_is_sleep_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_159 is
  port (
    \ex_gpr_write_addr_reg[1]\ : out STD_LOGIC;
    I0141_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_35 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_159 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_159;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_159 is
  signal \^ex_gpr_write_addr_reg[1]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \ex_gpr_write_addr_reg[1]\ <= \^ex_gpr_write_addr_reg[1]\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_35,
      Q => \^ex_gpr_write_addr_reg[1]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__99\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_gpr_write_addr_reg[1]\,
      I2 => \Using_FPGA.Native_0\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I0141_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_161 is
  port (
    \ex_gpr_write_addr_reg[2]\ : out STD_LOGIC;
    ex_gpr_write27_out : out STD_LOGIC;
    I0137_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_34 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_161 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_161;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_161 is
  signal \^ex_gpr_write_addr_reg[2]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \ex_gpr_write_addr_reg[2]\ <= \^ex_gpr_write_addr_reg[2]\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_34,
      Q => \^ex_gpr_write_addr_reg[2]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__98\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_gpr_write_addr_reg[2]\,
      I2 => \Using_FPGA.Native_1\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I0137_out
    );
ex_gpr_write_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000002"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \^ex_gpr_write_addr_reg[2]\,
      I2 => D(3),
      I3 => D(0),
      I4 => D(1),
      I5 => D(2),
      O => ex_gpr_write27_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_163 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I0133_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_33 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_163 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_163;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_163 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_33,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__97\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^d\(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I0133_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_165 is
  port (
    \imm_reg_reg[15]\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Clean_Stop_reg : out STD_LOGIC;
    use_Reg_Neg_S_reg : out STD_LOGIC;
    mem_jump_taken_reg : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_Valid_II : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    ex_delayslot_Instr2 : in STD_LOGIC;
    ex_jump_nodelay_reg : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[27]\ : in STD_LOGIC;
    ex_branch_with_delayslot : in STD_LOGIC;
    ex_jump_q : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_165 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_165;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_165 is
  signal \^e\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^imm_reg_reg[15]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  E(0) <= \^e\(0);
  \imm_reg_reg[15]\ <= \^imm_reg_reg[15]\;
Dbg_Clean_Stop_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"888F"
    )
        port map (
      I0 => ex_delayslot_Instr2,
      I1 => ex_jump_nodelay_reg,
      I2 => \^e\(0),
      I3 => \Using_FPGA.Native_5\,
      O => Dbg_Clean_Stop_reg
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_Valid_II,
      Q => \^imm_reg_reg[15]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__178\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^imm_reg_reg[15]\,
      I1 => \wb_exception_kind_i_reg[27]\,
      O => use_Reg_Neg_S_reg
    );
\Using_FPGA.Native_i_1__180\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"0D"
    )
        port map (
      I0 => ex_branch_with_delayslot,
      I1 => \^imm_reg_reg[15]\,
      I2 => ex_jump_q,
      O => mem_jump_taken_reg
    );
\imm_reg[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000020000"
    )
        port map (
      I0 => \^imm_reg_reg[15]\,
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      I3 => \Using_FPGA.Native_2\,
      I4 => \Using_FPGA.Native_3\,
      I5 => \Using_FPGA.Native_4\,
      O => \^e\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_195 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I0125_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_31 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_195 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_195;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_195 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_31,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I0125_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_197 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I085_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_21 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_197 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_197;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_197 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_21,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I085_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_199 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I081_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_20 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_199 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_199;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_199 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_20,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I081_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_201 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I077_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_19 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_201 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_201;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_201 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_19,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I077_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_203 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I073_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_18 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_203 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_203;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_203 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_18,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I073_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_205 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I069_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_17 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_205 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_205;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_205 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_17,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I069_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_207 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I065_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_16 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_207 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_207;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_207 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_16,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I065_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_209 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I061_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_15 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_209 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_209;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_209 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_15,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I061_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_211 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I057_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_14 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_211 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_211;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_211 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_14,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I057_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_213 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I053_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_13 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_213 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_213;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_213 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_13,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__18\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I053_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_215 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I049_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_12 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_215 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_215;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_215 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_12,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__19\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I049_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_217 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I0121_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_30 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_217 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_217;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_217 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_30,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I0121_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_219 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I045_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_11 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_219 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_219;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_219 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_11,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__20\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I045_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_221 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I041_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_10 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_221 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_221;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_221 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_10,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__21\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I041_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_223 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I037_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_9 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_223 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_223;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_223 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_9,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__22\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I037_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_225 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I033_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_8 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_225 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_225;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_225 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_8,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__23\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I033_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_227 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I029_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_7 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_227 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_227;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_227 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_7,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__24\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I029_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_229 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I025_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_6 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_229 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_229;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_229 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_6,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__25\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I025_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_231 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I021_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_5 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_231 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_231;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_231 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_5,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__26\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I021_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_233 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I017_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_4 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_233 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_233;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_233 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_4,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__27\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I017_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_235 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I013_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_3 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_235 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_235;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_235 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_3,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__28\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I013_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_237 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I09_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_2 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_237 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_237;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_237 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_2,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__29\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I09_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_239 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I0117_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_29 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_239 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_239;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_239 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_29,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I0117_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_241 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I05_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_1 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_241 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_241;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_241 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_1,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__30\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I05_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_243 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I0 : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_0 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_243 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_243;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_243 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_0,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__31\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_245 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I0113_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_28 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_245 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_245;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_245 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_28,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I0113_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_247 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I0109_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_27 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_247 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_247;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_247 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_27,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I0109_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_249 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I0105_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_26 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_249 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_249;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_249 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_26,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I0105_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_251 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I0101_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_25 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_251 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_251;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_251 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_25,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I0101_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_253 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I097_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_24 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_253 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_253;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_253 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_24,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I097_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_255 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I093_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_23 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_255 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_255;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_255 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_23,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I093_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_257 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    I089_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_pc_ii_22 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_257 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_257;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_257 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  D(0) <= \^d\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_pc_ii_22,
      Q => \^d\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BF80"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \^d\(0),
      O => I089_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_261 is
  port (
    \WB_MEM_Result_reg[28]\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_261 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_261;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_261 is
  signal \^wb_mem_result_reg[28]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \WB_MEM_Result_reg[28]\ <= \^wb_mem_result_reg[28]\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => \^wb_mem_result_reg[28]\,
      R => \out\(0)
    );
\WB_MEM_Result[28]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \^wb_mem_result_reg[28]\,
      I1 => \Using_FPGA.Native_1\(0),
      I2 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_262 is
  port (
    \WB_MEM_Result_reg[29]\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    mem_ex_result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_262 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_262;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_262 is
  signal \^wb_mem_result_reg[29]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \WB_MEM_Result[0]_i_2\ : label is "soft_lutpair2";
  attribute SOFT_HLUTNM of \WB_MEM_Result[29]_i_1\ : label is "soft_lutpair2";
begin
  \WB_MEM_Result_reg[29]\ <= \^wb_mem_result_reg[29]\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => \^wb_mem_result_reg[29]\,
      R => \out\(0)
    );
\WB_MEM_Result[0]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \^wb_mem_result_reg[29]\,
      I1 => \Using_FPGA.Native_1\(0),
      I2 => mem_sel_msr,
      O => D(1)
    );
\WB_MEM_Result[29]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \^wb_mem_result_reg[29]\,
      I1 => mem_ex_result(0),
      I2 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_263 is
  port (
    mem_MSR : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_Fast_Interrupt.wb_ie_rising_reg\ : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    mem_ex_result : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC;
    \wb_MSR_i_reg[30]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_263 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_263;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_263 is
  signal \^mem_msr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_Fast_Interrupt.wb_ie_rising_i_1\ : label is "soft_lutpair3";
  attribute SOFT_HLUTNM of \WB_MEM_Result[30]_i_1\ : label is "soft_lutpair3";
begin
  mem_MSR(0) <= \^mem_msr\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => \^mem_msr\(0),
      R => \out\(0)
    );
\Using_Fast_Interrupt.wb_ie_rising_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^mem_msr\(0),
      I1 => \wb_MSR_i_reg[30]\,
      O => \Using_Fast_Interrupt.wb_ie_rising_reg\
    );
\WB_MEM_Result[30]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \^mem_msr\(0),
      I1 => mem_ex_result(0),
      I2 => mem_sel_msr,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_264 is
  port (
    ex_MSR : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    restore_wb_msr_to_ex : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_264 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_264;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_264 is
  signal \^ex_msr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_MSR(0) <= \^ex_msr\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \^ex_msr\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__83\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F0B8"
    )
        port map (
      I0 => \^ex_msr\(0),
      I1 => mem_valid_reg,
      I2 => \Using_FPGA.Native_2\,
      I3 => restore_wb_msr_to_ex,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_265 is
  port (
    of_MSR : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_265 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_265;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_265 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => of_MSR(0),
      R => \out\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_266 is
  port (
    ex_MSR : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    restore_wb_msr_to_ex : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_266 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_266;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_266 is
  signal \^ex_msr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_MSR(0) <= \^ex_msr\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \^ex_msr\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__82\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F0B8"
    )
        port map (
      I0 => \^ex_msr\(0),
      I1 => mem_valid_reg,
      I2 => \Using_FPGA.Native_2\,
      I3 => restore_wb_msr_to_ex,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_267 is
  port (
    ex_MSR : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_set_MSR_IE_instr_reg : in STD_LOGIC;
    Clk : in STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    mem_MSR : in STD_LOGIC_VECTOR ( 0 to 0 );
    restore_wb_msr_to_ex : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_267 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_267;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_267 is
  signal \^ex_msr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_MSR(0) <= \^ex_msr\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_set_MSR_IE_instr_reg,
      Q => \^ex_msr\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__81\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00B8"
    )
        port map (
      I0 => \^ex_msr\(0),
      I1 => mem_valid_reg,
      I2 => mem_MSR(0),
      I3 => restore_wb_msr_to_ex,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_268 is
  port (
    of_MSR : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Interrupt_Brk_combo_reg : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_set_MSR_IE_instr_reg : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \control_reg_reg[3]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Disable : in STD_LOGIC;
    Interrupt : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_Take_Interrupt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_268 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_268;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_268 is
  signal \^of_msr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  of_MSR(0) <= \^of_msr\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_set_MSR_IE_instr_reg,
      Q => \^of_msr\(0),
      R => \out\(0)
    );
ex_Interrupt_Brk_combo_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000D000"
    )
        port map (
      I0 => \control_reg_reg[3]\(0),
      I1 => Dbg_Disable,
      I2 => \^of_msr\(0),
      I3 => Interrupt,
      I4 => \Using_FPGA.Native_0\(0),
      I5 => of_Take_Interrupt,
      O => ex_Interrupt_Brk_combo_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_72 is
  port (
    \status_reg_reg[25]\ : out STD_LOGIC;
    I_AS : out STD_LOGIC;
    IFetch : out STD_LOGIC_VECTOR ( 0 to 0 );
    if_fetch_for_timing_optimization1 : out STD_LOGIC;
    if_fetch_in_progress_reg : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    sel_input_iii_3 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    p_0_in44_in : in STD_LOGIC;
    IB_Ready : in STD_LOGIC;
    if_fetch_in_progress : in STD_LOGIC;
    ex_delayslot_Instr2 : in STD_LOGIC;
    if_sel_input : in STD_LOGIC_VECTOR ( 0 to 0 );
    in00 : in STD_LOGIC;
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_72 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_72;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_72 is
  signal \^i_as\ : STD_LOGIC;
  signal \^status_reg_reg[25]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  I_AS <= \^i_as\;
  \status_reg_reg[25]\ <= \^status_reg_reg[25]\;
IFetch_INST_0: unisim.vcomponents.LUT5
    generic map(
      INIT => X"EEEFAAAA"
    )
        port map (
      I0 => if_fetch_in_progress,
      I1 => ex_delayslot_Instr2,
      I2 => \^status_reg_reg[25]\,
      I3 => if_sel_input(0),
      I4 => in00,
      O => IFetch(0)
    );
I_AS_INST_0: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8A008A008A008A8A"
    )
        port map (
      I0 => p_0_in44_in,
      I1 => IB_Ready,
      I2 => if_fetch_in_progress,
      I3 => ex_delayslot_Instr2,
      I4 => \^status_reg_reg[25]\,
      I5 => if_sel_input(0),
      O => \^i_as\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sel_input_iii_3,
      Q => \^status_reg_reg[25]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__32\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^status_reg_reg[25]\,
      I1 => if_sel_input(0),
      O => if_fetch_for_timing_optimization1
    );
if_fetch_in_progress_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000F2"
    )
        port map (
      I0 => if_fetch_in_progress,
      I1 => IB_Ready,
      I2 => \^i_as\,
      I3 => \out\(0),
      I4 => LOCKSTEP_Master_Out(0),
      O => if_fetch_in_progress_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_73 is
  port (
    if_sel_input : out STD_LOGIC_VECTOR ( 0 to 0 );
    addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    sel_input_iii_2 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_73 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_73;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_73 is
  signal \^if_sel_input\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  if_sel_input(0) <= \^if_sel_input\(0);
\PC_Buffer_reg[3][0]_srl4_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^if_sel_input\(0),
      I1 => \Using_FPGA.Native_0\,
      O => addr(0)
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sel_input_iii_2,
      Q => \^if_sel_input\(0),
      R => \out\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_75 is
  port (
    if_sel_input : out STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    sel_input_iii_1 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_75 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_75;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_75 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sel_input_iii_1,
      Q => if_sel_input(0),
      R => \out\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_77 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    I13_out : out STD_LOGIC;
    I17_out : out STD_LOGIC;
    I111_out : out STD_LOGIC;
    I115_out : out STD_LOGIC;
    I119_out : out STD_LOGIC;
    I123_out : out STD_LOGIC;
    I127_out : out STD_LOGIC;
    I131_out : out STD_LOGIC;
    I135_out : out STD_LOGIC;
    I143_out : out STD_LOGIC;
    I147_out : out STD_LOGIC;
    I151_out : out STD_LOGIC;
    I155_out : out STD_LOGIC;
    I159_out : out STD_LOGIC;
    I163_out : out STD_LOGIC;
    I167_out : out STD_LOGIC;
    I171_out : out STD_LOGIC;
    I175_out : out STD_LOGIC;
    I179_out : out STD_LOGIC;
    I183_out : out STD_LOGIC;
    I187_out : out STD_LOGIC;
    I191_out : out STD_LOGIC;
    I195_out : out STD_LOGIC;
    I199_out : out STD_LOGIC;
    I1103_out : out STD_LOGIC;
    I1107_out : out STD_LOGIC;
    I1111_out : out STD_LOGIC;
    I1115_out : out STD_LOGIC;
    I1119_out : out STD_LOGIC;
    I1123_out : out STD_LOGIC;
    I1127_out : out STD_LOGIC;
    I1131_out : out STD_LOGIC;
    I1135_out : out STD_LOGIC;
    I1139_out : out STD_LOGIC;
    I1143_out : out STD_LOGIC;
    I1147_out : out STD_LOGIC;
    I1151_out : out STD_LOGIC;
    I1155_out : out STD_LOGIC;
    I1159_out : out STD_LOGIC;
    I1163_out : out STD_LOGIC;
    I1167_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    sel_input_i_1 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 41 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_77 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_77;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_77 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sel_input_i_1,
      Q => \^using_fpga.native_0\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_2__39\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(0),
      I1 => \Using_FPGA.Native_2\(0),
      I2 => \^using_fpga.native_0\,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_2__40\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(1),
      I1 => \Using_FPGA.Native_2\(1),
      I2 => \^using_fpga.native_0\,
      O => I13_out
    );
\Using_FPGA.Native_i_2__41\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(2),
      I1 => \Using_FPGA.Native_2\(2),
      I2 => \^using_fpga.native_0\,
      O => I17_out
    );
\Using_FPGA.Native_i_2__42\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(3),
      I1 => \Using_FPGA.Native_2\(3),
      I2 => \^using_fpga.native_0\,
      O => I111_out
    );
\Using_FPGA.Native_i_2__43\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(4),
      I1 => \Using_FPGA.Native_2\(4),
      I2 => \^using_fpga.native_0\,
      O => I115_out
    );
\Using_FPGA.Native_i_2__44\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(5),
      I1 => \Using_FPGA.Native_2\(5),
      I2 => \^using_fpga.native_0\,
      O => I119_out
    );
\Using_FPGA.Native_i_2__45\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(6),
      I1 => \Using_FPGA.Native_2\(6),
      I2 => \^using_fpga.native_0\,
      O => I123_out
    );
\Using_FPGA.Native_i_2__46\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(7),
      I1 => \Using_FPGA.Native_2\(7),
      I2 => \^using_fpga.native_0\,
      O => I127_out
    );
\Using_FPGA.Native_i_2__47\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(8),
      I1 => \Using_FPGA.Native_2\(8),
      I2 => \^using_fpga.native_0\,
      O => I131_out
    );
\Using_FPGA.Native_i_2__48\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(9),
      I1 => \Using_FPGA.Native_2\(9),
      I2 => \^using_fpga.native_0\,
      O => I135_out
    );
\Using_FPGA.Native_i_2__50\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(10),
      I1 => \Using_FPGA.Native_2\(10),
      I2 => \^using_fpga.native_0\,
      O => I143_out
    );
\Using_FPGA.Native_i_2__51\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(11),
      I1 => \Using_FPGA.Native_2\(11),
      I2 => \^using_fpga.native_0\,
      O => I147_out
    );
\Using_FPGA.Native_i_2__52\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(12),
      I1 => \Using_FPGA.Native_2\(12),
      I2 => \^using_fpga.native_0\,
      O => I151_out
    );
\Using_FPGA.Native_i_2__53\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(13),
      I1 => \Using_FPGA.Native_2\(13),
      I2 => \^using_fpga.native_0\,
      O => I155_out
    );
\Using_FPGA.Native_i_2__54\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(14),
      I1 => \Using_FPGA.Native_2\(14),
      I2 => \^using_fpga.native_0\,
      O => I159_out
    );
\Using_FPGA.Native_i_2__55\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(15),
      I1 => \Using_FPGA.Native_2\(15),
      I2 => \^using_fpga.native_0\,
      O => I163_out
    );
\Using_FPGA.Native_i_2__56\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(16),
      I1 => \Using_FPGA.Native_2\(16),
      I2 => \^using_fpga.native_0\,
      O => I167_out
    );
\Using_FPGA.Native_i_2__57\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(17),
      I1 => \Using_FPGA.Native_2\(17),
      I2 => \^using_fpga.native_0\,
      O => I171_out
    );
\Using_FPGA.Native_i_2__58\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(18),
      I1 => \Using_FPGA.Native_2\(18),
      I2 => \^using_fpga.native_0\,
      O => I175_out
    );
\Using_FPGA.Native_i_2__59\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(19),
      I1 => \Using_FPGA.Native_2\(19),
      I2 => \^using_fpga.native_0\,
      O => I179_out
    );
\Using_FPGA.Native_i_2__60\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(20),
      I1 => \Using_FPGA.Native_2\(20),
      I2 => \^using_fpga.native_0\,
      O => I183_out
    );
\Using_FPGA.Native_i_2__61\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(0),
      I1 => \Using_FPGA.Native_2\(21),
      I2 => \^using_fpga.native_0\,
      O => I187_out
    );
\Using_FPGA.Native_i_2__62\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(1),
      I1 => \Using_FPGA.Native_2\(22),
      I2 => \^using_fpga.native_0\,
      O => I191_out
    );
\Using_FPGA.Native_i_2__63\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(2),
      I1 => \Using_FPGA.Native_2\(23),
      I2 => \^using_fpga.native_0\,
      O => I195_out
    );
\Using_FPGA.Native_i_2__64\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(3),
      I1 => \Using_FPGA.Native_2\(24),
      I2 => \^using_fpga.native_0\,
      O => I199_out
    );
\Using_FPGA.Native_i_2__65\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(4),
      I1 => \Using_FPGA.Native_2\(25),
      I2 => \^using_fpga.native_0\,
      O => I1103_out
    );
\Using_FPGA.Native_i_2__66\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(5),
      I1 => \Using_FPGA.Native_2\(26),
      I2 => \^using_fpga.native_0\,
      O => I1107_out
    );
\Using_FPGA.Native_i_2__67\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(6),
      I1 => \Using_FPGA.Native_2\(27),
      I2 => \^using_fpga.native_0\,
      O => I1111_out
    );
\Using_FPGA.Native_i_2__68\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(7),
      I1 => \Using_FPGA.Native_2\(28),
      I2 => \^using_fpga.native_0\,
      O => I1115_out
    );
\Using_FPGA.Native_i_2__69\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(8),
      I1 => \Using_FPGA.Native_2\(29),
      I2 => \^using_fpga.native_0\,
      O => I1119_out
    );
\Using_FPGA.Native_i_2__70\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(9),
      I1 => \Using_FPGA.Native_2\(30),
      I2 => \^using_fpga.native_0\,
      O => I1123_out
    );
\Using_FPGA.Native_i_2__71\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(21),
      I1 => \Using_FPGA.Native_2\(31),
      I2 => \^using_fpga.native_0\,
      O => I1127_out
    );
\Using_FPGA.Native_i_2__72\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(22),
      I1 => \Using_FPGA.Native_2\(32),
      I2 => \^using_fpga.native_0\,
      O => I1131_out
    );
\Using_FPGA.Native_i_2__73\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(23),
      I1 => \Using_FPGA.Native_2\(33),
      I2 => \^using_fpga.native_0\,
      O => I1135_out
    );
\Using_FPGA.Native_i_2__74\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(24),
      I1 => \Using_FPGA.Native_2\(34),
      I2 => \^using_fpga.native_0\,
      O => I1139_out
    );
\Using_FPGA.Native_i_2__75\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(25),
      I1 => \Using_FPGA.Native_2\(35),
      I2 => \^using_fpga.native_0\,
      O => I1143_out
    );
\Using_FPGA.Native_i_2__76\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(26),
      I1 => \Using_FPGA.Native_2\(36),
      I2 => \^using_fpga.native_0\,
      O => I1147_out
    );
\Using_FPGA.Native_i_2__77\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(27),
      I1 => \Using_FPGA.Native_2\(37),
      I2 => \^using_fpga.native_0\,
      O => I1151_out
    );
\Using_FPGA.Native_i_2__78\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(28),
      I1 => \Using_FPGA.Native_2\(38),
      I2 => \^using_fpga.native_0\,
      O => I1155_out
    );
\Using_FPGA.Native_i_2__79\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(29),
      I1 => \Using_FPGA.Native_2\(39),
      I2 => \^using_fpga.native_0\,
      O => I1159_out
    );
\Using_FPGA.Native_i_2__80\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(30),
      I1 => \Using_FPGA.Native_2\(40),
      I2 => \^using_fpga.native_0\,
      O => I1163_out
    );
\Using_FPGA.Native_i_2__81\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \in\(31),
      I1 => \Using_FPGA.Native_2\(41),
      I2 => \^using_fpga.native_0\,
      O => I1167_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_79 is
  port (
    \ex_instr_reg[0]\ : out STD_LOGIC;
    I0169_out : out STD_LOGIC;
    \imm_reg_reg[15]\ : out STD_LOGIC;
    EX_CMP_Op_reg : out STD_LOGIC;
    EX_Unsigned_Op_reg : out STD_LOGIC;
    EX_Use_Carry_reg : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_42 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    EX_ALU_Op1 : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    ex_delayslot_Instr2 : in STD_LOGIC;
    ex_jump_nodelay_reg : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_79 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_79;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_79 is
  signal \^ex_instr_reg[0]\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of EX_Use_Carry_i_1 : label is "soft_lutpair6";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__174\ : label is "soft_lutpair7";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__181\ : label is "soft_lutpair6";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__82\ : label is "soft_lutpair7";
begin
  \ex_instr_reg[0]\ <= \^ex_instr_reg[0]\;
EX_CMP_Op_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000010"
    )
        port map (
      I0 => \^ex_instr_reg[0]\,
      I1 => \Using_FPGA.Native_4\,
      I2 => \Using_FPGA.Native_5\,
      I3 => \Using_FPGA.Native_6\,
      I4 => EX_ALU_Op1,
      O => EX_CMP_Op_reg
    );
EX_Unsigned_Op_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000010"
    )
        port map (
      I0 => \^ex_instr_reg[0]\,
      I1 => \Using_FPGA.Native_4\,
      I2 => \Using_FPGA.Native_7\,
      I3 => \Using_FPGA.Native_6\,
      I4 => EX_ALU_Op1,
      O => EX_Unsigned_Op_reg
    );
EX_Use_Carry_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0010"
    )
        port map (
      I0 => \^ex_instr_reg[0]\,
      I1 => \Using_FPGA.Native_4\,
      I2 => \Using_FPGA.Native_8\,
      I3 => EX_ALU_Op1,
      O => EX_Use_Carry_reg
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_42,
      Q => \^ex_instr_reg[0]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__106\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[0]\,
      I2 => \Using_FPGA.Native_2\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I0169_out
    );
\Using_FPGA.Native_i_1__174\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0888"
    )
        port map (
      I0 => \^ex_instr_reg[0]\,
      I1 => \Using_FPGA.Native_4\,
      I2 => ex_delayslot_Instr2,
      I3 => ex_jump_nodelay_reg,
      O => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_1__181\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => \^ex_instr_reg[0]\,
      I1 => \Using_FPGA.Native_4\,
      I2 => \Using_FPGA.Native_3\,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_2__82\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \^ex_instr_reg[0]\,
      I1 => \Using_FPGA.Native_3\,
      O => \imm_reg_reg[15]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_81 is
  port (
    \ex_gpr_write_addr_reg[4]\ : out STD_LOGIC;
    I0129_out : out STD_LOGIC;
    \EX_Op3_reg[15]\ : out STD_LOGIC;
    \EX_Op3_reg[15]_0\ : out STD_LOGIC;
    \EX_Op3_reg[15]_1\ : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_32 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \wb_gpr_write_addr_reg[2]\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \ex_gpr_write_addr_reg[2]\ : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_81 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_81;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_81 is
  signal \^ex_gpr_write_addr_reg[4]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \ex_gpr_write_addr_reg[4]\ <= \^ex_gpr_write_addr_reg[4]\;
\EX_Op3[0]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \wb_gpr_write_addr_reg[2]\(0),
      I1 => \^ex_gpr_write_addr_reg[4]\,
      I2 => \Using_FPGA.Native_1\,
      I3 => \wb_gpr_write_addr_reg[2]\(2),
      I4 => \Using_FPGA.Native_2\,
      I5 => \wb_gpr_write_addr_reg[2]\(1),
      O => \EX_Op3_reg[15]_0\
    );
\EX_Op3[0]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \ex_gpr_write_addr_reg[2]\(0),
      I1 => \^ex_gpr_write_addr_reg[4]\,
      I2 => \Using_FPGA.Native_1\,
      I3 => \ex_gpr_write_addr_reg[2]\(2),
      I4 => \Using_FPGA.Native_2\,
      I5 => \ex_gpr_write_addr_reg[2]\(1),
      O => \EX_Op3_reg[15]_1\
    );
\EX_Op3[0]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => Q(0),
      I1 => \^ex_gpr_write_addr_reg[4]\,
      I2 => \Using_FPGA.Native_1\,
      I3 => Q(2),
      I4 => \Using_FPGA.Native_2\,
      I5 => Q(1),
      O => \EX_Op3_reg[15]\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_32,
      Q => \^ex_gpr_write_addr_reg[4]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__96\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_gpr_write_addr_reg[4]\,
      I2 => \Using_FPGA.Native_0\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I0129_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_83 is
  port (
    \ex_instr_reg[11]\ : out STD_LOGIC;
    I0125_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_31 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_83 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_83;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_83 is
  signal \^ex_instr_reg[11]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \ex_instr_reg[11]\ <= \^ex_instr_reg[11]\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_31,
      Q => \^ex_instr_reg[11]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__126\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[11]\,
      I2 => \Using_FPGA.Native_0\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I0125_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_85 is
  port (
    \ex_instr_reg[12]\ : out STD_LOGIC;
    I0121_out : out STD_LOGIC;
    ex_set_bip0 : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_30 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_85 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_85;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_85 is
  signal \^ex_instr_reg[12]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \ex_instr_reg[12]\ <= \^ex_instr_reg[12]\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_30,
      Q => \^ex_instr_reg[12]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__124\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[12]\,
      I2 => \Using_FPGA.Native_0\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I0121_out
    );
ex_set_bip_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => \^ex_instr_reg[12]\,
      I1 => \Using_FPGA.Native_1\,
      I2 => \Using_FPGA.Native_2\(0),
      O => ex_set_bip0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_87 is
  port (
    \ex_instr_reg[13]\ : out STD_LOGIC;
    I0117_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_29 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_87 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_87;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_87 is
  signal \^ex_instr_reg[13]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \ex_instr_reg[13]\ <= \^ex_instr_reg[13]\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_29,
      Q => \^ex_instr_reg[13]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__122\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[13]\,
      I2 => \Using_FPGA.Native_0\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I0117_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_89 is
  port (
    \ex_instr_reg[14]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_mbar_decode_reg : out STD_LOGIC;
    I0113_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_28 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    p_1_in16_in : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    ex_mbar_decode : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_89 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_89;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_89 is
  signal \^ex_instr_reg[14]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \ex_instr_reg[14]\(0) <= \^ex_instr_reg[14]\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_28,
      Q => \^ex_instr_reg[14]\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__120\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[14]\(0),
      I2 => \Using_FPGA.Native_1\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I0113_out
    );
ex_mbar_decode_cmb_inferred_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"80808F80"
    )
        port map (
      I0 => \^ex_instr_reg[14]\(0),
      I1 => p_1_in16_in,
      I2 => \Using_FPGA.Native_0\,
      I3 => ex_mbar_decode,
      I4 => ex_branch_with_delayslot_reg,
      O => ex_mbar_decode_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_91 is
  port (
    \ex_instr_reg[15]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    I0109_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_27 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_91 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_91;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_91 is
  signal \^ex_instr_reg[15]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \ex_instr_reg[15]\(0) <= \^ex_instr_reg[15]\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_27,
      Q => \^ex_instr_reg[15]\(0),
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__118\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[15]\(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I0109_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_93 is
  port (
    \ex_instr_reg[16]\ : out STD_LOGIC;
    \EX_Op2_reg[0]\ : out STD_LOGIC;
    \EX_Op2_reg[15]\ : out STD_LOGIC;
    \EX_Op2_reg[14]\ : out STD_LOGIC;
    \EX_Op2_reg[13]\ : out STD_LOGIC;
    \EX_Op2_reg[12]\ : out STD_LOGIC;
    \EX_Op2_reg[11]\ : out STD_LOGIC;
    \EX_Op2_reg[10]\ : out STD_LOGIC;
    \EX_Op2_reg[9]\ : out STD_LOGIC;
    \EX_Op2_reg[8]\ : out STD_LOGIC;
    \EX_Op2_reg[7]\ : out STD_LOGIC;
    \EX_Op2_reg[6]\ : out STD_LOGIC;
    \EX_Op2_reg[5]\ : out STD_LOGIC;
    \EX_Op2_reg[4]\ : out STD_LOGIC;
    \EX_Op2_reg[3]\ : out STD_LOGIC;
    \EX_Op2_reg[2]\ : out STD_LOGIC;
    \EX_Op2_reg[1]\ : out STD_LOGIC;
    I0105_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_26 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \imm_reg_reg[0]\ : in STD_LOGIC_VECTOR ( 15 downto 0 );
    of_read_imm_reg_ii_reg : in STD_LOGIC;
    GPR_Op2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op2_sel_imm : in STD_LOGIC;
    of_read_imm_reg_ii : in STD_LOGIC;
    \wb_exception_kind_i_reg[27]\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_93 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_93;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_93 is
  signal \^ex_instr_reg[16]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \ex_instr_reg[16]\ <= \^ex_instr_reg[16]\;
\EX_Op2[0]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8B8FF00"
    )
        port map (
      I0 => \imm_reg_reg[0]\(15),
      I1 => of_read_imm_reg_ii_reg,
      I2 => \^ex_instr_reg[16]\,
      I3 => GPR_Op2(0),
      I4 => of_op2_sel_imm,
      O => \EX_Op2_reg[0]\
    );
\EX_Op2[10]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBFFFB88880008"
    )
        port map (
      I0 => \imm_reg_reg[0]\(5),
      I1 => of_read_imm_reg_ii,
      I2 => \wb_exception_kind_i_reg[27]\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I4 => Dbg_Disable,
      I5 => \^ex_instr_reg[16]\,
      O => \EX_Op2_reg[10]\
    );
\EX_Op2[11]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBFFFB88880008"
    )
        port map (
      I0 => \imm_reg_reg[0]\(4),
      I1 => of_read_imm_reg_ii,
      I2 => \wb_exception_kind_i_reg[27]\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I4 => Dbg_Disable,
      I5 => \^ex_instr_reg[16]\,
      O => \EX_Op2_reg[11]\
    );
\EX_Op2[12]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBFFFB88880008"
    )
        port map (
      I0 => \imm_reg_reg[0]\(3),
      I1 => of_read_imm_reg_ii,
      I2 => \wb_exception_kind_i_reg[27]\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I4 => Dbg_Disable,
      I5 => \^ex_instr_reg[16]\,
      O => \EX_Op2_reg[12]\
    );
\EX_Op2[13]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBFFFB88880008"
    )
        port map (
      I0 => \imm_reg_reg[0]\(2),
      I1 => of_read_imm_reg_ii,
      I2 => \wb_exception_kind_i_reg[27]\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I4 => Dbg_Disable,
      I5 => \^ex_instr_reg[16]\,
      O => \EX_Op2_reg[13]\
    );
\EX_Op2[14]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBFFFB88880008"
    )
        port map (
      I0 => \imm_reg_reg[0]\(1),
      I1 => of_read_imm_reg_ii,
      I2 => \wb_exception_kind_i_reg[27]\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I4 => Dbg_Disable,
      I5 => \^ex_instr_reg[16]\,
      O => \EX_Op2_reg[14]\
    );
\EX_Op2[15]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBFFFB88880008"
    )
        port map (
      I0 => \imm_reg_reg[0]\(0),
      I1 => of_read_imm_reg_ii,
      I2 => \wb_exception_kind_i_reg[27]\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I4 => Dbg_Disable,
      I5 => \^ex_instr_reg[16]\,
      O => \EX_Op2_reg[15]\
    );
\EX_Op2[1]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBFFFB88880008"
    )
        port map (
      I0 => \imm_reg_reg[0]\(14),
      I1 => of_read_imm_reg_ii,
      I2 => \wb_exception_kind_i_reg[27]\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I4 => Dbg_Disable,
      I5 => \^ex_instr_reg[16]\,
      O => \EX_Op2_reg[1]\
    );
\EX_Op2[2]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBFFFB88880008"
    )
        port map (
      I0 => \imm_reg_reg[0]\(13),
      I1 => of_read_imm_reg_ii,
      I2 => \wb_exception_kind_i_reg[27]\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I4 => Dbg_Disable,
      I5 => \^ex_instr_reg[16]\,
      O => \EX_Op2_reg[2]\
    );
\EX_Op2[3]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBFFFB88880008"
    )
        port map (
      I0 => \imm_reg_reg[0]\(12),
      I1 => of_read_imm_reg_ii,
      I2 => \wb_exception_kind_i_reg[27]\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I4 => Dbg_Disable,
      I5 => \^ex_instr_reg[16]\,
      O => \EX_Op2_reg[3]\
    );
\EX_Op2[4]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBFFFB88880008"
    )
        port map (
      I0 => \imm_reg_reg[0]\(11),
      I1 => of_read_imm_reg_ii,
      I2 => \wb_exception_kind_i_reg[27]\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I4 => Dbg_Disable,
      I5 => \^ex_instr_reg[16]\,
      O => \EX_Op2_reg[4]\
    );
\EX_Op2[5]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBFFFB88880008"
    )
        port map (
      I0 => \imm_reg_reg[0]\(10),
      I1 => of_read_imm_reg_ii,
      I2 => \wb_exception_kind_i_reg[27]\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I4 => Dbg_Disable,
      I5 => \^ex_instr_reg[16]\,
      O => \EX_Op2_reg[5]\
    );
\EX_Op2[6]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBFFFB88880008"
    )
        port map (
      I0 => \imm_reg_reg[0]\(9),
      I1 => of_read_imm_reg_ii,
      I2 => \wb_exception_kind_i_reg[27]\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I4 => Dbg_Disable,
      I5 => \^ex_instr_reg[16]\,
      O => \EX_Op2_reg[6]\
    );
\EX_Op2[7]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBFFFB88880008"
    )
        port map (
      I0 => \imm_reg_reg[0]\(8),
      I1 => of_read_imm_reg_ii,
      I2 => \wb_exception_kind_i_reg[27]\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I4 => Dbg_Disable,
      I5 => \^ex_instr_reg[16]\,
      O => \EX_Op2_reg[7]\
    );
\EX_Op2[8]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBFFFB88880008"
    )
        port map (
      I0 => \imm_reg_reg[0]\(7),
      I1 => of_read_imm_reg_ii,
      I2 => \wb_exception_kind_i_reg[27]\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I4 => Dbg_Disable,
      I5 => \^ex_instr_reg[16]\,
      O => \EX_Op2_reg[8]\
    );
\EX_Op2[9]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBFFFB88880008"
    )
        port map (
      I0 => \imm_reg_reg[0]\(6),
      I1 => of_read_imm_reg_ii,
      I2 => \wb_exception_kind_i_reg[27]\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I4 => Dbg_Disable,
      I5 => \^ex_instr_reg[16]\,
      O => \EX_Op2_reg[9]\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_26,
      Q => \^ex_instr_reg[16]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__116\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[16]\,
      I2 => \Using_FPGA.Native_0\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg_0\,
      O => I0105_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_95 is
  port (
    \ex_instr_reg[17]\ : out STD_LOGIC;
    of_op1_sel_spr : out STD_LOGIC;
    I0101_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_25 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_95 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_95;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_95 is
  signal \^ex_instr_reg[17]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \ex_instr_reg[17]\ <= \^ex_instr_reg[17]\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_25,
      Q => \^ex_instr_reg[17]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__114\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[17]\,
      I2 => \Using_FPGA.Native_5\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I0101_out
    );
\Using_FPGA.Native_i_1__39\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000FF00000004"
    )
        port map (
      I0 => \^ex_instr_reg[17]\,
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      I3 => \Using_FPGA.Native_2\,
      I4 => \Using_FPGA.Native_3\,
      I5 => \Using_FPGA.Native_4\,
      O => of_op1_sel_spr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_97 is
  port (
    \ex_instr_reg[18]\ : out STD_LOGIC;
    I097_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_24 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_97 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_97;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_97 is
  signal \^ex_instr_reg[18]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \ex_instr_reg[18]\ <= \^ex_instr_reg[18]\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_24,
      Q => \^ex_instr_reg[18]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__112\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[18]\,
      I2 => \Using_FPGA.Native_0\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I097_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDR_99 is
  port (
    \ex_instr_reg[19]\ : out STD_LOGIC;
    I093_out : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_instr_ii_23 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDR_99 : entity is "MB_FDR";
end system_microblaze_0_0_MB_FDR_99;

architecture STRUCTURE of system_microblaze_0_0_MB_FDR_99 is
  signal \^ex_instr_reg[19]\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \ex_instr_reg[19]\ <= \^ex_instr_reg[19]\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => of_instr_ii_23,
      Q => \^ex_instr_reg[19]\,
      R => \out\(0)
    );
\Using_FPGA.Native_i_1__110\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ACCC"
    )
        port map (
      I0 => \in\(0),
      I1 => \^ex_instr_reg[19]\,
      I2 => \Using_FPGA.Native_0\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I093_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_FDS is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    sel_input_i_0 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_FDS : entity is "MB_FDS";
end system_microblaze_0_0_MB_FDS;

architecture STRUCTURE of system_microblaze_0_0_MB_FDS is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDS";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sel_input_i_0,
      Q => \Using_FPGA.Native_0\,
      S => \out\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT4 is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CMP_Op_reg : in STD_LOGIC;
    alu_AddSub_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT4 : entity is "MB_LUT4";
end system_microblaze_0_0_MB_LUT4;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT4 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FA0A"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(0),
      I2 => EX_CMP_Op_reg,
      I3 => alu_AddSub_1,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6 is
  port (
    sel_input_iii_3 : out STD_LOGIC;
    if_sel_input : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[27]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6 : entity is "MB_LUT6";
end system_microblaze_0_0_MB_LUT6;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000CCF0AACC"
    )
        port map (
      I0 => if_sel_input(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => '0',
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I4 => \Using_FPGA.Native_1\,
      I5 => \wb_exception_kind_i_reg[27]\,
      O => sel_input_iii_3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[9]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[9]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_451 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[8]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_451 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_451;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_451 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[8]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_453 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[7]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_453 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_453;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_453 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[7]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_455 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[6]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_455 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_455;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_455 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[6]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_457 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[5]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_457 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_457;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_457 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[5]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_459 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[4]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_459 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_459;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_459 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[4]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_461 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[3]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_461 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_461;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_461 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[3]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_463 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[31]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_463 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_463;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_463 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[31]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_465 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[30]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_465 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_465;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_465 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[30]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_467 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[2]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_467 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_467;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_467 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[2]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_469 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[29]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_469 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_469;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_469 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[29]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_471 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_471 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_471;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_471 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[28]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_473 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[27]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_473 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_473;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_473 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[27]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_475 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[26]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_475 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_475;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_475 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[26]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_477 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[25]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_477 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_477;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_477 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[25]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_479 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[24]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_479 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_479;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_479 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[24]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_481 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[23]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_481 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_481;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_481 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[23]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_483 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[22]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_483 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_483;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_483 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[22]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_485 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[21]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_485 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_485;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_485 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[21]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_487 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[20]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_487 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_487;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_487 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[20]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_489 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_489 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_489;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_489 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[1]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_491 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[19]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_491 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_491;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_491 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[19]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_493 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[18]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_493 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_493;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_493 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[18]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_495 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[17]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_495 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_495;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_495 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[17]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_497 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[16]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_497 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_497;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_497 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[16]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_499 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[15]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_499 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_499;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_499 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[15]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_501 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[14]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_501 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_501;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_501 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[14]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_503 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[13]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_503 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_503;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_503 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[13]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_505 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[12]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_505 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_505;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_505 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[12]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_507 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[11]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_507 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_507;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_507 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[11]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_2_509 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[10]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_2_509 : entity is "MB_LUT6_2";
end system_microblaze_0_0_MB_LUT6_2_509;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_2_509 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[10]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized1\ is
  port (
    muxcy_di : out STD_LOGIC;
    muxcy_sel : out STD_LOGIC;
    mem_daxi_exclusive_failed : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized1\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized1\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized1\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"00FF00FFFEFEFEFE"
    )
        port map (
      I0 => mem_daxi_exclusive_failed,
      I1 => '0',
      I2 => '0',
      I3 => '0',
      I4 => '0',
      I5 => '1',
      O5 => muxcy_di,
      O6 => muxcy_sel
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized11\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized11\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized11\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized11\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized13\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized13\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized13\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized13\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized15\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized15\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized15\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized15\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized17\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized17\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized17\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized17\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized19\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized19\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized19\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized19\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized21\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized21\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized21\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized21\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized23\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized23\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized23\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized23\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized25\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized25\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized25\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized25\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized27\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized27\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized27\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized27\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized29\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized29\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized29\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized29\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized3\ is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    Y : out STD_LOGIC_VECTOR ( 0 to 0 );
    I041_out : out STD_LOGIC;
    I139_out : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \New_Instr_Reg_TCK_reg[3]\ : in STD_LOGIC;
    \New_Instr_Reg_TCK_reg[1]\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized3\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized3\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized3\ is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => \^using_fpga.native_0\,
      O6 => Y(0)
    );
\Using_FPGA.Native_i_1__84\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8080FF00FF00FF00"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \New_Instr_Reg_TCK_reg[3]\,
      I2 => \New_Instr_Reg_TCK_reg[1]\,
      I3 => \Using_FPGA.Native_1\(0),
      I4 => \Using_FPGA.Native_2\(0),
      I5 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => I041_out
    );
\Using_FPGA.Native_i_2__49\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080FF00"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \New_Instr_Reg_TCK_reg[3]\,
      I2 => \New_Instr_Reg_TCK_reg[1]\,
      I3 => \Using_FPGA.Native_3\(0),
      I4 => \Using_FPGA.Native_2\(1),
      O => I139_out
    );
\ibuffer_reg[3][10]_srl4_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \New_Instr_Reg_TCK_reg[3]\,
      I2 => \New_Instr_Reg_TCK_reg[1]\,
      O => \in\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized31\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized31\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized31\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized31\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized33\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized33\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized33\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized33\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized35\ is
  port (
    wb_PC_II_0 : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[31]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized35\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized35\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized35\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[31]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_0,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized37\ is
  port (
    wb_PC_II_1 : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[30]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized37\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized37\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized37\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[30]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_1,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized39\ is
  port (
    wb_PC_II_2 : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[29]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized39\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized39\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized39\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => \wb_exception_kind_i_reg[28]\,
      I2 => \wb_exception_kind_i_reg[28]_0\(0),
      I3 => \mem_pc_i_reg[29]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_2,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized41\ is
  port (
    wb_PC_II_3 : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized41\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized41\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized41\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[28]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_3,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized43\ is
  port (
    wb_PC_II_4 : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[27]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized43\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized43\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized43\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[27]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_4,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized45\ is
  port (
    wb_PC_II_5 : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[26]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized45\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized45\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized45\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[26]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_5,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized47\ is
  port (
    wb_PC_II_6 : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[25]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized47\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized47\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized47\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[25]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_6,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized49\ is
  port (
    wb_PC_II_7 : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[24]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized49\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized49\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized49\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[24]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_7,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized5\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized5\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized5\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized5\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized51\ is
  port (
    wb_PC_II_8 : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[23]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized51\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized51\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized51\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[23]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_8,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized53\ is
  port (
    wb_PC_II_9 : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[22]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized53\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized53\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized53\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[22]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_9,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized55\ is
  port (
    wb_PC_II_10 : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[21]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized55\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized55\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized55\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[21]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_10,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized57\ is
  port (
    wb_PC_II_11 : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[20]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized57\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized57\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized57\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[20]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_11,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized59\ is
  port (
    wb_PC_II_12 : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[19]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized59\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized59\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized59\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[19]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_12,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized61\ is
  port (
    wb_PC_II_13 : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[18]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized61\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized61\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized61\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[18]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_13,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized63\ is
  port (
    wb_PC_II_14 : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[17]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized63\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized63\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized63\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[17]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_14,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized65\ is
  port (
    wb_PC_II_15 : out STD_LOGIC;
    S : out STD_LOGIC;
    DI : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[16]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized65\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized65\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized65\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => DI,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[16]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_15,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized67\ is
  port (
    wb_PC_II_16 : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[15]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized67\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized67\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized67\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[15]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_16,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized69\ is
  port (
    wb_PC_II_17 : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[14]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized69\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized69\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized69\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[14]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_17,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized7\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized7\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized7\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized7\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized71\ is
  port (
    wb_PC_II_18 : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[13]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized71\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized71\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized71\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[13]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_18,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized73\ is
  port (
    wb_PC_II_19 : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[12]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized73\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized73\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized73\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[12]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_19,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized75\ is
  port (
    wb_PC_II_20 : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[11]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized75\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized75\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized75\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[11]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_20,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized77\ is
  port (
    wb_PC_II_21 : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[10]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized77\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized77\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized77\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[10]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_21,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized79\ is
  port (
    wb_PC_II_22 : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[9]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized79\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized79\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized79\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[9]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_22,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized81\ is
  port (
    wb_PC_II_23 : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[8]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized81\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized81\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized81\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[8]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_23,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized83\ is
  port (
    wb_PC_II_24 : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[7]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized83\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized83\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized83\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[7]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_24,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized85\ is
  port (
    wb_PC_II_25 : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[6]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized85\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized85\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized85\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[6]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_25,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized87\ is
  port (
    wb_PC_II_26 : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[5]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized87\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized87\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized87\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[5]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_26,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized89\ is
  port (
    wb_PC_II_27 : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[4]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized89\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized89\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized89\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[4]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_27,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized9\ is
  port (
    Y : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized9\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized9\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized9\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"FF00F0F0CCCCAAAA"
    )
        port map (
      I0 => Instr(1),
      I1 => LOCKSTEP_Master_Out(1),
      I2 => Instr(0),
      I3 => LOCKSTEP_Master_Out(0),
      I4 => LOCKSTEP_Master_Out(2),
      I5 => '1',
      O5 => Y(1),
      O6 => Y(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized91\ is
  port (
    wb_PC_II_28 : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[3]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized91\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized91\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized91\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[3]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_28,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized93\ is
  port (
    wb_PC_II_29 : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[2]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized93\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized93\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized93\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[2]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_29,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized95\ is
  port (
    wb_PC_II_30 : out STD_LOGIC;
    S : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized95\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized95\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized95\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[1]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_30,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6_2__parameterized97\ is
  port (
    wb_PC_II_31 : out STD_LOGIC;
    addr_AddSub_31 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6_2__parameterized97\ : entity is "MB_LUT6_2";
end \system_microblaze_0_0_MB_LUT6_2__parameterized97\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6_2__parameterized97\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"96969696FF00AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\(0),
      I1 => '0',
      I2 => \wb_exception_kind_i_reg[28]\(0),
      I3 => \mem_pc_i_reg[0]\(0),
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I5 => '1',
      O5 => wb_PC_II_31,
      O6 => addr_AddSub_31
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_74 is
  port (
    sel_input_iii_2 : out STD_LOGIC;
    if_sel_input : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[27]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_74 : entity is "MB_LUT6";
end system_microblaze_0_0_MB_LUT6_74;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_74 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000CCF0AACC"
    )
        port map (
      I0 => if_sel_input(0),
      I1 => if_sel_input(1),
      I2 => \Using_FPGA.Native_0\,
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I4 => \Using_FPGA.Native_1\,
      I5 => \wb_exception_kind_i_reg[27]\,
      O => sel_input_iii_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_76 is
  port (
    sel_input_iii_1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    if_sel_input : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[27]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_76 : entity is "MB_LUT6";
end system_microblaze_0_0_MB_LUT6_76;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_76 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000CCF0AACC"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => if_sel_input(0),
      I2 => if_sel_input(1),
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I4 => \Using_FPGA.Native_1\,
      I5 => \wb_exception_kind_i_reg[27]\,
      O => sel_input_iii_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_LUT6_78 is
  port (
    sel_input_iii_0 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    if_sel_input : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[27]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_LUT6_78 : entity is "MB_LUT6";
end system_microblaze_0_0_MB_LUT6_78;

architecture STRUCTURE of system_microblaze_0_0_MB_LUT6_78 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000CCF0AACC"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => if_sel_input(0),
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I4 => \Using_FPGA.Native_2\,
      I5 => \wb_exception_kind_i_reg[27]\,
      O => sel_input_iii_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6__parameterized10\ is
  port (
    of_pipe_ctrl : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    of_predecode : in STD_LOGIC_VECTOR ( 2 downto 0 );
    of_read_ex_write_op1_conflict_part2 : in STD_LOGIC;
    ex_is_multi_or_load_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6__parameterized10\ : entity is "MB_LUT6";
end \system_microblaze_0_0_MB_LUT6__parameterized10\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6__parameterized10\ is
  signal O : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => Q(2),
      I1 => of_predecode(2),
      I2 => Q(1),
      I3 => of_predecode(1),
      I4 => Q(0),
      I5 => of_predecode(0),
      O => O
    );
\Using_FPGA.Native_i_1__131\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"7F"
    )
        port map (
      I0 => O,
      I1 => of_read_ex_write_op1_conflict_part2,
      I2 => ex_is_multi_or_load_instr,
      O => of_pipe_ctrl(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6__parameterized12\ is
  port (
    of_read_ex_write_op1_conflict_part2 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_predecode : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_gpr_write_reg : in STD_LOGIC;
    ex_valid : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6__parameterized12\ : entity is "MB_LUT6";
end \system_microblaze_0_0_MB_LUT6__parameterized12\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6__parameterized12\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000000000"
    )
        port map (
      I0 => Q(1),
      I1 => of_predecode(1),
      I2 => Q(0),
      I3 => of_predecode(0),
      I4 => ex_gpr_write_reg,
      I5 => ex_valid,
      O => of_read_ex_write_op1_conflict_part2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6__parameterized14\ is
  port (
    of_read_mem_write_op1_conflict_part1 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    of_predecode : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6__parameterized14\ : entity is "MB_LUT6";
end \system_microblaze_0_0_MB_LUT6__parameterized14\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6__parameterized14\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => Q(2),
      I1 => of_predecode(2),
      I2 => Q(1),
      I3 => of_predecode(1),
      I4 => Q(0),
      I5 => of_predecode(0),
      O => of_read_mem_write_op1_conflict_part1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6__parameterized16\ is
  port (
    of_pipe_ctrl : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_predecode : in STD_LOGIC_VECTOR ( 1 downto 0 );
    mem_gpr_write : in STD_LOGIC;
    mem_valid_instr : in STD_LOGIC;
    mem_is_multi_or_load_instr : in STD_LOGIC;
    of_read_mem_write_op1_conflict_part1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6__parameterized16\ : entity is "MB_LUT6";
end \system_microblaze_0_0_MB_LUT6__parameterized16\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6__parameterized16\ is
  signal of_read_mem_write_op1_conflict_part2 : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000000000"
    )
        port map (
      I0 => Q(1),
      I1 => of_predecode(1),
      I2 => Q(0),
      I3 => of_predecode(0),
      I4 => mem_gpr_write,
      I5 => mem_valid_instr,
      O => of_read_mem_write_op1_conflict_part2
    );
\Using_FPGA.Native_i_1__130\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"7F"
    )
        port map (
      I0 => mem_is_multi_or_load_instr,
      I1 => of_read_mem_write_op1_conflict_part2,
      I2 => of_read_mem_write_op1_conflict_part1,
      O => of_pipe_ctrl(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6__parameterized18\ is
  port (
    of_read_ex_write_op2_conflict_part1 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    of_predecode : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6__parameterized18\ : entity is "MB_LUT6";
end \system_microblaze_0_0_MB_LUT6__parameterized18\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6__parameterized18\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => Q(2),
      I1 => of_predecode(2),
      I2 => Q(1),
      I3 => of_predecode(1),
      I4 => Q(0),
      I5 => of_predecode(0),
      O => of_read_ex_write_op2_conflict_part1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6__parameterized20\ is
  port (
    of_read_ex_write_op2_conflict_part2 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_predecode : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_gpr_write_reg : in STD_LOGIC;
    ex_valid : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6__parameterized20\ : entity is "MB_LUT6";
end \system_microblaze_0_0_MB_LUT6__parameterized20\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6__parameterized20\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000000000"
    )
        port map (
      I0 => Q(1),
      I1 => of_predecode(1),
      I2 => Q(0),
      I3 => of_predecode(0),
      I4 => ex_gpr_write_reg,
      I5 => ex_valid,
      O => of_read_ex_write_op2_conflict_part2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6__parameterized22\ is
  port (
    of_read_mem_write_op2_conflict_part1 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    of_predecode : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6__parameterized22\ : entity is "MB_LUT6";
end \system_microblaze_0_0_MB_LUT6__parameterized22\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6__parameterized22\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => Q(2),
      I1 => of_predecode(2),
      I2 => Q(1),
      I3 => of_predecode(1),
      I4 => Q(0),
      I5 => of_predecode(0),
      O => of_read_mem_write_op2_conflict_part1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6__parameterized24\ is
  port (
    of_read_mem_write_op2_conflict_part2 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_predecode : in STD_LOGIC_VECTOR ( 1 downto 0 );
    mem_gpr_write : in STD_LOGIC;
    mem_valid_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6__parameterized24\ : entity is "MB_LUT6";
end \system_microblaze_0_0_MB_LUT6__parameterized24\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6__parameterized24\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000000000"
    )
        port map (
      I0 => Q(1),
      I1 => of_predecode(1),
      I2 => Q(0),
      I3 => of_predecode(0),
      I4 => mem_gpr_write,
      I5 => mem_valid_instr,
      O => of_read_mem_write_op2_conflict_part2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6__parameterized26\ is
  port (
    of_read_ex_write_op3_conflict_part1 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    D : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6__parameterized26\ : entity is "MB_LUT6";
end \system_microblaze_0_0_MB_LUT6__parameterized26\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6__parameterized26\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => Q(2),
      I1 => D(2),
      I2 => Q(1),
      I3 => D(1),
      I4 => Q(0),
      I5 => D(0),
      O => of_read_ex_write_op3_conflict_part1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6__parameterized28\ is
  port (
    of_read_ex_write_op3_conflict_part2 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    D : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_gpr_write_reg : in STD_LOGIC;
    ex_valid : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6__parameterized28\ : entity is "MB_LUT6";
end \system_microblaze_0_0_MB_LUT6__parameterized28\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6__parameterized28\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000000000"
    )
        port map (
      I0 => Q(1),
      I1 => D(1),
      I2 => Q(0),
      I3 => D(0),
      I4 => ex_gpr_write_reg,
      I5 => ex_valid,
      O => of_read_ex_write_op3_conflict_part2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6__parameterized30\ is
  port (
    of_pipe_ctrl : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    D : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_is_multi_or_load_instr : in STD_LOGIC;
    of_read_mem_write_op3_conflict_part2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6__parameterized30\ : entity is "MB_LUT6";
end \system_microblaze_0_0_MB_LUT6__parameterized30\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6__parameterized30\ is
  signal of_read_mem_write_op3_conflict_part1 : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => Q(2),
      I1 => D(2),
      I2 => Q(1),
      I3 => D(1),
      I4 => Q(0),
      I5 => D(0),
      O => of_read_mem_write_op3_conflict_part1
    );
\Using_FPGA.Native_i_1__128\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7FFF"
    )
        port map (
      I0 => of_read_mem_write_op3_conflict_part1,
      I1 => \Using_FPGA.Native_0\(0),
      I2 => mem_is_multi_or_load_instr,
      I3 => of_read_mem_write_op3_conflict_part2,
      O => of_pipe_ctrl(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6__parameterized32\ is
  port (
    of_read_mem_write_op3_conflict_part2 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    D : in STD_LOGIC_VECTOR ( 1 downto 0 );
    mem_gpr_write : in STD_LOGIC;
    mem_valid_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6__parameterized32\ : entity is "MB_LUT6";
end \system_microblaze_0_0_MB_LUT6__parameterized32\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6__parameterized32\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000000000"
    )
        port map (
      I0 => Q(1),
      I1 => D(1),
      I2 => Q(0),
      I3 => D(0),
      I4 => mem_gpr_write,
      I5 => mem_valid_instr,
      O => of_read_mem_write_op3_conflict_part2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6__parameterized34\ is
  port (
    alu_AddSub_1 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6__parameterized34\ : entity is "MB_LUT6";
end \system_microblaze_0_0_MB_LUT6__parameterized34\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6__parameterized34\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(1),
      I2 => \EX_Op1_reg[0]\(0),
      I3 => \EX_ALU_Op_reg[0]\(0),
      I4 => EX_ALU_Sel_Logic,
      I5 => EX_Enable_ALU,
      O => alu_AddSub_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6__parameterized4\ is
  port (
    sel_input_delayslot : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    if_sel_input : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[27]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6__parameterized4\ : entity is "MB_LUT6";
end \system_microblaze_0_0_MB_LUT6__parameterized4\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6__parameterized4\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000FFFFCCF0AACC"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => if_sel_input(0),
      I3 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I4 => \Using_FPGA.Native_2\,
      I5 => \wb_exception_kind_i_reg[27]\,
      O => sel_input_delayslot
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6__parameterized6\ is
  port (
    sel_input_i_0 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    I4 : in STD_LOGIC;
    \wb_exception_kind_i_reg[27]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6__parameterized6\ : entity is "MB_LUT6";
end \system_microblaze_0_0_MB_LUT6__parameterized6\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6__parameterized6\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FFFFAE0AAE0A"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \Using_FPGA.Native_2\,
      I4 => I4,
      I5 => \wb_exception_kind_i_reg[27]\,
      O => sel_input_i_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_LUT6__parameterized8\ is
  port (
    of_Valid_II : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    I4 : in STD_LOGIC;
    \wb_exception_kind_i_reg[27]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_LUT6__parameterized8\ : entity is "MB_LUT6";
end \system_microblaze_0_0_MB_LUT6__parameterized8\;

architecture STRUCTURE of \system_microblaze_0_0_MB_LUT6__parameterized8\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF000051F551F5"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => \Using_FPGA.Native_2\,
      I4 => I4,
      I5 => \wb_exception_kind_i_reg[27]\,
      O => of_Valid_II
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MULT_AND is
  port (
    DI : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MULT_AND : entity is "MB_MULT_AND";
end system_microblaze_0_0_MB_MULT_AND;

architecture STRUCTURE of system_microblaze_0_0_MB_MULT_AND is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "MULT_AND";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => Q(0),
      I1 => \EX_ALU_Op_reg[0]\(0),
      O => DI
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY is
  port (
    mem_databus_ready : out STD_LOGIC;
    mem_access_completed_reg : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
begin
  lopt <= \<const0>\;
  lopt_1 <= \<const1>\;
  mem_databus_ready <= 'Z';
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_10 is
  port (
    carry_6 : out STD_LOGIC;
    SRL16_Sel_6 : in STD_LOGIC;
    carry_7 : in STD_LOGIC;
    lopt : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_10 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_10;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_10 is
  signal \<const0>\ : STD_LOGIC;
begin
  lopt <= \<const0>\;
  carry_6 <= 'Z';
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_12 is
  port (
    carry_5 : out STD_LOGIC;
    SRL16_Sel_5 : in STD_LOGIC;
    carry_6 : in STD_LOGIC;
    lopt : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_12 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_12;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_12 is
  signal \<const0>\ : STD_LOGIC;
begin
  lopt <= \<const0>\;
  carry_5 <= 'Z';
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_14 is
  port (
    carry_4 : out STD_LOGIC;
    SRL16_Sel_4 : in STD_LOGIC;
    carry_5 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_14 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_14;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_14 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_4\ : STD_LOGIC;
begin
  \^carry_4\ <= lopt;
  carry_4 <= \^carry_4\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_16 is
  port (
    carry_3 : out STD_LOGIC;
    SRL16_Sel_3 : in STD_LOGIC;
    carry_4 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : out STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_16 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_16;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_16 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_1\ <= lopt;
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_4\ <= lopt_3;
  \^lopt_6\ <= lopt_5;
  lopt_4 <= \^lopt_5\;
  lopt_7 <= lopt_6;
  carry_3 <= 'Z';
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => carry_4,
      CO(3) => \^lopt_5\,
      CO(2 downto 0) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(2 downto 0),
      CYINIT => '0',
      DI(3) => \^lopt_6\,
      DI(2) => \^lopt_3\,
      DI(1) => \^lopt_1\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_7,
      S(2) => \^lopt_4\,
      S(1) => \^lopt_2\,
      S(0) => SRL16_Sel_3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_18 is
  port (
    carry_2 : out STD_LOGIC;
    SRL16_Sel_2 : in STD_LOGIC;
    carry_3 : in STD_LOGIC;
    lopt : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_18 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_18;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_18 is
  signal \<const0>\ : STD_LOGIC;
begin
  lopt <= \<const0>\;
  carry_2 <= 'Z';
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_20 is
  port (
    carry_1 : out STD_LOGIC;
    SRL16_Sel_1 : in STD_LOGIC;
    carry_2 : in STD_LOGIC;
    lopt : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_20 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_20;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_20 is
  signal \<const0>\ : STD_LOGIC;
begin
  lopt <= \<const0>\;
  carry_1 <= 'Z';
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_22 is
  port (
    carry_0 : out STD_LOGIC;
    SRL16_Sel_0 : in STD_LOGIC;
    carry_1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_22 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_22;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_22 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_0\ : STD_LOGIC;
begin
  \^carry_0\ <= lopt;
  carry_0 <= \^carry_0\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_24 is
  port (
    Hit : out STD_LOGIC;
    p_36_out : out STD_LOGIC;
    \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg\ : out STD_LOGIC;
    carry_0 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_i_reg\ : in STD_LOGIC;
    \control_reg_reg[8]\ : in STD_LOGIC;
    force_stop_i : in STD_LOGIC;
    \Performace_Debug_Control.watchpoint_brk_hold_reg\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : in STD_LOGIC;
    dbg_clean_stop : in STD_LOGIC;
    normal_stop_i : in STD_LOGIC;
    single_Step_N : in STD_LOGIC;
    \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\ : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    ex_Exception_Taken : in STD_LOGIC;
    mem_Exception_Taken : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_24 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_24;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_24 is
  signal \^hit\ : STD_LOGIC;
  signal \Performace_Debug_Control.ex_dbg_pc_hit_single_step_i_3_n_0\ : STD_LOGIC;
  signal \^p_36_out\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  Hit <= \^hit\;
  p_36_out <= \^p_36_out\;
\Performace_Debug_Control.ex_dbg_pc_hit_single_step_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"55555555CCCC0CCC"
    )
        port map (
      I0 => single_Step_N,
      I1 => \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\,
      I2 => ex_branch_with_delayslot_reg,
      I3 => ex_Exception_Taken,
      I4 => mem_Exception_Taken,
      I5 => \^p_36_out\,
      O => \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg\
    );
\Performace_Debug_Control.ex_dbg_pc_hit_single_step_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAA8AAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Performace_Debug_Control.dbg_stop_i_reg\,
      I2 => \control_reg_reg[8]\,
      I3 => force_stop_i,
      I4 => \Performace_Debug_Control.ex_dbg_pc_hit_single_step_i_3_n_0\,
      O => \^p_36_out\
    );
\Performace_Debug_Control.ex_dbg_pc_hit_single_step_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00F1F1F100000000"
    )
        port map (
      I0 => \Performace_Debug_Control.watchpoint_brk_hold_reg\,
      I1 => \^hit\,
      I2 => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      I3 => dbg_clean_stop,
      I4 => normal_stop_i,
      I5 => single_Step_N,
      O => \Performace_Debug_Control.ex_dbg_pc_hit_single_step_i_3_n_0\
    );
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => carry_0,
      CO(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 1),
      CO(0) => \^hit\,
      CYINIT => '0',
      DI(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 1),
      DI(0) => '1',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => '1'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_259 is
  port (
    ex_pre_alu_carry : out STD_LOGIC;
    muxcy_sel : in STD_LOGIC;
    muxcy_di : in STD_LOGIC;
    ex_MSR : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_259 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_259;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_259 is
begin
  ex_pre_alu_carry <= 'Z';
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_260 is
  port (
    ex_alu_carryin : out STD_LOGIC;
    ex_pre_alu_carry : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_260 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_260;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_260 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
begin
  lopt <= \<const0>\;
  lopt_1 <= \<const1>\;
  ex_alu_carryin <= 'Z';
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_269 is
  port (
    CI : out STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_269 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_269;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_269 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => CI,
      CYINIT => '1',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \wb_exception_kind_i_reg[28]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_333 is
  port (
    zero_CI_0 : out STD_LOGIC;
    ex_op1_cmp_equal : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_333 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_333;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_333 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_1\ <= lopt;
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  lopt_3 <= \^lopt_4\;
  lopt_5 <= lopt_4;
  zero_CI_0 <= 'Z';
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_4\,
      CO(2 downto 0) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(2 downto 0),
      CYINIT => '1',
      DI(3) => \^lopt_1\,
      DI(2) => \^lopt_1\,
      DI(1) => \^lopt_1\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_5,
      S(2) => \^lopt_3\,
      S(1) => \^lopt_2\,
      S(0) => ex_op1_cmp_equal
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_334 is
  port (
    zero_CI_1 : out STD_LOGIC;
    \Zero_Detecting[0].nibble_Zero_reg\ : in STD_LOGIC;
    ex_op1_cmp_equal_n : in STD_LOGIC;
    zero_CI_0 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_334 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_334;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_334 is
begin
  zero_CI_1 <= 'Z';
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_335 is
  port (
    zero_CI_2 : out STD_LOGIC;
    \Zero_Detecting[1].nibble_Zero_reg\ : in STD_LOGIC;
    ex_op1_cmp_equal_n : in STD_LOGIC;
    zero_CI_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_335 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_335;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_335 is
begin
  zero_CI_2 <= 'Z';
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_336 is
  port (
    zero_CI_3 : out STD_LOGIC;
    \Zero_Detecting[2].nibble_Zero_reg\ : in STD_LOGIC;
    ex_op1_cmp_equal_n : in STD_LOGIC;
    zero_CI_2 : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_336 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_336;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_336 is
  signal \^zero_ci_3\ : STD_LOGIC;
begin
  \^zero_ci_3\ <= lopt;
  zero_CI_3 <= \^zero_ci_3\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_337 is
  port (
    zero_CI_4 : out STD_LOGIC;
    \Zero_Detecting[3].nibble_Zero_reg\ : in STD_LOGIC;
    ex_op1_cmp_equal_n : in STD_LOGIC;
    zero_CI_3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_337 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_337;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_337 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_1\ <= lopt;
  \^lopt_2\ <= lopt_1;
  \^lopt_4\ <= lopt_3;
  lopt_2 <= \^lopt_3\;
  lopt_5 <= lopt_4;
  zero_CI_4 <= 'Z';
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => zero_CI_3,
      CO(3) => \^lopt_3\,
      CO(2 downto 0) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(2 downto 0),
      CYINIT => '0',
      DI(3) => \^lopt_4\,
      DI(2) => ex_op1_cmp_equal_n,
      DI(1) => ex_op1_cmp_equal_n,
      DI(0) => ex_op1_cmp_equal_n,
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_5,
      S(2) => \^lopt_2\,
      S(1) => \^lopt_1\,
      S(0) => \Zero_Detecting[3].nibble_Zero_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_338 is
  port (
    zero_CI_5 : out STD_LOGIC;
    \Zero_Detecting[4].nibble_Zero_reg\ : in STD_LOGIC;
    ex_op1_cmp_equal_n : in STD_LOGIC;
    zero_CI_4 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_338 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_338;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_338 is
begin
  zero_CI_5 <= 'Z';
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_339 is
  port (
    ex_op1_zero : out STD_LOGIC;
    \Zero_Detecting[5].nibble_Zero_reg\ : in STD_LOGIC;
    ex_op1_cmp_equal_n : in STD_LOGIC;
    zero_CI_5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_339 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_339;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_339 is
begin
  ex_op1_zero <= 'Z';
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_449 is
  port (
    alu_carry_0 : out STD_LOGIC;
    ex_use_carry : in STD_LOGIC;
    DI_0 : in STD_LOGIC;
    ex_alu_carryin : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_449 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_449;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_449 is
  signal \^alu_carry_0\ : STD_LOGIC;
begin
  \^alu_carry_0\ <= lopt;
  alu_carry_0 <= \^alu_carry_0\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_51 is
  port (
    mem_wait_on_ready_N : out STD_LOGIC;
    mem_databus_ready : in STD_LOGIC;
    mem_valid_instr : in STD_LOGIC;
    mem_load_store_access : in STD_LOGIC;
    mem_Write_DCache : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_51 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_51;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_51 is
  signal \<const1>\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__179_n_0\ : STD_LOGIC;
begin
  lopt <= \<const1>\;
  lopt_1 <= \Using_FPGA.Native_i_1__179_n_0\;
  mem_wait_on_ready_N <= 'Z';
\Using_FPGA.Native_i_1__179\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A8"
    )
        port map (
      I0 => mem_valid_instr,
      I1 => mem_load_store_access,
      I2 => mem_Write_DCache,
      O => \Using_FPGA.Native_i_1__179_n_0\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_512 is
  port (
    invert_result : out STD_LOGIC;
    EX_CMP_Op_reg : in STD_LOGIC;
    ex_unsigned_op : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_512 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_512;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_512 is
  signal \^invert_result\ : STD_LOGIC;
begin
  \^invert_result\ <= lopt;
  invert_result <= \^invert_result\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_52 is
  port (
    Trace_WB_Jump_Hit_reg : out STD_LOGIC;
    wb_gpr_write_dbg0 : out STD_LOGIC;
    wb_gpr_write_i0 : out STD_LOGIC;
    mem_valid_reg : out STD_LOGIC;
    wb_valid_reg : out STD_LOGIC;
    mem_wait_on_ready_N : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_exception_i_reg : in STD_LOGIC;
    mem_gpr_write_dbg : in STD_LOGIC;
    mem_gpr_write : in STD_LOGIC;
    mem_valid_instr : in STD_LOGIC;
    mem_exception_from_ex : in STD_LOGIC;
    ex_valid_reg : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    flush_pipe : in STD_LOGIC;
    wb_valid_reg_0 : in STD_LOGIC;
    wb_piperun : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_52 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_52;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_52 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^trace_wb_jump_hit_reg\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of wb_gpr_write_dbg_i_1 : label is "soft_lutpair30";
  attribute SOFT_HLUTNM of wb_gpr_write_i_i_1 : label is "soft_lutpair30";
begin
  Trace_WB_Jump_Hit_reg <= \^trace_wb_jump_hit_reg\;
  \^trace_wb_jump_hit_reg\ <= lopt;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
mem_valid_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000707000AA"
    )
        port map (
      I0 => mem_valid_instr,
      I1 => mem_exception_from_ex,
      I2 => ex_valid_reg,
      I3 => \^trace_wb_jump_hit_reg\,
      I4 => ex_branch_with_delayslot_reg,
      I5 => flush_pipe,
      O => mem_valid_reg
    );
wb_gpr_write_dbg_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1000"
    )
        port map (
      I0 => \out\(0),
      I1 => wb_exception_i_reg,
      I2 => \^trace_wb_jump_hit_reg\,
      I3 => mem_gpr_write_dbg,
      O => wb_gpr_write_dbg0
    );
wb_gpr_write_i_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1000"
    )
        port map (
      I0 => \out\(0),
      I1 => wb_exception_i_reg,
      I2 => \^trace_wb_jump_hit_reg\,
      I3 => mem_gpr_write,
      O => wb_gpr_write_i0
    );
wb_valid_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000CC0A"
    )
        port map (
      I0 => wb_valid_reg_0,
      I1 => mem_valid_instr,
      I2 => wb_piperun,
      I3 => \^trace_wb_jump_hit_reg\,
      I4 => \out\(0),
      O => wb_valid_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_53 is
  port (
    jump_carry1 : out STD_LOGIC;
    ex_op1_zero : in STD_LOGIC;
    force_Val1_reg : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    use_Reg_Neg_DI_reg : in STD_LOGIC;
    force1_reg : in STD_LOGIC;
    use_Reg_Neg_S_reg : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_53 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_53;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_53 is
  signal DI : STD_LOGIC;
  signal S : STD_LOGIC;
  signal \^jump_carry1\ : STD_LOGIC;
begin
  \^jump_carry1\ <= lopt;
  jump_carry1 <= \^jump_carry1\;
  lopt_1 <= DI;
  lopt_2 <= S;
\Using_FPGA.Native_i_1__172\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => force1_reg,
      I1 => \EX_Branch_CMP_Op1_reg[0]\(0),
      I2 => use_Reg_Neg_S_reg,
      O => S
    );
\Using_FPGA.Native_i_2__117\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => force_Val1_reg,
      I1 => \EX_Branch_CMP_Op1_reg[0]\(0),
      I2 => use_Reg_Neg_DI_reg,
      O => DI
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_54 is
  port (
    jump_carry2 : out STD_LOGIC;
    jump_carry1 : in STD_LOGIC;
    ex_Take_Intr_or_Exc : in STD_LOGIC;
    force_Val2_N : in STD_LOGIC;
    EX_Valid : in STD_LOGIC;
    force2 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_54 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_54;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_54 is
  signal \Using_FPGA.Native_i_2__31_n_0\ : STD_LOGIC;
  signal force_jump2 : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_4\ <= lopt_3;
  \^lopt_5\ <= lopt_4;
  \^lopt_7\ <= lopt_6;
  lopt <= \^lopt_1\;
  lopt_5 <= \^lopt_6\;
  lopt_8 <= lopt_7;
  jump_carry2 <= 'Z';
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => jump_carry1,
      CO(3) => \^lopt_6\,
      CO(2) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(2),
      CO(1) => \^lopt_1\,
      CO(0) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(0),
      CYINIT => '0',
      DI(3) => \^lopt_7\,
      DI(2) => \^lopt_4\,
      DI(1) => \^lopt_2\,
      DI(0) => \Using_FPGA.Native_i_2__31_n_0\,
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_8,
      S(2) => \^lopt_5\,
      S(1) => \^lopt_3\,
      S(0) => force_jump2
    );
\Using_FPGA.Native_i_1__127\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => ex_Take_Intr_or_Exc,
      I1 => force2,
      I2 => EX_Valid,
      O => force_jump2
    );
\Using_FPGA.Native_i_2__31\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => ex_Take_Intr_or_Exc,
      I1 => force_Val2_N,
      I2 => EX_Valid,
      O => \Using_FPGA.Native_i_2__31_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_55 is
  port (
    ex_jump_wanted : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    jump_carry2 : in STD_LOGIC;
    ex_branch_with_delayslot : in STD_LOGIC;
    of_valid : in STD_LOGIC;
    EX_MBAR_Stall : in STD_LOGIC;
    ex_Instr_Excep_combo : in STD_LOGIC;
    dbg_stop_if_delay_i : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC;
    \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\ : in STD_LOGIC;
    ex_Take_Intr_or_Exc : in STD_LOGIC;
    ex_Interrupt_i : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_55 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_55;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_55 is
  signal \<const0>\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__176_n_0\ : STD_LOGIC;
  signal \^ex_jump_wanted\ : STD_LOGIC;
begin
  \^ex_jump_wanted\ <= lopt;
  ex_jump_wanted <= \^ex_jump_wanted\;
  lopt_1 <= \<const0>\;
  lopt_2 <= \Using_FPGA.Native_i_1__176_n_0\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Using_FPGA.Native_i_1__173\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"55F7"
    )
        port map (
      I0 => \^ex_jump_wanted\,
      I1 => ex_branch_with_delayslot,
      I2 => of_valid,
      I3 => EX_MBAR_Stall,
      O => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_1__176\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000055555455"
    )
        port map (
      I0 => ex_Instr_Excep_combo,
      I1 => dbg_stop_if_delay_i,
      I2 => Dbg_Disable,
      I3 => \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\,
      I4 => ex_Take_Intr_or_Exc,
      I5 => ex_Interrupt_i,
      O => \Using_FPGA.Native_i_1__176_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_56 is
  port (
    jump_carry4 : out STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    ex_jump_wanted : in STD_LOGIC;
    lopt : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_56 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_56;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_56 is
  signal \<const0>\ : STD_LOGIC;
begin
  lopt <= \<const0>\;
  jump_carry4 <= 'Z';
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_57 is
  port (
    jump_carry5 : out STD_LOGIC;
    jump_carry4 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_57 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_57;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_57 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^jump_carry5\ : STD_LOGIC;
begin
  \^jump_carry5\ <= lopt;
  jump_carry5 <= \^jump_carry5\;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_58 is
  port (
    ex_jump_for_ce : out STD_LOGIC;
    \if_pc_reg[0]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_next_ex_valid : out STD_LOGIC;
    ex_delayslot_Instr0 : out STD_LOGIC;
    mem_jump_taken0 : out STD_LOGIC;
    if_missed_fetch_reg : out STD_LOGIC;
    of_read_imm_reg_ii_reg : out STD_LOGIC;
    ex_valid_jump_reg : out STD_LOGIC;
    ex_valid_reg : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    ex_jump_hold_reg : out STD_LOGIC;
    keep_jump_taken_with_ds_reg : out STD_LOGIC;
    jump_carry5 : in STD_LOGIC;
    if_fetch_in_progress_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_jump_nodelay_reg : in STD_LOGIC;
    mem_valid_instr : in STD_LOGIC;
    mem_exception_from_ex : in STD_LOGIC;
    of_valid : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg\ : in STD_LOGIC;
    ex_Take_Intr_or_Exc : in STD_LOGIC;
    ex_jump_hold : in STD_LOGIC;
    ex_mbar_stall_no_sleep_1 : in STD_LOGIC;
    ex_first_cycle : in STD_LOGIC;
    ex_mbar_decode : in STD_LOGIC;
    ex_mbar_sleep : in STD_LOGIC;
    keep_jump_taken_with_ds : in STD_LOGIC;
    ex_branch_with_delayslot : in STD_LOGIC;
    if_missed_fetch : in STD_LOGIC;
    IB_Ready : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 1 downto 0 );
    wb_exception_i_reg : in STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    p_9_in : in STD_LOGIC;
    of_Take_Interrupt_hold_reg : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    of_read_imm_reg_ii : in STD_LOGIC;
    ex_valid_jump_reg_0 : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    ex_valid : in STD_LOGIC;
    \wb_exception_kind_i_reg[27]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_58 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_58;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_58 is
  signal \Using_FPGA.Native_i_1__38_n_0\ : STD_LOGIC;
  signal \^ex_jump_for_ce\ : STD_LOGIC;
  signal \^of_next_ex_valid\ : STD_LOGIC;
  signal of_read_imm_reg_ii_i_2_n_0 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__118\ : label is "soft_lutpair29";
  attribute SOFT_HLUTNM of ex_delayslot_Instr_i_1 : label is "soft_lutpair27";
  attribute SOFT_HLUTNM of ex_jump_hold_i_1 : label is "soft_lutpair28";
  attribute SOFT_HLUTNM of \if_pc[0]_i_1\ : label is "soft_lutpair29";
  attribute SOFT_HLUTNM of keep_jump_taken_with_ds_i_1 : label is "soft_lutpair27";
  attribute SOFT_HLUTNM of mem_jump_taken_i_1 : label is "soft_lutpair28";
begin
  ex_jump_for_ce <= \^ex_jump_for_ce\;
  of_next_ex_valid <= \^of_next_ex_valid\;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => jump_carry5,
      CO(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 1),
      CO(0) => \^ex_jump_for_ce\,
      CYINIT => '0',
      DI(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 1),
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => \Using_FPGA.Native_i_1__38_n_0\
    );
\Using_FPGA.Native_i_1__38\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000EEEFFFFF"
    )
        port map (
      I0 => ex_Take_Intr_or_Exc,
      I1 => ex_jump_hold,
      I2 => ex_mbar_stall_no_sleep_1,
      I3 => ex_first_cycle,
      I4 => ex_mbar_decode,
      I5 => ex_mbar_sleep,
      O => \Using_FPGA.Native_i_1__38_n_0\
    );
\Using_FPGA.Native_i_2__118\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ex_jump_for_ce\,
      I1 => \wb_exception_kind_i_reg[27]\,
      O => \Using_FPGA.Native_0\
    );
ex_delayslot_Instr_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => keep_jump_taken_with_ds,
      I1 => ex_branch_with_delayslot,
      I2 => \^ex_jump_for_ce\,
      O => ex_delayslot_Instr0
    );
ex_jump_hold_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"000E"
    )
        port map (
      I0 => ex_jump_hold,
      I1 => \^ex_jump_for_ce\,
      I2 => ex_branch_with_delayslot_reg,
      I3 => \out\(0),
      O => ex_jump_hold_reg
    );
ex_valid_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000CC0A"
    )
        port map (
      I0 => ex_valid,
      I1 => \^of_next_ex_valid\,
      I2 => ex_branch_with_delayslot_reg,
      I3 => \Using_FPGA.Native_1\,
      I4 => \out\(0),
      I5 => wb_exception_i_reg,
      O => ex_valid_reg
    );
ex_valid_jump_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000CC0A"
    )
        port map (
      I0 => ex_valid_jump_reg_0,
      I1 => \^of_next_ex_valid\,
      I2 => ex_branch_with_delayslot_reg,
      I3 => \Using_FPGA.Native_1\,
      I4 => \out\(0),
      I5 => wb_exception_i_reg,
      O => ex_valid_jump_reg
    );
ex_valid_keep_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000007770000"
    )
        port map (
      I0 => ex_jump_nodelay_reg,
      I1 => \^ex_jump_for_ce\,
      I2 => mem_valid_instr,
      I3 => mem_exception_from_ex,
      I4 => of_valid,
      I5 => \Performace_Debug_Control.dbg_stop_if_delay_i_reg\,
      O => \^of_next_ex_valid\
    );
if_missed_fetch_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000020E"
    )
        port map (
      I0 => \^ex_jump_for_ce\,
      I1 => if_missed_fetch,
      I2 => if_fetch_in_progress_reg(0),
      I3 => IB_Ready,
      I4 => \out\(0),
      I5 => LOCKSTEP_Master_Out(1),
      O => if_missed_fetch_reg
    );
\if_pc[0]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ex_jump_for_ce\,
      I1 => if_fetch_in_progress_reg(0),
      O => \if_pc_reg[0]\(0)
    );
keep_jump_taken_with_ds_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000EA"
    )
        port map (
      I0 => keep_jump_taken_with_ds,
      I1 => ex_branch_with_delayslot,
      I2 => \^ex_jump_for_ce\,
      I3 => \out\(0),
      I4 => \Using_FPGA.Native_1\,
      O => keep_jump_taken_with_ds_reg
    );
mem_jump_taken_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => ex_jump_hold,
      I1 => \^ex_jump_for_ce\,
      O => mem_jump_taken0
    );
of_read_imm_reg_ii_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000002"
    )
        port map (
      I0 => of_read_imm_reg_ii_i_2_n_0,
      I1 => \Performace_Debug_Control.dbg_stop_if_delay_i_reg\,
      I2 => wb_exception_i_reg,
      I3 => mem_valid_reg,
      I4 => LOCKSTEP_Master_Out(0),
      I5 => \out\(0),
      O => of_read_imm_reg_ii_reg
    );
of_read_imm_reg_ii_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0070FFFF00700000"
    )
        port map (
      I0 => ex_jump_nodelay_reg,
      I1 => \^ex_jump_for_ce\,
      I2 => p_9_in,
      I3 => of_Take_Interrupt_hold_reg,
      I4 => \Using_FPGA.Native_1\,
      I5 => of_read_imm_reg_ii,
      O => of_read_imm_reg_ii_i_2_n_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_59 is
  port (
    if_pc_incr_carry3 : out STD_LOGIC;
    if_fetch_for_timing_optimization1 : in STD_LOGIC;
    if_pc_incr_carry1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_59 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_59;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_59 is
  signal \<const0>\ : STD_LOGIC;
  signal \^if_pc_incr_carry3\ : STD_LOGIC;
begin
  \^if_pc_incr_carry3\ <= lopt;
  if_pc_incr_carry3 <= \^if_pc_incr_carry3\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_60 is
  port (
    if_pc_incr_carry0 : out STD_LOGIC;
    if_missed_fetch : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_60 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_60;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_60 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal if_valid : STD_LOGIC;
begin
  lopt <= \<const1>\;
  lopt_1 <= \<const0>\;
  lopt_2 <= if_valid;
  if_pc_incr_carry0 <= 'Z';
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Using_FPGA.Native_i_1__76\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => if_missed_fetch,
      O => if_valid
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_61 is
  port (
    if_pc_incr_carry1 : out STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg\ : in STD_LOGIC;
    if_pc_incr_carry0 : in STD_LOGIC;
    lopt : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_61 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_61;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_61 is
  signal \<const0>\ : STD_LOGIC;
begin
  lopt <= \<const0>\;
  if_pc_incr_carry1 <= 'Z';
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_62 is
  port (
    of_PipeRun_carry_2 : out STD_LOGIC;
    of_pipe_ctrl : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun_carry_3 : in STD_LOGIC;
    lopt : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_62 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_62;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_62 is
  signal \<const0>\ : STD_LOGIC;
begin
  lopt <= \<const0>\;
  of_PipeRun_carry_2 <= 'Z';
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_63 is
  port (
    of_PipeRun_carry_3 : out STD_LOGIC;
    of_pipe_ctrl : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun_carry_4 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_63 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_63;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_63 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_1\ <= lopt;
  \^lopt_2\ <= lopt_1;
  \^lopt_4\ <= lopt_3;
  lopt_2 <= \^lopt_3\;
  lopt_5 <= lopt_4;
  of_PipeRun_carry_3 <= 'Z';
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => of_PipeRun_carry_4,
      CO(3) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3),
      CO(2) => \^lopt_3\,
      CO(1 downto 0) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(1 downto 0),
      CYINIT => '0',
      DI(3) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3),
      DI(2) => \^lopt_4\,
      DI(1) => \^lopt_1\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3),
      S(2) => lopt_5,
      S(1) => \^lopt_2\,
      S(0) => of_pipe_ctrl(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_64 is
  port (
    of_PipeRun_carry_4 : out STD_LOGIC;
    of_pipe_ctrl : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun_carry_5 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_64 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_64;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_64 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_piperun_carry_4\ : STD_LOGIC;
begin
  \^of_piperun_carry_4\ <= lopt;
  lopt_1 <= \<const0>\;
  of_PipeRun_carry_4 <= \^of_piperun_carry_4\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_65 is
  port (
    of_PipeRun_carry_5 : out STD_LOGIC;
    of_pipe_ctrl : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun_carry_6 : in STD_LOGIC;
    lopt : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_65 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_65;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_65 is
  signal \<const0>\ : STD_LOGIC;
begin
  lopt <= \<const0>\;
  of_PipeRun_carry_5 <= 'Z';
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_66 is
  port (
    of_PipeRun_carry_6 : out STD_LOGIC;
    of_pipe_ctrl : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun_carry_7 : in STD_LOGIC;
    lopt : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_66 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_66;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_66 is
  signal \<const0>\ : STD_LOGIC;
begin
  lopt <= \<const0>\;
  of_PipeRun_carry_6 <= 'Z';
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_67 is
  port (
    of_PipeRun_carry_7 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : out STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_67 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_67;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_67 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_1\ <= lopt;
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_4\ <= lopt_3;
  \^lopt_6\ <= lopt_5;
  lopt_4 <= \^lopt_5\;
  lopt_7 <= lopt_6;
  of_PipeRun_carry_7 <= 'Z';
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_5\,
      CO(2 downto 0) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(2 downto 0),
      CYINIT => ex_branch_with_delayslot_reg,
      DI(3) => \^lopt_6\,
      DI(2) => \^lopt_3\,
      DI(1) => \^lopt_1\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_7,
      S(2) => \^lopt_4\,
      S(1) => \^lopt_2\,
      S(0) => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_68 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Write_DCache_decode_reg : out STD_LOGIC;
    ex_Write_ICache_i_reg : out STD_LOGIC;
    \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\ : out STD_LOGIC;
    mem_gpr_write_reg : out STD_LOGIC;
    ex_bt_hit_hold_reg : out STD_LOGIC;
    mem_gpr_write_dbg_reg : out STD_LOGIC;
    of_set_MSR_IE_hold_reg : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    of_PipeRun_carry_9 : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[27]\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    ex_write_dcache_instr : in STD_LOGIC;
    ex_Write_ICache_i : in STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg\ : in STD_LOGIC;
    \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg\ : in STD_LOGIC;
    p_36_out : in STD_LOGIC;
    \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_0\ : in STD_LOGIC;
    mem_gpr_write : in STD_LOGIC;
    ex_gpr_write_reg : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_jump_hit0 : in STD_LOGIC;
    ex_gpr_write_dbg : in STD_LOGIC;
    mem_gpr_write_dbg : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    p_82_in : in STD_LOGIC;
    of_set_MSR_IE_hold_reg_0 : in STD_LOGIC;
    ex_Take_Intr_or_Exc_reg : in STD_LOGIC;
    ex_set_MSR_IE_instr : in STD_LOGIC;
    \EX_Op1_reg[30]\ : in STD_LOGIC;
    ex_MSR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \wb_exception_kind_i_reg[27]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_68 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_68;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_68 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of ex_Write_DCache_decode_cmb_inferred_i_1 : label is "soft_lutpair21";
  attribute SOFT_HLUTNM of ex_Write_ICache_i_cmb_inferred_i_1 : label is "soft_lutpair22";
  attribute SOFT_HLUTNM of ex_bt_hit_hold_i_1 : label is "soft_lutpair21";
  attribute SOFT_HLUTNM of mem_gpr_write_dbg_i_2 : label is "soft_lutpair22";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \^using_fpga.native_0\ <= lopt;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Performace_Debug_Control.ex_dbg_pc_hit_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFDF55FFFF0000"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => mem_valid_reg,
      I2 => \Performace_Debug_Control.dbg_stop_if_delay_i_reg\,
      I3 => \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg\,
      I4 => p_36_out,
      I5 => \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_0\,
      O => \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\
    );
\Using_FPGA.Native_i_1__186\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000F8FFF800"
    )
        port map (
      I0 => ex_Take_Intr_or_Exc_reg,
      I1 => ex_set_MSR_IE_instr,
      I2 => \EX_Op1_reg[30]\,
      I3 => \^using_fpga.native_0\,
      I4 => ex_MSR(0),
      I5 => \wb_exception_kind_i_reg[27]_0\,
      O => \Using_FPGA.Native_1\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
ex_Write_DCache_decode_cmb_inferred_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"10"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_2\,
      I2 => ex_write_dcache_instr,
      O => ex_Write_DCache_decode_reg
    );
ex_Write_ICache_i_cmb_inferred_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"10"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_2\,
      I2 => ex_Write_ICache_i,
      O => ex_Write_ICache_i_reg
    );
ex_bt_hit_hold_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => mem_jump_hit0,
      I1 => \^using_fpga.native_0\,
      I2 => \out\(0),
      O => ex_bt_hit_hold_reg
    );
mem_gpr_write_dbg_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ex_gpr_write_dbg,
      I1 => \^using_fpga.native_0\,
      I2 => mem_gpr_write_dbg,
      O => mem_gpr_write_dbg_reg
    );
mem_gpr_write_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000E2"
    )
        port map (
      I0 => mem_gpr_write,
      I1 => \^using_fpga.native_0\,
      I2 => ex_gpr_write_reg,
      I3 => wb_exception_i_reg,
      I4 => \out\(0),
      O => mem_gpr_write_reg
    );
\mem_pc_i[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0B00"
    )
        port map (
      I0 => Dbg_Disable,
      I1 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I2 => \wb_exception_kind_i_reg[27]\,
      I3 => \^using_fpga.native_0\,
      O => E(0)
    );
of_set_MSR_IE_hold_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000FF0080"
    )
        port map (
      I0 => Q(0),
      I1 => p_82_in,
      I2 => \^using_fpga.native_0\,
      I3 => \Using_FPGA.Native_2\,
      I4 => of_set_MSR_IE_hold_reg_0,
      I5 => \out\(0),
      O => of_set_MSR_IE_hold_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_69 is
  port (
    of_PipeRun_carry_9 : out STD_LOGIC;
    EX_MBAR_Stall : out STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    of_PipeRun_carry_10 : in STD_LOGIC;
    ex_mbar_sleep : in STD_LOGIC;
    ex_mbar_decode : in STD_LOGIC;
    ex_first_cycle : in STD_LOGIC;
    ex_mbar_stall_no_sleep_1 : in STD_LOGIC;
    ex_jump_hold : in STD_LOGIC;
    ex_Take_Intr_or_Exc : in STD_LOGIC;
    lopt : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_69 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_69;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_69 is
  signal \<const0>\ : STD_LOGIC;
begin
  lopt <= \<const0>\;
  of_PipeRun_carry_9 <= 'Z';
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Using_FPGA.Native_i_2__37\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAAAAAEEEA"
    )
        port map (
      I0 => ex_mbar_sleep,
      I1 => ex_mbar_decode,
      I2 => ex_first_cycle,
      I3 => ex_mbar_stall_no_sleep_1,
      I4 => ex_jump_hold,
      I5 => ex_Take_Intr_or_Exc,
      O => EX_MBAR_Stall
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_70 is
  port (
    of_PipeRun_carry_10 : out STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_70 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_70;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_70 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_1\ <= lopt;
  \^lopt_2\ <= lopt_1;
  \^lopt_4\ <= lopt_3;
  lopt_2 <= \^lopt_3\;
  lopt_5 <= lopt_4;
  of_PipeRun_carry_10 <= 'Z';
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3),
      CO(2) => \^lopt_3\,
      CO(1 downto 0) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(1 downto 0),
      CYINIT => E(0),
      DI(3) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3),
      DI(2) => \^lopt_4\,
      DI(1) => \^lopt_1\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3),
      S(2) => lopt_5,
      S(1) => \^lopt_2\,
      S(0) => '1'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_71 is
  port (
    use_Reg_Neg_S_reg : out STD_LOGIC;
    ex_Take_Intr_or_Exc_reg : out STD_LOGIC;
    ex_is_mul_instr_reg : out STD_LOGIC;
    ex_valid_keep_reg : out STD_LOGIC;
    ex_first_cycle_reg : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    ex_Instr_Excep_combo_reg : out STD_LOGIC;
    \Performace_Debug_Control.ex_watchpoint_brk_reg\ : out STD_LOGIC;
    of_Take_Interrupt_hold_reg : out STD_LOGIC;
    ex_jump_nodelay_reg : out STD_LOGIC;
    of_pipe_ctrl : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun_carry_2 : in STD_LOGIC;
    of_Take_Interrupt_hold_reg_0 : in STD_LOGIC;
    ex_Take_Intr_or_Exc : in STD_LOGIC;
    ex_delayslot_Instr2 : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_div_unsigned : in STD_LOGIC;
    ex_valid_keep : in STD_LOGIC;
    of_next_ex_valid : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    ex_Take_Intr_or_Exc_reg_0 : in STD_LOGIC;
    ex_set_MSR_IE_instr : in STD_LOGIC;
    \EX_Op1_reg[30]\ : in STD_LOGIC;
    of_MSR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \wb_exception_kind_i_reg[27]\ : in STD_LOGIC;
    ex_Instr_Excep_combo : in STD_LOGIC;
    \Performace_Debug_Control.ex_watchpoint_brk_reg_0\ : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC;
    of_Take_Interrupt_hold : in STD_LOGIC;
    ex_jump_nodelay_reg_0 : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_71 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_71;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_71 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^use_reg_neg_s_reg\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Performace_Debug_Control.ex_watchpoint_brk_i_1\ : label is "soft_lutpair20";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM of ex_Instr_Excep_combo_i_1 : label is "soft_lutpair20";
  attribute SOFT_HLUTNM of ex_first_cycle_i_1 : label is "soft_lutpair18";
  attribute SOFT_HLUTNM of ex_is_mul_instr_i_1 : label is "soft_lutpair19";
  attribute SOFT_HLUTNM of ex_valid_keep_i_1 : label is "soft_lutpair18";
  attribute SOFT_HLUTNM of of_Take_Interrupt_hold_i_1 : label is "soft_lutpair19";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_4\ <= lopt_3;
  \^lopt_5\ <= lopt_4;
  \^lopt_7\ <= lopt_6;
  \^lopt_8\ <= lopt_7;
  \^use_reg_neg_s_reg\ <= lopt_8;
  lopt_5 <= \^lopt_6\;
  lopt_9 <= \<const0>\;
  use_Reg_Neg_S_reg <= \^use_reg_neg_s_reg\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Performace_Debug_Control.ex_watchpoint_brk_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0004"
    )
        port map (
      I0 => \^use_reg_neg_s_reg\,
      I1 => \Performace_Debug_Control.ex_watchpoint_brk_reg_0\,
      I2 => Dbg_Disable,
      I3 => \out\(0),
      O => \Performace_Debug_Control.ex_watchpoint_brk_reg\
    );
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3),
      CO(2) => \^lopt_6\,
      CO(1 downto 0) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(1 downto 0),
      CYINIT => lopt,
      DI(3) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3),
      DI(2) => \^lopt_7\,
      DI(1) => \^lopt_4\,
      DI(0) => \^lopt_2\,
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3),
      S(2) => \^lopt_8\,
      S(1) => \^lopt_5\,
      S(0) => \^lopt_3\
    );
\Using_FPGA.Native_i_1__187\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000F8FFF800"
    )
        port map (
      I0 => ex_Take_Intr_or_Exc_reg_0,
      I1 => ex_set_MSR_IE_instr,
      I2 => \EX_Op1_reg[30]\,
      I3 => \^use_reg_neg_s_reg\,
      I4 => of_MSR(0),
      I5 => \wb_exception_kind_i_reg[27]\,
      O => \Using_FPGA.Native_0\
    );
ex_Instr_Excep_combo_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => \^use_reg_neg_s_reg\,
      I1 => ex_Instr_Excep_combo,
      I2 => \out\(0),
      O => ex_Instr_Excep_combo_reg
    );
ex_Take_Intr_or_Exc_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000A0AC"
    )
        port map (
      I0 => of_Take_Interrupt_hold_reg_0,
      I1 => ex_Take_Intr_or_Exc,
      I2 => \^use_reg_neg_s_reg\,
      I3 => ex_delayslot_Instr2,
      I4 => \out\(0),
      O => ex_Take_Intr_or_Exc_reg
    );
ex_first_cycle_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => \^use_reg_neg_s_reg\,
      I1 => wb_exception_i_reg,
      I2 => \out\(0),
      O => ex_first_cycle_reg
    );
ex_is_mul_instr_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^use_reg_neg_s_reg\,
      I2 => \out\(0),
      O => ex_is_mul_instr_reg
    );
ex_jump_nodelay_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000CADACAFA"
    )
        port map (
      I0 => ex_jump_nodelay_reg_0,
      I1 => of_Take_Interrupt_hold_reg_0,
      I2 => \^use_reg_neg_s_reg\,
      I3 => \Using_FPGA.Native_1\,
      I4 => ex_delayslot_Instr2,
      I5 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      O => ex_jump_nodelay_reg
    );
ex_valid_keep_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000E2"
    )
        port map (
      I0 => ex_valid_keep,
      I1 => \^use_reg_neg_s_reg\,
      I2 => of_next_ex_valid,
      I3 => wb_exception_i_reg,
      I4 => \out\(0),
      O => ex_valid_keep_reg
    );
of_Take_Interrupt_hold_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"000E"
    )
        port map (
      I0 => of_Take_Interrupt_hold,
      I1 => of_Take_Interrupt_hold_reg_0,
      I2 => \^use_reg_neg_s_reg\,
      I3 => \out\(0),
      O => of_Take_Interrupt_hold_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_9 is
  port (
    carry_7 : out STD_LOGIC;
    SRL16_Sel_7 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : out STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_9 : entity is "MB_MUXCY";
end system_microblaze_0_0_MB_MUXCY_9;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_9 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_1\ <= lopt;
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_4\ <= lopt_3;
  \^lopt_6\ <= lopt_5;
  lopt_4 <= \^lopt_5\;
  lopt_7 <= lopt_6;
  carry_7 <= 'Z';
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_5\,
      CO(2 downto 0) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(2 downto 0),
      CYINIT => Q(0),
      DI(3) => \^lopt_6\,
      DI(2) => \^lopt_3\,
      DI(1) => \^lopt_1\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_7,
      S(2) => \^lopt_4\,
      S(1) => \^lopt_2\,
      S(0) => SRL16_Sel_7
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY is
  port (
    \Instr_Addr[0]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    LO : in STD_LOGIC;
    \EX_Op2_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY is
  signal O28_in : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_I2_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_I2_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_I2_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_I2_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I2_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I2_CARRY4\ : label is "PRIMITIVE";
begin
\Instr_Addr[0]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[0]\(0),
      I1 => O28_in,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[0]\(0)
    );
\Using_FPGA.Native_I2_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3 downto 0) => \NLW_Using_FPGA.Native_I2_CARRY4_CO_UNCONNECTED\(3 downto 0),
      CYINIT => '0',
      DI(3 downto 0) => \NLW_Using_FPGA.Native_I2_CARRY4_DI_UNCONNECTED\(3 downto 0),
      O(3 downto 1) => \NLW_Using_FPGA.Native_I2_CARRY4_O_UNCONNECTED\(3 downto 1),
      O(0) => O28_in,
      S(3 downto 1) => \NLW_Using_FPGA.Native_I2_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => Q(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_166 is
  port (
    \Instr_Addr[10]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[10]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[11]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : out STD_LOGIC;
    lopt_9 : in STD_LOGIC;
    lopt_10 : in STD_LOGIC;
    lopt_11 : out STD_LOGIC;
    lopt_12 : out STD_LOGIC;
    lopt_13 : in STD_LOGIC;
    lopt_14 : in STD_LOGIC;
    lopt_15 : out STD_LOGIC;
    lopt_16 : in STD_LOGIC;
    lopt_17 : in STD_LOGIC;
    lopt_18 : out STD_LOGIC;
    lopt_19 : in STD_LOGIC;
    lopt_20 : in STD_LOGIC;
    lopt_21 : out STD_LOGIC;
    lopt_22 : in STD_LOGIC;
    lopt_23 : in STD_LOGIC;
    lopt_24 : out STD_LOGIC;
    lopt_25 : out STD_LOGIC;
    lopt_26 : out STD_LOGIC;
    lopt_27 : out STD_LOGIC;
    lopt_28 : out STD_LOGIC;
    lopt_29 : in STD_LOGIC;
    lopt_30 : in STD_LOGIC;
    lopt_31 : out STD_LOGIC;
    lopt_32 : in STD_LOGIC;
    lopt_33 : in STD_LOGIC;
    lopt_34 : out STD_LOGIC;
    lopt_35 : in STD_LOGIC;
    lopt_36 : in STD_LOGIC;
    lopt_37 : out STD_LOGIC;
    lopt_38 : in STD_LOGIC;
    lopt_39 : in STD_LOGIC;
    lopt_40 : out STD_LOGIC;
    lopt_41 : out STD_LOGIC;
    lopt_42 : out STD_LOGIC;
    lopt_43 : out STD_LOGIC;
    lopt_44 : out STD_LOGIC;
    lopt_45 : in STD_LOGIC;
    lopt_46 : in STD_LOGIC;
    lopt_47 : out STD_LOGIC;
    lopt_48 : in STD_LOGIC;
    lopt_49 : in STD_LOGIC;
    lopt_50 : out STD_LOGIC;
    lopt_51 : in STD_LOGIC;
    lopt_52 : in STD_LOGIC;
    lopt_53 : out STD_LOGIC;
    lopt_54 : in STD_LOGIC;
    lopt_55 : in STD_LOGIC;
    lopt_56 : out STD_LOGIC;
    lopt_57 : out STD_LOGIC;
    lopt_58 : out STD_LOGIC;
    lopt_59 : out STD_LOGIC;
    lopt_60 : out STD_LOGIC;
    lopt_61 : in STD_LOGIC;
    lopt_62 : in STD_LOGIC;
    lopt_63 : out STD_LOGIC;
    lopt_64 : in STD_LOGIC;
    lopt_65 : in STD_LOGIC;
    lopt_66 : out STD_LOGIC;
    lopt_67 : in STD_LOGIC;
    lopt_68 : in STD_LOGIC;
    lopt_69 : out STD_LOGIC;
    lopt_70 : in STD_LOGIC;
    lopt_71 : in STD_LOGIC;
    lopt_72 : out STD_LOGIC;
    lopt_73 : out STD_LOGIC;
    lopt_74 : out STD_LOGIC;
    lopt_75 : out STD_LOGIC;
    lopt_76 : out STD_LOGIC;
    lopt_77 : in STD_LOGIC;
    lopt_78 : in STD_LOGIC;
    lopt_79 : out STD_LOGIC;
    lopt_80 : in STD_LOGIC;
    lopt_81 : in STD_LOGIC;
    lopt_82 : out STD_LOGIC;
    lopt_83 : in STD_LOGIC;
    lopt_84 : in STD_LOGIC;
    lopt_85 : out STD_LOGIC;
    lopt_86 : out STD_LOGIC;
    lopt_87 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_166 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_166;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_166 is
  signal O48_out : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal \^lopt_12\ : STD_LOGIC;
  signal \^lopt_13\ : STD_LOGIC;
  signal \^lopt_15\ : STD_LOGIC;
  signal \^lopt_16\ : STD_LOGIC;
  signal \^lopt_17\ : STD_LOGIC;
  signal \^lopt_18\ : STD_LOGIC;
  signal \^lopt_19\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_20\ : STD_LOGIC;
  signal \^lopt_21\ : STD_LOGIC;
  signal \^lopt_22\ : STD_LOGIC;
  signal \^lopt_23\ : STD_LOGIC;
  signal \^lopt_24\ : STD_LOGIC;
  signal \^lopt_25\ : STD_LOGIC;
  signal \^lopt_26\ : STD_LOGIC;
  signal \^lopt_27\ : STD_LOGIC;
  signal \^lopt_28\ : STD_LOGIC;
  signal \^lopt_29\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_30\ : STD_LOGIC;
  signal \^lopt_32\ : STD_LOGIC;
  signal \^lopt_33\ : STD_LOGIC;
  signal \^lopt_34\ : STD_LOGIC;
  signal \^lopt_35\ : STD_LOGIC;
  signal \^lopt_36\ : STD_LOGIC;
  signal \^lopt_37\ : STD_LOGIC;
  signal \^lopt_38\ : STD_LOGIC;
  signal \^lopt_39\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_40\ : STD_LOGIC;
  signal \^lopt_41\ : STD_LOGIC;
  signal \^lopt_42\ : STD_LOGIC;
  signal \^lopt_43\ : STD_LOGIC;
  signal \^lopt_44\ : STD_LOGIC;
  signal \^lopt_45\ : STD_LOGIC;
  signal \^lopt_46\ : STD_LOGIC;
  signal \^lopt_47\ : STD_LOGIC;
  signal \^lopt_49\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_50\ : STD_LOGIC;
  signal \^lopt_51\ : STD_LOGIC;
  signal \^lopt_52\ : STD_LOGIC;
  signal \^lopt_53\ : STD_LOGIC;
  signal \^lopt_54\ : STD_LOGIC;
  signal \^lopt_55\ : STD_LOGIC;
  signal \^lopt_56\ : STD_LOGIC;
  signal \^lopt_57\ : STD_LOGIC;
  signal \^lopt_58\ : STD_LOGIC;
  signal \^lopt_59\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_60\ : STD_LOGIC;
  signal \^lopt_61\ : STD_LOGIC;
  signal \^lopt_62\ : STD_LOGIC;
  signal \^lopt_63\ : STD_LOGIC;
  signal \^lopt_64\ : STD_LOGIC;
  signal \^lopt_66\ : STD_LOGIC;
  signal \^lopt_67\ : STD_LOGIC;
  signal \^lopt_68\ : STD_LOGIC;
  signal \^lopt_69\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_70\ : STD_LOGIC;
  signal \^lopt_71\ : STD_LOGIC;
  signal \^lopt_72\ : STD_LOGIC;
  signal \^lopt_73\ : STD_LOGIC;
  signal \^lopt_74\ : STD_LOGIC;
  signal \^lopt_75\ : STD_LOGIC;
  signal \^lopt_76\ : STD_LOGIC;
  signal \^lopt_77\ : STD_LOGIC;
  signal \^lopt_78\ : STD_LOGIC;
  signal \^lopt_79\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_80\ : STD_LOGIC;
  signal \^lopt_81\ : STD_LOGIC;
  signal \^lopt_83\ : STD_LOGIC;
  signal \^lopt_84\ : STD_LOGIC;
  signal \^lopt_85\ : STD_LOGIC;
  signal \^lopt_86\ : STD_LOGIC;
  signal \^lopt_87\ : STD_LOGIC;
  signal lopt_88 : STD_LOGIC;
  signal lopt_89 : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal lopt_90 : STD_LOGIC;
  signal lopt_91 : STD_LOGIC;
  signal lopt_92 : STD_LOGIC;
  signal lopt_93 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of CARRY4 : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of CARRY4 : label is "LO:O";
  attribute box_type : string;
  attribute box_type of CARRY4 : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of CARRY4_1 : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP of CARRY4_1 : label is "LO:O";
  attribute box_type of CARRY4_1 : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of CARRY4_2 : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP of CARRY4_2 : label is "LO:O";
  attribute box_type of CARRY4_2 : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of CARRY4_3 : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP of CARRY4_3 : label is "LO:O";
  attribute box_type of CARRY4_3 : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_10\ <= lopt_9;
  \^lopt_11\ <= lopt_10;
  \^lopt_15\ <= lopt_13;
  \^lopt_16\ <= lopt_14;
  \^lopt_18\ <= lopt_16;
  \^lopt_19\ <= lopt_17;
  \^lopt_2\ <= lopt_1;
  \^lopt_21\ <= lopt_19;
  \^lopt_22\ <= lopt_20;
  \^lopt_24\ <= lopt_22;
  \^lopt_25\ <= lopt_23;
  \^lopt_3\ <= lopt_2;
  \^lopt_32\ <= lopt_29;
  \^lopt_33\ <= lopt_30;
  \^lopt_35\ <= lopt_32;
  \^lopt_36\ <= lopt_33;
  \^lopt_38\ <= lopt_35;
  \^lopt_39\ <= lopt_36;
  \^lopt_4\ <= lopt_3;
  \^lopt_41\ <= lopt_38;
  \^lopt_42\ <= lopt_39;
  \^lopt_49\ <= lopt_45;
  \^lopt_5\ <= lopt_4;
  \^lopt_50\ <= lopt_46;
  \^lopt_52\ <= lopt_48;
  \^lopt_53\ <= lopt_49;
  \^lopt_55\ <= lopt_51;
  \^lopt_56\ <= lopt_52;
  \^lopt_58\ <= lopt_54;
  \^lopt_59\ <= lopt_55;
  \^lopt_66\ <= lopt_61;
  \^lopt_67\ <= lopt_62;
  \^lopt_69\ <= lopt_64;
  \^lopt_7\ <= lopt_6;
  \^lopt_70\ <= lopt_65;
  \^lopt_72\ <= lopt_67;
  \^lopt_73\ <= lopt_68;
  \^lopt_75\ <= lopt_70;
  \^lopt_76\ <= lopt_71;
  \^lopt_8\ <= lopt_7;
  \^lopt_83\ <= lopt_77;
  \^lopt_84\ <= lopt_78;
  \^lopt_86\ <= lopt_80;
  \^lopt_87\ <= lopt_81;
  lopt_11 <= \^lopt_12\;
  lopt_12 <= \^lopt_13\;
  lopt_15 <= \^lopt_17\;
  lopt_18 <= \^lopt_20\;
  lopt_21 <= \^lopt_23\;
  lopt_24 <= \^lopt_26\;
  lopt_25 <= \^lopt_27\;
  lopt_26 <= \^lopt_28\;
  lopt_27 <= \^lopt_29\;
  lopt_28 <= \^lopt_30\;
  lopt_31 <= \^lopt_34\;
  lopt_34 <= \^lopt_37\;
  lopt_37 <= \^lopt_40\;
  lopt_40 <= \^lopt_43\;
  lopt_41 <= \^lopt_44\;
  lopt_42 <= \^lopt_45\;
  lopt_43 <= \^lopt_46\;
  lopt_44 <= \^lopt_47\;
  lopt_47 <= \^lopt_51\;
  lopt_5 <= \^lopt_6\;
  lopt_50 <= \^lopt_54\;
  lopt_53 <= \^lopt_57\;
  lopt_56 <= \^lopt_60\;
  lopt_57 <= \^lopt_61\;
  lopt_58 <= \^lopt_62\;
  lopt_59 <= \^lopt_63\;
  lopt_60 <= \^lopt_64\;
  lopt_63 <= \^lopt_68\;
  lopt_66 <= \^lopt_71\;
  lopt_69 <= \^lopt_74\;
  lopt_72 <= \^lopt_77\;
  lopt_73 <= \^lopt_78\;
  lopt_74 <= \^lopt_79\;
  lopt_75 <= \^lopt_80\;
  lopt_76 <= \^lopt_81\;
  lopt_79 <= \^lopt_85\;
  lopt_8 <= \^lopt_9\;
  lopt_82 <= lopt_88;
  lopt_85 <= lopt_91;
  lopt_86 <= lopt_92;
  lopt_87 <= lopt_93;
  lopt_89 <= lopt_83;
  lopt_90 <= lopt_84;
CARRY4: unisim.vcomponents.CARRY4
     port map (
      CI => \^lopt_23\,
      CO(3) => \^lopt_40\,
      CO(2) => \^lopt_37\,
      CO(1) => \^lopt_34\,
      CO(0) => \^lopt_30\,
      CYINIT => '0',
      DI(3) => \^lopt_41\,
      DI(2) => \^lopt_38\,
      DI(1) => \^lopt_35\,
      DI(0) => \^lopt_32\,
      O(3) => \^lopt_46\,
      O(2) => \^lopt_45\,
      O(1) => \^lopt_44\,
      O(0) => \^lopt_43\,
      S(3) => \^lopt_42\,
      S(2) => \^lopt_39\,
      S(1) => \^lopt_36\,
      S(0) => \^lopt_33\
    );
CARRY4_1: unisim.vcomponents.CARRY4
     port map (
      CI => \^lopt_40\,
      CO(3) => \^lopt_57\,
      CO(2) => \^lopt_54\,
      CO(1) => \^lopt_51\,
      CO(0) => \^lopt_47\,
      CYINIT => '0',
      DI(3) => \^lopt_58\,
      DI(2) => \^lopt_55\,
      DI(1) => \^lopt_52\,
      DI(0) => \^lopt_49\,
      O(3) => \^lopt_63\,
      O(2) => \^lopt_62\,
      O(1) => \^lopt_61\,
      O(0) => \^lopt_60\,
      S(3) => \^lopt_59\,
      S(2) => \^lopt_56\,
      S(1) => \^lopt_53\,
      S(0) => \^lopt_50\
    );
CARRY4_2: unisim.vcomponents.CARRY4
     port map (
      CI => \^lopt_57\,
      CO(3) => \^lopt_74\,
      CO(2) => \^lopt_71\,
      CO(1) => \^lopt_68\,
      CO(0) => \^lopt_64\,
      CYINIT => '0',
      DI(3) => \^lopt_75\,
      DI(2) => \^lopt_72\,
      DI(1) => \^lopt_69\,
      DI(0) => \^lopt_66\,
      O(3) => \^lopt_80\,
      O(2) => \^lopt_79\,
      O(1) => \^lopt_78\,
      O(0) => \^lopt_77\,
      S(3) => \^lopt_76\,
      S(2) => \^lopt_73\,
      S(1) => \^lopt_70\,
      S(0) => \^lopt_67\
    );
CARRY4_3: unisim.vcomponents.CARRY4
     port map (
      CI => \^lopt_74\,
      CO(3) => lopt_88,
      CO(2) => LO,
      CO(1) => \^lopt_85\,
      CO(0) => \^lopt_81\,
      CYINIT => '0',
      DI(3) => lopt_89,
      DI(2) => '0',
      DI(1) => \^lopt_86\,
      DI(0) => \^lopt_83\,
      O(3) => lopt_93,
      O(2) => O48_out,
      O(1) => lopt_92,
      O(0) => lopt_91,
      S(3) => lopt_90,
      S(2) => Q(0),
      S(1) => \^lopt_87\,
      S(0) => \^lopt_84\
    );
\Instr_Addr[10]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[10]\(0),
      I1 => O48_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[10]\(0)
    );
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_9\,
      CO(2) => \^lopt_6\,
      CO(1 downto 0) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(1 downto 0),
      CYINIT => lopt,
      DI(3) => \^lopt_10\,
      DI(2) => \^lopt_7\,
      DI(1) => \^lopt_4\,
      DI(0) => \^lopt_2\,
      O(3) => \^lopt_12\,
      O(2 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(2 downto 0),
      S(3) => \^lopt_11\,
      S(2) => \^lopt_8\,
      S(1) => \^lopt_5\,
      S(0) => \^lopt_3\
    );
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \^lopt_9\,
      CO(3) => \^lopt_23\,
      CO(2) => \^lopt_20\,
      CO(1) => \^lopt_17\,
      CO(0) => \^lopt_13\,
      CYINIT => '0',
      DI(3) => \^lopt_24\,
      DI(2) => \^lopt_21\,
      DI(1) => \^lopt_18\,
      DI(0) => \^lopt_15\,
      O(3) => \^lopt_29\,
      O(2) => \^lopt_28\,
      O(1) => \^lopt_27\,
      O(0) => \^lopt_26\,
      S(3) => \^lopt_25\,
      S(2) => \^lopt_22\,
      S(1) => \^lopt_19\,
      S(0) => \^lopt_16\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_167 is
  port (
    \Instr_Addr[11]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[11]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[12]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_167 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_167;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_167 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O50_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O50_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[11]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[11]\(0),
      I1 => O50_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[11]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_168 is
  port (
    \Instr_Addr[12]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[12]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[13]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_168 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_168;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_168 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O52_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O52_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[12]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[12]\(0),
      I1 => O52_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[12]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_169 is
  port (
    \Instr_Addr[13]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[13]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[14]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_169 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_169;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_169 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O54_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O54_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[13]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[13]\(0),
      I1 => O54_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[13]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_170 is
  port (
    \Instr_Addr[14]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[14]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[15]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_170 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_170;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_170 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O56_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O56_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[14]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[14]\(0),
      I1 => O56_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[14]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_171 is
  port (
    \Instr_Addr[15]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[15]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[16]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_171 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_171;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_171 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O58_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O58_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[15]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[15]\(0),
      I1 => O58_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[15]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_172 is
  port (
    \Instr_Addr[16]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[16]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[17]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_172 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_172;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_172 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O60_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O60_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[16]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[16]\(0),
      I1 => O60_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[16]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_173 is
  port (
    \Instr_Addr[17]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[17]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[18]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_173 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_173;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_173 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O62_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O62_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[17]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[17]\(0),
      I1 => O62_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[17]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_174 is
  port (
    \Instr_Addr[18]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[18]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[19]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_174 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_174;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_174 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O64_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O64_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[18]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[18]\(0),
      I1 => O64_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[18]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_175 is
  port (
    \Instr_Addr[19]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[19]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[20]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_175 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_175;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_175 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O66_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O66_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[19]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[19]\(0),
      I1 => O66_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[19]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_176 is
  port (
    \Instr_Addr[1]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[2]\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : out STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : out STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : in STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : in STD_LOGIC;
    lopt_12 : in STD_LOGIC;
    lopt_13 : out STD_LOGIC;
    lopt_14 : out STD_LOGIC;
    lopt_15 : out STD_LOGIC;
    lopt_16 : out STD_LOGIC;
    lopt_17 : out STD_LOGIC;
    lopt_18 : in STD_LOGIC;
    lopt_19 : in STD_LOGIC;
    lopt_20 : out STD_LOGIC;
    lopt_21 : in STD_LOGIC;
    lopt_22 : in STD_LOGIC;
    lopt_23 : out STD_LOGIC;
    lopt_24 : in STD_LOGIC;
    lopt_25 : in STD_LOGIC;
    lopt_26 : out STD_LOGIC;
    lopt_27 : out STD_LOGIC;
    lopt_28 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_176 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_176;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_176 is
  signal O30_out : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal \^lopt_12\ : STD_LOGIC;
  signal \^lopt_13\ : STD_LOGIC;
  signal \^lopt_14\ : STD_LOGIC;
  signal \^lopt_15\ : STD_LOGIC;
  signal \^lopt_16\ : STD_LOGIC;
  signal \^lopt_17\ : STD_LOGIC;
  signal \^lopt_18\ : STD_LOGIC;
  signal \^lopt_20\ : STD_LOGIC;
  signal \^lopt_21\ : STD_LOGIC;
  signal \^lopt_22\ : STD_LOGIC;
  signal \^lopt_23\ : STD_LOGIC;
  signal \^lopt_24\ : STD_LOGIC;
  signal \^lopt_25\ : STD_LOGIC;
  signal \^lopt_26\ : STD_LOGIC;
  signal \^lopt_27\ : STD_LOGIC;
  signal \^lopt_28\ : STD_LOGIC;
  signal lopt_29 : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal lopt_30 : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of CARRY4 : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of CARRY4 : label is "LO:O";
  attribute box_type : string;
  attribute box_type of CARRY4 : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_10\ <= lopt_9;
  \^lopt_12\ <= lopt_11;
  \^lopt_13\ <= lopt_12;
  \^lopt_20\ <= lopt_18;
  \^lopt_21\ <= lopt_19;
  \^lopt_23\ <= lopt_21;
  \^lopt_24\ <= lopt_22;
  \^lopt_26\ <= lopt_24;
  \^lopt_27\ <= lopt_25;
  \^lopt_3\ <= lopt_2;
  \^lopt_4\ <= lopt_3;
  \^lopt_6\ <= lopt_5;
  \^lopt_7\ <= lopt_6;
  \^lopt_9\ <= lopt_8;
  lopt_10 <= \^lopt_11\;
  lopt_13 <= \^lopt_14\;
  lopt_14 <= \^lopt_15\;
  lopt_15 <= \^lopt_16\;
  lopt_16 <= \^lopt_17\;
  lopt_17 <= \^lopt_18\;
  lopt_20 <= \^lopt_22\;
  lopt_23 <= \^lopt_25\;
  lopt_26 <= \^lopt_28\;
  lopt_27 <= lopt_29;
  lopt_28 <= lopt_30;
  lopt_4 <= \^lopt_5\;
  lopt_7 <= \^lopt_8\;
CARRY4: unisim.vcomponents.CARRY4
     port map (
      CI => \^lopt_11\,
      CO(3) => LO,
      CO(2) => \^lopt_25\,
      CO(1) => \^lopt_22\,
      CO(0) => \^lopt_18\,
      CYINIT => '0',
      DI(3) => '0',
      DI(2) => \^lopt_26\,
      DI(1) => \^lopt_23\,
      DI(0) => \^lopt_20\,
      O(3) => O30_out,
      O(2) => lopt_30,
      O(1) => lopt_29,
      O(0) => \^lopt_28\,
      S(3) => Q(0),
      S(2) => \^lopt_27\,
      S(1) => \^lopt_24\,
      S(0) => \^lopt_21\
    );
\Instr_Addr[1]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[1]\(0),
      I1 => O30_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[1]\(0)
    );
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => lopt_1,
      CO(3) => \^lopt_11\,
      CO(2) => \^lopt_8\,
      CO(1) => \^lopt_5\,
      CO(0) => lopt,
      CYINIT => '0',
      DI(3) => \^lopt_12\,
      DI(2) => \^lopt_9\,
      DI(1) => \^lopt_6\,
      DI(0) => \^lopt_3\,
      O(3) => \^lopt_17\,
      O(2) => \^lopt_16\,
      O(1) => \^lopt_15\,
      O(0) => \^lopt_14\,
      S(3) => \^lopt_13\,
      S(2) => \^lopt_10\,
      S(1) => \^lopt_7\,
      S(0) => \^lopt_4\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_177 is
  port (
    \Instr_Addr[20]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[20]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[21]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_177 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_177;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_177 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O68_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O68_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[20]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[20]\(0),
      I1 => O68_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[20]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_178 is
  port (
    \Instr_Addr[21]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[21]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[22]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_178 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_178;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_178 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O70_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O70_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[21]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[21]\(0),
      I1 => O70_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[21]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_179 is
  port (
    \Instr_Addr[22]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[22]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[23]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_179 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_179;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_179 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O72_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O72_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[22]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[22]\(0),
      I1 => O72_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[22]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_180 is
  port (
    \Instr_Addr[23]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[23]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[24]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_180 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_180;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_180 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O74_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O74_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[23]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[23]\(0),
      I1 => O74_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[23]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_181 is
  port (
    \Instr_Addr[24]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[24]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[25]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_181 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_181;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_181 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O76_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O76_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[24]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[24]\(0),
      I1 => O76_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[24]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_182 is
  port (
    \Instr_Addr[25]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[25]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[26]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_182 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_182;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_182 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O78_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O78_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[25]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[25]\(0),
      I1 => O78_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[25]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_183 is
  port (
    \Instr_Addr[26]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[26]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[27]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_183 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_183;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_183 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O80_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O80_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[26]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[26]\(0),
      I1 => O80_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[26]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_184 is
  port (
    \Instr_Addr[27]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[27]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[28]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_184 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_184;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_184 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O82_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O82_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[27]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[27]\(0),
      I1 => O82_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[27]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_185 is
  port (
    \Instr_Addr[28]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[29]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_185 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_185;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_185 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O84_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O84_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[28]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[28]\(0),
      I1 => O84_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[28]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_186 is
  port (
    \Instr_Addr[29]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[29]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    CI : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_186 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_186;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_186 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[29]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[29]\(0),
      I1 => O,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[29]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_187 is
  port (
    \Instr_Addr[2]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[2]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[3]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_187 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_187;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_187 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O32_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O32_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[2]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[2]\(0),
      I1 => O32_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[2]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_188 is
  port (
    \Instr_Addr[3]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[3]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[4]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_188 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_188;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_188 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O34_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O34_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[3]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[3]\(0),
      I1 => O34_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[3]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_189 is
  port (
    \Instr_Addr[4]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[4]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[5]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_189 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_189;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_189 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O36_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O36_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[4]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[4]\(0),
      I1 => O36_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[4]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_190 is
  port (
    \Instr_Addr[5]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[5]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[6]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_190 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_190;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_190 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O38_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O38_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[5]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[5]\(0),
      I1 => O38_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[5]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_191 is
  port (
    \Instr_Addr[6]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[6]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[7]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_191 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_191;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_191 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O40_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O40_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[6]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[6]\(0),
      I1 => O40_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[6]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_192 is
  port (
    \Instr_Addr[7]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[7]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[8]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_192 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_192;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_192 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O42_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O42_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[7]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[7]\(0),
      I1 => O42_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[7]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_193 is
  port (
    \Instr_Addr[8]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[8]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \if_pc_reg[9]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_193 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_193;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_193 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O44_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O44_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[8]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[8]\(0),
      I1 => O44_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[8]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_194 is
  port (
    \Instr_Addr[9]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[9]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    CI : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_194 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_194;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_194 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal O46_out : STD_LOGIC;
begin
  LO <= \^lo\;
  O46_out <= lopt_2;
  \^lo\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Instr_Addr[9]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[9]\(0),
      I1 => O46_out,
      I2 => ex_delayslot_Instr2,
      O => \Instr_Addr[9]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_270 is
  port (
    \LOCKSTEP_Out_reg[3769]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    addr_AddSub_31 : in STD_LOGIC;
    LO : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_270 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_270;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_270 is
  signal \NLW_Using_FPGA.Native_I2_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_I2_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_I2_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_I2_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I2_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I2_CARRY4\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native_I2_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3 downto 0) => \NLW_Using_FPGA.Native_I2_CARRY4_CO_UNCONNECTED\(3 downto 0),
      CYINIT => '0',
      DI(3 downto 0) => \NLW_Using_FPGA.Native_I2_CARRY4_DI_UNCONNECTED\(3 downto 0),
      O(3 downto 1) => \NLW_Using_FPGA.Native_I2_CARRY4_O_UNCONNECTED\(3 downto 1),
      O(0) => \LOCKSTEP_Out_reg[3769]\(0),
      S(3 downto 1) => \NLW_Using_FPGA.Native_I2_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => addr_AddSub_31
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_271 is
  port (
    LO : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3779]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : out STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : out STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : in STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : in STD_LOGIC;
    lopt_12 : in STD_LOGIC;
    lopt_13 : out STD_LOGIC;
    lopt_14 : out STD_LOGIC;
    lopt_15 : out STD_LOGIC;
    lopt_16 : out STD_LOGIC;
    lopt_17 : out STD_LOGIC;
    lopt_18 : in STD_LOGIC;
    lopt_19 : in STD_LOGIC;
    lopt_20 : out STD_LOGIC;
    lopt_21 : in STD_LOGIC;
    lopt_22 : in STD_LOGIC;
    lopt_23 : out STD_LOGIC;
    lopt_24 : in STD_LOGIC;
    lopt_25 : in STD_LOGIC;
    lopt_26 : out STD_LOGIC;
    lopt_27 : in STD_LOGIC;
    lopt_28 : in STD_LOGIC;
    lopt_29 : out STD_LOGIC;
    lopt_30 : out STD_LOGIC;
    lopt_31 : out STD_LOGIC;
    lopt_32 : out STD_LOGIC;
    lopt_33 : out STD_LOGIC;
    lopt_34 : in STD_LOGIC;
    lopt_35 : in STD_LOGIC;
    lopt_36 : out STD_LOGIC;
    lopt_37 : in STD_LOGIC;
    lopt_38 : in STD_LOGIC;
    lopt_39 : out STD_LOGIC;
    lopt_40 : in STD_LOGIC;
    lopt_41 : in STD_LOGIC;
    lopt_42 : out STD_LOGIC;
    lopt_43 : in STD_LOGIC;
    lopt_44 : in STD_LOGIC;
    lopt_45 : out STD_LOGIC;
    lopt_46 : out STD_LOGIC;
    lopt_47 : out STD_LOGIC;
    lopt_48 : out STD_LOGIC;
    lopt_49 : out STD_LOGIC;
    lopt_50 : in STD_LOGIC;
    lopt_51 : in STD_LOGIC;
    lopt_52 : out STD_LOGIC;
    lopt_53 : in STD_LOGIC;
    lopt_54 : in STD_LOGIC;
    lopt_55 : out STD_LOGIC;
    lopt_56 : in STD_LOGIC;
    lopt_57 : in STD_LOGIC;
    lopt_58 : out STD_LOGIC;
    lopt_59 : in STD_LOGIC;
    lopt_60 : in STD_LOGIC;
    lopt_61 : out STD_LOGIC;
    lopt_62 : out STD_LOGIC;
    lopt_63 : out STD_LOGIC;
    lopt_64 : out STD_LOGIC;
    lopt_65 : out STD_LOGIC;
    lopt_66 : in STD_LOGIC;
    lopt_67 : in STD_LOGIC;
    lopt_68 : out STD_LOGIC;
    lopt_69 : in STD_LOGIC;
    lopt_70 : in STD_LOGIC;
    lopt_71 : out STD_LOGIC;
    lopt_72 : in STD_LOGIC;
    lopt_73 : in STD_LOGIC;
    lopt_74 : out STD_LOGIC;
    lopt_75 : out STD_LOGIC;
    lopt_76 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_271 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_271;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_271 is
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal \^lopt_12\ : STD_LOGIC;
  signal \^lopt_13\ : STD_LOGIC;
  signal \^lopt_14\ : STD_LOGIC;
  signal \^lopt_15\ : STD_LOGIC;
  signal \^lopt_16\ : STD_LOGIC;
  signal \^lopt_17\ : STD_LOGIC;
  signal \^lopt_18\ : STD_LOGIC;
  signal \^lopt_20\ : STD_LOGIC;
  signal \^lopt_21\ : STD_LOGIC;
  signal \^lopt_22\ : STD_LOGIC;
  signal \^lopt_23\ : STD_LOGIC;
  signal \^lopt_24\ : STD_LOGIC;
  signal \^lopt_25\ : STD_LOGIC;
  signal \^lopt_26\ : STD_LOGIC;
  signal \^lopt_27\ : STD_LOGIC;
  signal \^lopt_28\ : STD_LOGIC;
  signal \^lopt_29\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_30\ : STD_LOGIC;
  signal \^lopt_31\ : STD_LOGIC;
  signal \^lopt_32\ : STD_LOGIC;
  signal \^lopt_33\ : STD_LOGIC;
  signal \^lopt_34\ : STD_LOGIC;
  signal \^lopt_35\ : STD_LOGIC;
  signal \^lopt_37\ : STD_LOGIC;
  signal \^lopt_38\ : STD_LOGIC;
  signal \^lopt_39\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_40\ : STD_LOGIC;
  signal \^lopt_41\ : STD_LOGIC;
  signal \^lopt_42\ : STD_LOGIC;
  signal \^lopt_43\ : STD_LOGIC;
  signal \^lopt_44\ : STD_LOGIC;
  signal \^lopt_45\ : STD_LOGIC;
  signal \^lopt_46\ : STD_LOGIC;
  signal \^lopt_47\ : STD_LOGIC;
  signal \^lopt_48\ : STD_LOGIC;
  signal \^lopt_49\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_50\ : STD_LOGIC;
  signal \^lopt_51\ : STD_LOGIC;
  signal \^lopt_52\ : STD_LOGIC;
  signal \^lopt_54\ : STD_LOGIC;
  signal \^lopt_55\ : STD_LOGIC;
  signal \^lopt_56\ : STD_LOGIC;
  signal \^lopt_57\ : STD_LOGIC;
  signal \^lopt_58\ : STD_LOGIC;
  signal \^lopt_59\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_60\ : STD_LOGIC;
  signal \^lopt_61\ : STD_LOGIC;
  signal \^lopt_62\ : STD_LOGIC;
  signal \^lopt_63\ : STD_LOGIC;
  signal \^lopt_64\ : STD_LOGIC;
  signal \^lopt_65\ : STD_LOGIC;
  signal \^lopt_66\ : STD_LOGIC;
  signal \^lopt_67\ : STD_LOGIC;
  signal \^lopt_68\ : STD_LOGIC;
  signal \^lopt_69\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_71\ : STD_LOGIC;
  signal \^lopt_72\ : STD_LOGIC;
  signal \^lopt_73\ : STD_LOGIC;
  signal \^lopt_74\ : STD_LOGIC;
  signal \^lopt_75\ : STD_LOGIC;
  signal \^lopt_76\ : STD_LOGIC;
  signal lopt_77 : STD_LOGIC;
  signal lopt_78 : STD_LOGIC;
  signal lopt_79 : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_80 : STD_LOGIC;
  signal lopt_81 : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of CARRY4 : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of CARRY4 : label is "LO:O";
  attribute box_type : string;
  attribute box_type of CARRY4 : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of CARRY4_1 : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP of CARRY4_1 : label is "LO:O";
  attribute box_type of CARRY4_1 : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of CARRY4_2 : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP of CARRY4_2 : label is "LO:O";
  attribute box_type of CARRY4_2 : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of CARRY4_3 : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP of CARRY4_3 : label is "LO:O";
  attribute box_type of CARRY4_3 : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_10\ <= lopt_9;
  \^lopt_12\ <= lopt_11;
  \^lopt_13\ <= lopt_12;
  \^lopt_20\ <= lopt_18;
  \^lopt_21\ <= lopt_19;
  \^lopt_23\ <= lopt_21;
  \^lopt_24\ <= lopt_22;
  \^lopt_26\ <= lopt_24;
  \^lopt_27\ <= lopt_25;
  \^lopt_29\ <= lopt_27;
  \^lopt_3\ <= lopt_2;
  \^lopt_30\ <= lopt_28;
  \^lopt_37\ <= lopt_34;
  \^lopt_38\ <= lopt_35;
  \^lopt_4\ <= lopt_3;
  \^lopt_40\ <= lopt_37;
  \^lopt_41\ <= lopt_38;
  \^lopt_43\ <= lopt_40;
  \^lopt_44\ <= lopt_41;
  \^lopt_46\ <= lopt_43;
  \^lopt_47\ <= lopt_44;
  \^lopt_54\ <= lopt_50;
  \^lopt_55\ <= lopt_51;
  \^lopt_57\ <= lopt_53;
  \^lopt_58\ <= lopt_54;
  \^lopt_6\ <= lopt_5;
  \^lopt_60\ <= lopt_56;
  \^lopt_61\ <= lopt_57;
  \^lopt_63\ <= lopt_59;
  \^lopt_64\ <= lopt_60;
  \^lopt_7\ <= lopt_6;
  \^lopt_71\ <= lopt_66;
  \^lopt_72\ <= lopt_67;
  \^lopt_74\ <= lopt_69;
  \^lopt_75\ <= lopt_70;
  \^lopt_9\ <= lopt_8;
  lopt_10 <= \^lopt_11\;
  lopt_13 <= \^lopt_14\;
  lopt_14 <= \^lopt_15\;
  lopt_15 <= \^lopt_16\;
  lopt_16 <= \^lopt_17\;
  lopt_17 <= \^lopt_18\;
  lopt_20 <= \^lopt_22\;
  lopt_23 <= \^lopt_25\;
  lopt_26 <= \^lopt_28\;
  lopt_29 <= \^lopt_31\;
  lopt_30 <= \^lopt_32\;
  lopt_31 <= \^lopt_33\;
  lopt_32 <= \^lopt_34\;
  lopt_33 <= \^lopt_35\;
  lopt_36 <= \^lopt_39\;
  lopt_39 <= \^lopt_42\;
  lopt_4 <= \^lopt_5\;
  lopt_42 <= \^lopt_45\;
  lopt_45 <= \^lopt_48\;
  lopt_46 <= \^lopt_49\;
  lopt_47 <= \^lopt_50\;
  lopt_48 <= \^lopt_51\;
  lopt_49 <= \^lopt_52\;
  lopt_52 <= \^lopt_56\;
  lopt_55 <= \^lopt_59\;
  lopt_58 <= \^lopt_62\;
  lopt_61 <= \^lopt_65\;
  lopt_62 <= \^lopt_66\;
  lopt_63 <= \^lopt_67\;
  lopt_64 <= \^lopt_68\;
  lopt_65 <= \^lopt_69\;
  lopt_68 <= \^lopt_73\;
  lopt_7 <= \^lopt_8\;
  lopt_71 <= \^lopt_76\;
  lopt_74 <= lopt_79;
  lopt_75 <= lopt_80;
  lopt_76 <= lopt_81;
  lopt_77 <= lopt_72;
  lopt_78 <= lopt_73;
CARRY4: unisim.vcomponents.CARRY4
     port map (
      CI => \^lopt_11\,
      CO(3) => \^lopt_28\,
      CO(2) => \^lopt_25\,
      CO(1) => \^lopt_22\,
      CO(0) => \^lopt_18\,
      CYINIT => '0',
      DI(3) => \^lopt_29\,
      DI(2) => \^lopt_26\,
      DI(1) => \^lopt_23\,
      DI(0) => \^lopt_20\,
      O(3) => \^lopt_34\,
      O(2) => \^lopt_33\,
      O(1) => \^lopt_32\,
      O(0) => \^lopt_31\,
      S(3) => \^lopt_30\,
      S(2) => \^lopt_27\,
      S(1) => \^lopt_24\,
      S(0) => \^lopt_21\
    );
CARRY4_1: unisim.vcomponents.CARRY4
     port map (
      CI => \^lopt_28\,
      CO(3) => \^lopt_45\,
      CO(2) => \^lopt_42\,
      CO(1) => \^lopt_39\,
      CO(0) => \^lopt_35\,
      CYINIT => '0',
      DI(3) => \^lopt_46\,
      DI(2) => \^lopt_43\,
      DI(1) => \^lopt_40\,
      DI(0) => \^lopt_37\,
      O(3) => \^lopt_51\,
      O(2) => \^lopt_50\,
      O(1) => \^lopt_49\,
      O(0) => \^lopt_48\,
      S(3) => \^lopt_47\,
      S(2) => \^lopt_44\,
      S(1) => \^lopt_41\,
      S(0) => \^lopt_38\
    );
CARRY4_2: unisim.vcomponents.CARRY4
     port map (
      CI => \^lopt_45\,
      CO(3) => \^lopt_62\,
      CO(2) => \^lopt_59\,
      CO(1) => \^lopt_56\,
      CO(0) => \^lopt_52\,
      CYINIT => '0',
      DI(3) => \^lopt_63\,
      DI(2) => \^lopt_60\,
      DI(1) => \^lopt_57\,
      DI(0) => \^lopt_54\,
      O(3) => \^lopt_68\,
      O(2) => \^lopt_67\,
      O(1) => \^lopt_66\,
      O(0) => \^lopt_65\,
      S(3) => \^lopt_64\,
      S(2) => \^lopt_61\,
      S(1) => \^lopt_58\,
      S(0) => \^lopt_55\
    );
CARRY4_3: unisim.vcomponents.CARRY4
     port map (
      CI => \^lopt_62\,
      CO(3) => \^lopt_76\,
      CO(2) => LO,
      CO(1) => \^lopt_73\,
      CO(0) => \^lopt_69\,
      CYINIT => '0',
      DI(3) => lopt_77,
      DI(2) => \Using_FPGA.Native\,
      DI(1) => \^lopt_74\,
      DI(0) => \^lopt_71\,
      O(3) => lopt_81,
      O(2) => \LOCKSTEP_Out_reg[3779]\(0),
      O(1) => lopt_80,
      O(0) => lopt_79,
      S(3) => lopt_78,
      S(2) => S,
      S(1) => \^lopt_75\,
      S(0) => \^lopt_72\
    );
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => lopt_1,
      CO(3) => \^lopt_11\,
      CO(2) => \^lopt_8\,
      CO(1) => \^lopt_5\,
      CO(0) => lopt,
      CYINIT => '0',
      DI(3) => \^lopt_12\,
      DI(2) => \^lopt_9\,
      DI(1) => \^lopt_6\,
      DI(0) => \^lopt_3\,
      O(3) => \^lopt_17\,
      O(2) => \^lopt_16\,
      O(1) => \^lopt_15\,
      O(0) => \^lopt_14\,
      S(3) => \^lopt_13\,
      S(2) => \^lopt_10\,
      S(1) => \^lopt_7\,
      S(0) => \^lopt_4\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_273 is
  port (
    LO : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3780]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_273 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_273;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_273 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3780]\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3780]\(0) <= \^lockstep_out_reg[3780]\(0);
  \^lo\ <= lopt;
  \^lockstep_out_reg[3780]\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_275 is
  port (
    LO : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3781]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_275 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_275;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_275 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3781]\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3781]\(0) <= \^lockstep_out_reg[3781]\(0);
  \^lo\ <= lopt;
  \^lockstep_out_reg[3781]\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_277 is
  port (
    LO : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3782]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_277 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_277;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_277 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3782]\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3782]\(0) <= \^lockstep_out_reg[3782]\(0);
  \^lo\ <= lopt;
  \^lockstep_out_reg[3782]\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_279 is
  port (
    LO : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3783]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_279 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_279;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_279 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3783]\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3783]\(0) <= \^lockstep_out_reg[3783]\(0);
  \^lo\ <= lopt;
  \^lockstep_out_reg[3783]\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_281 is
  port (
    LO : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3784]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_281 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_281;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_281 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3784]\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3784]\(0) <= \^lockstep_out_reg[3784]\(0);
  \^lo\ <= lopt;
  \^lockstep_out_reg[3784]\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_283 is
  port (
    \EX_Op3_reg[16]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3785]\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[16]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_exception_i_reg : in STD_LOGIC;
    wb_byte_access : in STD_LOGIC;
    \wb_read_lsb_1_sel_reg[0]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_283 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_283;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_283 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3785]\ : STD_LOGIC;
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 16 to 16 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3785]\ <= \^lockstep_out_reg[3785]\;
  \^lo\ <= lopt;
  wb_excep_return_addr(16) <= lopt_1;
\EX_Op3[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3785]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op3_sel(0),
      I4 => GPR_Op3(0),
      I5 => of_op3_sel(1),
      O => \EX_Op3_reg[16]\(0)
    );
\Trace_New_Reg_Value[16]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBB8B88"
    )
        port map (
      I0 => wb_excep_return_addr(16),
      I1 => wb_exception_i_reg,
      I2 => wb_byte_access,
      I3 => \wb_read_lsb_1_sel_reg[0]\,
      I4 => Q(0),
      O => \^lockstep_out_reg[3785]\
    );
\Using_FPGA.Native_i_1__57\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3785]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op1_sel(0),
      I4 => GPR_Op1(0),
      I5 => of_op1_sel(1),
      O => \EX_Branch_CMP_Op1_reg[16]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_285 is
  port (
    \EX_Op3_reg[17]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3786]\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[17]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[17]\ : out STD_LOGIC;
    LO : out STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_gpr_wr_dbg : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : in STD_LOGIC;
    DI : in STD_LOGIC;
    read_register_MSR_1_reg : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    wb_byte_access : in STD_LOGIC;
    \wb_read_lsb_1_sel_reg[0]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_285 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_285;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_285 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3786]\ : STD_LOGIC;
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 17 to 17 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3786]\ <= \^lockstep_out_reg[3786]\;
  \^lo\ <= lopt;
  wb_excep_return_addr(17) <= lopt_1;
\EX_Op3[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3786]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op3_sel(0),
      I4 => GPR_Op3(0),
      I5 => of_op3_sel(1),
      O => \EX_Op3_reg[17]\(0)
    );
\Trace_New_Reg_Value[17]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBB8B88"
    )
        port map (
      I0 => wb_excep_return_addr(17),
      I1 => wb_exception_i_reg,
      I2 => wb_byte_access,
      I3 => \wb_read_lsb_1_sel_reg[0]\,
      I4 => Q(0),
      O => \^lockstep_out_reg[3786]\
    );
\Using_FPGA.Native_i_1__56\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3786]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op1_sel(0),
      I4 => GPR_Op1(0),
      I5 => of_op1_sel(1),
      O => \EX_Branch_CMP_Op1_reg[17]\(0)
    );
\data_rd_reg[17]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^lockstep_out_reg[3786]\,
      I1 => wb_gpr_wr_dbg,
      I2 => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      I3 => DI,
      I4 => read_register_MSR_1_reg,
      O => \data_rd_reg_reg[17]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_287 is
  port (
    \EX_Op3_reg[18]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3787]\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[18]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[18]\ : out STD_LOGIC;
    LO : out STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_gpr_wr_dbg : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : in STD_LOGIC;
    DI : in STD_LOGIC;
    read_register_MSR_1_reg : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    wb_byte_access : in STD_LOGIC;
    \wb_read_lsb_1_sel_reg[0]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_287 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_287;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_287 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3787]\ : STD_LOGIC;
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 18 to 18 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3787]\ <= \^lockstep_out_reg[3787]\;
  \^lo\ <= lopt;
  wb_excep_return_addr(18) <= lopt_1;
\EX_Op3[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3787]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op3_sel(0),
      I4 => GPR_Op3(0),
      I5 => of_op3_sel(1),
      O => \EX_Op3_reg[18]\(0)
    );
\Trace_New_Reg_Value[18]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBB8B88"
    )
        port map (
      I0 => wb_excep_return_addr(18),
      I1 => wb_exception_i_reg,
      I2 => wb_byte_access,
      I3 => \wb_read_lsb_1_sel_reg[0]\,
      I4 => Q(0),
      O => \^lockstep_out_reg[3787]\
    );
\Using_FPGA.Native_i_1__55\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3787]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op1_sel(0),
      I4 => GPR_Op1(0),
      I5 => of_op1_sel(1),
      O => \EX_Branch_CMP_Op1_reg[18]\(0)
    );
\data_rd_reg[18]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^lockstep_out_reg[3787]\,
      I1 => wb_gpr_wr_dbg,
      I2 => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      I3 => DI,
      I4 => read_register_MSR_1_reg,
      O => \data_rd_reg_reg[18]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_289 is
  port (
    \EX_Op3_reg[19]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3788]\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[19]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[19]\ : out STD_LOGIC;
    LO : out STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_gpr_wr_dbg : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : in STD_LOGIC;
    DI : in STD_LOGIC;
    read_register_MSR_1_reg : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    wb_byte_access : in STD_LOGIC;
    \wb_read_lsb_1_sel_reg[0]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_289 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_289;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_289 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3788]\ : STD_LOGIC;
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 19 to 19 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3788]\ <= \^lockstep_out_reg[3788]\;
  \^lo\ <= lopt;
  wb_excep_return_addr(19) <= lopt_1;
\EX_Op3[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3788]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op3_sel(0),
      I4 => GPR_Op3(0),
      I5 => of_op3_sel(1),
      O => \EX_Op3_reg[19]\(0)
    );
\Trace_New_Reg_Value[19]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBB8B88"
    )
        port map (
      I0 => wb_excep_return_addr(19),
      I1 => wb_exception_i_reg,
      I2 => wb_byte_access,
      I3 => \wb_read_lsb_1_sel_reg[0]\,
      I4 => Q(0),
      O => \^lockstep_out_reg[3788]\
    );
\Using_FPGA.Native_i_1__54\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3788]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op1_sel(0),
      I4 => GPR_Op1(0),
      I5 => of_op1_sel(1),
      O => \EX_Branch_CMP_Op1_reg[19]\(0)
    );
\data_rd_reg[19]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^lockstep_out_reg[3788]\,
      I1 => wb_gpr_wr_dbg,
      I2 => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      I3 => DI,
      I4 => read_register_MSR_1_reg,
      O => \data_rd_reg_reg[19]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_291 is
  port (
    LO : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3770]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : out STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : out STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : in STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : in STD_LOGIC;
    lopt_12 : in STD_LOGIC;
    lopt_13 : out STD_LOGIC;
    lopt_14 : out STD_LOGIC;
    lopt_15 : out STD_LOGIC;
    lopt_16 : out STD_LOGIC;
    lopt_17 : out STD_LOGIC;
    lopt_18 : in STD_LOGIC;
    lopt_19 : in STD_LOGIC;
    lopt_20 : out STD_LOGIC;
    lopt_21 : in STD_LOGIC;
    lopt_22 : in STD_LOGIC;
    lopt_23 : out STD_LOGIC;
    lopt_24 : in STD_LOGIC;
    lopt_25 : in STD_LOGIC;
    lopt_26 : out STD_LOGIC;
    lopt_27 : out STD_LOGIC;
    lopt_28 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_291 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_291;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_291 is
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal \^lopt_12\ : STD_LOGIC;
  signal \^lopt_13\ : STD_LOGIC;
  signal \^lopt_14\ : STD_LOGIC;
  signal \^lopt_15\ : STD_LOGIC;
  signal \^lopt_16\ : STD_LOGIC;
  signal \^lopt_17\ : STD_LOGIC;
  signal \^lopt_18\ : STD_LOGIC;
  signal \^lopt_20\ : STD_LOGIC;
  signal \^lopt_21\ : STD_LOGIC;
  signal \^lopt_22\ : STD_LOGIC;
  signal \^lopt_23\ : STD_LOGIC;
  signal \^lopt_24\ : STD_LOGIC;
  signal \^lopt_25\ : STD_LOGIC;
  signal \^lopt_26\ : STD_LOGIC;
  signal \^lopt_27\ : STD_LOGIC;
  signal \^lopt_28\ : STD_LOGIC;
  signal lopt_29 : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal lopt_30 : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of CARRY4 : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of CARRY4 : label is "LO:O";
  attribute box_type : string;
  attribute box_type of CARRY4 : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_10\ <= lopt_9;
  \^lopt_12\ <= lopt_11;
  \^lopt_13\ <= lopt_12;
  \^lopt_20\ <= lopt_18;
  \^lopt_21\ <= lopt_19;
  \^lopt_23\ <= lopt_21;
  \^lopt_24\ <= lopt_22;
  \^lopt_26\ <= lopt_24;
  \^lopt_27\ <= lopt_25;
  \^lopt_3\ <= lopt_2;
  \^lopt_4\ <= lopt_3;
  \^lopt_6\ <= lopt_5;
  \^lopt_7\ <= lopt_6;
  \^lopt_9\ <= lopt_8;
  lopt_10 <= \^lopt_11\;
  lopt_13 <= \^lopt_14\;
  lopt_14 <= \^lopt_15\;
  lopt_15 <= \^lopt_16\;
  lopt_16 <= \^lopt_17\;
  lopt_17 <= \^lopt_18\;
  lopt_20 <= \^lopt_22\;
  lopt_23 <= \^lopt_25\;
  lopt_26 <= \^lopt_28\;
  lopt_27 <= lopt_29;
  lopt_28 <= lopt_30;
  lopt_4 <= \^lopt_5\;
  lopt_7 <= \^lopt_8\;
CARRY4: unisim.vcomponents.CARRY4
     port map (
      CI => \^lopt_11\,
      CO(3) => LO,
      CO(2) => \^lopt_25\,
      CO(1) => \^lopt_22\,
      CO(0) => \^lopt_18\,
      CYINIT => '0',
      DI(3) => \Using_FPGA.Native\,
      DI(2) => \^lopt_26\,
      DI(1) => \^lopt_23\,
      DI(0) => \^lopt_20\,
      O(3) => \LOCKSTEP_Out_reg[3770]\(0),
      O(2) => lopt_30,
      O(1) => lopt_29,
      O(0) => \^lopt_28\,
      S(3) => S,
      S(2) => \^lopt_27\,
      S(1) => \^lopt_24\,
      S(0) => \^lopt_21\
    );
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => lopt_1,
      CO(3) => \^lopt_11\,
      CO(2) => \^lopt_8\,
      CO(1) => \^lopt_5\,
      CO(0) => lopt,
      CYINIT => '0',
      DI(3) => \^lopt_12\,
      DI(2) => \^lopt_9\,
      DI(1) => \^lopt_6\,
      DI(0) => \^lopt_3\,
      O(3) => \^lopt_17\,
      O(2) => \^lopt_16\,
      O(1) => \^lopt_15\,
      O(0) => \^lopt_14\,
      S(3) => \^lopt_13\,
      S(2) => \^lopt_10\,
      S(1) => \^lopt_7\,
      S(0) => \^lopt_4\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_293 is
  port (
    \EX_Op3_reg[20]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3789]\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[20]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[20]\ : out STD_LOGIC;
    LO : out STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_gpr_wr_dbg : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : in STD_LOGIC;
    DI : in STD_LOGIC;
    read_register_MSR_1_reg : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    wb_byte_access : in STD_LOGIC;
    \wb_read_lsb_1_sel_reg[0]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_293 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_293;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_293 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3789]\ : STD_LOGIC;
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 20 to 20 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3789]\ <= \^lockstep_out_reg[3789]\;
  \^lo\ <= lopt;
  wb_excep_return_addr(20) <= lopt_1;
\EX_Op3[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3789]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op3_sel(0),
      I4 => GPR_Op3(0),
      I5 => of_op3_sel(1),
      O => \EX_Op3_reg[20]\(0)
    );
\Trace_New_Reg_Value[20]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBB8B88"
    )
        port map (
      I0 => wb_excep_return_addr(20),
      I1 => wb_exception_i_reg,
      I2 => wb_byte_access,
      I3 => \wb_read_lsb_1_sel_reg[0]\,
      I4 => Q(0),
      O => \^lockstep_out_reg[3789]\
    );
\Using_FPGA.Native_i_1__53\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3789]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op1_sel(0),
      I4 => GPR_Op1(0),
      I5 => of_op1_sel(1),
      O => \EX_Branch_CMP_Op1_reg[20]\(0)
    );
\data_rd_reg[20]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^lockstep_out_reg[3789]\,
      I1 => wb_gpr_wr_dbg,
      I2 => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      I3 => DI,
      I4 => read_register_MSR_1_reg,
      O => \data_rd_reg_reg[20]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_295 is
  port (
    \EX_Op3_reg[21]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3790]\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[21]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[21]\ : out STD_LOGIC;
    LO : out STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_gpr_wr_dbg : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : in STD_LOGIC;
    DI : in STD_LOGIC;
    read_register_MSR_1_reg : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    wb_byte_access : in STD_LOGIC;
    \wb_read_lsb_1_sel_reg[0]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_295 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_295;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_295 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3790]\ : STD_LOGIC;
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 21 to 21 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3790]\ <= \^lockstep_out_reg[3790]\;
  \^lo\ <= lopt;
  wb_excep_return_addr(21) <= lopt_1;
\EX_Op3[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3790]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op3_sel(0),
      I4 => GPR_Op3(0),
      I5 => of_op3_sel(1),
      O => \EX_Op3_reg[21]\(0)
    );
\Trace_New_Reg_Value[21]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBB8B88"
    )
        port map (
      I0 => wb_excep_return_addr(21),
      I1 => wb_exception_i_reg,
      I2 => wb_byte_access,
      I3 => \wb_read_lsb_1_sel_reg[0]\,
      I4 => Q(0),
      O => \^lockstep_out_reg[3790]\
    );
\Using_FPGA.Native_i_1__52\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3790]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op1_sel(0),
      I4 => GPR_Op1(0),
      I5 => of_op1_sel(1),
      O => \EX_Branch_CMP_Op1_reg[21]\(0)
    );
\data_rd_reg[21]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^lockstep_out_reg[3790]\,
      I1 => wb_gpr_wr_dbg,
      I2 => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      I3 => DI,
      I4 => read_register_MSR_1_reg,
      O => \data_rd_reg_reg[21]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_297 is
  port (
    \EX_Op3_reg[22]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3791]\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[22]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[22]\ : out STD_LOGIC;
    LO : out STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_gpr_wr_dbg : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : in STD_LOGIC;
    DI : in STD_LOGIC;
    read_register_MSR_1_reg : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    wb_byte_access : in STD_LOGIC;
    \wb_read_lsb_1_sel_reg[0]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_297 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_297;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_297 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3791]\ : STD_LOGIC;
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 22 to 22 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3791]\ <= \^lockstep_out_reg[3791]\;
  \^lo\ <= lopt;
  wb_excep_return_addr(22) <= lopt_1;
\EX_Op3[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3791]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op3_sel(0),
      I4 => GPR_Op3(0),
      I5 => of_op3_sel(1),
      O => \EX_Op3_reg[22]\(0)
    );
\Trace_New_Reg_Value[22]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBB8B88"
    )
        port map (
      I0 => wb_excep_return_addr(22),
      I1 => wb_exception_i_reg,
      I2 => wb_byte_access,
      I3 => \wb_read_lsb_1_sel_reg[0]\,
      I4 => Q(0),
      O => \^lockstep_out_reg[3791]\
    );
\Using_FPGA.Native_i_1__51\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3791]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op1_sel(0),
      I4 => GPR_Op1(0),
      I5 => of_op1_sel(1),
      O => \EX_Branch_CMP_Op1_reg[22]\(0)
    );
\data_rd_reg[22]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^lockstep_out_reg[3791]\,
      I1 => wb_gpr_wr_dbg,
      I2 => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      I3 => DI,
      I4 => read_register_MSR_1_reg,
      O => \data_rd_reg_reg[22]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_299 is
  port (
    \EX_Op3_reg[23]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3792]\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[23]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[23]\ : out STD_LOGIC;
    LO : out STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_gpr_wr_dbg : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : in STD_LOGIC;
    DI : in STD_LOGIC;
    read_register_MSR_1_reg : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    wb_byte_access : in STD_LOGIC;
    \wb_read_lsb_1_sel_reg[0]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_299 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_299;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_299 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3792]\ : STD_LOGIC;
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 23 to 23 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3792]\ <= \^lockstep_out_reg[3792]\;
  \^lo\ <= lopt;
  wb_excep_return_addr(23) <= lopt_1;
\EX_Op3[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3792]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op3_sel(0),
      I4 => GPR_Op3(0),
      I5 => of_op3_sel(1),
      O => \EX_Op3_reg[23]\(0)
    );
\Trace_New_Reg_Value[23]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBB8B88"
    )
        port map (
      I0 => wb_excep_return_addr(23),
      I1 => wb_exception_i_reg,
      I2 => wb_byte_access,
      I3 => \wb_read_lsb_1_sel_reg[0]\,
      I4 => Q(0),
      O => \^lockstep_out_reg[3792]\
    );
\Using_FPGA.Native_i_1__50\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3792]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op1_sel(0),
      I4 => GPR_Op1(0),
      I5 => of_op1_sel(1),
      O => \EX_Branch_CMP_Op1_reg[23]\(0)
    );
\data_rd_reg[23]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^lockstep_out_reg[3792]\,
      I1 => wb_gpr_wr_dbg,
      I2 => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      I3 => DI,
      I4 => read_register_MSR_1_reg,
      O => \data_rd_reg_reg[23]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_301 is
  port (
    \EX_Op3_reg[24]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3793]\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[24]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[24]\ : out STD_LOGIC;
    LO : out STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_gpr_wr_dbg : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : in STD_LOGIC;
    DI : in STD_LOGIC;
    read_register_MSR_1_reg : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    \wb_read_lsb_sel_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Use_DLMB.wb_dlmb_valid_read_data_reg[16]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[24]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_301 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_301;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_301 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3793]\ : STD_LOGIC;
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 24 to 24 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3793]\ <= \^lockstep_out_reg[3793]\;
  \^lo\ <= lopt;
  wb_excep_return_addr(24) <= lopt_1;
\EX_Op3[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3793]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op3_sel(0),
      I4 => GPR_Op3(0),
      I5 => of_op3_sel(1),
      O => \EX_Op3_reg[24]\(0)
    );
\Trace_New_Reg_Value[24]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBBBBB88B88"
    )
        port map (
      I0 => wb_excep_return_addr(24),
      I1 => wb_exception_i_reg,
      I2 => \wb_read_lsb_sel_reg[1]\(0),
      I3 => \Use_DLMB.wb_dlmb_valid_read_data_reg[16]\,
      I4 => \Use_DLMB.wb_dlmb_valid_read_data_reg[24]\,
      I5 => Q(0),
      O => \^lockstep_out_reg[3793]\
    );
\Using_FPGA.Native_i_1__49\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3793]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op1_sel(0),
      I4 => GPR_Op1(0),
      I5 => of_op1_sel(1),
      O => \EX_Branch_CMP_Op1_reg[24]\(0)
    );
\data_rd_reg[24]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^lockstep_out_reg[3793]\,
      I1 => wb_gpr_wr_dbg,
      I2 => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      I3 => DI,
      I4 => read_register_MSR_1_reg,
      O => \data_rd_reg_reg[24]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_303 is
  port (
    \EX_Op3_reg[25]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3794]\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[25]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[25]\ : out STD_LOGIC;
    LO : out STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_gpr_wr_dbg : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : in STD_LOGIC;
    DI : in STD_LOGIC;
    read_register_MSR_1_reg : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    \wb_read_lsb_sel_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Use_DLMB.wb_dlmb_valid_read_data_reg[17]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[25]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_303 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_303;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_303 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3794]\ : STD_LOGIC;
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 25 to 25 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3794]\ <= \^lockstep_out_reg[3794]\;
  \^lo\ <= lopt;
  wb_excep_return_addr(25) <= lopt_1;
\EX_Op3[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3794]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op3_sel(0),
      I4 => GPR_Op3(0),
      I5 => of_op3_sel(1),
      O => \EX_Op3_reg[25]\(0)
    );
\Trace_New_Reg_Value[25]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBBBBB88B88"
    )
        port map (
      I0 => wb_excep_return_addr(25),
      I1 => wb_exception_i_reg,
      I2 => \wb_read_lsb_sel_reg[1]\(0),
      I3 => \Use_DLMB.wb_dlmb_valid_read_data_reg[17]\,
      I4 => \Use_DLMB.wb_dlmb_valid_read_data_reg[25]\,
      I5 => Q(0),
      O => \^lockstep_out_reg[3794]\
    );
\Using_FPGA.Native_i_1__48\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3794]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op1_sel(0),
      I4 => GPR_Op1(0),
      I5 => of_op1_sel(1),
      O => \EX_Branch_CMP_Op1_reg[25]\(0)
    );
\data_rd_reg[25]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^lockstep_out_reg[3794]\,
      I1 => wb_gpr_wr_dbg,
      I2 => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      I3 => DI,
      I4 => read_register_MSR_1_reg,
      O => \data_rd_reg_reg[25]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_305 is
  port (
    \EX_Op3_reg[26]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3795]\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[26]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[26]\ : out STD_LOGIC;
    LO : out STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_gpr_wr_dbg : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : in STD_LOGIC;
    DI : in STD_LOGIC;
    read_register_MSR_1_reg : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    \wb_read_lsb_sel_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Use_DLMB.wb_dlmb_valid_read_data_reg[18]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[26]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_305 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_305;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_305 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3795]\ : STD_LOGIC;
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 26 to 26 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3795]\ <= \^lockstep_out_reg[3795]\;
  \^lo\ <= lopt;
  wb_excep_return_addr(26) <= lopt_1;
\EX_Op3[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3795]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op3_sel(0),
      I4 => GPR_Op3(0),
      I5 => of_op3_sel(1),
      O => \EX_Op3_reg[26]\(0)
    );
\Trace_New_Reg_Value[26]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBBBBB88B88"
    )
        port map (
      I0 => wb_excep_return_addr(26),
      I1 => wb_exception_i_reg,
      I2 => \wb_read_lsb_sel_reg[1]\(0),
      I3 => \Use_DLMB.wb_dlmb_valid_read_data_reg[18]\,
      I4 => \Use_DLMB.wb_dlmb_valid_read_data_reg[26]\,
      I5 => Q(0),
      O => \^lockstep_out_reg[3795]\
    );
\Using_FPGA.Native_i_1__47\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3795]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op1_sel(0),
      I4 => GPR_Op1(0),
      I5 => of_op1_sel(1),
      O => \EX_Branch_CMP_Op1_reg[26]\(0)
    );
\data_rd_reg[26]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^lockstep_out_reg[3795]\,
      I1 => wb_gpr_wr_dbg,
      I2 => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      I3 => DI,
      I4 => read_register_MSR_1_reg,
      O => \data_rd_reg_reg[26]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_307 is
  port (
    \EX_Op3_reg[27]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3796]\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[27]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[27]\ : out STD_LOGIC;
    LO : out STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_gpr_wr_dbg : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : in STD_LOGIC;
    DI : in STD_LOGIC;
    read_register_MSR_1_reg : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    \wb_read_lsb_sel_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Use_DLMB.wb_dlmb_valid_read_data_reg[19]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[27]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_307 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_307;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_307 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3796]\ : STD_LOGIC;
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 27 to 27 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3796]\ <= \^lockstep_out_reg[3796]\;
  \^lo\ <= lopt;
  wb_excep_return_addr(27) <= lopt_1;
\EX_Op3[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3796]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op3_sel(0),
      I4 => GPR_Op3(0),
      I5 => of_op3_sel(1),
      O => \EX_Op3_reg[27]\(0)
    );
\Trace_New_Reg_Value[27]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBBBBB88B88"
    )
        port map (
      I0 => wb_excep_return_addr(27),
      I1 => wb_exception_i_reg,
      I2 => \wb_read_lsb_sel_reg[1]\(0),
      I3 => \Use_DLMB.wb_dlmb_valid_read_data_reg[19]\,
      I4 => \Use_DLMB.wb_dlmb_valid_read_data_reg[27]\,
      I5 => Q(0),
      O => \^lockstep_out_reg[3796]\
    );
\Using_FPGA.Native_i_1__46\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3796]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op1_sel(0),
      I4 => GPR_Op1(0),
      I5 => of_op1_sel(1),
      O => \EX_Branch_CMP_Op1_reg[27]\(0)
    );
\data_rd_reg[27]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^lockstep_out_reg[3796]\,
      I1 => wb_gpr_wr_dbg,
      I2 => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      I3 => DI,
      I4 => read_register_MSR_1_reg,
      O => \data_rd_reg_reg[27]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_309 is
  port (
    \EX_Op3_reg[28]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3797]\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[28]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[28]\ : out STD_LOGIC;
    LO : out STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_gpr_wr_dbg : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : in STD_LOGIC;
    \wb_MSR_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    read_register_MSR_1_reg : in STD_LOGIC;
    DI : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    \wb_read_lsb_sel_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Use_DLMB.wb_dlmb_valid_read_data_reg[20]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[28]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_309 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_309;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_309 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3797]\ : STD_LOGIC;
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 28 to 28 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3797]\ <= \^lockstep_out_reg[3797]\;
  \^lo\ <= lopt;
  wb_excep_return_addr(28) <= lopt_1;
\EX_Op3[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3797]\,
      I1 => EX_Fwd(0),
      I2 => D(0),
      I3 => of_op3_sel(0),
      I4 => GPR_Op3(0),
      I5 => of_op3_sel(1),
      O => \EX_Op3_reg[28]\(0)
    );
\Trace_New_Reg_Value[28]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBBBBB88B88"
    )
        port map (
      I0 => wb_excep_return_addr(28),
      I1 => wb_exception_i_reg,
      I2 => \wb_read_lsb_sel_reg[1]\(0),
      I3 => \Use_DLMB.wb_dlmb_valid_read_data_reg[20]\,
      I4 => \Use_DLMB.wb_dlmb_valid_read_data_reg[28]\,
      I5 => Q(0),
      O => \^lockstep_out_reg[3797]\
    );
\Using_FPGA.Native_i_1__45\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3797]\,
      I1 => EX_Fwd(0),
      I2 => D(0),
      I3 => of_op1_sel(0),
      I4 => GPR_Op1(0),
      I5 => of_op1_sel(1),
      O => \EX_Branch_CMP_Op1_reg[28]\(0)
    );
\data_rd_reg[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BF80BFBFBF808080"
    )
        port map (
      I0 => \^lockstep_out_reg[3797]\,
      I1 => wb_gpr_wr_dbg,
      I2 => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      I3 => \wb_MSR_i_reg[28]\(0),
      I4 => read_register_MSR_1_reg,
      I5 => DI,
      O => \data_rd_reg_reg[28]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_311 is
  port (
    \EX_Op3_reg[29]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3798]\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[29]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[29]\ : out STD_LOGIC;
    LO : out STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_gpr_wr_dbg : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : in STD_LOGIC;
    \wb_MSR_i_reg[29]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    read_register_MSR_1_reg : in STD_LOGIC;
    DI : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    \wb_read_lsb_sel_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Use_DLMB.wb_dlmb_valid_read_data_reg[21]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[29]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_311 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_311;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_311 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3798]\ : STD_LOGIC;
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 29 to 29 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3798]\ <= \^lockstep_out_reg[3798]\;
  \^lo\ <= lopt;
  wb_excep_return_addr(29) <= lopt_1;
\EX_Op3[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3798]\,
      I1 => EX_Fwd(0),
      I2 => D(0),
      I3 => of_op3_sel(0),
      I4 => GPR_Op3(0),
      I5 => of_op3_sel(1),
      O => \EX_Op3_reg[29]\(0)
    );
\Trace_New_Reg_Value[29]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBBBBB88B88"
    )
        port map (
      I0 => wb_excep_return_addr(29),
      I1 => wb_exception_i_reg,
      I2 => \wb_read_lsb_sel_reg[1]\(0),
      I3 => \Use_DLMB.wb_dlmb_valid_read_data_reg[21]\,
      I4 => \Use_DLMB.wb_dlmb_valid_read_data_reg[29]\,
      I5 => Q(0),
      O => \^lockstep_out_reg[3798]\
    );
\Using_FPGA.Native_i_1__44\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3798]\,
      I1 => EX_Fwd(0),
      I2 => D(0),
      I3 => of_op1_sel(0),
      I4 => GPR_Op1(0),
      I5 => of_op1_sel(1),
      O => \EX_Branch_CMP_Op1_reg[29]\(0)
    );
\data_rd_reg[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BF80BFBFBF808080"
    )
        port map (
      I0 => \^lockstep_out_reg[3798]\,
      I1 => wb_gpr_wr_dbg,
      I2 => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      I3 => \wb_MSR_i_reg[29]\(0),
      I4 => read_register_MSR_1_reg,
      I5 => DI,
      O => \data_rd_reg_reg[29]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_313 is
  port (
    LO : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3771]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_313 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_313;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_313 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3771]\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3771]\(0) <= \^lockstep_out_reg[3771]\(0);
  \^lo\ <= lopt;
  \^lockstep_out_reg[3771]\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_315 is
  port (
    \EX_Op3_reg[30]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3799]\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[30]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[30]\ : out STD_LOGIC;
    LO : out STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_gpr_wr_dbg : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : in STD_LOGIC;
    \wb_MSR_i_reg[30]\ : in STD_LOGIC;
    read_register_MSR_1_reg : in STD_LOGIC;
    DI : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    \wb_read_lsb_sel_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Use_DLMB.wb_dlmb_valid_read_data_reg[22]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[30]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_315 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_315;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_315 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3799]\ : STD_LOGIC;
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 30 to 30 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3799]\ <= \^lockstep_out_reg[3799]\;
  \^lo\ <= lopt;
  wb_excep_return_addr(30) <= lopt_1;
\EX_Op3[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3799]\,
      I1 => EX_Fwd(0),
      I2 => D(0),
      I3 => of_op3_sel(0),
      I4 => GPR_Op3(0),
      I5 => of_op3_sel(1),
      O => \EX_Op3_reg[30]\(0)
    );
\Trace_New_Reg_Value[30]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBBBBB88B88"
    )
        port map (
      I0 => wb_excep_return_addr(30),
      I1 => wb_exception_i_reg,
      I2 => \wb_read_lsb_sel_reg[1]\(0),
      I3 => \Use_DLMB.wb_dlmb_valid_read_data_reg[22]\,
      I4 => \Use_DLMB.wb_dlmb_valid_read_data_reg[30]\,
      I5 => Q(0),
      O => \^lockstep_out_reg[3799]\
    );
\Using_FPGA.Native_i_1__43\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3799]\,
      I1 => EX_Fwd(0),
      I2 => D(0),
      I3 => of_op1_sel(0),
      I4 => GPR_Op1(0),
      I5 => of_op1_sel(1),
      O => \EX_Branch_CMP_Op1_reg[30]\(0)
    );
\data_rd_reg[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BF80BFBFBF808080"
    )
        port map (
      I0 => \^lockstep_out_reg[3799]\,
      I1 => wb_gpr_wr_dbg,
      I2 => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      I3 => \wb_MSR_i_reg[30]\,
      I4 => read_register_MSR_1_reg,
      I5 => DI,
      O => \data_rd_reg_reg[30]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_317 is
  port (
    \EX_Op3_reg[31]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \LOCKSTEP_Out_reg[3800]\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[31]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[31]\ : out STD_LOGIC;
    LO : out STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op3 : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_gpr_wr_dbg : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : in STD_LOGIC;
    DI : in STD_LOGIC;
    read_register_MSR_1_reg : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    \wb_read_lsb_sel_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Use_DLMB.wb_dlmb_valid_read_data_reg[23]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[31]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    CI : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_317 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_317;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_317 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3800]\ : STD_LOGIC;
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 31 to 31 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3800]\ <= \^lockstep_out_reg[3800]\;
  \^lo\ <= lopt;
  wb_excep_return_addr(31) <= lopt_1;
\EX_Op3[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3800]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op3_sel(0),
      I4 => GPR_Op3(0),
      I5 => of_op3_sel(1),
      O => \EX_Op3_reg[31]\(0)
    );
\Trace_New_Reg_Value[31]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBBBBB88B88"
    )
        port map (
      I0 => wb_excep_return_addr(31),
      I1 => wb_exception_i_reg,
      I2 => \wb_read_lsb_sel_reg[1]\(0),
      I3 => \Use_DLMB.wb_dlmb_valid_read_data_reg[23]\,
      I4 => \Use_DLMB.wb_dlmb_valid_read_data_reg[31]\,
      I5 => Q(0),
      O => \^lockstep_out_reg[3800]\
    );
\Using_FPGA.Native_i_1__42\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AACCAACCF0FFF000"
    )
        port map (
      I0 => \^lockstep_out_reg[3800]\,
      I1 => EX_Fwd(0),
      I2 => \Using_FPGA.Native\(0),
      I3 => of_op1_sel(0),
      I4 => GPR_Op1(0),
      I5 => of_op1_sel(1),
      O => \EX_Branch_CMP_Op1_reg[31]\(0)
    );
\data_rd_reg[31]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8080BF80"
    )
        port map (
      I0 => \^lockstep_out_reg[3800]\,
      I1 => wb_gpr_wr_dbg,
      I2 => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      I3 => DI,
      I4 => read_register_MSR_1_reg,
      O => \data_rd_reg_reg[31]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_319 is
  port (
    LO : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3772]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_319 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_319;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_319 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3772]\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3772]\(0) <= \^lockstep_out_reg[3772]\(0);
  \^lo\ <= lopt;
  \^lockstep_out_reg[3772]\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_321 is
  port (
    LO : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3773]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_321 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_321;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_321 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3773]\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3773]\(0) <= \^lockstep_out_reg[3773]\(0);
  \^lo\ <= lopt;
  \^lockstep_out_reg[3773]\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_323 is
  port (
    LO : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3774]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_323 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_323;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_323 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3774]\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3774]\(0) <= \^lockstep_out_reg[3774]\(0);
  \^lo\ <= lopt;
  \^lockstep_out_reg[3774]\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_325 is
  port (
    LO : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3775]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_325 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_325;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_325 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3775]\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3775]\(0) <= \^lockstep_out_reg[3775]\(0);
  \^lo\ <= lopt;
  \^lockstep_out_reg[3775]\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_327 is
  port (
    LO : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3776]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_327 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_327;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_327 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3776]\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3776]\(0) <= \^lockstep_out_reg[3776]\(0);
  \^lo\ <= lopt;
  \^lockstep_out_reg[3776]\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_329 is
  port (
    LO : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3777]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_329 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_329;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_329 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3777]\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3777]\(0) <= \^lockstep_out_reg[3777]\(0);
  \^lo\ <= lopt;
  \^lockstep_out_reg[3777]\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_331 is
  port (
    LO : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3778]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    CI : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_331 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_331;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_331 is
  signal \^lo\ : STD_LOGIC;
  signal \^lockstep_out_reg[3778]\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  LO <= \^lo\;
  \LOCKSTEP_Out_reg[3778]\(0) <= \^lockstep_out_reg[3778]\(0);
  \^lo\ <= lopt;
  \^lockstep_out_reg[3778]\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_450 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[9]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_450 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_450;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_450 is
  signal \^data_addr[9]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[9]\(0) <= \^data_addr[9]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[9]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_452 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[8]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_452 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_452;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_452 is
  signal \^data_addr[8]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[8]\(0) <= \^data_addr[8]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[8]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_454 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[7]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_454 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_454;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_454 is
  signal \^data_addr[7]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[7]\(0) <= \^data_addr[7]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[7]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_456 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[6]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_456 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_456;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_456 is
  signal \^data_addr[6]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[6]\(0) <= \^data_addr[6]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[6]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_458 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[5]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_458 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_458;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_458 is
  signal \^data_addr[5]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[5]\(0) <= \^data_addr[5]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[5]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_460 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[4]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_460 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_460;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_460 is
  signal \^data_addr[4]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[4]\(0) <= \^data_addr[4]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[4]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_462 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[3]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_462 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_462;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_462 is
  signal \^data_addr[3]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[3]\(0) <= \^data_addr[3]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[3]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_464 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \MEM_DataBus_Addr_reg[31]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_464 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_464;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_464 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^mem_databus_addr_reg[31]\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \MEM_DataBus_Addr_reg[31]\(0) <= \^mem_databus_addr_reg[31]\(0);
  \^ex_carryout\ <= lopt;
  \^mem_databus_addr_reg[31]\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_466 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \MEM_DataBus_Addr_reg[30]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_466 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_466;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_466 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^mem_databus_addr_reg[30]\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \MEM_DataBus_Addr_reg[30]\(0) <= \^mem_databus_addr_reg[30]\(0);
  \^ex_carryout\ <= lopt;
  \^mem_databus_addr_reg[30]\(0) <= lopt_1;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_468 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[2]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_468 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_468;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_468 is
  signal \^data_addr[2]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[2]\(0) <= \^data_addr[2]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[2]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_470 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[29]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_470 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_470;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_470 is
  signal \^data_addr[29]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[29]\(0) <= \^data_addr[29]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[29]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_472 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[28]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_472 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_472;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_472 is
  signal \^data_addr[28]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[28]\(0) <= \^data_addr[28]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[28]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_474 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[27]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_474 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_474;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_474 is
  signal \^data_addr[27]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[27]\(0) <= \^data_addr[27]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[27]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_476 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[26]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_476 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_476;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_476 is
  signal \^data_addr[26]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[26]\(0) <= \^data_addr[26]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[26]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_478 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[25]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_478 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_478;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_478 is
  signal \^data_addr[25]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[25]\(0) <= \^data_addr[25]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[25]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_480 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[24]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_480 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_480;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_480 is
  signal \^data_addr[24]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[24]\(0) <= \^data_addr[24]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[24]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_482 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[23]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_482 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_482;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_482 is
  signal \^data_addr[23]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[23]\(0) <= \^data_addr[23]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[23]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_484 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[22]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_484 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_484;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_484 is
  signal \^data_addr[22]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[22]\(0) <= \^data_addr[22]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[22]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_486 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[21]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_486 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_486;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_486 is
  signal \^data_addr[21]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[21]\(0) <= \^data_addr[21]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[21]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_488 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[20]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_488 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_488;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_488 is
  signal \^data_addr[20]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[20]\(0) <= \^data_addr[20]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[20]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_490 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[1]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_490 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_490;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_490 is
  signal \^data_addr[1]\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  \Data_Addr[1]\(0) <= \^data_addr[1]\(0);
  \^data_addr[1]\(0) <= lopt;
  EX_CarryOut <= 'Z';
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_492 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[19]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_492 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_492;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_492 is
  signal \^data_addr[19]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[19]\(0) <= \^data_addr[19]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[19]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_494 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[18]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_494 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_494;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_494 is
  signal \^data_addr[18]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[18]\(0) <= \^data_addr[18]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[18]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_496 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[17]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_496 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_496;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_496 is
  signal \^data_addr[17]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[17]\(0) <= \^data_addr[17]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[17]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_498 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[16]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_498 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_498;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_498 is
  signal \^data_addr[16]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[16]\(0) <= \^data_addr[16]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[16]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_500 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[15]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_500 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_500;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_500 is
  signal \^data_addr[15]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[15]\(0) <= \^data_addr[15]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[15]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_502 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[14]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_502 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_502;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_502 is
  signal \^data_addr[14]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[14]\(0) <= \^data_addr[14]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[14]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_504 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[13]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_504 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_504;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_504 is
  signal \^data_addr[13]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[13]\(0) <= \^data_addr[13]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[13]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_506 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[12]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_506 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_506;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_506 is
  signal \^data_addr[12]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[12]\(0) <= \^data_addr[12]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[12]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_508 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[11]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_508 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_508;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_508 is
  signal \^data_addr[11]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[11]\(0) <= \^data_addr[11]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[11]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_510 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[10]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_510 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_510;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_510 is
  signal \^data_addr[10]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_carryout\ : STD_LOGIC;
begin
  \Data_Addr[10]\(0) <= \^data_addr[10]\(0);
  EX_CarryOut <= \^ex_carryout\;
  \^data_addr[10]\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXCY_XORCY_511 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Data_Addr[0]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    CI : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : out STD_LOGIC;
    lopt_9 : in STD_LOGIC;
    lopt_10 : in STD_LOGIC;
    lopt_11 : out STD_LOGIC;
    lopt_12 : out STD_LOGIC;
    lopt_13 : in STD_LOGIC;
    lopt_14 : in STD_LOGIC;
    lopt_15 : out STD_LOGIC;
    lopt_16 : in STD_LOGIC;
    lopt_17 : in STD_LOGIC;
    lopt_18 : out STD_LOGIC;
    lopt_19 : in STD_LOGIC;
    lopt_20 : in STD_LOGIC;
    lopt_21 : out STD_LOGIC;
    lopt_22 : in STD_LOGIC;
    lopt_23 : in STD_LOGIC;
    lopt_24 : out STD_LOGIC;
    lopt_25 : out STD_LOGIC;
    lopt_26 : out STD_LOGIC;
    lopt_27 : out STD_LOGIC;
    lopt_28 : out STD_LOGIC;
    lopt_29 : in STD_LOGIC;
    lopt_30 : in STD_LOGIC;
    lopt_31 : out STD_LOGIC;
    lopt_32 : in STD_LOGIC;
    lopt_33 : in STD_LOGIC;
    lopt_34 : out STD_LOGIC;
    lopt_35 : in STD_LOGIC;
    lopt_36 : in STD_LOGIC;
    lopt_37 : out STD_LOGIC;
    lopt_38 : in STD_LOGIC;
    lopt_39 : in STD_LOGIC;
    lopt_40 : out STD_LOGIC;
    lopt_41 : out STD_LOGIC;
    lopt_42 : out STD_LOGIC;
    lopt_43 : out STD_LOGIC;
    lopt_44 : out STD_LOGIC;
    lopt_45 : in STD_LOGIC;
    lopt_46 : in STD_LOGIC;
    lopt_47 : out STD_LOGIC;
    lopt_48 : in STD_LOGIC;
    lopt_49 : in STD_LOGIC;
    lopt_50 : out STD_LOGIC;
    lopt_51 : in STD_LOGIC;
    lopt_52 : in STD_LOGIC;
    lopt_53 : out STD_LOGIC;
    lopt_54 : in STD_LOGIC;
    lopt_55 : in STD_LOGIC;
    lopt_56 : out STD_LOGIC;
    lopt_57 : out STD_LOGIC;
    lopt_58 : out STD_LOGIC;
    lopt_59 : out STD_LOGIC;
    lopt_60 : out STD_LOGIC;
    lopt_61 : in STD_LOGIC;
    lopt_62 : in STD_LOGIC;
    lopt_63 : out STD_LOGIC;
    lopt_64 : in STD_LOGIC;
    lopt_65 : in STD_LOGIC;
    lopt_66 : out STD_LOGIC;
    lopt_67 : in STD_LOGIC;
    lopt_68 : in STD_LOGIC;
    lopt_69 : out STD_LOGIC;
    lopt_70 : in STD_LOGIC;
    lopt_71 : in STD_LOGIC;
    lopt_72 : out STD_LOGIC;
    lopt_73 : out STD_LOGIC;
    lopt_74 : out STD_LOGIC;
    lopt_75 : out STD_LOGIC;
    lopt_76 : out STD_LOGIC;
    lopt_77 : in STD_LOGIC;
    lopt_78 : in STD_LOGIC;
    lopt_79 : out STD_LOGIC;
    lopt_80 : in STD_LOGIC;
    lopt_81 : in STD_LOGIC;
    lopt_82 : out STD_LOGIC;
    lopt_83 : in STD_LOGIC;
    lopt_84 : in STD_LOGIC;
    lopt_85 : out STD_LOGIC;
    lopt_86 : in STD_LOGIC;
    lopt_87 : in STD_LOGIC;
    lopt_88 : out STD_LOGIC;
    lopt_89 : out STD_LOGIC;
    lopt_90 : out STD_LOGIC;
    lopt_91 : out STD_LOGIC;
    lopt_92 : out STD_LOGIC;
    lopt_93 : in STD_LOGIC;
    lopt_94 : in STD_LOGIC;
    lopt_95 : out STD_LOGIC;
    lopt_96 : in STD_LOGIC;
    lopt_97 : in STD_LOGIC;
    lopt_98 : out STD_LOGIC;
    lopt_99 : in STD_LOGIC;
    lopt_100 : in STD_LOGIC;
    lopt_101 : out STD_LOGIC;
    lopt_102 : in STD_LOGIC;
    lopt_103 : in STD_LOGIC;
    lopt_104 : out STD_LOGIC;
    lopt_105 : out STD_LOGIC;
    lopt_106 : out STD_LOGIC;
    lopt_107 : out STD_LOGIC;
    lopt_108 : out STD_LOGIC;
    lopt_109 : in STD_LOGIC;
    lopt_110 : in STD_LOGIC;
    lopt_111 : out STD_LOGIC;
    lopt_112 : in STD_LOGIC;
    lopt_113 : in STD_LOGIC;
    lopt_114 : out STD_LOGIC;
    lopt_115 : in STD_LOGIC;
    lopt_116 : in STD_LOGIC;
    lopt_117 : out STD_LOGIC;
    lopt_118 : in STD_LOGIC;
    lopt_119 : in STD_LOGIC;
    lopt_120 : out STD_LOGIC;
    lopt_121 : out STD_LOGIC;
    lopt_122 : out STD_LOGIC;
    lopt_123 : out STD_LOGIC;
    lopt_124 : out STD_LOGIC;
    lopt_125 : in STD_LOGIC;
    lopt_126 : in STD_LOGIC;
    lopt_127 : in STD_LOGIC;
    lopt_128 : in STD_LOGIC;
    lopt_129 : out STD_LOGIC;
    lopt_130 : in STD_LOGIC;
    lopt_131 : in STD_LOGIC;
    lopt_132 : out STD_LOGIC;
    lopt_133 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXCY_XORCY_511 : entity is "MB_MUXCY_XORCY";
end system_microblaze_0_0_MB_MUXCY_XORCY_511;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXCY_XORCY_511 is
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_100\ : STD_LOGIC;
  signal \^lopt_101\ : STD_LOGIC;
  signal \^lopt_102\ : STD_LOGIC;
  signal \^lopt_103\ : STD_LOGIC;
  signal \^lopt_104\ : STD_LOGIC;
  signal \^lopt_105\ : STD_LOGIC;
  signal \^lopt_106\ : STD_LOGIC;
  signal \^lopt_107\ : STD_LOGIC;
  signal \^lopt_108\ : STD_LOGIC;
  signal \^lopt_109\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal \^lopt_110\ : STD_LOGIC;
  signal \^lopt_111\ : STD_LOGIC;
  signal \^lopt_112\ : STD_LOGIC;
  signal \^lopt_113\ : STD_LOGIC;
  signal \^lopt_114\ : STD_LOGIC;
  signal \^lopt_115\ : STD_LOGIC;
  signal \^lopt_117\ : STD_LOGIC;
  signal \^lopt_118\ : STD_LOGIC;
  signal \^lopt_119\ : STD_LOGIC;
  signal \^lopt_12\ : STD_LOGIC;
  signal \^lopt_120\ : STD_LOGIC;
  signal \^lopt_121\ : STD_LOGIC;
  signal \^lopt_122\ : STD_LOGIC;
  signal \^lopt_123\ : STD_LOGIC;
  signal \^lopt_124\ : STD_LOGIC;
  signal \^lopt_125\ : STD_LOGIC;
  signal \^lopt_126\ : STD_LOGIC;
  signal \^lopt_127\ : STD_LOGIC;
  signal \^lopt_128\ : STD_LOGIC;
  signal \^lopt_129\ : STD_LOGIC;
  signal \^lopt_13\ : STD_LOGIC;
  signal \^lopt_130\ : STD_LOGIC;
  signal \^lopt_131\ : STD_LOGIC;
  signal \^lopt_132\ : STD_LOGIC;
  signal lopt_134 : STD_LOGIC;
  signal lopt_135 : STD_LOGIC;
  signal lopt_136 : STD_LOGIC;
  signal lopt_137 : STD_LOGIC;
  signal lopt_138 : STD_LOGIC;
  signal lopt_139 : STD_LOGIC;
  signal lopt_140 : STD_LOGIC;
  signal lopt_141 : STD_LOGIC;
  signal lopt_142 : STD_LOGIC;
  signal \^lopt_15\ : STD_LOGIC;
  signal \^lopt_16\ : STD_LOGIC;
  signal \^lopt_17\ : STD_LOGIC;
  signal \^lopt_18\ : STD_LOGIC;
  signal \^lopt_19\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_20\ : STD_LOGIC;
  signal \^lopt_21\ : STD_LOGIC;
  signal \^lopt_22\ : STD_LOGIC;
  signal \^lopt_23\ : STD_LOGIC;
  signal \^lopt_24\ : STD_LOGIC;
  signal \^lopt_25\ : STD_LOGIC;
  signal \^lopt_26\ : STD_LOGIC;
  signal \^lopt_27\ : STD_LOGIC;
  signal \^lopt_28\ : STD_LOGIC;
  signal \^lopt_29\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_30\ : STD_LOGIC;
  signal \^lopt_32\ : STD_LOGIC;
  signal \^lopt_33\ : STD_LOGIC;
  signal \^lopt_34\ : STD_LOGIC;
  signal \^lopt_35\ : STD_LOGIC;
  signal \^lopt_36\ : STD_LOGIC;
  signal \^lopt_37\ : STD_LOGIC;
  signal \^lopt_38\ : STD_LOGIC;
  signal \^lopt_39\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_40\ : STD_LOGIC;
  signal \^lopt_41\ : STD_LOGIC;
  signal \^lopt_42\ : STD_LOGIC;
  signal \^lopt_43\ : STD_LOGIC;
  signal \^lopt_44\ : STD_LOGIC;
  signal \^lopt_45\ : STD_LOGIC;
  signal \^lopt_46\ : STD_LOGIC;
  signal \^lopt_47\ : STD_LOGIC;
  signal \^lopt_49\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_50\ : STD_LOGIC;
  signal \^lopt_51\ : STD_LOGIC;
  signal \^lopt_52\ : STD_LOGIC;
  signal \^lopt_53\ : STD_LOGIC;
  signal \^lopt_54\ : STD_LOGIC;
  signal \^lopt_55\ : STD_LOGIC;
  signal \^lopt_56\ : STD_LOGIC;
  signal \^lopt_57\ : STD_LOGIC;
  signal \^lopt_58\ : STD_LOGIC;
  signal \^lopt_59\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_60\ : STD_LOGIC;
  signal \^lopt_61\ : STD_LOGIC;
  signal \^lopt_62\ : STD_LOGIC;
  signal \^lopt_63\ : STD_LOGIC;
  signal \^lopt_64\ : STD_LOGIC;
  signal \^lopt_66\ : STD_LOGIC;
  signal \^lopt_67\ : STD_LOGIC;
  signal \^lopt_68\ : STD_LOGIC;
  signal \^lopt_69\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_70\ : STD_LOGIC;
  signal \^lopt_71\ : STD_LOGIC;
  signal \^lopt_72\ : STD_LOGIC;
  signal \^lopt_73\ : STD_LOGIC;
  signal \^lopt_74\ : STD_LOGIC;
  signal \^lopt_75\ : STD_LOGIC;
  signal \^lopt_76\ : STD_LOGIC;
  signal \^lopt_77\ : STD_LOGIC;
  signal \^lopt_78\ : STD_LOGIC;
  signal \^lopt_79\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_80\ : STD_LOGIC;
  signal \^lopt_81\ : STD_LOGIC;
  signal \^lopt_83\ : STD_LOGIC;
  signal \^lopt_84\ : STD_LOGIC;
  signal \^lopt_85\ : STD_LOGIC;
  signal \^lopt_86\ : STD_LOGIC;
  signal \^lopt_87\ : STD_LOGIC;
  signal \^lopt_88\ : STD_LOGIC;
  signal \^lopt_89\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal \^lopt_90\ : STD_LOGIC;
  signal \^lopt_91\ : STD_LOGIC;
  signal \^lopt_92\ : STD_LOGIC;
  signal \^lopt_93\ : STD_LOGIC;
  signal \^lopt_94\ : STD_LOGIC;
  signal \^lopt_95\ : STD_LOGIC;
  signal \^lopt_96\ : STD_LOGIC;
  signal \^lopt_97\ : STD_LOGIC;
  signal \^lopt_98\ : STD_LOGIC;
  signal NLW_CARRY4_6_CO_UNCONNECTED : STD_LOGIC_VECTOR ( 1 to 1 );
  signal NLW_CARRY4_6_O_UNCONNECTED : STD_LOGIC_VECTOR ( 2 to 2 );
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of CARRY4 : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of CARRY4 : label is "LO:O";
  attribute box_type : string;
  attribute box_type of CARRY4 : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of CARRY4_1 : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP of CARRY4_1 : label is "LO:O";
  attribute box_type of CARRY4_1 : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of CARRY4_2 : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP of CARRY4_2 : label is "LO:O";
  attribute box_type of CARRY4_2 : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of CARRY4_3 : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP of CARRY4_3 : label is "LO:O";
  attribute box_type of CARRY4_3 : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of CARRY4_4 : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP of CARRY4_4 : label is "LO:O";
  attribute box_type of CARRY4_4 : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of CARRY4_5 : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP of CARRY4_5 : label is "LO:O";
  attribute box_type of CARRY4_5 : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of CARRY4_6 : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP of CARRY4_6 : label is "LO:O";
  attribute box_type of CARRY4_6 : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_10\ <= lopt_9;
  \^lopt_100\ <= lopt_93;
  \^lopt_101\ <= lopt_94;
  \^lopt_103\ <= lopt_96;
  \^lopt_104\ <= lopt_97;
  \^lopt_106\ <= lopt_99;
  \^lopt_107\ <= lopt_100;
  \^lopt_109\ <= lopt_102;
  \^lopt_11\ <= lopt_10;
  \^lopt_110\ <= lopt_103;
  \^lopt_117\ <= lopt_109;
  \^lopt_118\ <= lopt_110;
  \^lopt_120\ <= lopt_112;
  \^lopt_121\ <= lopt_113;
  \^lopt_123\ <= lopt_115;
  \^lopt_124\ <= lopt_116;
  \^lopt_126\ <= lopt_118;
  \^lopt_127\ <= lopt_119;
  \^lopt_15\ <= lopt_13;
  \^lopt_16\ <= lopt_14;
  \^lopt_18\ <= lopt_16;
  \^lopt_19\ <= lopt_17;
  \^lopt_2\ <= lopt_1;
  \^lopt_21\ <= lopt_19;
  \^lopt_22\ <= lopt_20;
  \^lopt_24\ <= lopt_22;
  \^lopt_25\ <= lopt_23;
  \^lopt_3\ <= lopt_2;
  \^lopt_32\ <= lopt_29;
  \^lopt_33\ <= lopt_30;
  \^lopt_35\ <= lopt_32;
  \^lopt_36\ <= lopt_33;
  \^lopt_38\ <= lopt_35;
  \^lopt_39\ <= lopt_36;
  \^lopt_4\ <= lopt_3;
  \^lopt_41\ <= lopt_38;
  \^lopt_42\ <= lopt_39;
  \^lopt_49\ <= lopt_45;
  \^lopt_5\ <= lopt_4;
  \^lopt_50\ <= lopt_46;
  \^lopt_52\ <= lopt_48;
  \^lopt_53\ <= lopt_49;
  \^lopt_55\ <= lopt_51;
  \^lopt_56\ <= lopt_52;
  \^lopt_58\ <= lopt_54;
  \^lopt_59\ <= lopt_55;
  \^lopt_66\ <= lopt_61;
  \^lopt_67\ <= lopt_62;
  \^lopt_69\ <= lopt_64;
  \^lopt_7\ <= lopt_6;
  \^lopt_70\ <= lopt_65;
  \^lopt_72\ <= lopt_67;
  \^lopt_73\ <= lopt_68;
  \^lopt_75\ <= lopt_70;
  \^lopt_76\ <= lopt_71;
  \^lopt_8\ <= lopt_7;
  \^lopt_83\ <= lopt_77;
  \^lopt_84\ <= lopt_78;
  \^lopt_86\ <= lopt_80;
  \^lopt_87\ <= lopt_81;
  \^lopt_89\ <= lopt_83;
  \^lopt_90\ <= lopt_84;
  \^lopt_92\ <= lopt_86;
  \^lopt_93\ <= lopt_87;
  lopt_101 <= \^lopt_108\;
  lopt_104 <= \^lopt_111\;
  lopt_105 <= \^lopt_112\;
  lopt_106 <= \^lopt_113\;
  lopt_107 <= \^lopt_114\;
  lopt_108 <= \^lopt_115\;
  lopt_11 <= \^lopt_12\;
  lopt_111 <= \^lopt_119\;
  lopt_114 <= \^lopt_122\;
  lopt_117 <= \^lopt_125\;
  lopt_12 <= \^lopt_13\;
  lopt_120 <= \^lopt_128\;
  lopt_121 <= \^lopt_129\;
  lopt_122 <= \^lopt_130\;
  lopt_123 <= \^lopt_131\;
  lopt_124 <= \^lopt_132\;
  lopt_129 <= lopt_138;
  lopt_132 <= lopt_141;
  lopt_133 <= lopt_142;
  lopt_134 <= lopt_125;
  lopt_135 <= lopt_126;
  lopt_136 <= lopt_127;
  lopt_137 <= lopt_128;
  lopt_139 <= lopt_130;
  lopt_140 <= lopt_131;
  lopt_15 <= \^lopt_17\;
  lopt_18 <= \^lopt_20\;
  lopt_21 <= \^lopt_23\;
  lopt_24 <= \^lopt_26\;
  lopt_25 <= \^lopt_27\;
  lopt_26 <= \^lopt_28\;
  lopt_27 <= \^lopt_29\;
  lopt_28 <= \^lopt_30\;
  lopt_31 <= \^lopt_34\;
  lopt_34 <= \^lopt_37\;
  lopt_37 <= \^lopt_40\;
  lopt_40 <= \^lopt_43\;
  lopt_41 <= \^lopt_44\;
  lopt_42 <= \^lopt_45\;
  lopt_43 <= \^lopt_46\;
  lopt_44 <= \^lopt_47\;
  lopt_47 <= \^lopt_51\;
  lopt_5 <= \^lopt_6\;
  lopt_50 <= \^lopt_54\;
  lopt_53 <= \^lopt_57\;
  lopt_56 <= \^lopt_60\;
  lopt_57 <= \^lopt_61\;
  lopt_58 <= \^lopt_62\;
  lopt_59 <= \^lopt_63\;
  lopt_60 <= \^lopt_64\;
  lopt_63 <= \^lopt_68\;
  lopt_66 <= \^lopt_71\;
  lopt_69 <= \^lopt_74\;
  lopt_72 <= \^lopt_77\;
  lopt_73 <= \^lopt_78\;
  lopt_74 <= \^lopt_79\;
  lopt_75 <= \^lopt_80\;
  lopt_76 <= \^lopt_81\;
  lopt_79 <= \^lopt_85\;
  lopt_8 <= \^lopt_9\;
  lopt_82 <= \^lopt_88\;
  lopt_85 <= \^lopt_91\;
  lopt_88 <= \^lopt_94\;
  lopt_89 <= \^lopt_95\;
  lopt_90 <= \^lopt_96\;
  lopt_91 <= \^lopt_97\;
  lopt_92 <= \^lopt_98\;
  lopt_95 <= \^lopt_102\;
  lopt_98 <= \^lopt_105\;
CARRY4: unisim.vcomponents.CARRY4
     port map (
      CI => \^lopt_23\,
      CO(3) => \^lopt_40\,
      CO(2) => \^lopt_37\,
      CO(1) => \^lopt_34\,
      CO(0) => \^lopt_30\,
      CYINIT => '0',
      DI(3) => \^lopt_41\,
      DI(2) => \^lopt_38\,
      DI(1) => \^lopt_35\,
      DI(0) => \^lopt_32\,
      O(3) => \^lopt_46\,
      O(2) => \^lopt_45\,
      O(1) => \^lopt_44\,
      O(0) => \^lopt_43\,
      S(3) => \^lopt_42\,
      S(2) => \^lopt_39\,
      S(1) => \^lopt_36\,
      S(0) => \^lopt_33\
    );
CARRY4_1: unisim.vcomponents.CARRY4
     port map (
      CI => \^lopt_40\,
      CO(3) => \^lopt_57\,
      CO(2) => \^lopt_54\,
      CO(1) => \^lopt_51\,
      CO(0) => \^lopt_47\,
      CYINIT => '0',
      DI(3) => \^lopt_58\,
      DI(2) => \^lopt_55\,
      DI(1) => \^lopt_52\,
      DI(0) => \^lopt_49\,
      O(3) => \^lopt_63\,
      O(2) => \^lopt_62\,
      O(1) => \^lopt_61\,
      O(0) => \^lopt_60\,
      S(3) => \^lopt_59\,
      S(2) => \^lopt_56\,
      S(1) => \^lopt_53\,
      S(0) => \^lopt_50\
    );
CARRY4_2: unisim.vcomponents.CARRY4
     port map (
      CI => \^lopt_57\,
      CO(3) => \^lopt_74\,
      CO(2) => \^lopt_71\,
      CO(1) => \^lopt_68\,
      CO(0) => \^lopt_64\,
      CYINIT => '0',
      DI(3) => \^lopt_75\,
      DI(2) => \^lopt_72\,
      DI(1) => \^lopt_69\,
      DI(0) => \^lopt_66\,
      O(3) => \^lopt_80\,
      O(2) => \^lopt_79\,
      O(1) => \^lopt_78\,
      O(0) => \^lopt_77\,
      S(3) => \^lopt_76\,
      S(2) => \^lopt_73\,
      S(1) => \^lopt_70\,
      S(0) => \^lopt_67\
    );
CARRY4_3: unisim.vcomponents.CARRY4
     port map (
      CI => \^lopt_74\,
      CO(3) => \^lopt_91\,
      CO(2) => \^lopt_88\,
      CO(1) => \^lopt_85\,
      CO(0) => \^lopt_81\,
      CYINIT => '0',
      DI(3) => \^lopt_92\,
      DI(2) => \^lopt_89\,
      DI(1) => \^lopt_86\,
      DI(0) => \^lopt_83\,
      O(3) => \^lopt_97\,
      O(2) => \^lopt_96\,
      O(1) => \^lopt_95\,
      O(0) => \^lopt_94\,
      S(3) => \^lopt_93\,
      S(2) => \^lopt_90\,
      S(1) => \^lopt_87\,
      S(0) => \^lopt_84\
    );
CARRY4_4: unisim.vcomponents.CARRY4
     port map (
      CI => \^lopt_91\,
      CO(3) => \^lopt_108\,
      CO(2) => \^lopt_105\,
      CO(1) => \^lopt_102\,
      CO(0) => \^lopt_98\,
      CYINIT => '0',
      DI(3) => \^lopt_109\,
      DI(2) => \^lopt_106\,
      DI(1) => \^lopt_103\,
      DI(0) => \^lopt_100\,
      O(3) => \^lopt_114\,
      O(2) => \^lopt_113\,
      O(1) => \^lopt_112\,
      O(0) => \^lopt_111\,
      S(3) => \^lopt_110\,
      S(2) => \^lopt_107\,
      S(1) => \^lopt_104\,
      S(0) => \^lopt_101\
    );
CARRY4_5: unisim.vcomponents.CARRY4
     port map (
      CI => \^lopt_108\,
      CO(3) => \^lopt_125\,
      CO(2) => \^lopt_122\,
      CO(1) => \^lopt_119\,
      CO(0) => \^lopt_115\,
      CYINIT => '0',
      DI(3) => \^lopt_126\,
      DI(2) => \^lopt_123\,
      DI(1) => \^lopt_120\,
      DI(0) => \^lopt_117\,
      O(3) => \^lopt_131\,
      O(2) => \^lopt_130\,
      O(1) => \^lopt_129\,
      O(0) => \^lopt_128\,
      S(3) => \^lopt_127\,
      S(2) => \^lopt_124\,
      S(1) => \^lopt_121\,
      S(0) => \^lopt_118\
    );
CARRY4_6: unisim.vcomponents.CARRY4
     port map (
      CI => \^lopt_125\,
      CO(3) => \Using_FPGA.Native\,
      CO(2) => lopt_138,
      CO(1) => NLW_CARRY4_6_CO_UNCONNECTED(1),
      CO(0) => \^lopt_132\,
      CYINIT => '0',
      DI(3) => DI,
      DI(2) => lopt_139,
      DI(1) => lopt_136,
      DI(0) => lopt_134,
      O(3) => \Data_Addr[0]\(0),
      O(2) => NLW_CARRY4_6_O_UNCONNECTED(2),
      O(1) => lopt_142,
      O(0) => lopt_141,
      S(3) => S,
      S(2) => lopt_140,
      S(1) => lopt_137,
      S(0) => lopt_135
    );
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_9\,
      CO(2) => \^lopt_6\,
      CO(1 downto 0) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(1 downto 0),
      CYINIT => lopt,
      DI(3) => \^lopt_10\,
      DI(2) => \^lopt_7\,
      DI(1) => \^lopt_4\,
      DI(0) => \^lopt_2\,
      O(3) => \^lopt_12\,
      O(2 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(2 downto 0),
      S(3) => \^lopt_11\,
      S(2) => \^lopt_8\,
      S(1) => \^lopt_5\,
      S(0) => \^lopt_3\
    );
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \^lopt_9\,
      CO(3) => \^lopt_23\,
      CO(2) => \^lopt_20\,
      CO(1) => \^lopt_17\,
      CO(0) => \^lopt_13\,
      CYINIT => '0',
      DI(3) => \^lopt_24\,
      DI(2) => \^lopt_21\,
      DI(1) => \^lopt_18\,
      DI(0) => \^lopt_15\,
      O(3) => \^lopt_29\,
      O(2) => \^lopt_28\,
      O(1) => \^lopt_27\,
      O(0) => \^lopt_26\,
      S(3) => \^lopt_25\,
      S(2) => \^lopt_22\,
      S(1) => \^lopt_19\,
      S(0) => \^lopt_16\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7 is
  port (
    sel_input_i_1 : out STD_LOGIC;
    I4 : out STD_LOGIC;
    sel_input_iii_0 : in STD_LOGIC;
    sel_input_delayslot : in STD_LOGIC;
    ex_branch_with_delayslot_i : in STD_LOGIC;
    \wb_exception_kind_i_reg[27]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7 is
  signal \^i4\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  I4 <= \^i4\;
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => sel_input_iii_0,
      I1 => sel_input_delayslot,
      O => sel_input_i_1,
      S => \^i4\
    );
\Using_FPGA.Native_i_1__33\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => ex_branch_with_delayslot_i,
      I1 => \wb_exception_kind_i_reg[27]\,
      O => \^i4\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_100 is
  port (
    of_instr_ii_23 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I093_out : in STD_LOGIC;
    I191_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_100 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_100;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_100 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I093_out,
      I1 => I191_out,
      O => of_instr_ii_23,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_102 is
  port (
    of_instr_ii_41 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0165_out : in STD_LOGIC;
    I1163_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_102 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_102;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_102 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0165_out,
      I1 => I1163_out,
      O => of_instr_ii_41,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_104 is
  port (
    of_instr_ii_22 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I089_out : in STD_LOGIC;
    I187_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_104 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_104;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_104 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I089_out,
      I1 => I187_out,
      O => of_instr_ii_22,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_106 is
  port (
    of_instr_ii_21 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I085_out : in STD_LOGIC;
    I183_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_106 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_106;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_106 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I085_out,
      I1 => I183_out,
      O => of_instr_ii_21,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_108 is
  port (
    of_instr_ii_20 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I081_out : in STD_LOGIC;
    I179_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_108 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_108;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_108 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I081_out,
      I1 => I179_out,
      O => of_instr_ii_20,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_110 is
  port (
    of_instr_ii_19 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I077_out : in STD_LOGIC;
    I175_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_110 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_110;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_110 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I077_out,
      I1 => I175_out,
      O => of_instr_ii_19,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_112 is
  port (
    of_instr_ii_18 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I073_out : in STD_LOGIC;
    I171_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_112 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_112;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_112 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I073_out,
      I1 => I171_out,
      O => of_instr_ii_18,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_114 is
  port (
    of_instr_ii_17 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I069_out : in STD_LOGIC;
    I167_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_114 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_114;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_114 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I069_out,
      I1 => I167_out,
      O => of_instr_ii_17,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_116 is
  port (
    of_instr_ii_16 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I065_out : in STD_LOGIC;
    I163_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_116 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_116;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_116 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I065_out,
      I1 => I163_out,
      O => of_instr_ii_16,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_118 is
  port (
    of_instr_ii_15 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I061_out : in STD_LOGIC;
    I159_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_118 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_118;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_118 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I061_out,
      I1 => I159_out,
      O => of_instr_ii_15,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_120 is
  port (
    of_instr_ii_14 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I057_out : in STD_LOGIC;
    I155_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_120 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_120;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_120 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I057_out,
      I1 => I155_out,
      O => of_instr_ii_14,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_122 is
  port (
    of_instr_ii_13 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I053_out : in STD_LOGIC;
    I151_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_122 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_122;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_122 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I053_out,
      I1 => I151_out,
      O => of_instr_ii_13,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_124 is
  port (
    of_instr_ii_40 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0161_out : in STD_LOGIC;
    I1159_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_124 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_124;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_124 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0161_out,
      I1 => I1159_out,
      O => of_instr_ii_40,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_126 is
  port (
    of_instr_ii_12 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I049_out : in STD_LOGIC;
    I147_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_126 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_126;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_126 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I049_out,
      I1 => I147_out,
      O => of_instr_ii_12,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_128 is
  port (
    of_instr_ii_11 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I045_out : in STD_LOGIC;
    I143_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_128 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_128;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_128 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I045_out,
      I1 => I143_out,
      O => of_instr_ii_11,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_130 is
  port (
    of_instr_ii_10 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I041_out : in STD_LOGIC;
    I139_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_130 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_130;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_130 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I041_out,
      I1 => I139_out,
      O => of_instr_ii_10,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_132 is
  port (
    of_instr_ii_9 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I037_out : in STD_LOGIC;
    I135_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_132 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_132;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_132 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I037_out,
      I1 => I135_out,
      O => of_instr_ii_9,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_134 is
  port (
    of_instr_ii_8 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I033_out : in STD_LOGIC;
    I131_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_134 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_134;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_134 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I033_out,
      I1 => I131_out,
      O => of_instr_ii_8,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_136 is
  port (
    of_instr_ii_7 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I029_out : in STD_LOGIC;
    I127_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_136 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_136;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_136 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I029_out,
      I1 => I127_out,
      O => of_instr_ii_7,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_138 is
  port (
    of_instr_ii_6 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I025_out : in STD_LOGIC;
    I123_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_138 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_138;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_138 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I025_out,
      I1 => I123_out,
      O => of_instr_ii_6,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_140 is
  port (
    of_instr_ii_5 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I021_out : in STD_LOGIC;
    I119_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_140 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_140;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_140 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I021_out,
      I1 => I119_out,
      O => of_instr_ii_5,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_142 is
  port (
    of_instr_ii_4 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I017_out : in STD_LOGIC;
    I115_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_142 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_142;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_142 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I017_out,
      I1 => I115_out,
      O => of_instr_ii_4,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_144 is
  port (
    of_instr_ii_3 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I013_out : in STD_LOGIC;
    I111_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_144 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_144;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_144 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I013_out,
      I1 => I111_out,
      O => of_instr_ii_3,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_146 is
  port (
    of_instr_ii_39 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0157_out : in STD_LOGIC;
    I1155_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_146 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_146;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_146 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0157_out,
      I1 => I1155_out,
      O => of_instr_ii_39,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_148 is
  port (
    of_instr_ii_2 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I09_out : in STD_LOGIC;
    I17_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_148 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_148;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_148 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I09_out,
      I1 => I17_out,
      O => of_instr_ii_2,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_150 is
  port (
    of_instr_ii_1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I05_out : in STD_LOGIC;
    I13_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_150 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_150;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_150 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I05_out,
      I1 => I13_out,
      O => of_instr_ii_1,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_152 is
  port (
    of_instr_ii_0 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_152 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_152;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_152 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => \Using_FPGA.Native_2\,
      O => of_instr_ii_0,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_154 is
  port (
    of_instr_ii_38 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0153_out : in STD_LOGIC;
    I1151_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_154 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_154;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_154 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0153_out,
      I1 => I1151_out,
      O => of_instr_ii_38,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_156 is
  port (
    of_instr_ii_37 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0149_out : in STD_LOGIC;
    I1147_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_156 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_156;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_156 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0149_out,
      I1 => I1147_out,
      O => of_instr_ii_37,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_158 is
  port (
    of_instr_ii_36 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0145_out : in STD_LOGIC;
    I1143_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_158 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_158;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_158 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0145_out,
      I1 => I1143_out,
      O => of_instr_ii_36,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_160 is
  port (
    of_instr_ii_35 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0141_out : in STD_LOGIC;
    I1139_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_160 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_160;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_160 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0141_out,
      I1 => I1139_out,
      O => of_instr_ii_35,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_162 is
  port (
    of_instr_ii_34 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0137_out : in STD_LOGIC;
    I1135_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_162 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_162;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_162 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0137_out,
      I1 => I1135_out,
      O => of_instr_ii_34,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_164 is
  port (
    of_instr_ii_33 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0133_out : in STD_LOGIC;
    I1131_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_164 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_164;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_164 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0133_out,
      I1 => I1131_out,
      O => of_instr_ii_33,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_196 is
  port (
    of_pc_ii_31 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0125_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_196 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_196;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_196 is
  signal I1123_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0125_out,
      I1 => I1123_out,
      O => of_pc_ii_31,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__30\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I1123_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_198 is
  port (
    of_pc_ii_21 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I085_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_198 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_198;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_198 is
  signal I183_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I085_out,
      I1 => I183_out,
      O => of_pc_ii_21,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__20\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I183_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_200 is
  port (
    of_pc_ii_20 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I081_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_200 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_200;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_200 is
  signal I179_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I081_out,
      I1 => I179_out,
      O => of_pc_ii_20,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__19\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I179_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_202 is
  port (
    of_pc_ii_19 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I077_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_202 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_202;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_202 is
  signal I175_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I077_out,
      I1 => I175_out,
      O => of_pc_ii_19,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__18\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I175_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_204 is
  port (
    of_pc_ii_18 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I073_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_204 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_204;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_204 is
  signal I171_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I073_out,
      I1 => I171_out,
      O => of_pc_ii_18,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__17\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I171_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_206 is
  port (
    of_pc_ii_17 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I069_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_206 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_206;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_206 is
  signal I167_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I069_out,
      I1 => I167_out,
      O => of_pc_ii_17,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__16\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I167_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_208 is
  port (
    of_pc_ii_16 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I065_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_208 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_208;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_208 is
  signal I163_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I065_out,
      I1 => I163_out,
      O => of_pc_ii_16,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__15\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I163_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_210 is
  port (
    of_pc_ii_15 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I061_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_210 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_210;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_210 is
  signal I159_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I061_out,
      I1 => I159_out,
      O => of_pc_ii_15,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__14\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I159_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_212 is
  port (
    of_pc_ii_14 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I057_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_212 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_212;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_212 is
  signal I155_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I057_out,
      I1 => I155_out,
      O => of_pc_ii_14,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__13\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I155_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_214 is
  port (
    of_pc_ii_13 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I053_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_214 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_214;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_214 is
  signal I151_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I053_out,
      I1 => I151_out,
      O => of_pc_ii_13,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__12\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I151_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_216 is
  port (
    of_pc_ii_12 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I049_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_216 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_216;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_216 is
  signal I147_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I049_out,
      I1 => I147_out,
      O => of_pc_ii_12,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__11\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I147_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_218 is
  port (
    of_pc_ii_30 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0121_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_218 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_218;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_218 is
  signal I1119_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0121_out,
      I1 => I1119_out,
      O => of_pc_ii_30,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__29\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I1119_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_220 is
  port (
    of_pc_ii_11 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I045_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_220 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_220;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_220 is
  signal I143_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I045_out,
      I1 => I143_out,
      O => of_pc_ii_11,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__10\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I143_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_222 is
  port (
    of_pc_ii_10 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I041_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_222 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_222;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_222 is
  signal I139_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I041_out,
      I1 => I139_out,
      O => of_pc_ii_10,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I139_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_224 is
  port (
    of_pc_ii_9 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I037_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_224 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_224;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_224 is
  signal I135_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I037_out,
      I1 => I135_out,
      O => of_pc_ii_9,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I135_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_226 is
  port (
    of_pc_ii_8 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I033_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_226 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_226;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_226 is
  signal I131_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I033_out,
      I1 => I131_out,
      O => of_pc_ii_8,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I131_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_228 is
  port (
    of_pc_ii_7 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I029_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_228 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_228;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_228 is
  signal I127_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I029_out,
      I1 => I127_out,
      O => of_pc_ii_7,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I127_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_230 is
  port (
    of_pc_ii_6 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I025_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_230 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_230;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_230 is
  signal I123_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I025_out,
      I1 => I123_out,
      O => of_pc_ii_6,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I123_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_232 is
  port (
    of_pc_ii_5 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I021_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_232 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_232;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_232 is
  signal I119_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I021_out,
      I1 => I119_out,
      O => of_pc_ii_5,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I119_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_234 is
  port (
    of_pc_ii_4 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I017_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_234 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_234;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_234 is
  signal I115_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I017_out,
      I1 => I115_out,
      O => of_pc_ii_4,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I115_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_236 is
  port (
    of_pc_ii_3 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I013_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_236 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_236;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_236 is
  signal I111_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I013_out,
      I1 => I111_out,
      O => of_pc_ii_3,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I111_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_238 is
  port (
    of_pc_ii_2 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I09_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_238 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_238;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_238 is
  signal I17_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I09_out,
      I1 => I17_out,
      O => of_pc_ii_2,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I17_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_240 is
  port (
    of_pc_ii_29 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0117_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_240 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_240;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_240 is
  signal I1115_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0117_out,
      I1 => I1115_out,
      O => of_pc_ii_29,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__28\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I1115_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_242 is
  port (
    of_pc_ii_1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I05_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_242 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_242;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_242 is
  signal I13_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I05_out,
      I1 => I13_out,
      O => of_pc_ii_1,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I13_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_244 is
  port (
    of_pc_ii_0 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_244 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_244;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_244 is
  signal I1 : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0,
      I1 => I1,
      O => of_pc_ii_0,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_246 is
  port (
    of_pc_ii_28 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0113_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_246 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_246;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_246 is
  signal I1111_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0113_out,
      I1 => I1111_out,
      O => of_pc_ii_28,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__27\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I1111_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_248 is
  port (
    of_pc_ii_27 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0109_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_248 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_248;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_248 is
  signal I1107_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0109_out,
      I1 => I1107_out,
      O => of_pc_ii_27,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__26\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I1107_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_250 is
  port (
    of_pc_ii_26 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0105_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_250 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_250;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_250 is
  signal I1103_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0105_out,
      I1 => I1103_out,
      O => of_pc_ii_26,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__25\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I1103_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_252 is
  port (
    of_pc_ii_25 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0101_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_252 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_252;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_252 is
  signal I199_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0101_out,
      I1 => I199_out,
      O => of_pc_ii_25,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__24\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I199_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_254 is
  port (
    of_pc_ii_24 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I097_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_254 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_254;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_254 is
  signal I195_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I097_out,
      I1 => I195_out,
      O => of_pc_ii_24,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__23\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I195_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_256 is
  port (
    of_pc_ii_23 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I093_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_256 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_256;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_256 is
  signal I191_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I093_out,
      I1 => I191_out,
      O => of_pc_ii_23,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__22\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I191_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_258 is
  port (
    of_pc_ii_22 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I089_out : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_258 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_258;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_258 is
  signal I187_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I089_out,
      I1 => I187_out,
      O => of_pc_ii_22,
      S => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_2__21\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_1\,
      I2 => \out\(0),
      O => I187_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_355 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    WB_Doublet_Access_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    I1 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_355 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_355;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_355 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => WB_Doublet_Access_reg(0),
      I1 => I1,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_4__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_356 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_356 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_356;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_356 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__106\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(1),
      I1 => ex_swap_byte_instr,
      I2 => Q(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_357 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_357 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_357;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_357 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__105\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(1),
      I1 => ex_swap_byte_instr,
      I2 => Q(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_358 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_358 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_358;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_358 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__104\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(1),
      I1 => ex_swap_byte_instr,
      I2 => Q(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_359 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_359 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_359;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_359 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__103\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(1),
      I1 => ex_swap_byte_instr,
      I2 => Q(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_360 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_360 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_360;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_360 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__102\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(1),
      I1 => ex_swap_byte_instr,
      I2 => Q(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_361 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_361 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_361;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_361 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__101\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(1),
      I1 => ex_swap_byte_instr,
      I2 => Q(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_362 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_362 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_362;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_362 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__100\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_363 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_363 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_363;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_363 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__99\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_364 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_364 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_364;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_364 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__98\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_365 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_365 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_365;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_365 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__97\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_366 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_366 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_366;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_366 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__115\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_367 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_367 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_367;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_367 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__96\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_368 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_368 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_368;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_368 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__95\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_369 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_369 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_369;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_369 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__94\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_370 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_370 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_370;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_370 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__93\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_371 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_371 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_371;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_371 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__92\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(1),
      I1 => ex_swap_byte_instr,
      I2 => Q(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_372 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_372 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_372;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_372 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__91\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(1),
      I1 => ex_swap_byte_instr,
      I2 => Q(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_373 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_373 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_373;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_373 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__90\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(1),
      I1 => ex_swap_byte_instr,
      I2 => Q(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_374 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_374 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_374;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_374 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__89\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(1),
      I1 => ex_swap_byte_instr,
      I2 => Q(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_375 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \wb_read_lsb_sel_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_375 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_375;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_375 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \wb_read_lsb_sel_reg[1]\(0),
      I1 => \Using_FPGA.Native_1\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__88\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(1),
      I1 => ex_swap_byte_instr,
      I2 => Q(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_376 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \wb_read_lsb_sel_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_376 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_376;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_376 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \wb_read_lsb_sel_reg[1]\(0),
      I1 => \Using_FPGA.Native_1\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__87\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(1),
      I1 => ex_swap_byte_instr,
      I2 => Q(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_377 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_377 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_377;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_377 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__114\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_378 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \wb_read_lsb_sel_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_378 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_378;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_378 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \wb_read_lsb_sel_reg[1]\(0),
      I1 => \Using_FPGA.Native_1\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__86\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(1),
      I1 => ex_swap_byte_instr,
      I2 => Q(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_379 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_379 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_379;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_379 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__85\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(1),
      I1 => ex_swap_byte_instr,
      I2 => Q(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_380 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_380 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_380;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_380 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__113\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_381 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_381 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_381;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_381 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__112\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_382 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_382 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_382;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_382 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__111\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_383 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_383 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_383;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_383 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__110\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_384 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_384 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_384;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_384 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__109\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(0),
      I1 => ex_swap_byte_instr,
      I2 => Q(1),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_385 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_385 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_385;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_385 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__108\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(1),
      I1 => ex_swap_byte_instr,
      I2 => Q(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_386 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_swap_byte_instr : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_386 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_386;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_386 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => \Using_FPGA.Native_1\(0),
      I1 => \Using_FPGA.Native_2\,
      O => D(0),
      S => of_op1_sel_spr
    );
\Using_FPGA.Native_i_2__107\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Q(1),
      I1 => ex_swap_byte_instr,
      I2 => Q(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_80 is
  port (
    of_instr_ii_42 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0169_out : in STD_LOGIC;
    I1167_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_80 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_80;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_80 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0169_out,
      I1 => I1167_out,
      O => of_instr_ii_42,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_82 is
  port (
    of_instr_ii_32 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0129_out : in STD_LOGIC;
    I1127_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_82 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_82;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_82 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0129_out,
      I1 => I1127_out,
      O => of_instr_ii_32,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_84 is
  port (
    of_instr_ii_31 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    I0125_out : in STD_LOGIC;
    I1123_out : in STD_LOGIC;
    IReady : in STD_LOGIC;
    \wb_exception_kind_i_reg[27]\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC;
    if_debug_ready_i_reg : in STD_LOGIC;
    if_missed_fetch : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_84 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_84;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_84 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\PC_Buffer_reg[3][0]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000AAFFAA02"
    )
        port map (
      I0 => IReady,
      I1 => \wb_exception_kind_i_reg[27]\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => Dbg_Disable,
      I4 => if_debug_ready_i_reg,
      I5 => if_missed_fetch,
      O => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0125_out,
      I1 => I1123_out,
      O => of_instr_ii_31,
      S => \Using_FPGA.Native_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_86 is
  port (
    of_instr_ii_30 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0121_out : in STD_LOGIC;
    I1119_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_86 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_86;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_86 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0121_out,
      I1 => I1119_out,
      O => of_instr_ii_30,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_88 is
  port (
    of_instr_ii_29 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0117_out : in STD_LOGIC;
    I1115_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_88 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_88;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_88 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0117_out,
      I1 => I1115_out,
      O => of_instr_ii_29,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_90 is
  port (
    of_instr_ii_28 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0113_out : in STD_LOGIC;
    I1111_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_90 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_90;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_90 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0113_out,
      I1 => I1111_out,
      O => of_instr_ii_28,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_92 is
  port (
    of_instr_ii_27 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0109_out : in STD_LOGIC;
    I1107_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_92 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_92;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_92 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0109_out,
      I1 => I1107_out,
      O => of_instr_ii_27,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_94 is
  port (
    of_instr_ii_26 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0105_out : in STD_LOGIC;
    I1103_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_94 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_94;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_94 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0105_out,
      I1 => I1103_out,
      O => of_instr_ii_26,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_96 is
  port (
    of_instr_ii_25 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I0101_out : in STD_LOGIC;
    I199_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_96 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_96;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_96 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I0101_out,
      I1 => I199_out,
      O => of_instr_ii_25,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_MUXF7_98 is
  port (
    of_instr_ii_24 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    I097_out : in STD_LOGIC;
    I195_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_MUXF7_98 : entity is "MB_MUXF7";
end system_microblaze_0_0_MB_MUXF7_98;

architecture STRUCTURE of system_microblaze_0_0_MB_MUXF7_98 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => I097_out,
      I1 => I195_out,
      O => of_instr_ii_24,
      S => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_RAM32M is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    WB_GPR_Wr : in STD_LOGIC;
    DID : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_RAM32M : entity is "MB_RAM32M";
end system_microblaze_0_0_MB_RAM32M;

architecture STRUCTURE of system_microblaze_0_0_MB_RAM32M is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => DID(1 downto 0),
      DIB(1 downto 0) => DID(1 downto 0),
      DIC(1 downto 0) => DID(1 downto 0),
      DID(1 downto 0) => DID(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => WB_GPR_Wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_RAM32M_340 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    WB_GPR_Wr : in STD_LOGIC;
    WB_Byte_Access_reg : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_RAM32M_340 : entity is "MB_RAM32M";
end system_microblaze_0_0_MB_RAM32M_340;

architecture STRUCTURE of system_microblaze_0_0_MB_RAM32M_340 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Byte_Access_reg(1 downto 0),
      DIB(1 downto 0) => WB_Byte_Access_reg(1 downto 0),
      DIC(1 downto 0) => WB_Byte_Access_reg(1 downto 0),
      DID(1 downto 0) => WB_Byte_Access_reg(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => WB_GPR_Wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_RAM32M_341 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    WB_GPR_Wr : in STD_LOGIC;
    WB_Byte_Access_reg : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_RAM32M_341 : entity is "MB_RAM32M";
end system_microblaze_0_0_MB_RAM32M_341;

architecture STRUCTURE of system_microblaze_0_0_MB_RAM32M_341 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Byte_Access_reg(1 downto 0),
      DIB(1 downto 0) => WB_Byte_Access_reg(1 downto 0),
      DIC(1 downto 0) => WB_Byte_Access_reg(1 downto 0),
      DID(1 downto 0) => WB_Byte_Access_reg(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => WB_GPR_Wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_RAM32M_342 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    WB_GPR_Wr : in STD_LOGIC;
    \wb_read_lsb_sel_reg[1]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_RAM32M_342 : entity is "MB_RAM32M";
end system_microblaze_0_0_MB_RAM32M_342;

architecture STRUCTURE of system_microblaze_0_0_MB_RAM32M_342 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => \wb_read_lsb_sel_reg[1]\(1 downto 0),
      DIB(1 downto 0) => \wb_read_lsb_sel_reg[1]\(1 downto 0),
      DIC(1 downto 0) => \wb_read_lsb_sel_reg[1]\(1 downto 0),
      DID(1 downto 0) => \wb_read_lsb_sel_reg[1]\(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => WB_GPR_Wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_RAM32M_343 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    WB_GPR_Wr : in STD_LOGIC;
    \wb_read_lsb_sel_reg[1]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_RAM32M_343 : entity is "MB_RAM32M";
end system_microblaze_0_0_MB_RAM32M_343;

architecture STRUCTURE of system_microblaze_0_0_MB_RAM32M_343 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => \wb_read_lsb_sel_reg[1]\(1 downto 0),
      DIB(1 downto 0) => \wb_read_lsb_sel_reg[1]\(1 downto 0),
      DIC(1 downto 0) => \wb_read_lsb_sel_reg[1]\(1 downto 0),
      DID(1 downto 0) => \wb_read_lsb_sel_reg[1]\(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => WB_GPR_Wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_RAM32M_344 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    WB_GPR_Wr : in STD_LOGIC;
    \wb_read_lsb_sel_reg[1]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_RAM32M_344 : entity is "MB_RAM32M";
end system_microblaze_0_0_MB_RAM32M_344;

architecture STRUCTURE of system_microblaze_0_0_MB_RAM32M_344 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => \wb_read_lsb_sel_reg[1]\(1 downto 0),
      DIB(1 downto 0) => \wb_read_lsb_sel_reg[1]\(1 downto 0),
      DIC(1 downto 0) => \wb_read_lsb_sel_reg[1]\(1 downto 0),
      DID(1 downto 0) => \wb_read_lsb_sel_reg[1]\(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => WB_GPR_Wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_RAM32M_345 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    WB_GPR_Wr : in STD_LOGIC;
    \wb_read_lsb_sel_reg[1]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_RAM32M_345 : entity is "MB_RAM32M";
end system_microblaze_0_0_MB_RAM32M_345;

architecture STRUCTURE of system_microblaze_0_0_MB_RAM32M_345 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => \wb_read_lsb_sel_reg[1]\(1 downto 0),
      DIB(1 downto 0) => \wb_read_lsb_sel_reg[1]\(1 downto 0),
      DIC(1 downto 0) => \wb_read_lsb_sel_reg[1]\(1 downto 0),
      DID(1 downto 0) => \wb_read_lsb_sel_reg[1]\(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => WB_GPR_Wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_RAM32M_346 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    WB_GPR_Wr : in STD_LOGIC;
    WB_Doublet_Access_reg : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_RAM32M_346 : entity is "MB_RAM32M";
end system_microblaze_0_0_MB_RAM32M_346;

architecture STRUCTURE of system_microblaze_0_0_MB_RAM32M_346 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DIB(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DIC(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DID(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => WB_GPR_Wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_RAM32M_347 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    WB_GPR_Wr : in STD_LOGIC;
    WB_Doublet_Access_reg : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_RAM32M_347 : entity is "MB_RAM32M";
end system_microblaze_0_0_MB_RAM32M_347;

architecture STRUCTURE of system_microblaze_0_0_MB_RAM32M_347 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DIB(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DIC(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DID(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => WB_GPR_Wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_RAM32M_348 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    WB_GPR_Wr : in STD_LOGIC;
    WB_Doublet_Access_reg : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_RAM32M_348 : entity is "MB_RAM32M";
end system_microblaze_0_0_MB_RAM32M_348;

architecture STRUCTURE of system_microblaze_0_0_MB_RAM32M_348 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DIB(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DIC(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DID(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => WB_GPR_Wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_RAM32M_349 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    WB_GPR_Wr : in STD_LOGIC;
    WB_Doublet_Access_reg : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_RAM32M_349 : entity is "MB_RAM32M";
end system_microblaze_0_0_MB_RAM32M_349;

architecture STRUCTURE of system_microblaze_0_0_MB_RAM32M_349 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DIB(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DIC(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DID(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => WB_GPR_Wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_RAM32M_350 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    WB_GPR_Wr : in STD_LOGIC;
    WB_Doublet_Access_reg : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_RAM32M_350 : entity is "MB_RAM32M";
end system_microblaze_0_0_MB_RAM32M_350;

architecture STRUCTURE of system_microblaze_0_0_MB_RAM32M_350 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DIB(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DIC(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DID(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => WB_GPR_Wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_RAM32M_351 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    WB_GPR_Wr : in STD_LOGIC;
    WB_Doublet_Access_reg : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_RAM32M_351 : entity is "MB_RAM32M";
end system_microblaze_0_0_MB_RAM32M_351;

architecture STRUCTURE of system_microblaze_0_0_MB_RAM32M_351 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DIB(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DIC(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DID(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => WB_GPR_Wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_RAM32M_352 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    WB_GPR_Wr : in STD_LOGIC;
    WB_Doublet_Access_reg : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_RAM32M_352 : entity is "MB_RAM32M";
end system_microblaze_0_0_MB_RAM32M_352;

architecture STRUCTURE of system_microblaze_0_0_MB_RAM32M_352 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DIB(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DIC(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DID(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => WB_GPR_Wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_RAM32M_353 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    WB_GPR_Wr : in STD_LOGIC;
    WB_Byte_Access_reg : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_RAM32M_353 : entity is "MB_RAM32M";
end system_microblaze_0_0_MB_RAM32M_353;

architecture STRUCTURE of system_microblaze_0_0_MB_RAM32M_353 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Byte_Access_reg(1 downto 0),
      DIB(1 downto 0) => WB_Byte_Access_reg(1 downto 0),
      DIC(1 downto 0) => WB_Byte_Access_reg(1 downto 0),
      DID(1 downto 0) => WB_Byte_Access_reg(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => WB_GPR_Wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_RAM32M_354 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    WB_GPR_Wr : in STD_LOGIC;
    WB_Byte_Access_reg : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_RAM32M_354 : entity is "MB_RAM32M";
end system_microblaze_0_0_MB_RAM32M_354;

architecture STRUCTURE of system_microblaze_0_0_MB_RAM32M_354 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4) => of_gpr_op1_rd_addr(0),
      ADDRA(3) => of_gpr_op1_rd_addr(1),
      ADDRA(2) => of_gpr_op1_rd_addr(2),
      ADDRA(1) => of_gpr_op1_rd_addr(3),
      ADDRA(0) => of_gpr_op1_rd_addr(4),
      ADDRB(4 downto 0) => of_imm_data(4 downto 0),
      ADDRC(4) => of_gpr_op3_rd_addr(0),
      ADDRC(3) => of_gpr_op3_rd_addr(1),
      ADDRC(2) => of_gpr_op3_rd_addr(2),
      ADDRC(1) => of_gpr_op3_rd_addr(3),
      ADDRC(0) => of_gpr_op3_rd_addr(4),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Byte_Access_reg(1 downto 0),
      DIB(1 downto 0) => WB_Byte_Access_reg(1 downto 0),
      DIC(1 downto 0) => WB_Byte_Access_reg(1 downto 0),
      DID(1 downto 0) => WB_Byte_Access_reg(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => WB_GPR_Wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_SRL16E is
  port (
    Q_0 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_SRL16E : entity is "MB_SRL16E";
end system_microblaze_0_0_MB_SRL16E;

architecture STRUCTURE of system_microblaze_0_0_MB_SRL16E is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/SRL16E_1/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"001B",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_SRL16E__parameterized1\ is
  port (
    Q11_in : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_SRL16E__parameterized1\ : entity is "MB_SRL16E";
end \system_microblaze_0_0_MB_SRL16E__parameterized1\;

architecture STRUCTURE of \system_microblaze_0_0_MB_SRL16E__parameterized1\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/SRL16E_2/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q11_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_SRL16E__parameterized11\ is
  port (
    Q2_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_SRL16E__parameterized11\ : entity is "MB_SRL16E";
end \system_microblaze_0_0_MB_SRL16E__parameterized11\;

architecture STRUCTURE of \system_microblaze_0_0_MB_SRL16E__parameterized11\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/The_Cache_Addresses[5].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"FFFF",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q2_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_SRL16E__parameterized13\ is
  port (
    Dbg_TDO : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 5 downto 0 );
    Dbg_Clk : in STD_LOGIC;
    Q2_out : in STD_LOGIC;
    Q3_out : in STD_LOGIC;
    Q4_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_SRL16E__parameterized13\ : entity is "MB_SRL16E";
end \system_microblaze_0_0_MB_SRL16E__parameterized13\;

architecture STRUCTURE of \system_microblaze_0_0_MB_SRL16E__parameterized13\ is
  signal Q1_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/The_Cache_Addresses[6].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
Dbg_TDO_INST_0_i_8: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => Q1_out,
      I1 => Q2_out,
      I2 => Q(5),
      I3 => Q3_out,
      I4 => Q(4),
      I5 => Q4_out,
      O => Dbg_TDO
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"3FFF",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q1_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_SRL16E__parameterized15\ is
  port (
    Q0_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_SRL16E__parameterized15\ : entity is "MB_SRL16E";
end \system_microblaze_0_0_MB_SRL16E__parameterized15\;

architecture STRUCTURE of \system_microblaze_0_0_MB_SRL16E__parameterized15\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/The_Cache_Addresses[7].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q0_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_SRL16E__parameterized17\ is
  port (
    Q3_in : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_SRL16E__parameterized17\ : entity is "MB_SRL16E";
end \system_microblaze_0_0_MB_SRL16E__parameterized17\;

architecture STRUCTURE of \system_microblaze_0_0_MB_SRL16E__parameterized17\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/The_Cache_Addresses[8].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q3_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_SRL16E__parameterized19\ is
  port (
    Q2_in : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_SRL16E__parameterized19\ : entity is "MB_SRL16E";
end \system_microblaze_0_0_MB_SRL16E__parameterized19\;

architecture STRUCTURE of \system_microblaze_0_0_MB_SRL16E__parameterized19\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/SRL16E_3/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0064",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q2_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_SRL16E__parameterized21\ is
  port (
    Dbg_TDO : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 6 downto 0 );
    Dbg_Clk : in STD_LOGIC;
    tdo_config_word1_0 : in STD_LOGIC;
    Q0_in : in STD_LOGIC;
    Q2_in : in STD_LOGIC;
    Q3_in : in STD_LOGIC;
    Q0_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_SRL16E__parameterized21\ : entity is "MB_SRL16E";
end \system_microblaze_0_0_MB_SRL16E__parameterized21\;

architecture STRUCTURE of \system_microblaze_0_0_MB_SRL16E__parameterized21\ is
  signal Dbg_TDO_INST_0_i_18_n_0 : STD_LOGIC;
  signal Q1_in : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/SRL16E_4/Use_unisim.MB_SRL16E_I1 ";
begin
Dbg_TDO_INST_0_i_18: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => Q1_in,
      I1 => Q2_in,
      I2 => Q(5),
      I3 => Q3_in,
      I4 => Q(4),
      I5 => Q0_out,
      O => Dbg_TDO_INST_0_i_18_n_0
    );
Dbg_TDO_INST_0_i_9: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CA0ACACACA0A0A0A"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_18_n_0,
      I1 => Q(5),
      I2 => Q(6),
      I3 => tdo_config_word1_0,
      I4 => Q(4),
      I5 => Q0_in,
      O => Dbg_TDO
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"2200",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q1_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_SRL16E__parameterized23\ is
  port (
    Q0_in : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_SRL16E__parameterized23\ : entity is "MB_SRL16E";
end \system_microblaze_0_0_MB_SRL16E__parameterized23\;

architecture STRUCTURE of \system_microblaze_0_0_MB_SRL16E__parameterized23\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/SRL16E_7/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q0_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_SRL16E__parameterized25\ is
  port (
    tdo_config_word1_0 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_SRL16E__parameterized25\ : entity is "MB_SRL16E";
end \system_microblaze_0_0_MB_SRL16E__parameterized25\;

architecture STRUCTURE of \system_microblaze_0_0_MB_SRL16E__parameterized25\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/SRL16E_8/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => tdo_config_word1_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_SRL16E__parameterized3\ is
  port (
    Q6_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_SRL16E__parameterized3\ : entity is "MB_SRL16E";
end \system_microblaze_0_0_MB_SRL16E__parameterized3\;

architecture STRUCTURE of \system_microblaze_0_0_MB_SRL16E__parameterized3\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/The_Cache_Addresses[1].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"FFFF",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q6_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_SRL16E__parameterized5\ is
  port (
    Dbg_TDO : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 7 downto 0 );
    Dbg_Clk : in STD_LOGIC;
    \shift_count_reg[4]\ : in STD_LOGIC;
    \shift_count_reg[0]\ : in STD_LOGIC;
    \Dbg_Reg_En[2]\ : in STD_LOGIC;
    TDO_Data_Reg : in STD_LOGIC;
    \Dbg_Reg_En[2]_0\ : in STD_LOGIC;
    \shift_count_reg[5]\ : in STD_LOGIC;
    \shift_count_reg[5]_0\ : in STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q6_out : in STD_LOGIC;
    Q11_in : in STD_LOGIC;
    Q_0 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_SRL16E__parameterized5\ : entity is "MB_SRL16E";
end \system_microblaze_0_0_MB_SRL16E__parameterized5\;

architecture STRUCTURE of \system_microblaze_0_0_MB_SRL16E__parameterized5\ is
  signal Dbg_TDO_INST_0_i_1_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_7_n_0 : STD_LOGIC;
  signal Q5_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/The_Cache_Addresses[2].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
Dbg_TDO_INST_0: unisim.vcomponents.LUT6
    generic map(
      INIT => X"77777777FF0F0F0F"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_1_n_0,
      I1 => \shift_count_reg[4]\,
      I2 => \shift_count_reg[0]\,
      I3 => \Dbg_Reg_En[2]\,
      I4 => TDO_Data_Reg,
      I5 => \Dbg_Reg_En[2]_0\,
      O => Dbg_TDO
    );
Dbg_TDO_INST_0_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"001DFF1DFFFFFFFF"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_7_n_0,
      I1 => Q(6),
      I2 => \shift_count_reg[5]\,
      I3 => Q(7),
      I4 => \shift_count_reg[5]_0\,
      I5 => Dbg_Reg_En(0),
      O => Dbg_TDO_INST_0_i_1_n_0
    );
Dbg_TDO_INST_0_i_7: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => Q5_out,
      I1 => Q6_out,
      I2 => Q(5),
      I3 => Q11_in,
      I4 => Q(4),
      I5 => Q_0,
      O => Dbg_TDO_INST_0_i_7_n_0
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"3FFF",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q5_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_SRL16E__parameterized7\ is
  port (
    Q4_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_SRL16E__parameterized7\ : entity is "MB_SRL16E";
end \system_microblaze_0_0_MB_SRL16E__parameterized7\;

architecture STRUCTURE of \system_microblaze_0_0_MB_SRL16E__parameterized7\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/The_Cache_Addresses[3].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q4_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_MB_SRL16E__parameterized9\ is
  port (
    Q3_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_MB_SRL16E__parameterized9\ : entity is "MB_SRL16E";
end \system_microblaze_0_0_MB_SRL16E__parameterized9\;

architecture STRUCTURE of \system_microblaze_0_0_MB_SRL16E__parameterized9\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/The_Cache_Addresses[4].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q3_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_SRLC16E is
  port (
    SRL16_Sel_7 : out STD_LOGIC;
    SRL16_En : in STD_LOGIC;
    SRL16_MC15_7 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_SRLC16E : entity is "MB_SRLC16E";
end system_microblaze_0_0_MB_SRLC16E;

architecture STRUCTURE of system_microblaze_0_0_MB_SRLC16E is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Use_unisim.MB_SRL16CE_I1\ : label is "SRLC16E";
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => SRL16_En,
      CLK => Dbg_Clk,
      D => SRL16_MC15_7,
      Q => SRL16_Sel_7
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_SRLC16E_11 is
  port (
    SRL16_Sel_6 : out STD_LOGIC;
    SRL16_MC15_7 : out STD_LOGIC;
    \Performace_Debug_Control.ex_dbg_hit_reg[0]\ : out STD_LOGIC;
    SRL16_MC15_6 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_SRLC16E_11 : entity is "MB_SRLC16E";
end system_microblaze_0_0_MB_SRLC16E_11;

architecture STRUCTURE of system_microblaze_0_0_MB_SRLC16E_11 is
  signal \^performace_debug_control.ex_dbg_hit_reg[0]\ : STD_LOGIC;
  signal \Use_unisim.MB_SRL16CE_I1_i_2_n_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
  \Performace_Debug_Control.ex_dbg_hit_reg[0]\ <= \^performace_debug_control.ex_dbg_hit_reg[0]\;
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \^performace_debug_control.ex_dbg_hit_reg[0]\,
      CLK => Dbg_Clk,
      D => SRL16_MC15_6,
      Q => SRL16_Sel_6,
      Q15 => SRL16_MC15_7
    );
\Use_unisim.MB_SRL16CE_I1_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000100"
    )
        port map (
      I0 => Dbg_Reg_En(2),
      I1 => Dbg_Reg_En(7),
      I2 => Dbg_Reg_En(1),
      I3 => Dbg_Reg_En(3),
      I4 => \Use_unisim.MB_SRL16CE_I1_i_2_n_0\,
      O => \^performace_debug_control.ex_dbg_hit_reg[0]\
    );
\Use_unisim.MB_SRL16CE_I1_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => Dbg_Reg_En(5),
      I1 => Dbg_Reg_En(4),
      I2 => Dbg_Reg_En(0),
      I3 => Dbg_Reg_En(6),
      O => \Use_unisim.MB_SRL16CE_I1_i_2_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_SRLC16E_13 is
  port (
    SRL16_Sel_5 : out STD_LOGIC;
    SRL16_MC15_6 : out STD_LOGIC;
    \Dbg_Reg_En[6]\ : in STD_LOGIC;
    SRL16_MC15_5 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_SRLC16E_13 : entity is "MB_SRLC16E";
end system_microblaze_0_0_MB_SRLC16E_13;

architecture STRUCTURE of system_microblaze_0_0_MB_SRLC16E_13 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \Dbg_Reg_En[6]\,
      CLK => Dbg_Clk,
      D => SRL16_MC15_5,
      Q => SRL16_Sel_5,
      Q15 => SRL16_MC15_6
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_SRLC16E_15 is
  port (
    SRL16_Sel_4 : out STD_LOGIC;
    SRL16_MC15_5 : out STD_LOGIC;
    \Dbg_Reg_En[6]\ : in STD_LOGIC;
    SRL16_MC15_4 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_SRLC16E_15 : entity is "MB_SRLC16E";
end system_microblaze_0_0_MB_SRLC16E_15;

architecture STRUCTURE of system_microblaze_0_0_MB_SRLC16E_15 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \Dbg_Reg_En[6]\,
      CLK => Dbg_Clk,
      D => SRL16_MC15_4,
      Q => SRL16_Sel_4,
      Q15 => SRL16_MC15_5
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_SRLC16E_17 is
  port (
    SRL16_Sel_3 : out STD_LOGIC;
    SRL16_MC15_4 : out STD_LOGIC;
    \Dbg_Reg_En[6]\ : in STD_LOGIC;
    SRL16_MC15_3 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_SRLC16E_17 : entity is "MB_SRLC16E";
end system_microblaze_0_0_MB_SRLC16E_17;

architecture STRUCTURE of system_microblaze_0_0_MB_SRLC16E_17 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \Dbg_Reg_En[6]\,
      CLK => Dbg_Clk,
      D => SRL16_MC15_3,
      Q => SRL16_Sel_3,
      Q15 => SRL16_MC15_4
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_SRLC16E_19 is
  port (
    SRL16_Sel_2 : out STD_LOGIC;
    SRL16_MC15_3 : out STD_LOGIC;
    \Dbg_Reg_En[6]\ : in STD_LOGIC;
    SRL16_MC15_2 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_SRLC16E_19 : entity is "MB_SRLC16E";
end system_microblaze_0_0_MB_SRLC16E_19;

architecture STRUCTURE of system_microblaze_0_0_MB_SRLC16E_19 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \Dbg_Reg_En[6]\,
      CLK => Dbg_Clk,
      D => SRL16_MC15_2,
      Q => SRL16_Sel_2,
      Q15 => SRL16_MC15_3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_SRLC16E_21 is
  port (
    SRL16_Sel_1 : out STD_LOGIC;
    SRL16_MC15_2 : out STD_LOGIC;
    \Dbg_Reg_En[6]\ : in STD_LOGIC;
    SRL16_MC15_1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_SRLC16E_21 : entity is "MB_SRLC16E";
end system_microblaze_0_0_MB_SRLC16E_21;

architecture STRUCTURE of system_microblaze_0_0_MB_SRLC16E_21 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \Dbg_Reg_En[6]\,
      CLK => Dbg_Clk,
      D => SRL16_MC15_1,
      Q => SRL16_Sel_1,
      Q15 => SRL16_MC15_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MB_SRLC16E_23 is
  port (
    SRL16_Sel_0 : out STD_LOGIC;
    SRL16_MC15_1 : out STD_LOGIC;
    \Dbg_Reg_En[6]\ : in STD_LOGIC;
    Dbg_TDI : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MB_SRLC16E_23 : entity is "MB_SRLC16E";
end system_microblaze_0_0_MB_SRLC16E_23;

architecture STRUCTURE of system_microblaze_0_0_MB_SRLC16E_23 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \Dbg_Reg_En[6]\,
      CLK => Dbg_Clk,
      D => Dbg_TDI,
      Q => SRL16_Sel_0,
      Q15 => SRL16_MC15_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_Shift_Logic_Module_gti is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \EX_Op1_reg[24]\ : in STD_LOGIC;
    \EX_Op1_reg[24]_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_Shift_Logic_Module_gti : entity is "Shift_Logic_Module_gti";
end system_microblaze_0_0_Shift_Logic_Module_gti;

architecture STRUCTURE of system_microblaze_0_0_Shift_Logic_Module_gti is
  signal mask_0_15 : STD_LOGIC;
  signal mask_16_23 : STD_LOGIC;
  signal sign_0_15 : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of sign_0_15 : signal is "true";
  signal sign_16_23 : STD_LOGIC;
  attribute RTL_KEEP of sign_16_23 : signal is "true";
begin
  \Using_FPGA.Native\ <= sign_16_23;
  \Using_FPGA.Native_0\ <= sign_0_15;
  sign_0_15 <= \EX_Op1_reg[24]_0\;
  sign_16_23 <= \EX_Op1_reg[24]\;
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => mask_0_15
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => mask_16_23
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_mb_sync_bit is
  port (
    \out\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    flush_pipe : out STD_LOGIC;
    Rst18_out : out STD_LOGIC;
    saved_reset_mode_dbg_halt_reg : out STD_LOGIC;
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Use_DLMB.wb_dlmb_valid_read_data_reg[31]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Debug_Rst : in STD_LOGIC;
    Reset : in STD_LOGIC;
    Mb_Reset : in STD_LOGIC;
    wb_exception : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC;
    Reset_Mode : in STD_LOGIC_VECTOR ( 0 to 1 );
    saved_reset_mode_dbg_halt : in STD_LOGIC;
    MEM_Sel_MEM_Res : in STD_LOGIC;
    DReady : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_mb_sync_bit : entity is "mb_sync_bit";
end system_microblaze_0_0_mb_sync_bit;

architecture STRUCTURE of system_microblaze_0_0_mb_sync_bit is
  signal reset_temp : STD_LOGIC;
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  \out\(0) <= sync(2);
\Synchronize.use_sync_reset.sync[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => Debug_Rst,
      I1 => Reset,
      I2 => Mb_Reset,
      O => reset_temp
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => reset_temp,
      Q => sync(1),
      R => '0'
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => '0'
    );
\Use_DLMB.wb_dlmb_valid_read_data[0]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => sync(2),
      I1 => DReady,
      O => \Use_DLMB.wb_dlmb_valid_read_data_reg[31]\(0)
    );
\WB_MEM_Result[0]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => sync(2),
      I1 => MEM_Sel_MEM_Res,
      O => SR(0)
    );
continue_from_brk_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Dbg_Disable,
      I1 => sync(2),
      O => Rst18_out
    );
mem_gpr_write_dbg_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => sync(2),
      I1 => wb_exception,
      O => flush_pipe
    );
saved_reset_mode_dbg_halt_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"222F2220"
    )
        port map (
      I0 => Reset_Mode(0),
      I1 => Reset_Mode(1),
      I2 => Dbg_Disable,
      I3 => sync(2),
      I4 => saved_reset_mode_dbg_halt,
      O => saved_reset_mode_dbg_halt_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_mb_sync_bit_0 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    normal_stop_cmd_i0 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    Rst18_out : in STD_LOGIC;
    normal_stop_TClk_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_mb_sync_bit_0 : entity is "mb_sync_bit";
end system_microblaze_0_0_mb_sync_bit_0;

architecture STRUCTURE of system_microblaze_0_0_mb_sync_bit_0 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  D(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => normal_stop_TClk_reg(0),
      Q => sync(1),
      R => Rst18_out
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => Rst18_out
    );
normal_stop_cmd_i_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(0),
      O => normal_stop_cmd_i0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_mb_sync_bit_1 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    force_stop_cmd_i0 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    Rst18_out : in STD_LOGIC;
    force_stop_TClk_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_mb_sync_bit_1 : entity is "mb_sync_bit";
end system_microblaze_0_0_mb_sync_bit_1;

architecture STRUCTURE of system_microblaze_0_0_mb_sync_bit_1 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  D(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => force_stop_TClk_reg(0),
      Q => sync(1),
      R => Rst18_out
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => Rst18_out
    );
force_stop_cmd_i_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(0),
      O => force_stop_cmd_i0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_mb_sync_bit_2 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    start_single_cmd0 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    Rst18_out : in STD_LOGIC;
    single_Step_TClk_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_mb_sync_bit_2 : entity is "mb_sync_bit";
end system_microblaze_0_0_mb_sync_bit_2;

architecture STRUCTURE of system_microblaze_0_0_mb_sync_bit_2 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  D(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => single_Step_TClk_reg(0),
      Q => sync(1),
      R => Rst18_out
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => Rst18_out
    );
start_single_cmd_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(0),
      O => start_single_cmd0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_mb_sync_bit_3 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    read_register_MSR0 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    Rst18_out : in STD_LOGIC;
    \command_reg_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_mb_sync_bit_3 : entity is "mb_sync_bit";
end system_microblaze_0_0_mb_sync_bit_3;

architecture STRUCTURE of system_microblaze_0_0_mb_sync_bit_3 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  D(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \command_reg_reg[0]\(0),
      Q => sync(1),
      R => Rst18_out
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => Rst18_out
    );
read_register_MSR_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(0),
      O => read_register_MSR0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_mb_sync_bit_4 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    read_register_PC0 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    Rst18_out : in STD_LOGIC;
    \command_reg_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_mb_sync_bit_4 : entity is "mb_sync_bit";
end system_microblaze_0_0_mb_sync_bit_4;

architecture STRUCTURE of system_microblaze_0_0_mb_sync_bit_4 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  D(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \command_reg_reg[1]\(0),
      Q => sync(1),
      R => Rst18_out
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => Rst18_out
    );
read_register_PC_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(0),
      O => read_register_PC0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_mb_sync_bit_5 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    trig_in_1_reg : out STD_LOGIC;
    Dbg_Trig_In : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Rst18_out : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[2]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    continue_from_brk_TClk_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_mb_sync_bit_5 : entity is "mb_sync_bit";
end system_microblaze_0_0_mb_sync_bit_5;

architecture STRUCTURE of system_microblaze_0_0_mb_sync_bit_5 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  D(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => continue_from_brk_TClk_reg(0),
      Q => sync(1),
      R => Rst18_out
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => Rst18_out
    );
trig_in_1_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00BA00BA000000BA"
    )
        port map (
      I0 => Dbg_Trig_In(0),
      I1 => Q(1),
      I2 => sync(2),
      I3 => Rst18_out,
      I4 => \Synchronize.use_sync_reset.sync_reg[2]_0\(0),
      I5 => Q(0),
      O => trig_in_1_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_mb_sync_bit_6 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    if_debug_ready_i0 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    Rst18_out : in STD_LOGIC;
    New_Dbg_Instr2_TCK_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_mb_sync_bit_6 : entity is "mb_sync_bit";
end system_microblaze_0_0_mb_sync_bit_6;

architecture STRUCTURE of system_microblaze_0_0_mb_sync_bit_6 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  D(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => New_Dbg_Instr2_TCK_reg(0),
      Q => sync(1),
      R => Rst18_out
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => Rst18_out
    );
if_debug_ready_i_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(0),
      O => if_debug_ready_i0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_mb_sync_bit_7 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    continue_from_brk0 : out STD_LOGIC;
    trig_ack_out_1_reg : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Synchronize.use_sync_reset.sync_reg[2]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Trig_Ack_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Disable : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Rst18_out : in STD_LOGIC;
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_mb_sync_bit_7 : entity is "mb_sync_bit";
end system_microblaze_0_0_mb_sync_bit_7;

architecture STRUCTURE of system_microblaze_0_0_mb_sync_bit_7 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  D(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Dbg_Trig_Out(0),
      Q => sync(1),
      R => Rst18_out
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => Rst18_out
    );
continue_from_brk_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"22F2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(0),
      I2 => \Synchronize.use_sync_reset.sync_reg[2]_0\(0),
      I3 => Q(1),
      O => continue_from_brk0
    );
trig_ack_out_1_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"02030002"
    )
        port map (
      I0 => Dbg_Trig_Ack_Out(0),
      I1 => Dbg_Disable,
      I2 => \out\(0),
      I3 => Q(0),
      I4 => sync(2),
      O => trig_ack_out_1_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_mb_sync_bit_8 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Rst18_out : in STD_LOGIC;
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_mb_sync_bit_8 : entity is "mb_sync_bit";
end system_microblaze_0_0_mb_sync_bit_8;

architecture STRUCTURE of system_microblaze_0_0_mb_sync_bit_8 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  D(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Dbg_Trig_Ack_In(0),
      Q => sync(1),
      R => Rst18_out
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => Rst18_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_mb_sync_bit__parameterized1\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Raw : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_mb_sync_bit__parameterized1\ : entity is "mb_sync_bit";
end \system_microblaze_0_0_mb_sync_bit__parameterized1\;

architecture STRUCTURE of \system_microblaze_0_0_mb_sync_bit__parameterized1\ is
  signal async_reset : STD_LOGIC;
begin
\Single_Synchronize.use_async_reset.sync_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Dbg_Disable,
      O => async_reset
    );
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => Raw,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_mb_sync_bit__parameterized11\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_hit_reg[5]\ : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_mb_sync_bit__parameterized11\ : entity is "mb_sync_bit";
end \system_microblaze_0_0_mb_sync_bit__parameterized11\;

architecture STRUCTURE of \system_microblaze_0_0_mb_sync_bit__parameterized11\ is
  signal async_reset : STD_LOGIC;
begin
\Single_Synchronize.use_async_reset.sync_i_1__4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Dbg_Disable,
      O => async_reset
    );
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => \Performace_Debug_Control.dbg_hit_reg[5]\,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_mb_sync_bit__parameterized13\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_hit_reg[6]\ : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_mb_sync_bit__parameterized13\ : entity is "mb_sync_bit";
end \system_microblaze_0_0_mb_sync_bit__parameterized13\;

architecture STRUCTURE of \system_microblaze_0_0_mb_sync_bit__parameterized13\ is
  signal async_reset : STD_LOGIC;
begin
\Single_Synchronize.use_async_reset.sync_i_1__5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Dbg_Disable,
      O => async_reset
    );
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => \Performace_Debug_Control.dbg_hit_reg[6]\,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_mb_sync_bit__parameterized15\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_hit_reg[7]\ : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_mb_sync_bit__parameterized15\ : entity is "mb_sync_bit";
end \system_microblaze_0_0_mb_sync_bit__parameterized15\;

architecture STRUCTURE of \system_microblaze_0_0_mb_sync_bit__parameterized15\ is
  signal async_reset : STD_LOGIC;
begin
\Single_Synchronize.use_async_reset.sync_i_1__6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Dbg_Disable,
      O => async_reset
    );
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => \Performace_Debug_Control.dbg_hit_reg[7]\,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_mb_sync_bit__parameterized17\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_hit_reg[8]\ : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_mb_sync_bit__parameterized17\ : entity is "mb_sync_bit";
end \system_microblaze_0_0_mb_sync_bit__parameterized17\;

architecture STRUCTURE of \system_microblaze_0_0_mb_sync_bit__parameterized17\ is
  signal async_reset : STD_LOGIC;
begin
\Single_Synchronize.use_async_reset.sync_i_1__7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Dbg_Disable,
      O => async_reset
    );
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => \Performace_Debug_Control.dbg_hit_reg[8]\,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_mb_sync_bit__parameterized19\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_hit_reg[9]\ : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_mb_sync_bit__parameterized19\ : entity is "mb_sync_bit";
end \system_microblaze_0_0_mb_sync_bit__parameterized19\;

architecture STRUCTURE of \system_microblaze_0_0_mb_sync_bit__parameterized19\ is
  signal async_reset : STD_LOGIC;
begin
\Single_Synchronize.use_async_reset.sync_i_1__8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Dbg_Disable,
      O => async_reset
    );
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => \Performace_Debug_Control.dbg_hit_reg[9]\,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_mb_sync_bit__parameterized21\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_hit_reg[10]\ : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_mb_sync_bit__parameterized21\ : entity is "mb_sync_bit";
end \system_microblaze_0_0_mb_sync_bit__parameterized21\;

architecture STRUCTURE of \system_microblaze_0_0_mb_sync_bit__parameterized21\ is
  signal async_reset : STD_LOGIC;
begin
\Single_Synchronize.use_async_reset.sync_i_1__9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Dbg_Disable,
      O => async_reset
    );
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => \Performace_Debug_Control.dbg_hit_reg[10]\,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_mb_sync_bit__parameterized23\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_hit_reg[11]\ : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_mb_sync_bit__parameterized23\ : entity is "mb_sync_bit";
end \system_microblaze_0_0_mb_sync_bit__parameterized23\;

architecture STRUCTURE of \system_microblaze_0_0_mb_sync_bit__parameterized23\ is
  signal async_reset : STD_LOGIC;
begin
\Single_Synchronize.use_async_reset.sync_i_1__10\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Dbg_Disable,
      O => async_reset
    );
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => \Performace_Debug_Control.dbg_hit_reg[11]\,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_mb_sync_bit__parameterized25\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_hit_reg[12]\ : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_mb_sync_bit__parameterized25\ : entity is "mb_sync_bit";
end \system_microblaze_0_0_mb_sync_bit__parameterized25\;

architecture STRUCTURE of \system_microblaze_0_0_mb_sync_bit__parameterized25\ is
  signal async_reset : STD_LOGIC;
begin
\Single_Synchronize.use_async_reset.sync_i_1__11\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Dbg_Disable,
      O => async_reset
    );
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => \Performace_Debug_Control.dbg_hit_reg[12]\,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_mb_sync_bit__parameterized27\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_hit_reg[13]\ : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_mb_sync_bit__parameterized27\ : entity is "mb_sync_bit";
end \system_microblaze_0_0_mb_sync_bit__parameterized27\;

architecture STRUCTURE of \system_microblaze_0_0_mb_sync_bit__parameterized27\ is
  signal async_reset : STD_LOGIC;
begin
\Single_Synchronize.use_async_reset.sync_i_1__12\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Dbg_Disable,
      O => async_reset
    );
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => \Performace_Debug_Control.dbg_hit_reg[13]\,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_mb_sync_bit__parameterized29\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_hit_reg[14]\ : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_mb_sync_bit__parameterized29\ : entity is "mb_sync_bit";
end \system_microblaze_0_0_mb_sync_bit__parameterized29\;

architecture STRUCTURE of \system_microblaze_0_0_mb_sync_bit__parameterized29\ is
  signal async_reset : STD_LOGIC;
begin
\Single_Synchronize.use_async_reset.sync_i_1__13\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Dbg_Disable,
      O => async_reset
    );
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => \Performace_Debug_Control.dbg_hit_reg[14]\,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_mb_sync_bit__parameterized3\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_hit_reg[1]\ : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_mb_sync_bit__parameterized3\ : entity is "mb_sync_bit";
end \system_microblaze_0_0_mb_sync_bit__parameterized3\;

architecture STRUCTURE of \system_microblaze_0_0_mb_sync_bit__parameterized3\ is
  signal async_reset : STD_LOGIC;
begin
\Single_Synchronize.use_async_reset.sync_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Dbg_Disable,
      O => async_reset
    );
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => \Performace_Debug_Control.dbg_hit_reg[1]\,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_mb_sync_bit__parameterized31\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_hit_reg[15]\ : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_mb_sync_bit__parameterized31\ : entity is "mb_sync_bit";
end \system_microblaze_0_0_mb_sync_bit__parameterized31\;

architecture STRUCTURE of \system_microblaze_0_0_mb_sync_bit__parameterized31\ is
  signal async_reset : STD_LOGIC;
begin
\Single_Synchronize.use_async_reset.sync_i_1__14\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Dbg_Disable,
      O => async_reset
    );
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => \Performace_Debug_Control.dbg_hit_reg[15]\,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_mb_sync_bit__parameterized33\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_mb_sync_bit__parameterized33\ : entity is "mb_sync_bit";
end \system_microblaze_0_0_mb_sync_bit__parameterized33\;

architecture STRUCTURE of \system_microblaze_0_0_mb_sync_bit__parameterized33\ is
  signal async_reset : STD_LOGIC;
begin
\Single_Synchronize.use_async_reset.sync_i_1__15\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Dbg_Disable,
      O => async_reset
    );
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_mb_sync_bit__parameterized35\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    dbg_brki_hit : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_mb_sync_bit__parameterized35\ : entity is "mb_sync_bit";
end \system_microblaze_0_0_mb_sync_bit__parameterized35\;

architecture STRUCTURE of \system_microblaze_0_0_mb_sync_bit__parameterized35\ is
  signal async_reset : STD_LOGIC;
begin
\Single_Synchronize.use_async_reset.sync_i_1__16\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Dbg_Disable,
      O => async_reset
    );
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => dbg_brki_hit,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_mb_sync_bit__parameterized37\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    running_clock : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_mb_sync_bit__parameterized37\ : entity is "mb_sync_bit";
end \system_microblaze_0_0_mb_sync_bit__parameterized37\;

architecture STRUCTURE of \system_microblaze_0_0_mb_sync_bit__parameterized37\ is
  signal async_reset : STD_LOGIC;
begin
\Single_Synchronize.use_async_reset.sync_i_1__17\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Dbg_Disable,
      O => async_reset
    );
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => running_clock,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_mb_sync_bit__parameterized39\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_mb_sync_bit__parameterized39\ : entity is "mb_sync_bit";
end \system_microblaze_0_0_mb_sync_bit__parameterized39\;

architecture STRUCTURE of \system_microblaze_0_0_mb_sync_bit__parameterized39\ is
  signal async_reset : STD_LOGIC;
begin
\Single_Synchronize.use_async_reset.sync_i_1__18\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Dbg_Disable,
      O => async_reset
    );
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => '0',
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_mb_sync_bit__parameterized41\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC;
    sleep_reset_mode_reg : in STD_LOGIC;
    Sleep_Decode : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_mb_sync_bit__parameterized41\ : entity is "mb_sync_bit";
end \system_microblaze_0_0_mb_sync_bit__parameterized41\;

architecture STRUCTURE of \system_microblaze_0_0_mb_sync_bit__parameterized41\ is
  signal \Single_Synchronize.use_async_reset.sync_i_1__19_n_0\ : STD_LOGIC;
  signal async_reset : STD_LOGIC;
begin
\Single_Synchronize.use_async_reset.sync_i_1__19\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => sleep_reset_mode_reg,
      I1 => Sleep_Decode,
      O => \Single_Synchronize.use_async_reset.sync_i_1__19_n_0\
    );
\Single_Synchronize.use_async_reset.sync_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Dbg_Disable,
      O => async_reset
    );
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => \Single_Synchronize.use_async_reset.sync_i_1__19_n_0\,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_mb_sync_bit__parameterized5\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_hit_reg[2]\ : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_mb_sync_bit__parameterized5\ : entity is "mb_sync_bit";
end \system_microblaze_0_0_mb_sync_bit__parameterized5\;

architecture STRUCTURE of \system_microblaze_0_0_mb_sync_bit__parameterized5\ is
  signal async_reset : STD_LOGIC;
begin
\Single_Synchronize.use_async_reset.sync_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Dbg_Disable,
      O => async_reset
    );
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => \Performace_Debug_Control.dbg_hit_reg[2]\,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_mb_sync_bit__parameterized52\ is
  port (
    trig_ack_in_0_synced : out STD_LOGIC;
    trig_in_0_reg : out STD_LOGIC;
    Rst18_out : in STD_LOGIC;
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Dbg_Trig_In : in STD_LOGIC_VECTOR ( 0 to 0 );
    mb_halted_1 : in STD_LOGIC;
    dbg_state_i : in STD_LOGIC;
    trig_ack_in_0_synced_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_mb_sync_bit__parameterized52\ : entity is "mb_sync_bit";
end \system_microblaze_0_0_mb_sync_bit__parameterized52\;

architecture STRUCTURE of \system_microblaze_0_0_mb_sync_bit__parameterized52\ is
  signal \^trig_ack_in_0_synced\ : STD_LOGIC;
begin
  trig_ack_in_0_synced <= \^trig_ack_in_0_synced\;
\Single_Synchronize.use_sync_reset.sync_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Dbg_Trig_Ack_In(0),
      Q => \^trig_ack_in_0_synced\,
      R => Rst18_out
    );
trig_in_0_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00BA00BA000000BA"
    )
        port map (
      I0 => Dbg_Trig_In(0),
      I1 => mb_halted_1,
      I2 => dbg_state_i,
      I3 => Rst18_out,
      I4 => \^trig_ack_in_0_synced\,
      I5 => trig_ack_in_0_synced_1,
      O => trig_in_0_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_mb_sync_bit__parameterized54\ is
  port (
    trig_out_0_synced : out STD_LOGIC;
    \Performace_Debug_Control.trig_ack_out_0_reg\ : out STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_i_reg\ : out STD_LOGIC;
    Rst18_out : in STD_LOGIC;
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    trig_out_0_synced_1 : in STD_LOGIC;
    Dbg_Trig_Ack_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Disable : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_stop_i_reg_0\ : in STD_LOGIC;
    dbg_state_i : in STD_LOGIC;
    Dbg_Stop : in STD_LOGIC;
    dbg_stop_1 : in STD_LOGIC;
    dbg_stop_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_mb_sync_bit__parameterized54\ : entity is "mb_sync_bit";
end \system_microblaze_0_0_mb_sync_bit__parameterized54\;

architecture STRUCTURE of \system_microblaze_0_0_mb_sync_bit__parameterized54\ is
  signal p_40_out : STD_LOGIC;
  signal \^trig_out_0_synced\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Performace_Debug_Control.dbg_stop_i_i_2\ : label is "soft_lutpair71";
  attribute SOFT_HLUTNM of \Performace_Debug_Control.trig_ack_out_0_i_1\ : label is "soft_lutpair71";
begin
  trig_out_0_synced <= \^trig_out_0_synced\;
\Performace_Debug_Control.dbg_stop_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000AEAEAFAE"
    )
        port map (
      I0 => \Performace_Debug_Control.dbg_stop_i_reg_0\,
      I1 => p_40_out,
      I2 => dbg_state_i,
      I3 => Dbg_Stop,
      I4 => dbg_stop_1,
      I5 => dbg_stop_i,
      O => \Performace_Debug_Control.dbg_stop_i_reg\
    );
\Performace_Debug_Control.dbg_stop_i_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^trig_out_0_synced\,
      I1 => trig_out_0_synced_1,
      O => p_40_out
    );
\Performace_Debug_Control.trig_ack_out_0_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"02030002"
    )
        port map (
      I0 => Dbg_Trig_Ack_Out(0),
      I1 => Dbg_Disable,
      I2 => \out\(0),
      I3 => trig_out_0_synced_1,
      I4 => \^trig_out_0_synced\,
      O => \Performace_Debug_Control.trig_ack_out_0_reg\
    );
\Single_Synchronize.use_sync_reset.sync_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Dbg_Trig_Out(0),
      Q => \^trig_out_0_synced\,
      R => Rst18_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_mb_sync_bit__parameterized7\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_hit_reg[3]\ : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_mb_sync_bit__parameterized7\ : entity is "mb_sync_bit";
end \system_microblaze_0_0_mb_sync_bit__parameterized7\;

architecture STRUCTURE of \system_microblaze_0_0_mb_sync_bit__parameterized7\ is
  signal async_reset : STD_LOGIC;
begin
\Single_Synchronize.use_async_reset.sync_i_1__2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Dbg_Disable,
      O => async_reset
    );
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => \Performace_Debug_Control.dbg_hit_reg[3]\,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_mb_sync_bit__parameterized9\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Performace_Debug_Control.dbg_hit_reg[4]\ : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_mb_sync_bit__parameterized9\ : entity is "mb_sync_bit";
end \system_microblaze_0_0_mb_sync_bit__parameterized9\;

architecture STRUCTURE of \system_microblaze_0_0_mb_sync_bit__parameterized9\ is
  signal async_reset : STD_LOGIC;
begin
\Single_Synchronize.use_async_reset.sync_i_1__3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Dbg_Disable,
      O => async_reset
    );
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => \Performace_Debug_Control.dbg_hit_reg[4]\,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[10]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[10]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_509
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[10]\(0) => \EX_Op1_reg[10]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_510
     port map (
      DI => op2_is_1,
      \Data_Addr[10]\(0) => \Data_Addr[10]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_419 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[11]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[11]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_419 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_419;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_419 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_507
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[11]\(0) => \EX_Op1_reg[11]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_508
     port map (
      DI => op2_is_1,
      \Data_Addr[11]\(0) => \Data_Addr[11]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_420 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[12]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[12]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_420 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_420;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_420 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_505
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[12]\(0) => \EX_Op1_reg[12]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_506
     port map (
      DI => op2_is_1,
      \Data_Addr[12]\(0) => \Data_Addr[12]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_421 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[13]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[13]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_421 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_421;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_421 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_503
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[13]\(0) => \EX_Op1_reg[13]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_504
     port map (
      DI => op2_is_1,
      \Data_Addr[13]\(0) => \Data_Addr[13]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_422 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[14]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[14]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_422 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_422;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_422 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_501
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[14]\(0) => \EX_Op1_reg[14]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_502
     port map (
      DI => op2_is_1,
      \Data_Addr[14]\(0) => \Data_Addr[14]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_423 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[15]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[15]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_423 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_423;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_423 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_499
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[15]\(0) => \EX_Op1_reg[15]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_500
     port map (
      DI => op2_is_1,
      \Data_Addr[15]\(0) => \Data_Addr[15]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_424 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[16]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[16]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_424 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_424;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_424 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_497
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[16]\(0) => \EX_Op1_reg[16]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_498
     port map (
      DI => op2_is_1,
      \Data_Addr[16]\(0) => \Data_Addr[16]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_425 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[17]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[17]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_425 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_425;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_425 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_495
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[17]\(0) => \EX_Op1_reg[17]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_496
     port map (
      DI => op2_is_1,
      \Data_Addr[17]\(0) => \Data_Addr[17]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_426 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[18]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[18]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_426 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_426;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_426 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_493
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[18]\(0) => \EX_Op1_reg[18]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_494
     port map (
      DI => op2_is_1,
      \Data_Addr[18]\(0) => \Data_Addr[18]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_427 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[19]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[19]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_427 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_427;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_427 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_491
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[19]\(0) => \EX_Op1_reg[19]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_492
     port map (
      DI => op2_is_1,
      \Data_Addr[19]\(0) => \Data_Addr[19]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_428 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[1]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_428 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_428;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_428 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt\ <= lopt_2;
  lopt <= op2_is_1;
  lopt_1 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_489
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[1]\(0) => \EX_Op1_reg[1]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_490
     port map (
      DI => op2_is_1,
      \Data_Addr[1]\(0) => \Data_Addr[1]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => \^lopt\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_429 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[20]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[20]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_429 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_429;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_429 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_487
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[20]\(0) => \EX_Op1_reg[20]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_488
     port map (
      DI => op2_is_1,
      \Data_Addr[20]\(0) => \Data_Addr[20]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_430 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[21]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[21]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_430 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_430;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_430 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_485
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[21]\(0) => \EX_Op1_reg[21]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_486
     port map (
      DI => op2_is_1,
      \Data_Addr[21]\(0) => \Data_Addr[21]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_431 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[22]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[22]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_431 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_431;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_431 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_483
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[22]\(0) => \EX_Op1_reg[22]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_484
     port map (
      DI => op2_is_1,
      \Data_Addr[22]\(0) => \Data_Addr[22]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_432 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[23]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[23]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_432 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_432;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_432 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_481
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[23]\(0) => \EX_Op1_reg[23]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_482
     port map (
      DI => op2_is_1,
      \Data_Addr[23]\(0) => \Data_Addr[23]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_433 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[24]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[24]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_433 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_433;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_433 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_479
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[24]\(0) => \EX_Op1_reg[24]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_480
     port map (
      DI => op2_is_1,
      \Data_Addr[24]\(0) => \Data_Addr[24]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_434 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[25]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[25]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_434 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_434;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_434 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_477
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[25]\(0) => \EX_Op1_reg[25]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_478
     port map (
      DI => op2_is_1,
      \Data_Addr[25]\(0) => \Data_Addr[25]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_435 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[26]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[26]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_435 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_435;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_435 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_475
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[26]\(0) => \EX_Op1_reg[26]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_476
     port map (
      DI => op2_is_1,
      \Data_Addr[26]\(0) => \Data_Addr[26]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_436 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[27]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[27]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_436 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_436;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_436 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_473
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[27]\(0) => \EX_Op1_reg[27]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_474
     port map (
      DI => op2_is_1,
      \Data_Addr[27]\(0) => \Data_Addr[27]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_437 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[28]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_437 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_437;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_437 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_471
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[28]\(0) => \EX_Op1_reg[28]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_472
     port map (
      DI => op2_is_1,
      \Data_Addr[28]\(0) => \Data_Addr[28]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_438 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[29]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[29]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_438 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_438;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_438 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_469
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[29]\(0) => \EX_Op1_reg[29]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_470
     port map (
      DI => op2_is_1,
      \Data_Addr[29]\(0) => \Data_Addr[29]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_439 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[2]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[2]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_439 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_439;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_439 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_467
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[2]\(0) => \EX_Op1_reg[2]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_468
     port map (
      DI => op2_is_1,
      \Data_Addr[2]\(0) => \Data_Addr[2]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_440 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \MEM_DataBus_Addr_reg[30]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[30]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_440 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_440;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_440 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_465
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[30]\(0) => \EX_Op1_reg[30]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_466
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      \MEM_DataBus_Addr_reg[30]\(0) => \MEM_DataBus_Addr_reg[30]\(0),
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_441 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \MEM_DataBus_Addr_reg[31]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[31]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_441 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_441;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_441 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_463
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[31]\(0) => \EX_Op1_reg[31]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_464
     port map (
      DI => op2_is_1,
      EX_CarryIn => EX_CarryIn,
      EX_CarryOut => EX_CarryOut,
      \MEM_DataBus_Addr_reg[31]\(0) => \MEM_DataBus_Addr_reg[31]\(0),
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_442 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[3]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[3]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_442 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_442;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_442 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_461
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[3]\(0) => \EX_Op1_reg[3]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_462
     port map (
      DI => op2_is_1,
      \Data_Addr[3]\(0) => \Data_Addr[3]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_443 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[4]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[4]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_443 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_443;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_443 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_459
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[4]\(0) => \EX_Op1_reg[4]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_460
     port map (
      DI => op2_is_1,
      \Data_Addr[4]\(0) => \Data_Addr[4]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_444 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[5]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[5]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_444 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_444;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_444 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_457
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[5]\(0) => \EX_Op1_reg[5]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_458
     port map (
      DI => op2_is_1,
      \Data_Addr[5]\(0) => \Data_Addr[5]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_445 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[6]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[6]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_445 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_445;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_445 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_455
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[6]\(0) => \EX_Op1_reg[6]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_456
     port map (
      DI => op2_is_1,
      \Data_Addr[6]\(0) => \Data_Addr[6]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_446 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[7]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[7]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_446 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_446;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_446 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_453
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[7]\(0) => \EX_Op1_reg[7]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_454
     port map (
      DI => op2_is_1,
      \Data_Addr[7]\(0) => \Data_Addr[7]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_447 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[8]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[8]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_447 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_447;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_447 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2_451
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[8]\(0) => \EX_Op1_reg[8]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_452
     port map (
      DI => op2_is_1,
      \Data_Addr[8]\(0) => \Data_Addr[8]\(0),
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU_Bit_448 is
  port (
    EX_CarryOut : out STD_LOGIC;
    \Data_Addr[9]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[9]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU_Bit_448 : entity is "ALU_Bit";
end system_microblaze_0_0_ALU_Bit_448;

architecture STRUCTURE of system_microblaze_0_0_ALU_Bit_448 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.system_microblaze_0_0_MB_LUT6_2
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[9]\(0) => \EX_Op1_reg[9]\(0),
      Q(0) => Q(0),
      S => alu_AddSub
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_450
     port map (
      DI => op2_is_1,
      \Data_Addr[9]\(0) => \Data_Addr[9]\(0),
      EX_CarryIn => EX_CarryIn,
      EX_CarryOut => EX_CarryOut,
      S => alu_AddSub,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_ALU_Bit__parameterized31\ is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Data_Addr[0]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CMP_Op_reg : in STD_LOGIC;
    ex_unsigned_op : in STD_LOGIC;
    LO : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    S : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : out STD_LOGIC;
    lopt_9 : in STD_LOGIC;
    lopt_10 : in STD_LOGIC;
    lopt_11 : out STD_LOGIC;
    lopt_12 : out STD_LOGIC;
    lopt_13 : in STD_LOGIC;
    lopt_14 : in STD_LOGIC;
    lopt_15 : out STD_LOGIC;
    lopt_16 : in STD_LOGIC;
    lopt_17 : in STD_LOGIC;
    lopt_18 : out STD_LOGIC;
    lopt_19 : in STD_LOGIC;
    lopt_20 : in STD_LOGIC;
    lopt_21 : out STD_LOGIC;
    lopt_22 : in STD_LOGIC;
    lopt_23 : in STD_LOGIC;
    lopt_24 : out STD_LOGIC;
    lopt_25 : out STD_LOGIC;
    lopt_26 : out STD_LOGIC;
    lopt_27 : out STD_LOGIC;
    lopt_28 : out STD_LOGIC;
    lopt_29 : in STD_LOGIC;
    lopt_30 : in STD_LOGIC;
    lopt_31 : out STD_LOGIC;
    lopt_32 : in STD_LOGIC;
    lopt_33 : in STD_LOGIC;
    lopt_34 : out STD_LOGIC;
    lopt_35 : in STD_LOGIC;
    lopt_36 : in STD_LOGIC;
    lopt_37 : out STD_LOGIC;
    lopt_38 : in STD_LOGIC;
    lopt_39 : in STD_LOGIC;
    lopt_40 : out STD_LOGIC;
    lopt_41 : out STD_LOGIC;
    lopt_42 : out STD_LOGIC;
    lopt_43 : out STD_LOGIC;
    lopt_44 : out STD_LOGIC;
    lopt_45 : in STD_LOGIC;
    lopt_46 : in STD_LOGIC;
    lopt_47 : out STD_LOGIC;
    lopt_48 : in STD_LOGIC;
    lopt_49 : in STD_LOGIC;
    lopt_50 : out STD_LOGIC;
    lopt_51 : in STD_LOGIC;
    lopt_52 : in STD_LOGIC;
    lopt_53 : out STD_LOGIC;
    lopt_54 : in STD_LOGIC;
    lopt_55 : in STD_LOGIC;
    lopt_56 : out STD_LOGIC;
    lopt_57 : out STD_LOGIC;
    lopt_58 : out STD_LOGIC;
    lopt_59 : out STD_LOGIC;
    lopt_60 : out STD_LOGIC;
    lopt_61 : in STD_LOGIC;
    lopt_62 : in STD_LOGIC;
    lopt_63 : out STD_LOGIC;
    lopt_64 : in STD_LOGIC;
    lopt_65 : in STD_LOGIC;
    lopt_66 : out STD_LOGIC;
    lopt_67 : in STD_LOGIC;
    lopt_68 : in STD_LOGIC;
    lopt_69 : out STD_LOGIC;
    lopt_70 : in STD_LOGIC;
    lopt_71 : in STD_LOGIC;
    lopt_72 : out STD_LOGIC;
    lopt_73 : out STD_LOGIC;
    lopt_74 : out STD_LOGIC;
    lopt_75 : out STD_LOGIC;
    lopt_76 : out STD_LOGIC;
    lopt_77 : in STD_LOGIC;
    lopt_78 : in STD_LOGIC;
    lopt_79 : out STD_LOGIC;
    lopt_80 : in STD_LOGIC;
    lopt_81 : in STD_LOGIC;
    lopt_82 : out STD_LOGIC;
    lopt_83 : in STD_LOGIC;
    lopt_84 : in STD_LOGIC;
    lopt_85 : out STD_LOGIC;
    lopt_86 : in STD_LOGIC;
    lopt_87 : in STD_LOGIC;
    lopt_88 : out STD_LOGIC;
    lopt_89 : out STD_LOGIC;
    lopt_90 : out STD_LOGIC;
    lopt_91 : out STD_LOGIC;
    lopt_92 : out STD_LOGIC;
    lopt_93 : in STD_LOGIC;
    lopt_94 : in STD_LOGIC;
    lopt_95 : out STD_LOGIC;
    lopt_96 : in STD_LOGIC;
    lopt_97 : in STD_LOGIC;
    lopt_98 : out STD_LOGIC;
    lopt_99 : in STD_LOGIC;
    lopt_100 : in STD_LOGIC;
    lopt_101 : out STD_LOGIC;
    lopt_102 : in STD_LOGIC;
    lopt_103 : in STD_LOGIC;
    lopt_104 : out STD_LOGIC;
    lopt_105 : out STD_LOGIC;
    lopt_106 : out STD_LOGIC;
    lopt_107 : out STD_LOGIC;
    lopt_108 : out STD_LOGIC;
    lopt_109 : in STD_LOGIC;
    lopt_110 : in STD_LOGIC;
    lopt_111 : out STD_LOGIC;
    lopt_112 : in STD_LOGIC;
    lopt_113 : in STD_LOGIC;
    lopt_114 : out STD_LOGIC;
    lopt_115 : in STD_LOGIC;
    lopt_116 : in STD_LOGIC;
    lopt_117 : out STD_LOGIC;
    lopt_118 : in STD_LOGIC;
    lopt_119 : in STD_LOGIC;
    lopt_120 : out STD_LOGIC;
    lopt_121 : out STD_LOGIC;
    lopt_122 : out STD_LOGIC;
    lopt_123 : out STD_LOGIC;
    lopt_124 : out STD_LOGIC;
    lopt_125 : in STD_LOGIC;
    lopt_126 : in STD_LOGIC;
    lopt_127 : in STD_LOGIC;
    lopt_128 : in STD_LOGIC;
    lopt_129 : out STD_LOGIC;
    lopt_130 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_ALU_Bit__parameterized31\ : entity is "ALU_Bit";
end \system_microblaze_0_0_ALU_Bit__parameterized31\;

architecture STRUCTURE of \system_microblaze_0_0_ALU_Bit__parameterized31\ is
  signal alu_AddSub : STD_LOGIC;
  signal alu_AddSub_1 : STD_LOGIC;
  signal invert_result : STD_LOGIC;
  signal \^lopt_129\ : STD_LOGIC;
  signal \^lopt_130\ : STD_LOGIC;
  signal lopt_131 : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  lopt_129 <= \^lopt_130\;
  lopt_130 <= lopt_131;
\Last_Bit.I_ALU_LUT_2\: entity work.system_microblaze_0_0_MB_LUT4
     port map (
      \EX_ALU_Op_reg[0]\(0) => \EX_ALU_Op_reg[0]\(1),
      EX_CMP_Op_reg => S,
      Q(0) => Q(0),
      S => alu_AddSub,
      alu_AddSub_1 => alu_AddSub_1
    );
\Last_Bit.I_ALU_LUT_V5\: entity work.\system_microblaze_0_0_MB_LUT6__parameterized34\
     port map (
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[0]\(0) => \EX_Op1_reg[0]\(0),
      Q(0) => Q(0),
      alu_AddSub_1 => alu_AddSub_1
    );
\Last_Bit.MULT_AND_I\: entity work.system_microblaze_0_0_MB_MULT_AND
     port map (
      DI => op2_is_1,
      \EX_ALU_Op_reg[0]\(0) => \EX_ALU_Op_reg[0]\(1),
      Q(0) => Q(0)
    );
\Last_Bit.MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_511
     port map (
      CI => invert_result,
      DI => op2_is_1,
      \Data_Addr[0]\(0) => \Data_Addr[0]\(0),
      S => alu_AddSub,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_100 => lopt_100,
      lopt_101 => lopt_101,
      lopt_102 => lopt_102,
      lopt_103 => lopt_103,
      lopt_104 => lopt_104,
      lopt_105 => lopt_105,
      lopt_106 => lopt_106,
      lopt_107 => lopt_107,
      lopt_108 => lopt_108,
      lopt_109 => lopt_109,
      lopt_11 => lopt_11,
      lopt_110 => lopt_110,
      lopt_111 => lopt_111,
      lopt_112 => lopt_112,
      lopt_113 => lopt_113,
      lopt_114 => lopt_114,
      lopt_115 => lopt_115,
      lopt_116 => lopt_116,
      lopt_117 => lopt_117,
      lopt_118 => lopt_118,
      lopt_119 => lopt_119,
      lopt_12 => lopt_12,
      lopt_120 => lopt_120,
      lopt_121 => lopt_121,
      lopt_122 => lopt_122,
      lopt_123 => lopt_123,
      lopt_124 => lopt_124,
      lopt_125 => lopt_125,
      lopt_126 => lopt_126,
      lopt_127 => lopt_127,
      lopt_128 => lopt_128,
      lopt_129 => \^lopt_129\,
      lopt_13 => lopt_13,
      lopt_130 => ex_unsigned_op,
      lopt_131 => EX_CMP_Op_reg,
      lopt_132 => \^lopt_130\,
      lopt_133 => lopt_131,
      lopt_14 => lopt_14,
      lopt_15 => lopt_15,
      lopt_16 => lopt_16,
      lopt_17 => lopt_17,
      lopt_18 => lopt_18,
      lopt_19 => lopt_19,
      lopt_2 => lopt_2,
      lopt_20 => lopt_20,
      lopt_21 => lopt_21,
      lopt_22 => lopt_22,
      lopt_23 => lopt_23,
      lopt_24 => lopt_24,
      lopt_25 => lopt_25,
      lopt_26 => lopt_26,
      lopt_27 => lopt_27,
      lopt_28 => lopt_28,
      lopt_29 => lopt_29,
      lopt_3 => lopt_3,
      lopt_30 => lopt_30,
      lopt_31 => lopt_31,
      lopt_32 => lopt_32,
      lopt_33 => lopt_33,
      lopt_34 => lopt_34,
      lopt_35 => lopt_35,
      lopt_36 => lopt_36,
      lopt_37 => lopt_37,
      lopt_38 => lopt_38,
      lopt_39 => lopt_39,
      lopt_4 => lopt_4,
      lopt_40 => lopt_40,
      lopt_41 => lopt_41,
      lopt_42 => lopt_42,
      lopt_43 => lopt_43,
      lopt_44 => lopt_44,
      lopt_45 => lopt_45,
      lopt_46 => lopt_46,
      lopt_47 => lopt_47,
      lopt_48 => lopt_48,
      lopt_49 => lopt_49,
      lopt_5 => lopt_5,
      lopt_50 => lopt_50,
      lopt_51 => lopt_51,
      lopt_52 => lopt_52,
      lopt_53 => lopt_53,
      lopt_54 => lopt_54,
      lopt_55 => lopt_55,
      lopt_56 => lopt_56,
      lopt_57 => lopt_57,
      lopt_58 => lopt_58,
      lopt_59 => lopt_59,
      lopt_6 => lopt_6,
      lopt_60 => lopt_60,
      lopt_61 => lopt_61,
      lopt_62 => lopt_62,
      lopt_63 => lopt_63,
      lopt_64 => lopt_64,
      lopt_65 => lopt_65,
      lopt_66 => lopt_66,
      lopt_67 => lopt_67,
      lopt_68 => lopt_68,
      lopt_69 => lopt_69,
      lopt_7 => lopt_7,
      lopt_70 => lopt_70,
      lopt_71 => lopt_71,
      lopt_72 => lopt_72,
      lopt_73 => lopt_73,
      lopt_74 => lopt_74,
      lopt_75 => lopt_75,
      lopt_76 => lopt_76,
      lopt_77 => lopt_77,
      lopt_78 => lopt_78,
      lopt_79 => lopt_79,
      lopt_8 => lopt_8,
      lopt_80 => lopt_80,
      lopt_81 => lopt_81,
      lopt_82 => lopt_82,
      lopt_83 => lopt_83,
      lopt_84 => lopt_84,
      lopt_85 => lopt_85,
      lopt_86 => lopt_86,
      lopt_87 => lopt_87,
      lopt_88 => lopt_88,
      lopt_89 => lopt_89,
      lopt_9 => lopt_9,
      lopt_90 => lopt_90,
      lopt_91 => lopt_91,
      lopt_92 => lopt_92,
      lopt_93 => lopt_93,
      lopt_94 => lopt_94,
      lopt_95 => lopt_95,
      lopt_96 => lopt_96,
      lopt_97 => lopt_97,
      lopt_98 => lopt_98,
      lopt_99 => lopt_99
    );
\Last_Bit.Pre_MUXCY_I\: entity work.system_microblaze_0_0_MB_MUXCY_512
     port map (
      EX_CMP_Op_reg => EX_CMP_Op_reg,
      LO => LO,
      ex_unsigned_op => ex_unsigned_op,
      invert_result => invert_result,
      lopt => \^lopt_129\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_Data_Flow_Logic is
  port (
    \WB_MEM_Result_reg[0]_0\ : out STD_LOGIC_VECTOR ( 29 downto 0 );
    mem_ex_result : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : out STD_LOGIC_VECTOR ( 31 downto 0 );
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 31 );
    Clk : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_valid_reg : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 3 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_Data_Flow_Logic : entity is "Data_Flow_Logic";
end system_microblaze_0_0_Data_Flow_Logic;

architecture STRUCTURE of system_microblaze_0_0_Data_Flow_Logic is
  signal \^wb_mem_result_reg[0]_0\ : STD_LOGIC_VECTOR ( 29 downto 0 );
begin
  \WB_MEM_Result_reg[0]_0\(29 downto 0) <= \^wb_mem_result_reg[0]_0\(29 downto 0);
\Gen_Bits[0].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_387
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(0),
      R => R,
      \WB_MEM_Result_reg[0]\(0) => \^wb_mem_result_reg[0]_0\(29),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[10].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_388
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(10),
      R => R,
      \WB_MEM_Result_reg[10]\(0) => \^wb_mem_result_reg[0]_0\(19),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[11].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_389
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(11),
      R => R,
      \WB_MEM_Result_reg[11]\(0) => \^wb_mem_result_reg[0]_0\(18),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[12].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_390
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(12),
      R => R,
      \WB_MEM_Result_reg[12]\(0) => \^wb_mem_result_reg[0]_0\(17),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[13].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_391
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(13),
      R => R,
      \WB_MEM_Result_reg[13]\(0) => \^wb_mem_result_reg[0]_0\(16),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[14].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_392
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(14),
      R => R,
      \WB_MEM_Result_reg[14]\(0) => \^wb_mem_result_reg[0]_0\(15),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[15].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_393
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(15),
      R => R,
      \WB_MEM_Result_reg[15]\(0) => \^wb_mem_result_reg[0]_0\(14),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[16].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_394
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(16),
      R => R,
      \WB_MEM_Result_reg[16]\(0) => \^wb_mem_result_reg[0]_0\(13),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[17].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_395
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(17),
      R => R,
      \WB_MEM_Result_reg[17]\(0) => \^wb_mem_result_reg[0]_0\(12),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[18].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_396
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(18),
      R => R,
      \WB_MEM_Result_reg[18]\(0) => \^wb_mem_result_reg[0]_0\(11),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[19].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_397
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(19),
      R => R,
      \WB_MEM_Result_reg[19]\(0) => \^wb_mem_result_reg[0]_0\(10),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[1].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_398
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(1),
      R => R,
      \WB_MEM_Result_reg[1]\(0) => \^wb_mem_result_reg[0]_0\(28),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[20].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_399
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(20),
      R => R,
      \WB_MEM_Result_reg[20]\(0) => \^wb_mem_result_reg[0]_0\(9),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[21].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_400
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(21),
      R => R,
      \WB_MEM_Result_reg[21]\(0) => \^wb_mem_result_reg[0]_0\(8),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[22].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_401
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(22),
      R => R,
      \WB_MEM_Result_reg[22]\(0) => \^wb_mem_result_reg[0]_0\(7),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[23].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_402
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(23),
      R => R,
      \WB_MEM_Result_reg[23]\(0) => \^wb_mem_result_reg[0]_0\(6),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[24].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_403
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(24),
      R => R,
      \WB_MEM_Result_reg[24]\(0) => \^wb_mem_result_reg[0]_0\(5),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[25].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_404
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(25),
      R => R,
      \WB_MEM_Result_reg[25]\(0) => \^wb_mem_result_reg[0]_0\(4),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[26].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_405
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(26),
      R => R,
      \WB_MEM_Result_reg[26]\(0) => \^wb_mem_result_reg[0]_0\(3),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[27].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_406
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(27),
      R => R,
      \WB_MEM_Result_reg[27]\(0) => \^wb_mem_result_reg[0]_0\(2),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[28].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_407
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(28),
      R => R,
      \WB_MEM_Result_reg[28]\(0) => \^wb_mem_result_reg[0]_0\(1),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[29].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_408
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(29),
      R => R,
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg,
      mem_ex_result(0) => mem_ex_result(1)
    );
\Gen_Bits[2].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_409
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(2),
      R => R,
      \WB_MEM_Result_reg[2]\(0) => \^wb_mem_result_reg[0]_0\(27),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[30].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_410
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(30),
      R => R,
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg,
      mem_ex_result(0) => mem_ex_result(0)
    );
\Gen_Bits[31].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_411
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(31),
      R => R,
      \WB_MEM_Result_reg[31]\(0) => \^wb_mem_result_reg[0]_0\(0),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[3].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_412
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(3),
      R => R,
      \WB_MEM_Result_reg[3]\(0) => \^wb_mem_result_reg[0]_0\(26),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[4].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_413
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(4),
      R => R,
      \WB_MEM_Result_reg[4]\(0) => \^wb_mem_result_reg[0]_0\(25),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[5].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_414
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(5),
      R => R,
      \WB_MEM_Result_reg[5]\(0) => \^wb_mem_result_reg[0]_0\(24),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[6].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_415
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(6),
      R => R,
      \WB_MEM_Result_reg[6]\(0) => \^wb_mem_result_reg[0]_0\(23),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[7].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_416
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(7),
      R => R,
      \WB_MEM_Result_reg[7]\(0) => \^wb_mem_result_reg[0]_0\(22),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[8].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_417
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(8),
      R => R,
      \WB_MEM_Result_reg[8]\(0) => \^wb_mem_result_reg[0]_0\(21),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\Gen_Bits[9].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_418
     port map (
      Clk => Clk,
      EX_Fwd(0) => EX_Fwd(9),
      R => R,
      \WB_MEM_Result_reg[9]\(0) => \^wb_mem_result_reg[0]_0\(20),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg
    );
\WB_MEM_Result_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => D(3),
      Q => Q(31),
      R => SR(0)
    );
\WB_MEM_Result_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(19),
      Q => Q(21),
      R => SR(0)
    );
\WB_MEM_Result_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(18),
      Q => Q(20),
      R => SR(0)
    );
\WB_MEM_Result_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(17),
      Q => Q(19),
      R => SR(0)
    );
\WB_MEM_Result_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(16),
      Q => Q(18),
      R => SR(0)
    );
\WB_MEM_Result_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(15),
      Q => Q(17),
      R => SR(0)
    );
\WB_MEM_Result_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(14),
      Q => Q(16),
      R => SR(0)
    );
\WB_MEM_Result_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(13),
      Q => Q(15),
      R => SR(0)
    );
\WB_MEM_Result_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(12),
      Q => Q(14),
      R => SR(0)
    );
\WB_MEM_Result_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(11),
      Q => Q(13),
      R => SR(0)
    );
\WB_MEM_Result_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(10),
      Q => Q(12),
      R => SR(0)
    );
\WB_MEM_Result_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(28),
      Q => Q(30),
      R => SR(0)
    );
\WB_MEM_Result_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(9),
      Q => Q(11),
      R => SR(0)
    );
\WB_MEM_Result_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(8),
      Q => Q(10),
      R => SR(0)
    );
\WB_MEM_Result_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(7),
      Q => Q(9),
      R => SR(0)
    );
\WB_MEM_Result_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(6),
      Q => Q(8),
      R => SR(0)
    );
\WB_MEM_Result_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(5),
      Q => Q(7),
      R => SR(0)
    );
\WB_MEM_Result_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(4),
      Q => Q(6),
      R => SR(0)
    );
\WB_MEM_Result_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(3),
      Q => Q(5),
      R => SR(0)
    );
\WB_MEM_Result_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(2),
      Q => Q(4),
      R => SR(0)
    );
\WB_MEM_Result_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => D(2),
      Q => Q(3),
      R => SR(0)
    );
\WB_MEM_Result_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => D(1),
      Q => Q(2),
      R => SR(0)
    );
\WB_MEM_Result_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(27),
      Q => Q(29),
      R => SR(0)
    );
\WB_MEM_Result_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => D(0),
      Q => Q(1),
      R => SR(0)
    );
\WB_MEM_Result_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(0),
      Q => Q(0),
      R => SR(0)
    );
\WB_MEM_Result_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(26),
      Q => Q(28),
      R => SR(0)
    );
\WB_MEM_Result_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(25),
      Q => Q(27),
      R => SR(0)
    );
\WB_MEM_Result_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(24),
      Q => Q(26),
      R => SR(0)
    );
\WB_MEM_Result_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(23),
      Q => Q(25),
      R => SR(0)
    );
\WB_MEM_Result_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(22),
      Q => Q(24),
      R => SR(0)
    );
\WB_MEM_Result_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(21),
      Q => Q(23),
      R => SR(0)
    );
\WB_MEM_Result_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => mem_valid_reg,
      D => \^wb_mem_result_reg[0]_0\(20),
      Q => Q(22),
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_Operand_Select_gti is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \MEM_DataBus_Addr_reg[0]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \mem_byte_selects_reg[0]\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Data_Addr[30]\ : out STD_LOGIC_VECTOR ( 33 downto 0 );
    S : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    \Using_FPGA.Native_9\ : out STD_LOGIC;
    \Using_FPGA.Native_10\ : out STD_LOGIC;
    \Using_FPGA.Native_11\ : out STD_LOGIC;
    \Using_FPGA.Native_12\ : out STD_LOGIC;
    \Using_FPGA.Native_13\ : out STD_LOGIC;
    \Using_FPGA.Native_14\ : out STD_LOGIC;
    \Using_FPGA.Native_15\ : out STD_LOGIC;
    \Using_FPGA.Native_16\ : out STD_LOGIC;
    \Using_FPGA.Native_17\ : out STD_LOGIC;
    \Using_FPGA.Native_18\ : out STD_LOGIC;
    \Using_FPGA.Native_19\ : out STD_LOGIC;
    \Using_FPGA.Native_20\ : out STD_LOGIC;
    \Using_FPGA.Native_21\ : out STD_LOGIC;
    \Using_FPGA.Native_22\ : out STD_LOGIC;
    \Using_FPGA.Native_23\ : out STD_LOGIC;
    \Using_FPGA.Native_24\ : out STD_LOGIC;
    \Using_FPGA.Native_25\ : out STD_LOGIC;
    \Using_FPGA.Native_26\ : out STD_LOGIC;
    \Using_FPGA.Native_27\ : out STD_LOGIC;
    \Using_FPGA.Native_28\ : out STD_LOGIC;
    \Using_FPGA.Native_29\ : out STD_LOGIC;
    \Using_FPGA.Native_30\ : out STD_LOGIC;
    \Using_FPGA.Native_31\ : out STD_LOGIC;
    \Using_FPGA.Native_32\ : out STD_LOGIC;
    \Using_FPGA.Native_33\ : out STD_LOGIC;
    \MEM_DataBus_Addr_reg[0]_0\ : out STD_LOGIC;
    \Using_FPGA.Native_34\ : out STD_LOGIC;
    \Zero_Detecting[1].nibble_Zero_reg\ : out STD_LOGIC;
    \Zero_Detecting[2].nibble_Zero_reg\ : out STD_LOGIC;
    \Zero_Detecting[3].nibble_Zero_reg\ : out STD_LOGIC;
    \Zero_Detecting[4].nibble_Zero_reg\ : out STD_LOGIC;
    \Zero_Detecting[5].nibble_Zero_reg\ : out STD_LOGIC;
    \Using_FPGA.Native_35\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Zero_Detecting[0].nibble_Zero_reg\ : out STD_LOGIC;
    \EX_Op2_reg[0]_0\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    of_op1_sel_spr : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 31 downto 0 );
    I1 : in STD_LOGIC;
    \Using_FPGA.Native_36\ : in STD_LOGIC;
    \Using_FPGA.Native_37\ : in STD_LOGIC;
    \Using_FPGA.Native_38\ : in STD_LOGIC;
    \Using_FPGA.Native_39\ : in STD_LOGIC;
    \Using_FPGA.Native_40\ : in STD_LOGIC;
    \Using_FPGA.Native_41\ : in STD_LOGIC;
    \Using_FPGA.Native_42\ : in STD_LOGIC;
    \Using_FPGA.Native_43\ : in STD_LOGIC;
    \Using_FPGA.Native_44\ : in STD_LOGIC;
    \Using_FPGA.Native_45\ : in STD_LOGIC;
    \Using_FPGA.Native_46\ : in STD_LOGIC;
    \Using_FPGA.Native_47\ : in STD_LOGIC;
    \Using_FPGA.Native_48\ : in STD_LOGIC;
    \Using_FPGA.Native_49\ : in STD_LOGIC;
    \Using_FPGA.Native_50\ : in STD_LOGIC;
    \Using_FPGA.Native_51\ : in STD_LOGIC;
    \Using_FPGA.Native_52\ : in STD_LOGIC;
    \Using_FPGA.Native_53\ : in STD_LOGIC;
    \Using_FPGA.Native_54\ : in STD_LOGIC;
    \Using_FPGA.Native_55\ : in STD_LOGIC;
    \Using_FPGA.Native_56\ : in STD_LOGIC;
    \Using_FPGA.Native_57\ : in STD_LOGIC;
    \Using_FPGA.Native_58\ : in STD_LOGIC;
    \Using_FPGA.Native_59\ : in STD_LOGIC;
    \Using_FPGA.Native_60\ : in STD_LOGIC;
    \Using_FPGA.Native_61\ : in STD_LOGIC;
    \Using_FPGA.Native_62\ : in STD_LOGIC;
    \Using_FPGA.Native_63\ : in STD_LOGIC;
    \Using_FPGA.Native_64\ : in STD_LOGIC;
    \Using_FPGA.Native_65\ : in STD_LOGIC;
    \Using_FPGA.Native_66\ : in STD_LOGIC;
    ex_MSR : in STD_LOGIC_VECTOR ( 2 downto 0 );
    ex_Take_Intr_or_Exc_reg : in STD_LOGIC;
    wb_sel_spr_shr : in STD_LOGIC;
    ex_move_to_MSR_instr : in STD_LOGIC;
    ex_reverse_byteorder : in STD_LOGIC;
    ex_byte_access : in STD_LOGIC;
    ex_doublet_access : in STD_LOGIC;
    ex_cmp_op : in STD_LOGIC;
    ex_swap_byte_instr : in STD_LOGIC;
    \EX_Sext_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_imm_data : in STD_LOGIC_VECTOR ( 0 to 15 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_67\ : in STD_LOGIC;
    \interrupt_address_d1_reg[0]\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    WB_Doublet_Access_reg : in STD_LOGIC_VECTOR ( 31 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_Operand_Select_gti : entity is "Operand_Select_gti";
end system_microblaze_0_0_Operand_Select_gti;

architecture STRUCTURE of system_microblaze_0_0_Operand_Select_gti is
  signal \Gen_Bit[31].MUXF7_I1_n_0\ : STD_LOGIC;
  signal \^mem_databus_addr_reg[0]\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal O : STD_LOGIC;
  signal O0_out : STD_LOGIC;
  signal O10_out : STD_LOGIC;
  signal O11_out : STD_LOGIC;
  signal O12_out : STD_LOGIC;
  signal O13_out : STD_LOGIC;
  signal O14_out : STD_LOGIC;
  signal O15_out : STD_LOGIC;
  signal O16_out : STD_LOGIC;
  signal O17_out : STD_LOGIC;
  signal O18_out : STD_LOGIC;
  signal O19_out : STD_LOGIC;
  signal O1_out : STD_LOGIC;
  signal O20_out : STD_LOGIC;
  signal O21_out : STD_LOGIC;
  signal O22_out : STD_LOGIC;
  signal O23_out : STD_LOGIC;
  signal O24_out : STD_LOGIC;
  signal O25_out : STD_LOGIC;
  signal O26_out : STD_LOGIC;
  signal O27_out : STD_LOGIC;
  signal O28_out : STD_LOGIC;
  signal O29_out : STD_LOGIC;
  signal O2_out : STD_LOGIC;
  signal O3_out : STD_LOGIC;
  signal O4_out : STD_LOGIC;
  signal O5_out : STD_LOGIC;
  signal O6_out : STD_LOGIC;
  signal O7_out : STD_LOGIC;
  signal O8_out : STD_LOGIC;
  signal O9_out : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \^using_fpga.native_35\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal ex_branch_cmp_op1 : STD_LOGIC_VECTOR ( 1 to 31 );
  signal ex_op3 : STD_LOGIC_VECTOR ( 0 to 31 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Byte_Enable[0]_INST_0_i_1\ : label is "soft_lutpair1";
  attribute SOFT_HLUTNM of \mem_byte_selects[1]_i_1\ : label is "soft_lutpair1";
begin
  \MEM_DataBus_Addr_reg[0]\(31 downto 0) <= \^mem_databus_addr_reg[0]\(31 downto 0);
  Q(31 downto 0) <= \^q\(31 downto 0);
  \Using_FPGA.Native_35\(0) <= \^using_fpga.native_35\(0);
\Byte_Enable[0]_INST_0_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"956A6A95"
    )
        port map (
      I0 => ex_reverse_byteorder,
      I1 => \^mem_databus_addr_reg[0]\(0),
      I2 => \^q\(0),
      I3 => \^mem_databus_addr_reg[0]\(1),
      I4 => \^q\(1),
      O => \mem_byte_selects_reg[0]\(1)
    );
\Data_Addr[30]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8778877887780000"
    )
        port map (
      I0 => \^mem_databus_addr_reg[0]\(0),
      I1 => \^q\(0),
      I2 => \^mem_databus_addr_reg[0]\(1),
      I3 => \^q\(1),
      I4 => ex_doublet_access,
      I5 => ex_byte_access,
      O => \Data_Addr[30]\(33)
    );
\Data_Addr[31]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"28"
    )
        port map (
      I0 => ex_byte_access,
      I1 => \^mem_databus_addr_reg[0]\(0),
      I2 => \^q\(0),
      O => \Data_Addr[30]\(32)
    );
\Data_Write[0]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ABA8ABABABA8A8A8"
    )
        port map (
      I0 => ex_op3(24),
      I1 => ex_reverse_byteorder,
      I2 => ex_byte_access,
      I3 => ex_op3(16),
      I4 => ex_doublet_access,
      I5 => ex_op3(0),
      O => \Data_Addr[30]\(31)
    );
\Data_Write[10]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAFBAA0BAAF8AA08"
    )
        port map (
      I0 => ex_op3(26),
      I1 => ex_doublet_access,
      I2 => ex_reverse_byteorder,
      I3 => ex_byte_access,
      I4 => ex_op3(18),
      I5 => ex_op3(10),
      O => \Data_Addr[30]\(21)
    );
\Data_Write[11]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAFBAA0BAAF8AA08"
    )
        port map (
      I0 => ex_op3(27),
      I1 => ex_doublet_access,
      I2 => ex_reverse_byteorder,
      I3 => ex_byte_access,
      I4 => ex_op3(19),
      I5 => ex_op3(11),
      O => \Data_Addr[30]\(20)
    );
\Data_Write[12]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAFBAA0BAAF8AA08"
    )
        port map (
      I0 => ex_op3(28),
      I1 => ex_doublet_access,
      I2 => ex_reverse_byteorder,
      I3 => ex_byte_access,
      I4 => ex_op3(20),
      I5 => ex_op3(12),
      O => \Data_Addr[30]\(19)
    );
\Data_Write[13]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAFBAA0BAAF8AA08"
    )
        port map (
      I0 => ex_op3(29),
      I1 => ex_doublet_access,
      I2 => ex_reverse_byteorder,
      I3 => ex_byte_access,
      I4 => ex_op3(21),
      I5 => ex_op3(13),
      O => \Data_Addr[30]\(18)
    );
\Data_Write[14]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAFBAA0BAAF8AA08"
    )
        port map (
      I0 => ex_op3(30),
      I1 => ex_doublet_access,
      I2 => ex_reverse_byteorder,
      I3 => ex_byte_access,
      I4 => ex_op3(22),
      I5 => ex_op3(14),
      O => \Data_Addr[30]\(17)
    );
\Data_Write[15]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAFBAA0BAAF8AA08"
    )
        port map (
      I0 => ex_op3(31),
      I1 => ex_doublet_access,
      I2 => ex_reverse_byteorder,
      I3 => ex_byte_access,
      I4 => ex_op3(23),
      I5 => ex_op3(15),
      O => \Data_Addr[30]\(16)
    );
\Data_Write[16]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AABFAA8FAAB0AA80"
    )
        port map (
      I0 => ex_op3(24),
      I1 => ex_doublet_access,
      I2 => ex_reverse_byteorder,
      I3 => ex_byte_access,
      I4 => ex_op3(8),
      I5 => ex_op3(16),
      O => \Data_Addr[30]\(15)
    );
\Data_Write[17]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AABFAA8FAAB0AA80"
    )
        port map (
      I0 => ex_op3(25),
      I1 => ex_doublet_access,
      I2 => ex_reverse_byteorder,
      I3 => ex_byte_access,
      I4 => ex_op3(9),
      I5 => ex_op3(17),
      O => \Data_Addr[30]\(14)
    );
\Data_Write[18]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AABFAA8FAAB0AA80"
    )
        port map (
      I0 => ex_op3(26),
      I1 => ex_doublet_access,
      I2 => ex_reverse_byteorder,
      I3 => ex_byte_access,
      I4 => ex_op3(10),
      I5 => ex_op3(18),
      O => \Data_Addr[30]\(13)
    );
\Data_Write[19]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AABFAA8FAAB0AA80"
    )
        port map (
      I0 => ex_op3(27),
      I1 => ex_doublet_access,
      I2 => ex_reverse_byteorder,
      I3 => ex_byte_access,
      I4 => ex_op3(11),
      I5 => ex_op3(19),
      O => \Data_Addr[30]\(12)
    );
\Data_Write[1]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ABA8ABABABA8A8A8"
    )
        port map (
      I0 => ex_op3(25),
      I1 => ex_reverse_byteorder,
      I2 => ex_byte_access,
      I3 => ex_op3(17),
      I4 => ex_doublet_access,
      I5 => ex_op3(1),
      O => \Data_Addr[30]\(30)
    );
\Data_Write[20]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AABFAA8FAAB0AA80"
    )
        port map (
      I0 => ex_op3(28),
      I1 => ex_doublet_access,
      I2 => ex_reverse_byteorder,
      I3 => ex_byte_access,
      I4 => ex_op3(12),
      I5 => ex_op3(20),
      O => \Data_Addr[30]\(11)
    );
\Data_Write[21]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AABFAA8FAAB0AA80"
    )
        port map (
      I0 => ex_op3(29),
      I1 => ex_doublet_access,
      I2 => ex_reverse_byteorder,
      I3 => ex_byte_access,
      I4 => ex_op3(13),
      I5 => ex_op3(21),
      O => \Data_Addr[30]\(10)
    );
\Data_Write[22]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AABFAA8FAAB0AA80"
    )
        port map (
      I0 => ex_op3(30),
      I1 => ex_doublet_access,
      I2 => ex_reverse_byteorder,
      I3 => ex_byte_access,
      I4 => ex_op3(14),
      I5 => ex_op3(22),
      O => \Data_Addr[30]\(9)
    );
\Data_Write[23]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AABFAA8FAAB0AA80"
    )
        port map (
      I0 => ex_op3(31),
      I1 => ex_doublet_access,
      I2 => ex_reverse_byteorder,
      I3 => ex_byte_access,
      I4 => ex_op3(15),
      I5 => ex_op3(23),
      O => \Data_Addr[30]\(8)
    );
\Data_Write[24]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AEA2AEAEAEA2A2A2"
    )
        port map (
      I0 => ex_op3(24),
      I1 => ex_reverse_byteorder,
      I2 => ex_byte_access,
      I3 => ex_op3(16),
      I4 => ex_doublet_access,
      I5 => ex_op3(0),
      O => \Data_Addr[30]\(7)
    );
\Data_Write[25]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AEA2AEAEAEA2A2A2"
    )
        port map (
      I0 => ex_op3(25),
      I1 => ex_reverse_byteorder,
      I2 => ex_byte_access,
      I3 => ex_op3(17),
      I4 => ex_doublet_access,
      I5 => ex_op3(1),
      O => \Data_Addr[30]\(6)
    );
\Data_Write[26]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AEA2AEAEAEA2A2A2"
    )
        port map (
      I0 => ex_op3(26),
      I1 => ex_reverse_byteorder,
      I2 => ex_byte_access,
      I3 => ex_op3(18),
      I4 => ex_doublet_access,
      I5 => ex_op3(2),
      O => \Data_Addr[30]\(5)
    );
\Data_Write[27]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AEA2AEAEAEA2A2A2"
    )
        port map (
      I0 => ex_op3(27),
      I1 => ex_reverse_byteorder,
      I2 => ex_byte_access,
      I3 => ex_op3(19),
      I4 => ex_doublet_access,
      I5 => ex_op3(3),
      O => \Data_Addr[30]\(4)
    );
\Data_Write[28]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AEA2AEAEAEA2A2A2"
    )
        port map (
      I0 => ex_op3(28),
      I1 => ex_reverse_byteorder,
      I2 => ex_byte_access,
      I3 => ex_op3(20),
      I4 => ex_doublet_access,
      I5 => ex_op3(4),
      O => \Data_Addr[30]\(3)
    );
\Data_Write[29]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AEA2AEAEAEA2A2A2"
    )
        port map (
      I0 => ex_op3(29),
      I1 => ex_reverse_byteorder,
      I2 => ex_byte_access,
      I3 => ex_op3(21),
      I4 => ex_doublet_access,
      I5 => ex_op3(5),
      O => \Data_Addr[30]\(2)
    );
\Data_Write[2]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ABA8ABABABA8A8A8"
    )
        port map (
      I0 => ex_op3(26),
      I1 => ex_reverse_byteorder,
      I2 => ex_byte_access,
      I3 => ex_op3(18),
      I4 => ex_doublet_access,
      I5 => ex_op3(2),
      O => \Data_Addr[30]\(29)
    );
\Data_Write[30]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AEA2AEAEAEA2A2A2"
    )
        port map (
      I0 => ex_op3(30),
      I1 => ex_reverse_byteorder,
      I2 => ex_byte_access,
      I3 => ex_op3(22),
      I4 => ex_doublet_access,
      I5 => ex_op3(6),
      O => \Data_Addr[30]\(1)
    );
\Data_Write[31]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AEA2AEAEAEA2A2A2"
    )
        port map (
      I0 => ex_op3(31),
      I1 => ex_reverse_byteorder,
      I2 => ex_byte_access,
      I3 => ex_op3(23),
      I4 => ex_doublet_access,
      I5 => ex_op3(7),
      O => \Data_Addr[30]\(0)
    );
\Data_Write[3]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ABA8ABABABA8A8A8"
    )
        port map (
      I0 => ex_op3(27),
      I1 => ex_reverse_byteorder,
      I2 => ex_byte_access,
      I3 => ex_op3(19),
      I4 => ex_doublet_access,
      I5 => ex_op3(3),
      O => \Data_Addr[30]\(28)
    );
\Data_Write[4]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ABA8ABABABA8A8A8"
    )
        port map (
      I0 => ex_op3(28),
      I1 => ex_reverse_byteorder,
      I2 => ex_byte_access,
      I3 => ex_op3(20),
      I4 => ex_doublet_access,
      I5 => ex_op3(4),
      O => \Data_Addr[30]\(27)
    );
\Data_Write[5]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ABA8ABABABA8A8A8"
    )
        port map (
      I0 => ex_op3(29),
      I1 => ex_reverse_byteorder,
      I2 => ex_byte_access,
      I3 => ex_op3(21),
      I4 => ex_doublet_access,
      I5 => ex_op3(5),
      O => \Data_Addr[30]\(26)
    );
\Data_Write[6]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ABA8ABABABA8A8A8"
    )
        port map (
      I0 => ex_op3(30),
      I1 => ex_reverse_byteorder,
      I2 => ex_byte_access,
      I3 => ex_op3(22),
      I4 => ex_doublet_access,
      I5 => ex_op3(6),
      O => \Data_Addr[30]\(25)
    );
\Data_Write[7]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ABA8ABABABA8A8A8"
    )
        port map (
      I0 => ex_op3(31),
      I1 => ex_reverse_byteorder,
      I2 => ex_byte_access,
      I3 => ex_op3(23),
      I4 => ex_doublet_access,
      I5 => ex_op3(7),
      O => \Data_Addr[30]\(24)
    );
\Data_Write[8]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAFBAA0BAAF8AA08"
    )
        port map (
      I0 => ex_op3(24),
      I1 => ex_doublet_access,
      I2 => ex_reverse_byteorder,
      I3 => ex_byte_access,
      I4 => ex_op3(16),
      I5 => ex_op3(8),
      O => \Data_Addr[30]\(23)
    );
\Data_Write[9]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAFBAA0BAAF8AA08"
    )
        port map (
      I0 => ex_op3(25),
      I1 => ex_doublet_access,
      I2 => ex_reverse_byteorder,
      I3 => ex_byte_access,
      I4 => ex_op3(17),
      I5 => ex_op3(9),
      O => \Data_Addr[30]\(22)
    );
\EX_Branch_CMP_Op1_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(31),
      Q => \^using_fpga.native_35\(0),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(21),
      Q => ex_branch_cmp_op1(10),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(20),
      Q => ex_branch_cmp_op1(11),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(19),
      Q => ex_branch_cmp_op1(12),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(18),
      Q => ex_branch_cmp_op1(13),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(17),
      Q => ex_branch_cmp_op1(14),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(16),
      Q => ex_branch_cmp_op1(15),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(15),
      Q => ex_branch_cmp_op1(16),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(14),
      Q => ex_branch_cmp_op1(17),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(13),
      Q => ex_branch_cmp_op1(18),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(12),
      Q => ex_branch_cmp_op1(19),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(30),
      Q => ex_branch_cmp_op1(1),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(11),
      Q => ex_branch_cmp_op1(20),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(10),
      Q => ex_branch_cmp_op1(21),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(9),
      Q => ex_branch_cmp_op1(22),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(8),
      Q => ex_branch_cmp_op1(23),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(7),
      Q => ex_branch_cmp_op1(24),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(6),
      Q => ex_branch_cmp_op1(25),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(5),
      Q => ex_branch_cmp_op1(26),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(4),
      Q => ex_branch_cmp_op1(27),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(3),
      Q => ex_branch_cmp_op1(28),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(2),
      Q => ex_branch_cmp_op1(29),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(29),
      Q => ex_branch_cmp_op1(2),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(1),
      Q => ex_branch_cmp_op1(30),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(0),
      Q => ex_branch_cmp_op1(31),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(28),
      Q => ex_branch_cmp_op1(3),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(27),
      Q => ex_branch_cmp_op1(4),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(26),
      Q => ex_branch_cmp_op1(5),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(25),
      Q => ex_branch_cmp_op1(6),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(24),
      Q => ex_branch_cmp_op1(7),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(23),
      Q => ex_branch_cmp_op1(8),
      R => \out\(0)
    );
\EX_Branch_CMP_Op1_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => D(22),
      Q => ex_branch_cmp_op1(9),
      R => \out\(0)
    );
\EX_Op1_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O,
      Q => \^q\(31),
      R => \out\(0)
    );
\EX_Op1_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O20_out,
      Q => \^q\(21),
      R => \out\(0)
    );
\EX_Op1_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O19_out,
      Q => \^q\(20),
      R => \out\(0)
    );
\EX_Op1_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O18_out,
      Q => \^q\(19),
      R => \out\(0)
    );
\EX_Op1_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O17_out,
      Q => \^q\(18),
      R => \out\(0)
    );
\EX_Op1_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O16_out,
      Q => \^q\(17),
      R => \out\(0)
    );
\EX_Op1_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O15_out,
      Q => \^q\(16),
      R => \out\(0)
    );
\EX_Op1_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O14_out,
      Q => \^q\(15),
      R => \out\(0)
    );
\EX_Op1_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O13_out,
      Q => \^q\(14),
      R => \out\(0)
    );
\EX_Op1_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O12_out,
      Q => \^q\(13),
      R => \out\(0)
    );
\EX_Op1_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O11_out,
      Q => \^q\(12),
      R => \out\(0)
    );
\EX_Op1_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O29_out,
      Q => \^q\(30),
      R => \out\(0)
    );
\EX_Op1_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O10_out,
      Q => \^q\(11),
      R => \out\(0)
    );
\EX_Op1_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O9_out,
      Q => \^q\(10),
      R => \out\(0)
    );
\EX_Op1_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O8_out,
      Q => \^q\(9),
      R => \out\(0)
    );
\EX_Op1_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O7_out,
      Q => \^q\(8),
      R => \out\(0)
    );
\EX_Op1_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O6_out,
      Q => \^q\(7),
      R => \out\(0)
    );
\EX_Op1_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O5_out,
      Q => \^q\(6),
      R => \out\(0)
    );
\EX_Op1_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O4_out,
      Q => \^q\(5),
      R => \out\(0)
    );
\EX_Op1_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O3_out,
      Q => \^q\(4),
      R => \out\(0)
    );
\EX_Op1_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O2_out,
      Q => \^q\(3),
      R => \out\(0)
    );
\EX_Op1_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O1_out,
      Q => \^q\(2),
      R => \out\(0)
    );
\EX_Op1_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O28_out,
      Q => \^q\(29),
      R => \out\(0)
    );
\EX_Op1_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O0_out,
      Q => \^q\(1),
      R => \out\(0)
    );
\EX_Op1_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \Gen_Bit[31].MUXF7_I1_n_0\,
      Q => \^q\(0),
      R => \out\(0)
    );
\EX_Op1_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O27_out,
      Q => \^q\(28),
      R => \out\(0)
    );
\EX_Op1_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O26_out,
      Q => \^q\(27),
      R => \out\(0)
    );
\EX_Op1_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O25_out,
      Q => \^q\(26),
      R => \out\(0)
    );
\EX_Op1_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O24_out,
      Q => \^q\(25),
      R => \out\(0)
    );
\EX_Op1_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O23_out,
      Q => \^q\(24),
      R => \out\(0)
    );
\EX_Op1_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O22_out,
      Q => \^q\(23),
      R => \out\(0)
    );
\EX_Op1_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => O21_out,
      Q => \^q\(22),
      R => \out\(0)
    );
\EX_Op2_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(31),
      Q => \^mem_databus_addr_reg[0]\(31),
      R => \out\(0)
    );
\EX_Op2_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(21),
      Q => \^mem_databus_addr_reg[0]\(21),
      R => \out\(0)
    );
\EX_Op2_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(20),
      Q => \^mem_databus_addr_reg[0]\(20),
      R => \out\(0)
    );
\EX_Op2_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(19),
      Q => \^mem_databus_addr_reg[0]\(19),
      R => \out\(0)
    );
\EX_Op2_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(18),
      Q => \^mem_databus_addr_reg[0]\(18),
      R => \out\(0)
    );
\EX_Op2_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(17),
      Q => \^mem_databus_addr_reg[0]\(17),
      R => \out\(0)
    );
\EX_Op2_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(16),
      Q => \^mem_databus_addr_reg[0]\(16),
      R => \out\(0)
    );
\EX_Op2_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(15),
      Q => \^mem_databus_addr_reg[0]\(15),
      R => \out\(0)
    );
\EX_Op2_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(14),
      Q => \^mem_databus_addr_reg[0]\(14),
      R => \out\(0)
    );
\EX_Op2_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(13),
      Q => \^mem_databus_addr_reg[0]\(13),
      R => \out\(0)
    );
\EX_Op2_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(12),
      Q => \^mem_databus_addr_reg[0]\(12),
      R => \out\(0)
    );
\EX_Op2_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(30),
      Q => \^mem_databus_addr_reg[0]\(30),
      R => \out\(0)
    );
\EX_Op2_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(11),
      Q => \^mem_databus_addr_reg[0]\(11),
      R => \out\(0)
    );
\EX_Op2_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(10),
      Q => \^mem_databus_addr_reg[0]\(10),
      R => \out\(0)
    );
\EX_Op2_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(9),
      Q => \^mem_databus_addr_reg[0]\(9),
      R => \out\(0)
    );
\EX_Op2_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(8),
      Q => \^mem_databus_addr_reg[0]\(8),
      R => \out\(0)
    );
\EX_Op2_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(7),
      Q => \^mem_databus_addr_reg[0]\(7),
      R => \out\(0)
    );
\EX_Op2_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(6),
      Q => \^mem_databus_addr_reg[0]\(6),
      R => \out\(0)
    );
\EX_Op2_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(5),
      Q => \^mem_databus_addr_reg[0]\(5),
      R => \out\(0)
    );
\EX_Op2_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(4),
      Q => \^mem_databus_addr_reg[0]\(4),
      R => \out\(0)
    );
\EX_Op2_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(3),
      Q => \^mem_databus_addr_reg[0]\(3),
      R => \out\(0)
    );
\EX_Op2_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(2),
      Q => \^mem_databus_addr_reg[0]\(2),
      R => \out\(0)
    );
\EX_Op2_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(29),
      Q => \^mem_databus_addr_reg[0]\(29),
      R => \out\(0)
    );
\EX_Op2_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(1),
      Q => \^mem_databus_addr_reg[0]\(1),
      R => \out\(0)
    );
\EX_Op2_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(0),
      Q => \^mem_databus_addr_reg[0]\(0),
      R => \out\(0)
    );
\EX_Op2_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(28),
      Q => \^mem_databus_addr_reg[0]\(28),
      R => \out\(0)
    );
\EX_Op2_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(27),
      Q => \^mem_databus_addr_reg[0]\(27),
      R => \out\(0)
    );
\EX_Op2_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(26),
      Q => \^mem_databus_addr_reg[0]\(26),
      R => \out\(0)
    );
\EX_Op2_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(25),
      Q => \^mem_databus_addr_reg[0]\(25),
      R => \out\(0)
    );
\EX_Op2_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(24),
      Q => \^mem_databus_addr_reg[0]\(24),
      R => \out\(0)
    );
\EX_Op2_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(23),
      Q => \^mem_databus_addr_reg[0]\(23),
      R => \out\(0)
    );
\EX_Op2_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => \interrupt_address_d1_reg[0]\(22),
      Q => \^mem_databus_addr_reg[0]\(22),
      R => \out\(0)
    );
\EX_Op3_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(31),
      Q => ex_op3(0),
      R => \out\(0)
    );
\EX_Op3_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(21),
      Q => ex_op3(10),
      R => \out\(0)
    );
\EX_Op3_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(20),
      Q => ex_op3(11),
      R => \out\(0)
    );
\EX_Op3_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(19),
      Q => ex_op3(12),
      R => \out\(0)
    );
\EX_Op3_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(18),
      Q => ex_op3(13),
      R => \out\(0)
    );
\EX_Op3_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(17),
      Q => ex_op3(14),
      R => \out\(0)
    );
\EX_Op3_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(16),
      Q => ex_op3(15),
      R => \out\(0)
    );
\EX_Op3_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(15),
      Q => ex_op3(16),
      R => \out\(0)
    );
\EX_Op3_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(14),
      Q => ex_op3(17),
      R => \out\(0)
    );
\EX_Op3_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(13),
      Q => ex_op3(18),
      R => \out\(0)
    );
\EX_Op3_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(12),
      Q => ex_op3(19),
      R => \out\(0)
    );
\EX_Op3_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(30),
      Q => ex_op3(1),
      R => \out\(0)
    );
\EX_Op3_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(11),
      Q => ex_op3(20),
      R => \out\(0)
    );
\EX_Op3_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(10),
      Q => ex_op3(21),
      R => \out\(0)
    );
\EX_Op3_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(9),
      Q => ex_op3(22),
      R => \out\(0)
    );
\EX_Op3_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(8),
      Q => ex_op3(23),
      R => \out\(0)
    );
\EX_Op3_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(7),
      Q => ex_op3(24),
      R => \out\(0)
    );
\EX_Op3_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(6),
      Q => ex_op3(25),
      R => \out\(0)
    );
\EX_Op3_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(5),
      Q => ex_op3(26),
      R => \out\(0)
    );
\EX_Op3_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(4),
      Q => ex_op3(27),
      R => \out\(0)
    );
\EX_Op3_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(3),
      Q => ex_op3(28),
      R => \out\(0)
    );
\EX_Op3_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(2),
      Q => ex_op3(29),
      R => \out\(0)
    );
\EX_Op3_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(29),
      Q => ex_op3(2),
      R => \out\(0)
    );
\EX_Op3_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(1),
      Q => ex_op3(30),
      R => \out\(0)
    );
\EX_Op3_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(0),
      Q => ex_op3(31),
      R => \out\(0)
    );
\EX_Op3_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(28),
      Q => ex_op3(3),
      R => \out\(0)
    );
\EX_Op3_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(27),
      Q => ex_op3(4),
      R => \out\(0)
    );
\EX_Op3_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(26),
      Q => ex_op3(5),
      R => \out\(0)
    );
\EX_Op3_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(25),
      Q => ex_op3(6),
      R => \out\(0)
    );
\EX_Op3_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(24),
      Q => ex_op3(7),
      R => \out\(0)
    );
\EX_Op3_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(23),
      Q => ex_op3(8),
      R => \out\(0)
    );
\EX_Op3_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_67\,
      D => WB_Doublet_Access_reg(22),
      Q => ex_op3(9),
      R => \out\(0)
    );
\Gen_Bit[0].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_355
     port map (
      D(0) => O,
      I1 => I1,
      Q(1) => \^q\(15),
      Q(0) => \^q\(7),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_33\,
      WB_Doublet_Access_reg(0) => D(31),
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[10].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_356
     port map (
      D(0) => O20_out,
      Q(1) => \^q\(13),
      Q(0) => \^q\(5),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_23\,
      \Using_FPGA.Native_1\(0) => D(21),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_45\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[11].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_357
     port map (
      D(0) => O19_out,
      Q(1) => \^q\(12),
      Q(0) => \^q\(4),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_22\,
      \Using_FPGA.Native_1\(0) => D(20),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_46\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[12].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_358
     port map (
      D(0) => O18_out,
      Q(1) => \^q\(11),
      Q(0) => \^q\(3),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_21\,
      \Using_FPGA.Native_1\(0) => D(19),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_47\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[13].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_359
     port map (
      D(0) => O17_out,
      Q(1) => \^q\(10),
      Q(0) => \^q\(2),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_20\,
      \Using_FPGA.Native_1\(0) => D(18),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_48\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[14].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_360
     port map (
      D(0) => O16_out,
      Q(1) => \^q\(9),
      Q(0) => \^q\(1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_19\,
      \Using_FPGA.Native_1\(0) => D(17),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_49\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[15].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_361
     port map (
      D(0) => O15_out,
      Q(1) => \^q\(8),
      Q(0) => \^q\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_18\,
      \Using_FPGA.Native_1\(0) => D(16),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_50\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[16].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_362
     port map (
      D(0) => O14_out,
      Q(1) => \^q\(31),
      Q(0) => \^q\(23),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_17\,
      \Using_FPGA.Native_1\(0) => D(15),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_51\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[17].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_363
     port map (
      D(0) => O13_out,
      Q(1) => \^q\(30),
      Q(0) => \^q\(22),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_16\,
      \Using_FPGA.Native_1\(0) => D(14),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_52\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[18].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_364
     port map (
      D(0) => O12_out,
      Q(1) => \^q\(29),
      Q(0) => \^q\(21),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_15\,
      \Using_FPGA.Native_1\(0) => D(13),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_53\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[19].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_365
     port map (
      D(0) => O11_out,
      Q(1) => \^q\(28),
      Q(0) => \^q\(20),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_14\,
      \Using_FPGA.Native_1\(0) => D(12),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_54\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[1].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_366
     port map (
      D(0) => O29_out,
      Q(1) => \^q\(14),
      Q(0) => \^q\(6),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_1\(0) => D(30),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_36\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[20].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_367
     port map (
      D(0) => O10_out,
      Q(1) => \^q\(27),
      Q(0) => \^q\(19),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_13\,
      \Using_FPGA.Native_1\(0) => D(11),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_55\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[21].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_368
     port map (
      D(0) => O9_out,
      Q(1) => \^q\(26),
      Q(0) => \^q\(18),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_12\,
      \Using_FPGA.Native_1\(0) => D(10),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_56\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[22].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_369
     port map (
      D(0) => O8_out,
      Q(1) => \^q\(25),
      Q(0) => \^q\(17),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_11\,
      \Using_FPGA.Native_1\(0) => D(9),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_57\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[23].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_370
     port map (
      D(0) => O7_out,
      Q(1) => \^q\(24),
      Q(0) => \^q\(16),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_10\,
      \Using_FPGA.Native_1\(0) => D(8),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_58\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[24].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_371
     port map (
      D(0) => O6_out,
      Q(1) => \^q\(31),
      Q(0) => \^q\(23),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      \Using_FPGA.Native_1\(0) => D(7),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_59\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[25].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_372
     port map (
      D(0) => O5_out,
      Q(1) => \^q\(30),
      Q(0) => \^q\(22),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_8\,
      \Using_FPGA.Native_1\(0) => D(6),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_60\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[26].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_373
     port map (
      D(0) => O4_out,
      Q(1) => \^q\(29),
      Q(0) => \^q\(21),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_7\,
      \Using_FPGA.Native_1\(0) => D(5),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_61\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[27].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_374
     port map (
      D(0) => O3_out,
      Q(1) => \^q\(28),
      Q(0) => \^q\(20),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_1\(0) => D(4),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_62\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[28].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_375
     port map (
      D(0) => O2_out,
      Q(1) => \^q\(27),
      Q(0) => \^q\(19),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_63\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr,
      \wb_read_lsb_sel_reg[1]\(0) => D(3)
    );
\Gen_Bit[29].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_376
     port map (
      D(0) => O1_out,
      Q(1) => \^q\(26),
      Q(0) => \^q\(18),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_64\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr,
      \wb_read_lsb_sel_reg[1]\(0) => D(2)
    );
\Gen_Bit[2].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_377
     port map (
      D(0) => O28_out,
      Q(1) => \^q\(13),
      Q(0) => \^q\(5),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_31\,
      \Using_FPGA.Native_1\(0) => D(29),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_37\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[30].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_378
     port map (
      D(0) => O0_out,
      Q(1) => \^q\(25),
      Q(0) => \^q\(17),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_65\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr,
      \wb_read_lsb_sel_reg[1]\(0) => D(1)
    );
\Gen_Bit[31].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_379
     port map (
      D(0) => \Gen_Bit[31].MUXF7_I1_n_0\,
      Q(1) => \^q\(24),
      Q(0) => \^q\(16),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_1\(0) => D(0),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_66\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[3].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_380
     port map (
      D(0) => O27_out,
      Q(1) => \^q\(12),
      Q(0) => \^q\(4),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_30\,
      \Using_FPGA.Native_1\(0) => D(28),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_38\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[4].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_381
     port map (
      D(0) => O26_out,
      Q(1) => \^q\(11),
      Q(0) => \^q\(3),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_29\,
      \Using_FPGA.Native_1\(0) => D(27),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_39\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[5].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_382
     port map (
      D(0) => O25_out,
      Q(1) => \^q\(10),
      Q(0) => \^q\(2),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_28\,
      \Using_FPGA.Native_1\(0) => D(26),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_40\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[6].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_383
     port map (
      D(0) => O24_out,
      Q(1) => \^q\(9),
      Q(0) => \^q\(1),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_27\,
      \Using_FPGA.Native_1\(0) => D(25),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_41\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[7].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_384
     port map (
      D(0) => O23_out,
      Q(1) => \^q\(8),
      Q(0) => \^q\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_26\,
      \Using_FPGA.Native_1\(0) => D(24),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_42\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[8].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_385
     port map (
      D(0) => O22_out,
      Q(1) => \^q\(15),
      Q(0) => \^q\(7),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_25\,
      \Using_FPGA.Native_1\(0) => D(23),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_43\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Gen_Bit[9].MUXF7_I1\: entity work.system_microblaze_0_0_MB_MUXF7_386
     port map (
      D(0) => O21_out,
      Q(1) => \^q\(14),
      Q(0) => \^q\(6),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_24\,
      \Using_FPGA.Native_1\(0) => D(22),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_44\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      of_op1_sel_spr => of_op1_sel_spr
    );
\Using_FPGA.Native_i_1__132\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D7"
    )
        port map (
      I0 => ex_cmp_op,
      I1 => \^mem_databus_addr_reg[0]\(31),
      I2 => \^q\(31),
      O => S
    );
\Using_FPGA.Native_i_1__165\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D7"
    )
        port map (
      I0 => ex_cmp_op,
      I1 => \^mem_databus_addr_reg[0]\(31),
      I2 => \^q\(31),
      O => \MEM_DataBus_Addr_reg[0]_0\
    );
\Using_FPGA.Native_i_1__166\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => ex_branch_cmp_op1(28),
      I1 => ex_branch_cmp_op1(27),
      I2 => ex_branch_cmp_op1(24),
      I3 => ex_branch_cmp_op1(29),
      I4 => ex_branch_cmp_op1(26),
      I5 => ex_branch_cmp_op1(25),
      O => \Zero_Detecting[1].nibble_Zero_reg\
    );
\Using_FPGA.Native_i_1__167\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => ex_branch_cmp_op1(22),
      I1 => ex_branch_cmp_op1(21),
      I2 => ex_branch_cmp_op1(18),
      I3 => ex_branch_cmp_op1(23),
      I4 => ex_branch_cmp_op1(20),
      I5 => ex_branch_cmp_op1(19),
      O => \Zero_Detecting[2].nibble_Zero_reg\
    );
\Using_FPGA.Native_i_1__168\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => ex_branch_cmp_op1(16),
      I1 => ex_branch_cmp_op1(15),
      I2 => ex_branch_cmp_op1(12),
      I3 => ex_branch_cmp_op1(17),
      I4 => ex_branch_cmp_op1(14),
      I5 => ex_branch_cmp_op1(13),
      O => \Zero_Detecting[3].nibble_Zero_reg\
    );
\Using_FPGA.Native_i_1__169\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => ex_branch_cmp_op1(10),
      I1 => ex_branch_cmp_op1(9),
      I2 => ex_branch_cmp_op1(6),
      I3 => ex_branch_cmp_op1(11),
      I4 => ex_branch_cmp_op1(8),
      I5 => ex_branch_cmp_op1(7),
      O => \Zero_Detecting[4].nibble_Zero_reg\
    );
\Using_FPGA.Native_i_1__170\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => ex_branch_cmp_op1(4),
      I1 => ex_branch_cmp_op1(3),
      I2 => \^using_fpga.native_35\(0),
      I3 => ex_branch_cmp_op1(5),
      I4 => ex_branch_cmp_op1(2),
      I5 => ex_branch_cmp_op1(1),
      O => \Zero_Detecting[5].nibble_Zero_reg\
    );
\Using_FPGA.Native_i_1__171\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => ex_branch_cmp_op1(30),
      I1 => ex_branch_cmp_op1(31),
      O => \Zero_Detecting[0].nibble_Zero_reg\
    );
\Using_FPGA.Native_i_2__36\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ACACACACFCCCCCCC"
    )
        port map (
      I0 => \^q\(1),
      I1 => ex_MSR(0),
      I2 => ex_Take_Intr_or_Exc_reg,
      I3 => wb_sel_spr_shr,
      I4 => \^mem_databus_addr_reg[0]\(1),
      I5 => ex_move_to_MSR_instr,
      O => \Using_FPGA.Native\
    );
\Using_FPGA.Native_i_3__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ACACACACFCCCCCCC"
    )
        port map (
      I0 => \^q\(3),
      I1 => ex_MSR(2),
      I2 => ex_Take_Intr_or_Exc_reg,
      I3 => wb_sel_spr_shr,
      I4 => \^mem_databus_addr_reg[0]\(3),
      I5 => ex_move_to_MSR_instr,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ACACACACFCCCCCCC"
    )
        port map (
      I0 => \^q\(2),
      I1 => ex_MSR(1),
      I2 => ex_Take_Intr_or_Exc_reg,
      I3 => wb_sel_spr_shr,
      I4 => \^mem_databus_addr_reg[0]\(2),
      I5 => ex_move_to_MSR_instr,
      O => \Using_FPGA.Native_0\
    );
\imm_reg_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(0),
      Q => \EX_Op2_reg[0]_0\(15),
      R => \out\(0)
    );
\imm_reg_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(10),
      Q => \EX_Op2_reg[0]_0\(5),
      R => \out\(0)
    );
\imm_reg_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(11),
      Q => \EX_Op2_reg[0]_0\(4),
      R => \out\(0)
    );
\imm_reg_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(12),
      Q => \EX_Op2_reg[0]_0\(3),
      R => \out\(0)
    );
\imm_reg_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(13),
      Q => \EX_Op2_reg[0]_0\(2),
      R => \out\(0)
    );
\imm_reg_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(14),
      Q => \EX_Op2_reg[0]_0\(1),
      R => \out\(0)
    );
\imm_reg_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(15),
      Q => \EX_Op2_reg[0]_0\(0),
      R => \out\(0)
    );
\imm_reg_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(1),
      Q => \EX_Op2_reg[0]_0\(14),
      R => \out\(0)
    );
\imm_reg_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(2),
      Q => \EX_Op2_reg[0]_0\(13),
      R => \out\(0)
    );
\imm_reg_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(3),
      Q => \EX_Op2_reg[0]_0\(12),
      R => \out\(0)
    );
\imm_reg_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(4),
      Q => \EX_Op2_reg[0]_0\(11),
      R => \out\(0)
    );
\imm_reg_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(5),
      Q => \EX_Op2_reg[0]_0\(10),
      R => \out\(0)
    );
\imm_reg_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(6),
      Q => \EX_Op2_reg[0]_0\(9),
      R => \out\(0)
    );
\imm_reg_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(7),
      Q => \EX_Op2_reg[0]_0\(8),
      R => \out\(0)
    );
\imm_reg_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(8),
      Q => \EX_Op2_reg[0]_0\(7),
      R => \out\(0)
    );
\imm_reg_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => of_imm_data(9),
      Q => \EX_Op2_reg[0]_0\(6),
      R => \out\(0)
    );
\mem_byte_selects[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"69"
    )
        port map (
      I0 => ex_reverse_byteorder,
      I1 => \^mem_databus_addr_reg[0]\(0),
      I2 => \^q\(0),
      O => \mem_byte_selects_reg[0]\(0)
    );
sign_0_15_inferred_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00E2"
    )
        port map (
      I0 => \^q\(7),
      I1 => \EX_Sext_Op_reg[0]\(0),
      I2 => \^q\(15),
      I3 => \EX_Sext_Op_reg[0]\(1),
      O => \Using_FPGA.Native_34\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_PC_Module_gti is
  port (
    D : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \Instr_Addr[0]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \EX_Op2_reg[0]\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    ex_delayslot_Instr2 : in STD_LOGIC;
    CI : in STD_LOGIC;
    if_pre_buffer_addr : in STD_LOGIC_VECTOR ( 0 to 0 );
    if_sel_input : in STD_LOGIC_VECTOR ( 0 to 0 );
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    if_fetch_in_progress_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_PC_Module_gti : entity is "PC_Module_gti";
end system_microblaze_0_0_PC_Module_gti;

architecture STRUCTURE of system_microblaze_0_0_PC_Module_gti is
  signal \^d\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal I0 : STD_LOGIC;
  signal I0101_out : STD_LOGIC;
  signal I0105_out : STD_LOGIC;
  signal I0109_out : STD_LOGIC;
  signal I0113_out : STD_LOGIC;
  signal I0117_out : STD_LOGIC;
  signal I0121_out : STD_LOGIC;
  signal I0125_out : STD_LOGIC;
  signal I013_out : STD_LOGIC;
  signal I017_out : STD_LOGIC;
  signal I021_out : STD_LOGIC;
  signal I025_out : STD_LOGIC;
  signal I029_out : STD_LOGIC;
  signal I033_out : STD_LOGIC;
  signal I037_out : STD_LOGIC;
  signal I041_out : STD_LOGIC;
  signal I045_out : STD_LOGIC;
  signal I049_out : STD_LOGIC;
  signal I053_out : STD_LOGIC;
  signal I057_out : STD_LOGIC;
  signal I05_out : STD_LOGIC;
  signal I061_out : STD_LOGIC;
  signal I065_out : STD_LOGIC;
  signal I069_out : STD_LOGIC;
  signal I073_out : STD_LOGIC;
  signal I077_out : STD_LOGIC;
  signal I081_out : STD_LOGIC;
  signal I085_out : STD_LOGIC;
  signal I089_out : STD_LOGIC;
  signal I093_out : STD_LOGIC;
  signal I097_out : STD_LOGIC;
  signal I09_out : STD_LOGIC;
  signal \^instr_addr[0]\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \PC_Buffer_reg[3][0]_srl4_n_0\ : STD_LOGIC;
  signal S : STD_LOGIC;
  signal S102_in : STD_LOGIC;
  signal S107_in : STD_LOGIC;
  signal S112_in : STD_LOGIC;
  signal S117_in : STD_LOGIC;
  signal S122_in : STD_LOGIC;
  signal S127_in : STD_LOGIC;
  signal S12_in : STD_LOGIC;
  signal S132_in : STD_LOGIC;
  signal S137_in : STD_LOGIC;
  signal S142_in : STD_LOGIC;
  signal S147_in : STD_LOGIC;
  signal S152_in : STD_LOGIC;
  signal S17_in : STD_LOGIC;
  signal S22_in : STD_LOGIC;
  signal S27_in : STD_LOGIC;
  signal S32_in : STD_LOGIC;
  signal S37_in : STD_LOGIC;
  signal S42_in : STD_LOGIC;
  signal S47_in : STD_LOGIC;
  signal S52_in : STD_LOGIC;
  signal S57_in : STD_LOGIC;
  signal S62_in : STD_LOGIC;
  signal S67_in : STD_LOGIC;
  signal S72_in : STD_LOGIC;
  signal S77_in : STD_LOGIC;
  signal S82_in : STD_LOGIC;
  signal S87_in : STD_LOGIC;
  signal S92_in : STD_LOGIC;
  signal S97_in : STD_LOGIC;
  signal ex_pc : STD_LOGIC_VECTOR ( 0 to 31 );
  signal if_pc_carry : STD_LOGIC_VECTOR ( 29 downto 1 );
  signal \if_pc_reg_n_0_[31]\ : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal lopt_13 : STD_LOGIC;
  signal lopt_14 : STD_LOGIC;
  signal lopt_15 : STD_LOGIC;
  signal lopt_16 : STD_LOGIC;
  signal lopt_17 : STD_LOGIC;
  signal lopt_18 : STD_LOGIC;
  signal lopt_19 : STD_LOGIC;
  signal lopt_20 : STD_LOGIC;
  signal lopt_21 : STD_LOGIC;
  signal lopt_22 : STD_LOGIC;
  signal lopt_23 : STD_LOGIC;
  signal lopt_24 : STD_LOGIC;
  signal lopt_25 : STD_LOGIC;
  signal lopt_26 : STD_LOGIC;
  signal lopt_27 : STD_LOGIC;
  signal lopt_28 : STD_LOGIC;
  signal lopt_29 : STD_LOGIC;
  signal lopt_30 : STD_LOGIC;
  signal lopt_31 : STD_LOGIC;
  signal lopt_32 : STD_LOGIC;
  signal lopt_33 : STD_LOGIC;
  signal lopt_34 : STD_LOGIC;
  signal lopt_35 : STD_LOGIC;
  signal lopt_36 : STD_LOGIC;
  signal lopt_37 : STD_LOGIC;
  signal lopt_38 : STD_LOGIC;
  signal lopt_39 : STD_LOGIC;
  signal lopt_40 : STD_LOGIC;
  signal lopt_41 : STD_LOGIC;
  signal lopt_42 : STD_LOGIC;
  signal lopt_43 : STD_LOGIC;
  signal lopt_44 : STD_LOGIC;
  signal lopt_45 : STD_LOGIC;
  signal lopt_46 : STD_LOGIC;
  signal lopt_47 : STD_LOGIC;
  signal lopt_48 : STD_LOGIC;
  signal lopt_49 : STD_LOGIC;
  signal lopt_50 : STD_LOGIC;
  signal lopt_51 : STD_LOGIC;
  signal lopt_52 : STD_LOGIC;
  signal lopt_53 : STD_LOGIC;
  signal lopt_54 : STD_LOGIC;
  signal lopt_55 : STD_LOGIC;
  signal lopt_56 : STD_LOGIC;
  signal lopt_57 : STD_LOGIC;
  signal lopt_58 : STD_LOGIC;
  signal lopt_59 : STD_LOGIC;
  signal lopt_60 : STD_LOGIC;
  signal lopt_61 : STD_LOGIC;
  signal lopt_62 : STD_LOGIC;
  signal lopt_63 : STD_LOGIC;
  signal lopt_64 : STD_LOGIC;
  signal lopt_65 : STD_LOGIC;
  signal lopt_66 : STD_LOGIC;
  signal lopt_67 : STD_LOGIC;
  signal lopt_68 : STD_LOGIC;
  signal lopt_69 : STD_LOGIC;
  signal lopt_70 : STD_LOGIC;
  signal lopt_71 : STD_LOGIC;
  signal lopt_72 : STD_LOGIC;
  signal lopt_73 : STD_LOGIC;
  signal lopt_74 : STD_LOGIC;
  signal lopt_75 : STD_LOGIC;
  signal lopt_76 : STD_LOGIC;
  signal lopt_77 : STD_LOGIC;
  signal lopt_78 : STD_LOGIC;
  signal lopt_79 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_80 : STD_LOGIC;
  signal lopt_81 : STD_LOGIC;
  signal lopt_82 : STD_LOGIC;
  signal lopt_83 : STD_LOGIC;
  signal lopt_84 : STD_LOGIC;
  signal lopt_85 : STD_LOGIC;
  signal lopt_86 : STD_LOGIC;
  signal lopt_87 : STD_LOGIC;
  signal lopt_88 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal of_pc_ii_0 : STD_LOGIC;
  signal of_pc_ii_1 : STD_LOGIC;
  signal of_pc_ii_10 : STD_LOGIC;
  signal of_pc_ii_11 : STD_LOGIC;
  signal of_pc_ii_12 : STD_LOGIC;
  signal of_pc_ii_13 : STD_LOGIC;
  signal of_pc_ii_14 : STD_LOGIC;
  signal of_pc_ii_15 : STD_LOGIC;
  signal of_pc_ii_16 : STD_LOGIC;
  signal of_pc_ii_17 : STD_LOGIC;
  signal of_pc_ii_18 : STD_LOGIC;
  signal of_pc_ii_19 : STD_LOGIC;
  signal of_pc_ii_2 : STD_LOGIC;
  signal of_pc_ii_20 : STD_LOGIC;
  signal of_pc_ii_21 : STD_LOGIC;
  signal of_pc_ii_22 : STD_LOGIC;
  signal of_pc_ii_23 : STD_LOGIC;
  signal of_pc_ii_24 : STD_LOGIC;
  signal of_pc_ii_25 : STD_LOGIC;
  signal of_pc_ii_26 : STD_LOGIC;
  signal of_pc_ii_27 : STD_LOGIC;
  signal of_pc_ii_28 : STD_LOGIC;
  signal of_pc_ii_29 : STD_LOGIC;
  signal of_pc_ii_3 : STD_LOGIC;
  signal of_pc_ii_30 : STD_LOGIC;
  signal of_pc_ii_31 : STD_LOGIC;
  signal of_pc_ii_4 : STD_LOGIC;
  signal of_pc_ii_5 : STD_LOGIC;
  signal of_pc_ii_6 : STD_LOGIC;
  signal of_pc_ii_7 : STD_LOGIC;
  signal of_pc_ii_8 : STD_LOGIC;
  signal of_pc_ii_9 : STD_LOGIC;
  signal p_1_in103_in : STD_LOGIC;
  signal p_1_in108_in : STD_LOGIC;
  signal p_1_in113_in : STD_LOGIC;
  signal p_1_in118_in : STD_LOGIC;
  signal p_1_in123_in : STD_LOGIC;
  signal p_1_in128_in : STD_LOGIC;
  signal p_1_in133_in : STD_LOGIC;
  signal p_1_in138_in : STD_LOGIC;
  signal p_1_in13_in : STD_LOGIC;
  signal p_1_in143_in : STD_LOGIC;
  signal p_1_in148_in : STD_LOGIC;
  signal p_1_in153_in : STD_LOGIC;
  signal p_1_in18_in : STD_LOGIC;
  signal p_1_in23_in : STD_LOGIC;
  signal p_1_in28_in : STD_LOGIC;
  signal p_1_in33_in : STD_LOGIC;
  signal p_1_in38_in : STD_LOGIC;
  signal p_1_in3_in : STD_LOGIC;
  signal p_1_in43_in : STD_LOGIC;
  signal p_1_in48_in : STD_LOGIC;
  signal p_1_in53_in : STD_LOGIC;
  signal p_1_in58_in : STD_LOGIC;
  signal p_1_in63_in : STD_LOGIC;
  signal p_1_in68_in : STD_LOGIC;
  signal p_1_in73_in : STD_LOGIC;
  signal p_1_in78_in : STD_LOGIC;
  signal p_1_in83_in : STD_LOGIC;
  signal p_1_in88_in : STD_LOGIC;
  signal p_1_in8_in : STD_LOGIC;
  signal p_1_in93_in : STD_LOGIC;
  signal p_1_in98_in : STD_LOGIC;
  signal p_2_in4_in : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Instr_Addr[30]_INST_0\ : label is "soft_lutpair5";
  attribute SOFT_HLUTNM of \Instr_Addr[31]_INST_0\ : label is "soft_lutpair5";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \PC_Buffer_reg[3][0]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name : string;
  attribute srl_name of \PC_Buffer_reg[3][0]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][0]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][10]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][10]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][10]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][11]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][11]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][11]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][12]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][12]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][12]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][13]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][13]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][13]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][14]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][14]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][14]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][15]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][15]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][15]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][16]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][16]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][16]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][17]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][17]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][17]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][18]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][18]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][18]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][19]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][19]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][19]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][1]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][1]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][1]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][20]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][20]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][20]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][21]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][21]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][21]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][22]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][22]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][22]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][23]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][23]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][23]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][24]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][24]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][24]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][25]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][25]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][25]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][26]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][26]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][26]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][27]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][27]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][27]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][28]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][28]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][28]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][29]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][29]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][29]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][2]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][2]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][2]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][30]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][30]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][30]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][31]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][31]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][31]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][3]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][3]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][3]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][4]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][4]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][4]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][5]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][5]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][5]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][6]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][6]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][6]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][7]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][7]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][7]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][8]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][8]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][8]_srl4 ";
  attribute srl_bus_name of \PC_Buffer_reg[3][9]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] ";
  attribute srl_name of \PC_Buffer_reg[3][9]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][9]_srl4 ";
begin
  D(31 downto 0) <= \^d\(31 downto 0);
  \Instr_Addr[0]\(31 downto 0) <= \^instr_addr[0]\(31 downto 0);
\Incr_PC[0].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY
     port map (
      \EX_Op2_reg[0]\(0) => \EX_Op2_reg[0]\(31),
      \Instr_Addr[0]\(0) => \^instr_addr[0]\(31),
      LO => if_pc_carry(29),
      Q(0) => S152_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2
    );
\Incr_PC[10].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_166
     port map (
      \EX_Op2_reg[10]\(0) => \EX_Op2_reg[0]\(21),
      \Instr_Addr[10]\(0) => \^instr_addr[0]\(21),
      LO => if_pc_carry(20),
      Q(0) => S102_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[11]\ => if_pc_carry(19),
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => S,
      lopt_11 => lopt_10,
      lopt_12 => lopt_11,
      lopt_13 => lopt_12,
      lopt_14 => S12_in,
      lopt_15 => lopt_13,
      lopt_16 => lopt_14,
      lopt_17 => S17_in,
      lopt_18 => lopt_15,
      lopt_19 => lopt_16,
      lopt_2 => lopt_2,
      lopt_20 => S22_in,
      lopt_21 => lopt_17,
      lopt_22 => lopt_18,
      lopt_23 => S27_in,
      lopt_24 => lopt_19,
      lopt_25 => lopt_20,
      lopt_26 => lopt_21,
      lopt_27 => lopt_22,
      lopt_28 => lopt_23,
      lopt_29 => lopt_24,
      lopt_3 => lopt_3,
      lopt_30 => S32_in,
      lopt_31 => lopt_25,
      lopt_32 => lopt_26,
      lopt_33 => S37_in,
      lopt_34 => lopt_27,
      lopt_35 => lopt_28,
      lopt_36 => S42_in,
      lopt_37 => lopt_29,
      lopt_38 => lopt_30,
      lopt_39 => S47_in,
      lopt_4 => lopt_4,
      lopt_40 => lopt_31,
      lopt_41 => lopt_32,
      lopt_42 => lopt_33,
      lopt_43 => lopt_34,
      lopt_44 => lopt_35,
      lopt_45 => lopt_36,
      lopt_46 => S52_in,
      lopt_47 => lopt_37,
      lopt_48 => lopt_38,
      lopt_49 => S57_in,
      lopt_5 => lopt_5,
      lopt_50 => lopt_39,
      lopt_51 => lopt_40,
      lopt_52 => S62_in,
      lopt_53 => lopt_41,
      lopt_54 => lopt_42,
      lopt_55 => S67_in,
      lopt_56 => lopt_43,
      lopt_57 => lopt_44,
      lopt_58 => lopt_45,
      lopt_59 => lopt_46,
      lopt_6 => lopt_6,
      lopt_60 => lopt_47,
      lopt_61 => lopt_48,
      lopt_62 => S72_in,
      lopt_63 => lopt_49,
      lopt_64 => lopt_50,
      lopt_65 => S77_in,
      lopt_66 => lopt_51,
      lopt_67 => lopt_52,
      lopt_68 => S82_in,
      lopt_69 => lopt_53,
      lopt_7 => lopt_7,
      lopt_70 => lopt_54,
      lopt_71 => S87_in,
      lopt_72 => lopt_55,
      lopt_73 => lopt_56,
      lopt_74 => lopt_57,
      lopt_75 => lopt_58,
      lopt_76 => lopt_59,
      lopt_77 => lopt_60,
      lopt_78 => S92_in,
      lopt_79 => lopt_61,
      lopt_8 => lopt_8,
      lopt_80 => lopt_62,
      lopt_81 => S97_in,
      lopt_82 => lopt_63,
      lopt_83 => lopt_64,
      lopt_84 => S107_in,
      lopt_85 => lopt_65,
      lopt_86 => lopt_66,
      lopt_87 => lopt_67,
      lopt_9 => lopt_9
    );
\Incr_PC[11].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_167
     port map (
      \EX_Op2_reg[11]\(0) => \EX_Op2_reg[0]\(20),
      \Instr_Addr[11]\(0) => \^instr_addr[0]\(20),
      LO => if_pc_carry(19),
      Q(0) => S97_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[12]\ => if_pc_carry(18),
      lopt => lopt_61,
      lopt_1 => lopt_62,
      lopt_2 => lopt_66
    );
\Incr_PC[12].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_168
     port map (
      \EX_Op2_reg[12]\(0) => \EX_Op2_reg[0]\(19),
      \Instr_Addr[12]\(0) => \^instr_addr[0]\(19),
      LO => if_pc_carry(18),
      Q(0) => S92_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[13]\ => if_pc_carry(17),
      lopt => lopt_59,
      lopt_1 => lopt_60,
      lopt_2 => lopt_65
    );
\Incr_PC[13].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_169
     port map (
      \EX_Op2_reg[13]\(0) => \EX_Op2_reg[0]\(18),
      \Instr_Addr[13]\(0) => \^instr_addr[0]\(18),
      LO => if_pc_carry(17),
      Q(0) => S87_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[14]\ => if_pc_carry(16),
      lopt => lopt_53,
      lopt_1 => lopt_54,
      lopt_2 => lopt_58
    );
\Incr_PC[14].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_170
     port map (
      \EX_Op2_reg[14]\(0) => \EX_Op2_reg[0]\(17),
      \Instr_Addr[14]\(0) => \^instr_addr[0]\(17),
      LO => if_pc_carry(16),
      Q(0) => S82_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[15]\ => if_pc_carry(15),
      lopt => lopt_51,
      lopt_1 => lopt_52,
      lopt_2 => lopt_57
    );
\Incr_PC[15].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_171
     port map (
      \EX_Op2_reg[15]\(0) => \EX_Op2_reg[0]\(16),
      \Instr_Addr[15]\(0) => \^instr_addr[0]\(16),
      LO => if_pc_carry(15),
      Q(0) => S77_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[16]\ => if_pc_carry(14),
      lopt => lopt_49,
      lopt_1 => lopt_50,
      lopt_2 => lopt_56
    );
\Incr_PC[16].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_172
     port map (
      \EX_Op2_reg[16]\(0) => \EX_Op2_reg[0]\(15),
      \Instr_Addr[16]\(0) => \^instr_addr[0]\(15),
      LO => if_pc_carry(14),
      Q(0) => S72_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[17]\ => if_pc_carry(13),
      lopt => lopt_47,
      lopt_1 => lopt_48,
      lopt_2 => lopt_55
    );
\Incr_PC[17].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_173
     port map (
      \EX_Op2_reg[17]\(0) => \EX_Op2_reg[0]\(14),
      \Instr_Addr[17]\(0) => \^instr_addr[0]\(14),
      LO => if_pc_carry(13),
      Q(0) => S67_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[18]\ => if_pc_carry(12),
      lopt => lopt_41,
      lopt_1 => lopt_42,
      lopt_2 => lopt_46
    );
\Incr_PC[18].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_174
     port map (
      \EX_Op2_reg[18]\(0) => \EX_Op2_reg[0]\(13),
      \Instr_Addr[18]\(0) => \^instr_addr[0]\(13),
      LO => if_pc_carry(12),
      Q(0) => S62_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[19]\ => if_pc_carry(11),
      lopt => lopt_39,
      lopt_1 => lopt_40,
      lopt_2 => lopt_45
    );
\Incr_PC[19].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_175
     port map (
      \EX_Op2_reg[19]\(0) => \EX_Op2_reg[0]\(12),
      \Instr_Addr[19]\(0) => \^instr_addr[0]\(12),
      LO => if_pc_carry(11),
      Q(0) => S57_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[20]\ => if_pc_carry(10),
      lopt => lopt_37,
      lopt_1 => lopt_38,
      lopt_2 => lopt_44
    );
\Incr_PC[1].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_176
     port map (
      \EX_Op2_reg[1]\(0) => \EX_Op2_reg[0]\(30),
      \Instr_Addr[1]\(0) => \^instr_addr[0]\(30),
      LO => if_pc_carry(29),
      Q(0) => S147_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[2]\ => if_pc_carry(28),
      lopt => lopt_68,
      lopt_1 => lopt_63,
      lopt_10 => lopt_74,
      lopt_11 => lopt_75,
      lopt_12 => S127_in,
      lopt_13 => lopt_76,
      lopt_14 => lopt_77,
      lopt_15 => lopt_78,
      lopt_16 => lopt_79,
      lopt_17 => lopt_80,
      lopt_18 => lopt_81,
      lopt_19 => S132_in,
      lopt_2 => lopt_69,
      lopt_20 => lopt_82,
      lopt_21 => lopt_83,
      lopt_22 => S137_in,
      lopt_23 => lopt_84,
      lopt_24 => lopt_85,
      lopt_25 => S142_in,
      lopt_26 => lopt_86,
      lopt_27 => lopt_87,
      lopt_28 => lopt_88,
      lopt_3 => S112_in,
      lopt_4 => lopt_70,
      lopt_5 => lopt_71,
      lopt_6 => S117_in,
      lopt_7 => lopt_72,
      lopt_8 => lopt_73,
      lopt_9 => S122_in
    );
\Incr_PC[20].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_177
     port map (
      \EX_Op2_reg[20]\(0) => \EX_Op2_reg[0]\(11),
      \Instr_Addr[20]\(0) => \^instr_addr[0]\(11),
      LO => if_pc_carry(10),
      Q(0) => S52_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[21]\ => if_pc_carry(9),
      lopt => lopt_35,
      lopt_1 => lopt_36,
      lopt_2 => lopt_43
    );
\Incr_PC[21].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_178
     port map (
      \EX_Op2_reg[21]\(0) => \EX_Op2_reg[0]\(10),
      \Instr_Addr[21]\(0) => \^instr_addr[0]\(10),
      LO => if_pc_carry(9),
      Q(0) => S47_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[22]\ => if_pc_carry(8),
      lopt => lopt_29,
      lopt_1 => lopt_30,
      lopt_2 => lopt_34
    );
\Incr_PC[22].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_179
     port map (
      \EX_Op2_reg[22]\(0) => \EX_Op2_reg[0]\(9),
      \Instr_Addr[22]\(0) => \^instr_addr[0]\(9),
      LO => if_pc_carry(8),
      Q(0) => S42_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[23]\ => if_pc_carry(7),
      lopt => lopt_27,
      lopt_1 => lopt_28,
      lopt_2 => lopt_33
    );
\Incr_PC[23].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_180
     port map (
      \EX_Op2_reg[23]\(0) => \EX_Op2_reg[0]\(8),
      \Instr_Addr[23]\(0) => \^instr_addr[0]\(8),
      LO => if_pc_carry(7),
      Q(0) => S37_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[24]\ => if_pc_carry(6),
      lopt => lopt_25,
      lopt_1 => lopt_26,
      lopt_2 => lopt_32
    );
\Incr_PC[24].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_181
     port map (
      \EX_Op2_reg[24]\(0) => \EX_Op2_reg[0]\(7),
      \Instr_Addr[24]\(0) => \^instr_addr[0]\(7),
      LO => if_pc_carry(6),
      Q(0) => S32_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[25]\ => if_pc_carry(5),
      lopt => lopt_23,
      lopt_1 => lopt_24,
      lopt_2 => lopt_31
    );
\Incr_PC[25].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_182
     port map (
      \EX_Op2_reg[25]\(0) => \EX_Op2_reg[0]\(6),
      \Instr_Addr[25]\(0) => \^instr_addr[0]\(6),
      LO => if_pc_carry(5),
      Q(0) => S27_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[26]\ => if_pc_carry(4),
      lopt => lopt_17,
      lopt_1 => lopt_18,
      lopt_2 => lopt_22
    );
\Incr_PC[26].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_183
     port map (
      \EX_Op2_reg[26]\(0) => \EX_Op2_reg[0]\(5),
      \Instr_Addr[26]\(0) => \^instr_addr[0]\(5),
      LO => if_pc_carry(4),
      Q(0) => S22_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[27]\ => if_pc_carry(3),
      lopt => lopt_15,
      lopt_1 => lopt_16,
      lopt_2 => lopt_21
    );
\Incr_PC[27].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_184
     port map (
      \EX_Op2_reg[27]\(0) => \EX_Op2_reg[0]\(4),
      \Instr_Addr[27]\(0) => \^instr_addr[0]\(4),
      LO => if_pc_carry(3),
      Q(0) => S17_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[28]\ => if_pc_carry(2),
      lopt => lopt_13,
      lopt_1 => lopt_14,
      lopt_2 => lopt_20
    );
\Incr_PC[28].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_185
     port map (
      \EX_Op2_reg[28]\(0) => \EX_Op2_reg[0]\(3),
      \Instr_Addr[28]\(0) => \^instr_addr[0]\(3),
      LO => if_pc_carry(2),
      Q(0) => S12_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[29]\ => if_pc_carry(1),
      lopt => lopt_11,
      lopt_1 => lopt_12,
      lopt_2 => lopt_19
    );
\Incr_PC[29].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_186
     port map (
      CI => CI,
      \EX_Op2_reg[29]\(0) => \EX_Op2_reg[0]\(2),
      \Instr_Addr[29]\(0) => \^instr_addr[0]\(2),
      LO => if_pc_carry(1),
      Q(0) => S,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      lopt => lopt_8,
      lopt_1 => lopt_9,
      lopt_2 => lopt_10
    );
\Incr_PC[2].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_187
     port map (
      \EX_Op2_reg[2]\(0) => \EX_Op2_reg[0]\(29),
      \Instr_Addr[2]\(0) => \^instr_addr[0]\(29),
      LO => if_pc_carry(28),
      Q(0) => S142_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[3]\ => if_pc_carry(27),
      lopt => lopt_84,
      lopt_1 => lopt_85,
      lopt_2 => lopt_88
    );
\Incr_PC[3].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_188
     port map (
      \EX_Op2_reg[3]\(0) => \EX_Op2_reg[0]\(28),
      \Instr_Addr[3]\(0) => \^instr_addr[0]\(28),
      LO => if_pc_carry(27),
      Q(0) => S137_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[4]\ => if_pc_carry(26),
      lopt => lopt_82,
      lopt_1 => lopt_83,
      lopt_2 => lopt_87
    );
\Incr_PC[4].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_189
     port map (
      \EX_Op2_reg[4]\(0) => \EX_Op2_reg[0]\(27),
      \Instr_Addr[4]\(0) => \^instr_addr[0]\(27),
      LO => if_pc_carry(26),
      Q(0) => S132_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[5]\ => if_pc_carry(25),
      lopt => lopt_80,
      lopt_1 => lopt_81,
      lopt_2 => lopt_86
    );
\Incr_PC[5].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_190
     port map (
      \EX_Op2_reg[5]\(0) => \EX_Op2_reg[0]\(26),
      \Instr_Addr[5]\(0) => \^instr_addr[0]\(26),
      LO => if_pc_carry(25),
      Q(0) => S127_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[6]\ => if_pc_carry(24),
      lopt => lopt_74,
      lopt_1 => lopt_75,
      lopt_2 => lopt_79
    );
\Incr_PC[6].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_191
     port map (
      \EX_Op2_reg[6]\(0) => \EX_Op2_reg[0]\(25),
      \Instr_Addr[6]\(0) => \^instr_addr[0]\(25),
      LO => if_pc_carry(24),
      Q(0) => S122_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[7]\ => if_pc_carry(23),
      lopt => lopt_72,
      lopt_1 => lopt_73,
      lopt_2 => lopt_78
    );
\Incr_PC[7].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_192
     port map (
      \EX_Op2_reg[7]\(0) => \EX_Op2_reg[0]\(24),
      \Instr_Addr[7]\(0) => \^instr_addr[0]\(24),
      LO => if_pc_carry(23),
      Q(0) => S117_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[8]\ => if_pc_carry(22),
      lopt => lopt_70,
      lopt_1 => lopt_71,
      lopt_2 => lopt_77
    );
\Incr_PC[8].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_193
     port map (
      \EX_Op2_reg[8]\(0) => \EX_Op2_reg[0]\(23),
      \Instr_Addr[8]\(0) => \^instr_addr[0]\(23),
      LO => if_pc_carry(22),
      Q(0) => S112_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \if_pc_reg[9]\ => if_pc_carry(21),
      lopt => lopt_68,
      lopt_1 => lopt_69,
      lopt_2 => lopt_76
    );
\Incr_PC[9].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_194
     port map (
      CI => if_pc_carry(20),
      \EX_Op2_reg[9]\(0) => \EX_Op2_reg[0]\(22),
      \Instr_Addr[9]\(0) => \^instr_addr[0]\(22),
      LO => if_pc_carry(21),
      Q(0) => S107_in,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      lopt => lopt_63,
      lopt_1 => lopt_64,
      lopt_2 => lopt_67
    );
\Instr_Addr[30]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[0]\(1),
      I1 => p_1_in3_in,
      I2 => ex_delayslot_Instr2,
      O => \^instr_addr[0]\(1)
    );
\Instr_Addr[31]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[0]\(0),
      I1 => \if_pc_reg_n_0_[31]\,
      I2 => ex_delayslot_Instr2,
      O => \^instr_addr[0]\(0)
    );
\Instruction_Prefetch_Mux[0].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_195
     port map (
      Clk => Clk,
      D(0) => \^d\(31),
      I0125_out => I0125_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S152_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_31 => of_pc_ii_31,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[0].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_196
     port map (
      I0125_out => I0125_out,
      Q(0) => S152_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_31 => of_pc_ii_31,
      \out\(0) => p_1_in153_in
    );
\Instruction_Prefetch_Mux[10].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_197
     port map (
      Clk => Clk,
      D(0) => \^d\(21),
      I085_out => I085_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S102_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_21 => of_pc_ii_21,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[10].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_198
     port map (
      I085_out => I085_out,
      Q(0) => S102_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_21 => of_pc_ii_21,
      \out\(0) => p_1_in103_in
    );
\Instruction_Prefetch_Mux[11].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_199
     port map (
      Clk => Clk,
      D(0) => \^d\(20),
      I081_out => I081_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S97_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_20 => of_pc_ii_20,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[11].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_200
     port map (
      I081_out => I081_out,
      Q(0) => S97_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_20 => of_pc_ii_20,
      \out\(0) => p_1_in98_in
    );
\Instruction_Prefetch_Mux[12].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_201
     port map (
      Clk => Clk,
      D(0) => \^d\(19),
      I077_out => I077_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S92_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_19 => of_pc_ii_19,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[12].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_202
     port map (
      I077_out => I077_out,
      Q(0) => S92_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_19 => of_pc_ii_19,
      \out\(0) => p_1_in93_in
    );
\Instruction_Prefetch_Mux[13].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_203
     port map (
      Clk => Clk,
      D(0) => \^d\(18),
      I073_out => I073_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S87_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_18 => of_pc_ii_18,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[13].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_204
     port map (
      I073_out => I073_out,
      Q(0) => S87_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_18 => of_pc_ii_18,
      \out\(0) => p_1_in88_in
    );
\Instruction_Prefetch_Mux[14].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_205
     port map (
      Clk => Clk,
      D(0) => \^d\(17),
      I069_out => I069_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S82_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_17 => of_pc_ii_17,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[14].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_206
     port map (
      I069_out => I069_out,
      Q(0) => S82_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_17 => of_pc_ii_17,
      \out\(0) => p_1_in83_in
    );
\Instruction_Prefetch_Mux[15].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_207
     port map (
      Clk => Clk,
      D(0) => \^d\(16),
      I065_out => I065_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S77_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_16 => of_pc_ii_16,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[15].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_208
     port map (
      I065_out => I065_out,
      Q(0) => S77_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_16 => of_pc_ii_16,
      \out\(0) => p_1_in78_in
    );
\Instruction_Prefetch_Mux[16].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_209
     port map (
      Clk => Clk,
      D(0) => \^d\(15),
      I061_out => I061_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S72_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_15 => of_pc_ii_15,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[16].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_210
     port map (
      I061_out => I061_out,
      Q(0) => S72_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_15 => of_pc_ii_15,
      \out\(0) => p_1_in73_in
    );
\Instruction_Prefetch_Mux[17].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_211
     port map (
      Clk => Clk,
      D(0) => \^d\(14),
      I057_out => I057_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S67_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_14 => of_pc_ii_14,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[17].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_212
     port map (
      I057_out => I057_out,
      Q(0) => S67_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_14 => of_pc_ii_14,
      \out\(0) => p_1_in68_in
    );
\Instruction_Prefetch_Mux[18].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_213
     port map (
      Clk => Clk,
      D(0) => \^d\(13),
      I053_out => I053_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S62_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_13 => of_pc_ii_13,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[18].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_214
     port map (
      I053_out => I053_out,
      Q(0) => S62_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_13 => of_pc_ii_13,
      \out\(0) => p_1_in63_in
    );
\Instruction_Prefetch_Mux[19].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_215
     port map (
      Clk => Clk,
      D(0) => \^d\(12),
      I049_out => I049_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S57_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_12 => of_pc_ii_12,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[19].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_216
     port map (
      I049_out => I049_out,
      Q(0) => S57_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_12 => of_pc_ii_12,
      \out\(0) => p_1_in58_in
    );
\Instruction_Prefetch_Mux[1].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_217
     port map (
      Clk => Clk,
      D(0) => \^d\(30),
      I0121_out => I0121_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S147_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_30 => of_pc_ii_30,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[1].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_218
     port map (
      I0121_out => I0121_out,
      Q(0) => S147_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_30 => of_pc_ii_30,
      \out\(0) => p_1_in148_in
    );
\Instruction_Prefetch_Mux[20].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_219
     port map (
      Clk => Clk,
      D(0) => \^d\(11),
      I045_out => I045_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S52_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_11 => of_pc_ii_11,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[20].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_220
     port map (
      I045_out => I045_out,
      Q(0) => S52_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_11 => of_pc_ii_11,
      \out\(0) => p_1_in53_in
    );
\Instruction_Prefetch_Mux[21].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_221
     port map (
      Clk => Clk,
      D(0) => \^d\(10),
      I041_out => I041_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S47_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_10 => of_pc_ii_10,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[21].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_222
     port map (
      I041_out => I041_out,
      Q(0) => S47_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_10 => of_pc_ii_10,
      \out\(0) => p_1_in48_in
    );
\Instruction_Prefetch_Mux[22].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_223
     port map (
      Clk => Clk,
      D(0) => \^d\(9),
      I037_out => I037_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S42_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_9 => of_pc_ii_9,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[22].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_224
     port map (
      I037_out => I037_out,
      Q(0) => S42_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_9 => of_pc_ii_9,
      \out\(0) => p_1_in43_in
    );
\Instruction_Prefetch_Mux[23].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_225
     port map (
      Clk => Clk,
      D(0) => \^d\(8),
      I033_out => I033_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S37_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_8 => of_pc_ii_8,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[23].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_226
     port map (
      I033_out => I033_out,
      Q(0) => S37_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_8 => of_pc_ii_8,
      \out\(0) => p_1_in38_in
    );
\Instruction_Prefetch_Mux[24].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_227
     port map (
      Clk => Clk,
      D(0) => \^d\(7),
      I029_out => I029_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S32_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_7 => of_pc_ii_7,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[24].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_228
     port map (
      I029_out => I029_out,
      Q(0) => S32_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_7 => of_pc_ii_7,
      \out\(0) => p_1_in33_in
    );
\Instruction_Prefetch_Mux[25].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_229
     port map (
      Clk => Clk,
      D(0) => \^d\(6),
      I025_out => I025_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S27_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_6 => of_pc_ii_6,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[25].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_230
     port map (
      I025_out => I025_out,
      Q(0) => S27_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_6 => of_pc_ii_6,
      \out\(0) => p_1_in28_in
    );
\Instruction_Prefetch_Mux[26].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_231
     port map (
      Clk => Clk,
      D(0) => \^d\(5),
      I021_out => I021_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S22_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_5 => of_pc_ii_5,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[26].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_232
     port map (
      I021_out => I021_out,
      Q(0) => S22_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_5 => of_pc_ii_5,
      \out\(0) => p_1_in23_in
    );
\Instruction_Prefetch_Mux[27].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_233
     port map (
      Clk => Clk,
      D(0) => \^d\(4),
      I017_out => I017_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S17_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_4 => of_pc_ii_4,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[27].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_234
     port map (
      I017_out => I017_out,
      Q(0) => S17_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_4 => of_pc_ii_4,
      \out\(0) => p_1_in18_in
    );
\Instruction_Prefetch_Mux[28].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_235
     port map (
      Clk => Clk,
      D(0) => \^d\(3),
      I013_out => I013_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S12_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_3 => of_pc_ii_3,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[28].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_236
     port map (
      I013_out => I013_out,
      Q(0) => S12_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_3 => of_pc_ii_3,
      \out\(0) => p_1_in13_in
    );
\Instruction_Prefetch_Mux[29].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_237
     port map (
      Clk => Clk,
      D(0) => \^d\(2),
      I09_out => I09_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_2 => of_pc_ii_2,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[29].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_238
     port map (
      I09_out => I09_out,
      Q(0) => S,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_2 => of_pc_ii_2,
      \out\(0) => p_1_in8_in
    );
\Instruction_Prefetch_Mux[2].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_239
     port map (
      Clk => Clk,
      D(0) => \^d\(29),
      I0117_out => I0117_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S142_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_29 => of_pc_ii_29,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[2].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_240
     port map (
      I0117_out => I0117_out,
      Q(0) => S142_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_29 => of_pc_ii_29,
      \out\(0) => p_1_in143_in
    );
\Instruction_Prefetch_Mux[30].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_241
     port map (
      Clk => Clk,
      D(0) => \^d\(1),
      I05_out => I05_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => p_1_in3_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_1 => of_pc_ii_1,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[30].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_242
     port map (
      I05_out => I05_out,
      Q(0) => p_1_in3_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_1 => of_pc_ii_1,
      \out\(0) => p_2_in4_in
    );
\Instruction_Prefetch_Mux[31].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_243
     port map (
      Clk => Clk,
      D(0) => \^d\(0),
      I0 => I0,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => \if_pc_reg_n_0_[31]\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_0 => of_pc_ii_0,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[31].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_244
     port map (
      I0 => I0,
      Q(0) => \if_pc_reg_n_0_[31]\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_0 => of_pc_ii_0,
      \out\(0) => \PC_Buffer_reg[3][0]_srl4_n_0\
    );
\Instruction_Prefetch_Mux[3].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_245
     port map (
      Clk => Clk,
      D(0) => \^d\(28),
      I0113_out => I0113_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S137_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_28 => of_pc_ii_28,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[3].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_246
     port map (
      I0113_out => I0113_out,
      Q(0) => S137_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_28 => of_pc_ii_28,
      \out\(0) => p_1_in138_in
    );
\Instruction_Prefetch_Mux[4].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_247
     port map (
      Clk => Clk,
      D(0) => \^d\(27),
      I0109_out => I0109_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S132_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_27 => of_pc_ii_27,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[4].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_248
     port map (
      I0109_out => I0109_out,
      Q(0) => S132_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_27 => of_pc_ii_27,
      \out\(0) => p_1_in133_in
    );
\Instruction_Prefetch_Mux[5].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_249
     port map (
      Clk => Clk,
      D(0) => \^d\(26),
      I0105_out => I0105_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S127_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_26 => of_pc_ii_26,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[5].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_250
     port map (
      I0105_out => I0105_out,
      Q(0) => S127_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_26 => of_pc_ii_26,
      \out\(0) => p_1_in128_in
    );
\Instruction_Prefetch_Mux[6].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_251
     port map (
      Clk => Clk,
      D(0) => \^d\(25),
      I0101_out => I0101_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S122_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_25 => of_pc_ii_25,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[6].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_252
     port map (
      I0101_out => I0101_out,
      Q(0) => S122_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_25 => of_pc_ii_25,
      \out\(0) => p_1_in123_in
    );
\Instruction_Prefetch_Mux[7].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_253
     port map (
      Clk => Clk,
      D(0) => \^d\(24),
      I097_out => I097_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S117_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_24 => of_pc_ii_24,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[7].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_254
     port map (
      I097_out => I097_out,
      Q(0) => S117_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_24 => of_pc_ii_24,
      \out\(0) => p_1_in118_in
    );
\Instruction_Prefetch_Mux[8].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_255
     port map (
      Clk => Clk,
      D(0) => \^d\(23),
      I093_out => I093_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S112_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_23 => of_pc_ii_23,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[8].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_256
     port map (
      I093_out => I093_out,
      Q(0) => S112_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_23 => of_pc_ii_23,
      \out\(0) => p_1_in113_in
    );
\Instruction_Prefetch_Mux[9].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_257
     port map (
      Clk => Clk,
      D(0) => \^d\(22),
      I089_out => I089_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      Q(0) => S107_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      of_pc_ii_22 => of_pc_ii_22,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[9].PC_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_258
     port map (
      I089_out => I089_out,
      Q(0) => S107_in,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_2\,
      of_pc_ii_22 => of_pc_ii_22,
      \out\(0) => p_1_in108_in
    );
\PC_Buffer_reg[3][0]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => \if_pc_reg_n_0_[31]\,
      Q => \PC_Buffer_reg[3][0]_srl4_n_0\
    );
\PC_Buffer_reg[3][10]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S47_in,
      Q => p_1_in48_in
    );
\PC_Buffer_reg[3][11]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S52_in,
      Q => p_1_in53_in
    );
\PC_Buffer_reg[3][12]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S57_in,
      Q => p_1_in58_in
    );
\PC_Buffer_reg[3][13]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S62_in,
      Q => p_1_in63_in
    );
\PC_Buffer_reg[3][14]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S67_in,
      Q => p_1_in68_in
    );
\PC_Buffer_reg[3][15]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S72_in,
      Q => p_1_in73_in
    );
\PC_Buffer_reg[3][16]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S77_in,
      Q => p_1_in78_in
    );
\PC_Buffer_reg[3][17]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S82_in,
      Q => p_1_in83_in
    );
\PC_Buffer_reg[3][18]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S87_in,
      Q => p_1_in88_in
    );
\PC_Buffer_reg[3][19]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S92_in,
      Q => p_1_in93_in
    );
\PC_Buffer_reg[3][1]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => p_1_in3_in,
      Q => p_2_in4_in
    );
\PC_Buffer_reg[3][20]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S97_in,
      Q => p_1_in98_in
    );
\PC_Buffer_reg[3][21]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S102_in,
      Q => p_1_in103_in
    );
\PC_Buffer_reg[3][22]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S107_in,
      Q => p_1_in108_in
    );
\PC_Buffer_reg[3][23]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S112_in,
      Q => p_1_in113_in
    );
\PC_Buffer_reg[3][24]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S117_in,
      Q => p_1_in118_in
    );
\PC_Buffer_reg[3][25]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S122_in,
      Q => p_1_in123_in
    );
\PC_Buffer_reg[3][26]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S127_in,
      Q => p_1_in128_in
    );
\PC_Buffer_reg[3][27]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S132_in,
      Q => p_1_in133_in
    );
\PC_Buffer_reg[3][28]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S137_in,
      Q => p_1_in138_in
    );
\PC_Buffer_reg[3][29]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S142_in,
      Q => p_1_in143_in
    );
\PC_Buffer_reg[3][2]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S,
      Q => p_1_in8_in
    );
\PC_Buffer_reg[3][30]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S147_in,
      Q => p_1_in148_in
    );
\PC_Buffer_reg[3][31]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S152_in,
      Q => p_1_in153_in
    );
\PC_Buffer_reg[3][3]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S12_in,
      Q => p_1_in13_in
    );
\PC_Buffer_reg[3][4]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S17_in,
      Q => p_1_in18_in
    );
\PC_Buffer_reg[3][5]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S22_in,
      Q => p_1_in23_in
    );
\PC_Buffer_reg[3][6]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S27_in,
      Q => p_1_in28_in
    );
\PC_Buffer_reg[3][7]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S32_in,
      Q => p_1_in33_in
    );
\PC_Buffer_reg[3][8]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S37_in,
      Q => p_1_in38_in
    );
\PC_Buffer_reg[3][9]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => if_pre_buffer_addr(0),
      A1 => if_sel_input(0),
      A2 => '0',
      A3 => '0',
      CE => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      CLK => Clk,
      D => S42_in,
      Q => p_1_in43_in
    );
\ex_pc_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(31),
      Q => ex_pc(0),
      R => \out\(0)
    );
\ex_pc_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(21),
      Q => ex_pc(10),
      R => \out\(0)
    );
\ex_pc_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(20),
      Q => ex_pc(11),
      R => \out\(0)
    );
\ex_pc_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(19),
      Q => ex_pc(12),
      R => \out\(0)
    );
\ex_pc_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(18),
      Q => ex_pc(13),
      R => \out\(0)
    );
\ex_pc_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(17),
      Q => ex_pc(14),
      R => \out\(0)
    );
\ex_pc_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(16),
      Q => ex_pc(15),
      R => \out\(0)
    );
\ex_pc_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(15),
      Q => ex_pc(16),
      R => \out\(0)
    );
\ex_pc_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(14),
      Q => ex_pc(17),
      R => \out\(0)
    );
\ex_pc_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(13),
      Q => ex_pc(18),
      R => \out\(0)
    );
\ex_pc_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(12),
      Q => ex_pc(19),
      R => \out\(0)
    );
\ex_pc_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(30),
      Q => ex_pc(1),
      R => \out\(0)
    );
\ex_pc_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(11),
      Q => ex_pc(20),
      R => \out\(0)
    );
\ex_pc_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(10),
      Q => ex_pc(21),
      R => \out\(0)
    );
\ex_pc_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(9),
      Q => ex_pc(22),
      R => \out\(0)
    );
\ex_pc_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(8),
      Q => ex_pc(23),
      R => \out\(0)
    );
\ex_pc_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(7),
      Q => ex_pc(24),
      R => \out\(0)
    );
\ex_pc_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(6),
      Q => ex_pc(25),
      R => \out\(0)
    );
\ex_pc_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(5),
      Q => ex_pc(26),
      R => \out\(0)
    );
\ex_pc_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(4),
      Q => ex_pc(27),
      R => \out\(0)
    );
\ex_pc_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(3),
      Q => ex_pc(28),
      R => \out\(0)
    );
\ex_pc_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(2),
      Q => ex_pc(29),
      R => \out\(0)
    );
\ex_pc_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(29),
      Q => ex_pc(2),
      R => \out\(0)
    );
\ex_pc_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(1),
      Q => ex_pc(30),
      R => \out\(0)
    );
\ex_pc_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(0),
      Q => ex_pc(31),
      R => \out\(0)
    );
\ex_pc_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(28),
      Q => ex_pc(3),
      R => \out\(0)
    );
\ex_pc_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(27),
      Q => ex_pc(4),
      R => \out\(0)
    );
\ex_pc_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(26),
      Q => ex_pc(5),
      R => \out\(0)
    );
\ex_pc_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(25),
      Q => ex_pc(6),
      R => \out\(0)
    );
\ex_pc_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(24),
      Q => ex_pc(7),
      R => \out\(0)
    );
\ex_pc_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(23),
      Q => ex_pc(8),
      R => \out\(0)
    );
\ex_pc_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \^d\(22),
      Q => ex_pc(9),
      R => \out\(0)
    );
\if_pc_reg[0]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(31),
      Q => S152_in,
      S => \out\(0)
    );
\if_pc_reg[10]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(21),
      Q => S102_in,
      S => \out\(0)
    );
\if_pc_reg[11]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(20),
      Q => S97_in,
      S => \out\(0)
    );
\if_pc_reg[12]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(19),
      Q => S92_in,
      S => \out\(0)
    );
\if_pc_reg[13]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(18),
      Q => S87_in,
      S => \out\(0)
    );
\if_pc_reg[14]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(17),
      Q => S82_in,
      S => \out\(0)
    );
\if_pc_reg[15]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(16),
      Q => S77_in,
      S => \out\(0)
    );
\if_pc_reg[16]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(15),
      Q => S72_in,
      S => \out\(0)
    );
\if_pc_reg[17]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(14),
      Q => S67_in,
      S => \out\(0)
    );
\if_pc_reg[18]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(13),
      Q => S62_in,
      S => \out\(0)
    );
\if_pc_reg[19]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(12),
      Q => S57_in,
      S => \out\(0)
    );
\if_pc_reg[1]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(30),
      Q => S147_in,
      S => \out\(0)
    );
\if_pc_reg[20]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(11),
      Q => S52_in,
      S => \out\(0)
    );
\if_pc_reg[21]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(10),
      Q => S47_in,
      S => \out\(0)
    );
\if_pc_reg[22]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(9),
      Q => S42_in,
      S => \out\(0)
    );
\if_pc_reg[23]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(8),
      Q => S37_in,
      S => \out\(0)
    );
\if_pc_reg[24]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(7),
      Q => S32_in,
      S => \out\(0)
    );
\if_pc_reg[25]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(6),
      Q => S27_in,
      S => \out\(0)
    );
\if_pc_reg[26]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(5),
      Q => S22_in,
      S => \out\(0)
    );
\if_pc_reg[27]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(4),
      Q => S17_in,
      S => \out\(0)
    );
\if_pc_reg[28]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(3),
      Q => S12_in,
      S => \out\(0)
    );
\if_pc_reg[29]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(2),
      Q => S,
      S => \out\(0)
    );
\if_pc_reg[2]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(29),
      Q => S142_in,
      S => \out\(0)
    );
\if_pc_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(1),
      Q => p_1_in3_in,
      R => \out\(0)
    );
\if_pc_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(0),
      Q => \if_pc_reg_n_0_[31]\,
      R => \out\(0)
    );
\if_pc_reg[3]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(28),
      Q => S137_in,
      S => \out\(0)
    );
\if_pc_reg[4]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(27),
      Q => S132_in,
      S => \out\(0)
    );
\if_pc_reg[5]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(26),
      Q => S127_in,
      S => \out\(0)
    );
\if_pc_reg[6]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(25),
      Q => S122_in,
      S => \out\(0)
    );
\if_pc_reg[7]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(24),
      Q => S117_in,
      S => \out\(0)
    );
\if_pc_reg[8]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(23),
      Q => S112_in,
      S => \out\(0)
    );
\if_pc_reg[9]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => if_fetch_in_progress_reg(0),
      D => \^instr_addr[0]\(22),
      Q => S107_in,
      S => \out\(0)
    );
\mem_pc_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(0),
      Q => \Using_FPGA.Native\(31),
      R => \out\(0)
    );
\mem_pc_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(10),
      Q => \Using_FPGA.Native\(21),
      R => \out\(0)
    );
\mem_pc_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(11),
      Q => \Using_FPGA.Native\(20),
      R => \out\(0)
    );
\mem_pc_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(12),
      Q => \Using_FPGA.Native\(19),
      R => \out\(0)
    );
\mem_pc_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(13),
      Q => \Using_FPGA.Native\(18),
      R => \out\(0)
    );
\mem_pc_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(14),
      Q => \Using_FPGA.Native\(17),
      R => \out\(0)
    );
\mem_pc_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(15),
      Q => \Using_FPGA.Native\(16),
      R => \out\(0)
    );
\mem_pc_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(16),
      Q => \Using_FPGA.Native\(15),
      R => \out\(0)
    );
\mem_pc_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(17),
      Q => \Using_FPGA.Native\(14),
      R => \out\(0)
    );
\mem_pc_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(18),
      Q => \Using_FPGA.Native\(13),
      R => \out\(0)
    );
\mem_pc_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(19),
      Q => \Using_FPGA.Native\(12),
      R => \out\(0)
    );
\mem_pc_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(1),
      Q => \Using_FPGA.Native\(30),
      R => \out\(0)
    );
\mem_pc_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(20),
      Q => \Using_FPGA.Native\(11),
      R => \out\(0)
    );
\mem_pc_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(21),
      Q => \Using_FPGA.Native\(10),
      R => \out\(0)
    );
\mem_pc_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(22),
      Q => \Using_FPGA.Native\(9),
      R => \out\(0)
    );
\mem_pc_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(23),
      Q => \Using_FPGA.Native\(8),
      R => \out\(0)
    );
\mem_pc_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(24),
      Q => \Using_FPGA.Native\(7),
      R => \out\(0)
    );
\mem_pc_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(25),
      Q => \Using_FPGA.Native\(6),
      R => \out\(0)
    );
\mem_pc_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(26),
      Q => \Using_FPGA.Native\(5),
      R => \out\(0)
    );
\mem_pc_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(27),
      Q => \Using_FPGA.Native\(4),
      R => \out\(0)
    );
\mem_pc_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(28),
      Q => \Using_FPGA.Native\(3),
      R => \out\(0)
    );
\mem_pc_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(29),
      Q => \Using_FPGA.Native\(2),
      R => \out\(0)
    );
\mem_pc_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(2),
      Q => \Using_FPGA.Native\(29),
      R => \out\(0)
    );
\mem_pc_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(30),
      Q => \Using_FPGA.Native\(1),
      R => \out\(0)
    );
\mem_pc_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(31),
      Q => \Using_FPGA.Native\(0),
      R => \out\(0)
    );
\mem_pc_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(3),
      Q => \Using_FPGA.Native\(28),
      R => \out\(0)
    );
\mem_pc_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(4),
      Q => \Using_FPGA.Native\(27),
      R => \out\(0)
    );
\mem_pc_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(5),
      Q => \Using_FPGA.Native\(26),
      R => \out\(0)
    );
\mem_pc_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(6),
      Q => \Using_FPGA.Native\(25),
      R => \out\(0)
    );
\mem_pc_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(7),
      Q => \Using_FPGA.Native\(24),
      R => \out\(0)
    );
\mem_pc_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(8),
      Q => \Using_FPGA.Native\(23),
      R => \out\(0)
    );
\mem_pc_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => ex_pc(9),
      Q => \Using_FPGA.Native\(22),
      R => \out\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_PreFetch_Buffer_gti is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    of_valid : out STD_LOGIC;
    of_instr : out STD_LOGIC_VECTOR ( 5 downto 0 );
    D : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \ex_instr_reg[11]\ : out STD_LOGIC_VECTOR ( 20 downto 0 );
    use_Reg_Neg_S_reg : out STD_LOGIC;
    of_predecode : out STD_LOGIC_VECTOR ( 9 downto 0 );
    \status_reg_reg[25]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    if_pre_buffer_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    I_AS : out STD_LOGIC;
    IFetch : out STD_LOGIC_VECTOR ( 0 to 0 );
    if_fetch_for_timing_optimization1 : out STD_LOGIC;
    ex_op1_cmp_eq_n5_out : out STD_LOGIC;
    ex_op1_cmp_eq1 : out STD_LOGIC;
    force_Val2_N_reg : out STD_LOGIC;
    use_Reg_Neg_DI1_out : out STD_LOGIC;
    force_Val10_out : out STD_LOGIC;
    use_Reg_Neg_S3_out : out STD_LOGIC;
    force12_out : out STD_LOGIC;
    \EX_Op2_reg[0]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    ex_atomic_Instruction_Pair0 : out STD_LOGIC;
    ex_branch_with_delayslot_reg : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_ALU_Op_reg[0]\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_enable_alu_i_reg : out STD_LOGIC;
    ex_move_to_MSR_instr29_out : out STD_LOGIC;
    of_op1_sel_spr : out STD_LOGIC;
    of_pipe_ctrl : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \EX_Op3_reg[0]\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    \EX_Op3_reg[15]\ : out STD_LOGIC;
    \EX_Op3_reg[15]_0\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[0]\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    \EX_Branch_CMP_Op1_reg[15]\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[15]_0\ : out STD_LOGIC;
    EX_SWAP_Instr_reg : out STD_LOGIC;
    ex_mbar_decode_cmb : out STD_LOGIC;
    ex_mbar_is_sleep_cmb : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    D122_out : out STD_LOGIC;
    EX_SWAP_BYTE_Instr_reg : out STD_LOGIC;
    ex_is_multi_or_load_instr0 : out STD_LOGIC;
    ex_is_multi_instr2_reg : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    ex_op1_cmp_eq : out STD_LOGIC;
    ex_set_bip : out STD_LOGIC;
    ex_enable_sext_shift_i0 : out STD_LOGIC;
    ex_sel_alu_i0 : out STD_LOGIC;
    of_Sel_SPR_MSR3_out : out STD_LOGIC;
    p_9_in : out STD_LOGIC;
    \EX_Sext_Op_reg[0]\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    if_fetch_in_progress_reg : out STD_LOGIC;
    ex_gpr_write_reg : out STD_LOGIC;
    ex_is_div_instr_I_reg : out STD_LOGIC;
    ex_gpr_write_dbg_reg : out STD_LOGIC;
    Dbg_Clean_Stop_reg : out STD_LOGIC;
    EX_CMP_Op_reg : out STD_LOGIC;
    EX_Unsigned_Op_reg : out STD_LOGIC;
    EX_Use_Carry_reg : out STD_LOGIC;
    ex_load_alu_carry_reg : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Performace_Debug_Control.ex_brki_hit_reg\ : out STD_LOGIC;
    use_Reg_Neg_S_reg_0 : out STD_LOGIC;
    ex_load_shift_carry_reg : out STD_LOGIC;
    mem_jump_taken_reg : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    ex_alu_sel_logic_i_reg : out STD_LOGIC;
    I1 : out STD_LOGIC;
    \EX_Op1_reg[28]\ : out STD_LOGIC;
    \EX_Op1_reg[29]\ : out STD_LOGIC;
    \EX_Op1_reg[30]\ : out STD_LOGIC;
    \EX_Op1_reg[31]\ : out STD_LOGIC;
    \EX_Op1_reg[27]\ : out STD_LOGIC;
    \EX_Op1_reg[26]\ : out STD_LOGIC;
    \EX_Op1_reg[25]\ : out STD_LOGIC;
    \EX_Op1_reg[24]\ : out STD_LOGIC;
    \EX_Op1_reg[23]\ : out STD_LOGIC;
    \EX_Op1_reg[22]\ : out STD_LOGIC;
    \EX_Op1_reg[21]\ : out STD_LOGIC;
    \EX_Op1_reg[20]\ : out STD_LOGIC;
    \EX_Op1_reg[19]\ : out STD_LOGIC;
    \EX_Op1_reg[18]\ : out STD_LOGIC;
    \EX_Op1_reg[17]\ : out STD_LOGIC;
    \EX_Op1_reg[16]\ : out STD_LOGIC;
    \EX_Op1_reg[15]\ : out STD_LOGIC;
    \EX_Op1_reg[14]\ : out STD_LOGIC;
    \EX_Op1_reg[13]\ : out STD_LOGIC;
    \EX_Op1_reg[12]\ : out STD_LOGIC;
    \EX_Op1_reg[11]\ : out STD_LOGIC;
    \EX_Op1_reg[10]\ : out STD_LOGIC;
    \EX_Op1_reg[9]\ : out STD_LOGIC;
    \EX_Op1_reg[8]\ : out STD_LOGIC;
    \EX_Op1_reg[7]\ : out STD_LOGIC;
    \EX_Op1_reg[6]\ : out STD_LOGIC;
    \EX_Op1_reg[5]\ : out STD_LOGIC;
    \EX_Op1_reg[4]\ : out STD_LOGIC;
    \EX_Op1_reg[3]\ : out STD_LOGIC;
    \EX_Op1_reg[2]\ : out STD_LOGIC;
    \EX_Op1_reg[1]\ : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_9\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[27]\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    I041_out : in STD_LOGIC;
    I139_out : in STD_LOGIC;
    p_0_in44_in : in STD_LOGIC;
    IB_Ready : in STD_LOGIC;
    if_fetch_in_progress : in STD_LOGIC;
    ex_delayslot_Instr2 : in STD_LOGIC;
    in00 : in STD_LOGIC;
    \wb_exception_kind_i_reg[27]_0\ : in STD_LOGIC;
    GPR_Op2 : in STD_LOGIC_VECTOR ( 0 to 31 );
    WB_Byte_Access_reg : in STD_LOGIC_VECTOR ( 15 downto 0 );
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 31 );
    \Using_FPGA.Native_10\ : in STD_LOGIC_VECTOR ( 29 downto 0 );
    \interrupt_address_d1_reg[31]\ : in STD_LOGIC;
    \Using_FPGA.Native_11\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \interrupt_address_d1_reg[30]\ : in STD_LOGIC;
    \interrupt_address_d1_reg[29]\ : in STD_LOGIC;
    \interrupt_address_d1_reg[0]\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    of_Take_Interrupt_hold_reg : in STD_LOGIC;
    \interrupt_address_d1_reg[26]\ : in STD_LOGIC;
    \interrupt_address_d1_reg[25]\ : in STD_LOGIC;
    \interrupt_address_d1_reg[24]\ : in STD_LOGIC;
    \interrupt_address_d1_reg[23]\ : in STD_LOGIC;
    \interrupt_address_d1_reg[22]\ : in STD_LOGIC;
    \interrupt_address_d1_reg[21]\ : in STD_LOGIC;
    \interrupt_address_d1_reg[20]\ : in STD_LOGIC;
    \interrupt_address_d1_reg[19]\ : in STD_LOGIC;
    \interrupt_address_d1_reg[18]\ : in STD_LOGIC;
    \interrupt_address_d1_reg[17]\ : in STD_LOGIC;
    \interrupt_address_d1_reg[16]\ : in STD_LOGIC;
    WB_Doublet_Access_reg : in STD_LOGIC;
    \interrupt_address_d1_reg[15]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_0 : in STD_LOGIC;
    \interrupt_address_d1_reg[14]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_1 : in STD_LOGIC;
    \interrupt_address_d1_reg[13]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_2 : in STD_LOGIC;
    \interrupt_address_d1_reg[12]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_3 : in STD_LOGIC;
    \interrupt_address_d1_reg[11]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_4 : in STD_LOGIC;
    \interrupt_address_d1_reg[10]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_5 : in STD_LOGIC;
    \interrupt_address_d1_reg[9]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_6 : in STD_LOGIC;
    \interrupt_address_d1_reg[8]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_7 : in STD_LOGIC;
    \interrupt_address_d1_reg[7]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_8 : in STD_LOGIC;
    \interrupt_address_d1_reg[6]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_9 : in STD_LOGIC;
    \interrupt_address_d1_reg[5]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_10 : in STD_LOGIC;
    \interrupt_address_d1_reg[4]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_11 : in STD_LOGIC;
    \interrupt_address_d1_reg[3]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_12 : in STD_LOGIC;
    \interrupt_address_d1_reg[2]\ : in STD_LOGIC;
    WB_Doublet_Access_reg_13 : in STD_LOGIC;
    \interrupt_address_d1_reg[1]\ : in STD_LOGIC;
    \Using_FPGA.Native_12\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_sel_msr : in STD_LOGIC;
    WB_Doublet_Access_reg_14 : in STD_LOGIC;
    \imm_reg_reg[0]\ : in STD_LOGIC_VECTOR ( 15 downto 0 );
    of_read_imm_reg_ii_reg : in STD_LOGIC;
    ex_is_multi_or_load_instr : in STD_LOGIC;
    of_read_ex_write_op2_conflict_part2 : in STD_LOGIC;
    of_read_ex_write_op2_conflict_part1 : in STD_LOGIC;
    of_read_mem_write_op2_conflict_part2 : in STD_LOGIC;
    mem_is_multi_or_load_instr : in STD_LOGIC;
    of_read_mem_write_op2_conflict_part1 : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 15 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 4 downto 0 );
    mem_gpr_write : in STD_LOGIC;
    mem_valid_instr : in STD_LOGIC;
    p_109_in : in STD_LOGIC;
    GPR_Op1 : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \wb_gpr_write_addr_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    p_19_in : in STD_LOGIC;
    \ex_gpr_write_addr_reg[0]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    p_112_in : in STD_LOGIC;
    ex_mbar_decode : in STD_LOGIC;
    ex_branch_with_delayslot_reg_0 : in STD_LOGIC;
    ex_mbar_is_sleep : in STD_LOGIC;
    of_read_imm_reg_ii : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 32 downto 0 );
    wb_valid_reg : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    wb_gpr_write_i : in STD_LOGIC;
    wb_reset : in STD_LOGIC;
    of_read_ex_write_op3_conflict_part1 : in STD_LOGIC;
    of_read_ex_write_op3_conflict_part2 : in STD_LOGIC;
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_gpr_write_reg_0 : in STD_LOGIC;
    EX_Is_Div_Instr : in STD_LOGIC;
    ex_gpr_write_dbg : in STD_LOGIC;
    ex_jump_nodelay_reg : in STD_LOGIC;
    \control_reg_reg[8]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    if_debug_ready_i_reg : in STD_LOGIC;
    if_missed_fetch : in STD_LOGIC;
    ex_branch_with_delayslot : in STD_LOGIC;
    ex_jump_q : in STD_LOGIC;
    wb_MSR_cmb : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_13\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    ex_MSR : in STD_LOGIC_VECTOR ( 2 downto 0 );
    ex_valid : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_PreFetch_Buffer_gti : entity is "PreFetch_Buffer_gti";
end system_microblaze_0_0_PreFetch_Buffer_gti;

architecture STRUCTURE of system_microblaze_0_0_PreFetch_Buffer_gti is
  signal \^d\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \^e\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal EX_ALU_Op1 : STD_LOGIC;
  signal \Gen_Mux_Select_LUT6[4].Gen_Sel_DFF_n_1\ : STD_LOGIC;
  signal I0101_out : STD_LOGIC;
  signal I0105_out : STD_LOGIC;
  signal I0109_out : STD_LOGIC;
  signal I0113_out : STD_LOGIC;
  signal I0117_out : STD_LOGIC;
  signal I0121_out : STD_LOGIC;
  signal I0125_out : STD_LOGIC;
  signal I0129_out : STD_LOGIC;
  signal I0133_out : STD_LOGIC;
  signal I0137_out : STD_LOGIC;
  signal I013_out : STD_LOGIC;
  signal I0141_out : STD_LOGIC;
  signal I0145_out : STD_LOGIC;
  signal I0149_out : STD_LOGIC;
  signal I0153_out : STD_LOGIC;
  signal I0157_out : STD_LOGIC;
  signal I0161_out : STD_LOGIC;
  signal I0165_out : STD_LOGIC;
  signal I0169_out : STD_LOGIC;
  signal I017_out : STD_LOGIC;
  signal I021_out : STD_LOGIC;
  signal I025_out : STD_LOGIC;
  signal I029_out : STD_LOGIC;
  signal I033_out : STD_LOGIC;
  signal I037_out : STD_LOGIC;
  signal I045_out : STD_LOGIC;
  signal I049_out : STD_LOGIC;
  signal I053_out : STD_LOGIC;
  signal I057_out : STD_LOGIC;
  signal I05_out : STD_LOGIC;
  signal I061_out : STD_LOGIC;
  signal I065_out : STD_LOGIC;
  signal I069_out : STD_LOGIC;
  signal I073_out : STD_LOGIC;
  signal I077_out : STD_LOGIC;
  signal I081_out : STD_LOGIC;
  signal I085_out : STD_LOGIC;
  signal I089_out : STD_LOGIC;
  signal I093_out : STD_LOGIC;
  signal I097_out : STD_LOGIC;
  signal I09_out : STD_LOGIC;
  signal I1103_out : STD_LOGIC;
  signal I1107_out : STD_LOGIC;
  signal I1111_out : STD_LOGIC;
  signal I1115_out : STD_LOGIC;
  signal I1119_out : STD_LOGIC;
  signal I111_out : STD_LOGIC;
  signal I1123_out : STD_LOGIC;
  signal I1127_out : STD_LOGIC;
  signal I1131_out : STD_LOGIC;
  signal I1135_out : STD_LOGIC;
  signal I1139_out : STD_LOGIC;
  signal I1143_out : STD_LOGIC;
  signal I1147_out : STD_LOGIC;
  signal I1151_out : STD_LOGIC;
  signal I1155_out : STD_LOGIC;
  signal I1159_out : STD_LOGIC;
  signal I115_out : STD_LOGIC;
  signal I1163_out : STD_LOGIC;
  signal I1167_out : STD_LOGIC;
  signal I119_out : STD_LOGIC;
  signal I123_out : STD_LOGIC;
  signal I127_out : STD_LOGIC;
  signal I131_out : STD_LOGIC;
  signal I135_out : STD_LOGIC;
  signal I13_out : STD_LOGIC;
  signal I143_out : STD_LOGIC;
  signal I147_out : STD_LOGIC;
  signal I151_out : STD_LOGIC;
  signal I155_out : STD_LOGIC;
  signal I159_out : STD_LOGIC;
  signal I163_out : STD_LOGIC;
  signal I167_out : STD_LOGIC;
  signal I171_out : STD_LOGIC;
  signal I175_out : STD_LOGIC;
  signal I179_out : STD_LOGIC;
  signal I17_out : STD_LOGIC;
  signal I183_out : STD_LOGIC;
  signal I187_out : STD_LOGIC;
  signal I191_out : STD_LOGIC;
  signal I195_out : STD_LOGIC;
  signal I199_out : STD_LOGIC;
  signal I4 : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[0].Gen_Instr_DFF_n_2\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_2\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_3\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_4\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_1\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_10\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_11\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_12\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_13\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_14\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_15\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_16\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_2\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_3\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_4\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_5\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_6\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_7\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_8\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_9\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_10\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[27].Gen_Instr_DFF_n_1\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[28].Gen_Instr_DFF_n_1\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[28].Gen_Instr_DFF_n_2\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_2\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_3\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[30].Gen_Instr_DFF_n_1\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[32].Gen_Instr_DFF_n_1\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[32].Gen_Instr_DFF_n_2\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[32].Gen_Instr_DFF_n_3\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_2\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_3\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_4\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_1\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_2\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_3\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_4\ : STD_LOGIC;
  signal \Instruction_Prefetch_Mux[6].Gen_Instr_DFF_n_23\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_1\ : STD_LOGIC;
  signal ex_branch_with_delayslot_i : STD_LOGIC;
  signal \^ex_branch_with_delayslot_reg\ : STD_LOGIC;
  signal ex_gpr_write27_out : STD_LOGIC;
  signal \^ex_instr_reg[11]\ : STD_LOGIC_VECTOR ( 20 downto 0 );
  signal \^ex_is_multi_instr2_reg\ : STD_LOGIC;
  signal ex_set_bip0 : STD_LOGIC;
  signal \ibuffer_reg[3][0]_srl4_n_0\ : STD_LOGIC;
  signal \^if_pre_buffer_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal if_sel_input : STD_LOGIC_VECTOR ( 1 to 2 );
  signal of_Valid_II : STD_LOGIC;
  signal \^of_instr\ : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal of_instr_ii_0 : STD_LOGIC;
  signal of_instr_ii_1 : STD_LOGIC;
  signal of_instr_ii_10 : STD_LOGIC;
  signal of_instr_ii_11 : STD_LOGIC;
  signal of_instr_ii_12 : STD_LOGIC;
  signal of_instr_ii_13 : STD_LOGIC;
  signal of_instr_ii_14 : STD_LOGIC;
  signal of_instr_ii_15 : STD_LOGIC;
  signal of_instr_ii_16 : STD_LOGIC;
  signal of_instr_ii_17 : STD_LOGIC;
  signal of_instr_ii_18 : STD_LOGIC;
  signal of_instr_ii_19 : STD_LOGIC;
  signal of_instr_ii_2 : STD_LOGIC;
  signal of_instr_ii_20 : STD_LOGIC;
  signal of_instr_ii_21 : STD_LOGIC;
  signal of_instr_ii_22 : STD_LOGIC;
  signal of_instr_ii_23 : STD_LOGIC;
  signal of_instr_ii_24 : STD_LOGIC;
  signal of_instr_ii_25 : STD_LOGIC;
  signal of_instr_ii_26 : STD_LOGIC;
  signal of_instr_ii_27 : STD_LOGIC;
  signal of_instr_ii_28 : STD_LOGIC;
  signal of_instr_ii_29 : STD_LOGIC;
  signal of_instr_ii_3 : STD_LOGIC;
  signal of_instr_ii_30 : STD_LOGIC;
  signal of_instr_ii_31 : STD_LOGIC;
  signal of_instr_ii_32 : STD_LOGIC;
  signal of_instr_ii_33 : STD_LOGIC;
  signal of_instr_ii_34 : STD_LOGIC;
  signal of_instr_ii_35 : STD_LOGIC;
  signal of_instr_ii_36 : STD_LOGIC;
  signal of_instr_ii_37 : STD_LOGIC;
  signal of_instr_ii_38 : STD_LOGIC;
  signal of_instr_ii_39 : STD_LOGIC;
  signal of_instr_ii_4 : STD_LOGIC;
  signal of_instr_ii_40 : STD_LOGIC;
  signal of_instr_ii_41 : STD_LOGIC;
  signal of_instr_ii_42 : STD_LOGIC;
  signal of_instr_ii_5 : STD_LOGIC;
  signal of_instr_ii_6 : STD_LOGIC;
  signal of_instr_ii_7 : STD_LOGIC;
  signal of_instr_ii_8 : STD_LOGIC;
  signal of_instr_ii_9 : STD_LOGIC;
  signal of_op2_sel : STD_LOGIC_VECTOR ( 0 to 0 );
  signal of_op2_sel_imm : STD_LOGIC;
  signal \^of_predecode\ : STD_LOGIC_VECTOR ( 9 downto 0 );
  signal of_use_op2_s : STD_LOGIC;
  signal p_1_in104_in : STD_LOGIC;
  signal p_1_in109_in : STD_LOGIC;
  signal p_1_in114_in : STD_LOGIC;
  signal p_1_in119_in : STD_LOGIC;
  signal p_1_in124_in : STD_LOGIC;
  signal p_1_in129_in : STD_LOGIC;
  signal p_1_in134_in : STD_LOGIC;
  signal p_1_in139_in : STD_LOGIC;
  signal p_1_in144_in : STD_LOGIC;
  signal p_1_in149_in : STD_LOGIC;
  signal p_1_in14_in : STD_LOGIC;
  signal p_1_in154_in : STD_LOGIC;
  signal p_1_in159_in : STD_LOGIC;
  signal p_1_in164_in : STD_LOGIC;
  signal p_1_in169_in : STD_LOGIC;
  signal p_1_in16_in : STD_LOGIC;
  signal p_1_in174_in : STD_LOGIC;
  signal p_1_in179_in : STD_LOGIC;
  signal p_1_in184_in : STD_LOGIC;
  signal p_1_in189_in : STD_LOGIC;
  signal p_1_in194_in : STD_LOGIC;
  signal p_1_in199_in : STD_LOGIC;
  signal p_1_in19_in : STD_LOGIC;
  signal p_1_in204_in : STD_LOGIC;
  signal p_1_in209_in : STD_LOGIC;
  signal p_1_in24_in : STD_LOGIC;
  signal p_1_in29_in : STD_LOGIC;
  signal p_1_in34_in : STD_LOGIC;
  signal p_1_in39_in : STD_LOGIC;
  signal p_1_in44_in : STD_LOGIC;
  signal p_1_in4_in : STD_LOGIC;
  signal p_1_in54_in : STD_LOGIC;
  signal p_1_in59_in : STD_LOGIC;
  signal p_1_in64_in : STD_LOGIC;
  signal p_1_in69_in : STD_LOGIC;
  signal p_1_in74_in : STD_LOGIC;
  signal p_1_in79_in : STD_LOGIC;
  signal p_1_in84_in : STD_LOGIC;
  signal p_1_in89_in_0 : STD_LOGIC;
  signal p_1_in94_in : STD_LOGIC;
  signal p_1_in99_in : STD_LOGIC;
  signal p_1_in9_in : STD_LOGIC;
  signal sel_input_delayslot : STD_LOGIC;
  signal sel_input_i_0 : STD_LOGIC;
  signal sel_input_i_1 : STD_LOGIC;
  signal sel_input_iii_0 : STD_LOGIC;
  signal sel_input_iii_1 : STD_LOGIC;
  signal sel_input_iii_2 : STD_LOGIC;
  signal sel_input_iii_3 : STD_LOGIC;
  signal \^status_reg_reg[25]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute srl_bus_name : string;
  attribute srl_bus_name of \ibuffer_reg[3][0]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name : string;
  attribute srl_name of \ibuffer_reg[3][0]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][0]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][10]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][10]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][10]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][11]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][11]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][11]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][12]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][12]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][12]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][13]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][13]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][13]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][14]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][14]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][14]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][15]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][15]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][15]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][16]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][16]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][16]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][17]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][17]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][17]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][18]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][18]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][18]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][19]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][19]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][19]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][1]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][1]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][1]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][20]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][20]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][20]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][21]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][21]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][21]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][22]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][22]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][22]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][23]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][23]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][23]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][24]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][24]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][24]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][25]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][25]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][25]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][26]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][26]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][26]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][27]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][27]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][27]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][28]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][28]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][28]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][29]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][29]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][29]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][2]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][2]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][2]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][30]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][30]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][30]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][31]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][31]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][31]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][32]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][32]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][32]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][33]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][33]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][33]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][34]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][34]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][34]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][35]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][35]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][35]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][36]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][36]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][36]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][37]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][37]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][37]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][38]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][38]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][38]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][39]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][39]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][39]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][3]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][3]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][3]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][40]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][40]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][40]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][41]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][41]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][41]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][42]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][42]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][42]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][4]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][4]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][4]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][5]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][5]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][5]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][6]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][6]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][6]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][7]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][7]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][7]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][8]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][8]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][8]_srl4 ";
  attribute srl_bus_name of \ibuffer_reg[3][9]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] ";
  attribute srl_name of \ibuffer_reg[3][9]_srl4\ : label is "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][9]_srl4 ";
begin
  D(4 downto 0) <= \^d\(4 downto 0);
  E(0) <= \^e\(0);
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
  ex_branch_with_delayslot_reg <= \^ex_branch_with_delayslot_reg\;
  \ex_instr_reg[11]\(20 downto 0) <= \^ex_instr_reg[11]\(20 downto 0);
  ex_is_multi_instr2_reg <= \^ex_is_multi_instr2_reg\;
  if_pre_buffer_addr(0) <= \^if_pre_buffer_addr\(0);
  of_instr(5 downto 0) <= \^of_instr\(5 downto 0);
  of_predecode(9 downto 0) <= \^of_predecode\(9 downto 0);
  \status_reg_reg[25]\(0) <= \^status_reg_reg[25]\(0);
\Gen_Mux_Select_LUT6[1].Gen_Sel_DFF\: entity work.system_microblaze_0_0_MB_FDR_72
     port map (
      Clk => Clk,
      IB_Ready => IB_Ready,
      IFetch(0) => IFetch(0),
      I_AS => I_AS,
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(0),
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      if_fetch_for_timing_optimization1 => if_fetch_for_timing_optimization1,
      if_fetch_in_progress => if_fetch_in_progress,
      if_fetch_in_progress_reg => if_fetch_in_progress_reg,
      if_sel_input(0) => if_sel_input(1),
      in00 => in00,
      \out\(0) => \out\(0),
      p_0_in44_in => p_0_in44_in,
      sel_input_iii_3 => sel_input_iii_3,
      \status_reg_reg[25]\ => \^status_reg_reg[25]\(0)
    );
\Gen_Mux_Select_LUT6[1].Mux_Select_LUT6\: entity work.system_microblaze_0_0_MB_LUT6
     port map (
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^status_reg_reg[25]\(0),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_9\,
      if_sel_input(0) => if_sel_input(1),
      sel_input_iii_3 => sel_input_iii_3,
      \wb_exception_kind_i_reg[27]\ => \wb_exception_kind_i_reg[27]\
    );
\Gen_Mux_Select_LUT6[2].Gen_Sel_DFF\: entity work.system_microblaze_0_0_MB_FDR_73
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^status_reg_reg[25]\(0),
      addr(0) => \^if_pre_buffer_addr\(0),
      if_sel_input(0) => if_sel_input(1),
      \out\(0) => \out\(0),
      sel_input_iii_2 => sel_input_iii_2
    );
\Gen_Mux_Select_LUT6[2].Mux_Select_LUT6\: entity work.system_microblaze_0_0_MB_LUT6_74
     port map (
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^status_reg_reg[25]\(0),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_9\,
      if_sel_input(1) => if_sel_input(1),
      if_sel_input(0) => if_sel_input(2),
      sel_input_iii_2 => sel_input_iii_2,
      \wb_exception_kind_i_reg[27]\ => \wb_exception_kind_i_reg[27]\
    );
\Gen_Mux_Select_LUT6[3].Gen_Sel_DFF\: entity work.system_microblaze_0_0_MB_FDR_75
     port map (
      Clk => Clk,
      if_sel_input(0) => if_sel_input(2),
      \out\(0) => \out\(0),
      sel_input_iii_1 => sel_input_iii_1
    );
\Gen_Mux_Select_LUT6[3].Mux_Select_LUT6\: entity work.system_microblaze_0_0_MB_LUT6_76
     port map (
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_9\,
      if_sel_input(1) => if_sel_input(1),
      if_sel_input(0) => if_sel_input(2),
      sel_input_iii_1 => sel_input_iii_1,
      \wb_exception_kind_i_reg[27]\ => \wb_exception_kind_i_reg[27]\
    );
\Gen_Mux_Select_LUT6[4].Gen_Sel_DFF\: entity work.system_microblaze_0_0_MB_FDR_77
     port map (
      Clk => Clk,
      I1103_out => I1103_out,
      I1107_out => I1107_out,
      I1111_out => I1111_out,
      I1115_out => I1115_out,
      I1119_out => I1119_out,
      I111_out => I111_out,
      I1123_out => I1123_out,
      I1127_out => I1127_out,
      I1131_out => I1131_out,
      I1135_out => I1135_out,
      I1139_out => I1139_out,
      I1143_out => I1143_out,
      I1147_out => I1147_out,
      I1151_out => I1151_out,
      I1155_out => I1155_out,
      I1159_out => I1159_out,
      I115_out => I115_out,
      I1163_out => I1163_out,
      I1167_out => I1167_out,
      I119_out => I119_out,
      I123_out => I123_out,
      I127_out => I127_out,
      I131_out => I131_out,
      I135_out => I135_out,
      I13_out => I13_out,
      I143_out => I143_out,
      I147_out => I147_out,
      I151_out => I151_out,
      I155_out => I155_out,
      I159_out => I159_out,
      I163_out => I163_out,
      I167_out => I167_out,
      I171_out => I171_out,
      I175_out => I175_out,
      I179_out => I179_out,
      I17_out => I17_out,
      I183_out => I183_out,
      I187_out => I187_out,
      I191_out => I191_out,
      I195_out => I195_out,
      I199_out => I199_out,
      \Using_FPGA.Native_0\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_1\ => \Gen_Mux_Select_LUT6[4].Gen_Sel_DFF_n_1\,
      \Using_FPGA.Native_2\(41) => p_1_in209_in,
      \Using_FPGA.Native_2\(40) => p_1_in204_in,
      \Using_FPGA.Native_2\(39) => p_1_in199_in,
      \Using_FPGA.Native_2\(38) => p_1_in194_in,
      \Using_FPGA.Native_2\(37) => p_1_in189_in,
      \Using_FPGA.Native_2\(36) => p_1_in184_in,
      \Using_FPGA.Native_2\(35) => p_1_in179_in,
      \Using_FPGA.Native_2\(34) => p_1_in174_in,
      \Using_FPGA.Native_2\(33) => p_1_in169_in,
      \Using_FPGA.Native_2\(32) => p_1_in164_in,
      \Using_FPGA.Native_2\(31) => p_1_in159_in,
      \Using_FPGA.Native_2\(30) => p_1_in154_in,
      \Using_FPGA.Native_2\(29) => p_1_in149_in,
      \Using_FPGA.Native_2\(28) => p_1_in144_in,
      \Using_FPGA.Native_2\(27) => p_1_in139_in,
      \Using_FPGA.Native_2\(26) => p_1_in134_in,
      \Using_FPGA.Native_2\(25) => p_1_in129_in,
      \Using_FPGA.Native_2\(24) => p_1_in124_in,
      \Using_FPGA.Native_2\(23) => p_1_in119_in,
      \Using_FPGA.Native_2\(22) => p_1_in114_in,
      \Using_FPGA.Native_2\(21) => p_1_in109_in,
      \Using_FPGA.Native_2\(20) => p_1_in104_in,
      \Using_FPGA.Native_2\(19) => p_1_in99_in,
      \Using_FPGA.Native_2\(18) => p_1_in94_in,
      \Using_FPGA.Native_2\(17) => p_1_in89_in_0,
      \Using_FPGA.Native_2\(16) => p_1_in84_in,
      \Using_FPGA.Native_2\(15) => p_1_in79_in,
      \Using_FPGA.Native_2\(14) => p_1_in74_in,
      \Using_FPGA.Native_2\(13) => p_1_in69_in,
      \Using_FPGA.Native_2\(12) => p_1_in64_in,
      \Using_FPGA.Native_2\(11) => p_1_in59_in,
      \Using_FPGA.Native_2\(10) => p_1_in54_in,
      \Using_FPGA.Native_2\(9) => p_1_in44_in,
      \Using_FPGA.Native_2\(8) => p_1_in39_in,
      \Using_FPGA.Native_2\(7) => p_1_in34_in,
      \Using_FPGA.Native_2\(6) => p_1_in29_in,
      \Using_FPGA.Native_2\(5) => p_1_in24_in,
      \Using_FPGA.Native_2\(4) => p_1_in19_in,
      \Using_FPGA.Native_2\(3) => p_1_in14_in,
      \Using_FPGA.Native_2\(2) => p_1_in9_in,
      \Using_FPGA.Native_2\(1) => p_1_in4_in,
      \Using_FPGA.Native_2\(0) => \ibuffer_reg[3][0]_srl4_n_0\,
      \in\(31 downto 10) => \in\(32 downto 11),
      \in\(9 downto 0) => \in\(9 downto 0),
      \out\(0) => \out\(0),
      sel_input_i_1 => sel_input_i_1
    );
\Gen_Mux_Select_LUT6[4].Mux_Select_LUT6\: entity work.system_microblaze_0_0_MB_LUT6_78
     port map (
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_9\,
      if_sel_input(0) => if_sel_input(2),
      sel_input_iii_0 => sel_input_iii_0,
      \wb_exception_kind_i_reg[27]\ => \wb_exception_kind_i_reg[27]\
    );
\Gen_Mux_Select_LUT6[4].Using_ExtraMUX.Mux_Select_Delayslot_LUT6\: entity work.\system_microblaze_0_0_MB_LUT6__parameterized4\
     port map (
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_9\,
      if_sel_input(0) => if_sel_input(2),
      sel_input_delayslot => sel_input_delayslot,
      \wb_exception_kind_i_reg[27]\ => \wb_exception_kind_i_reg[27]\
    );
\Gen_Mux_Select_LUT6[4].Using_ExtraMUX.Sel_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7
     port map (
      I4 => I4,
      ex_branch_with_delayslot_i => ex_branch_with_delayslot_i,
      sel_input_delayslot => sel_input_delayslot,
      sel_input_i_1 => sel_input_i_1,
      sel_input_iii_0 => sel_input_iii_0,
      \wb_exception_kind_i_reg[27]\ => \wb_exception_kind_i_reg[27]_0\
    );
\Instruction_Prefetch_Mux[0].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_79
     port map (
      Clk => Clk,
      EX_ALU_Op1 => EX_ALU_Op1,
      EX_CMP_Op_reg => EX_CMP_Op_reg,
      EX_Unsigned_Op_reg => EX_Unsigned_Op_reg,
      EX_Use_Carry_reg => EX_Use_Carry_reg,
      I0169_out => I0169_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_2\ => \^using_fpga.native\,
      \Using_FPGA.Native_3\ => \^of_instr\(2),
      \Using_FPGA.Native_4\ => \^of_instr\(4),
      \Using_FPGA.Native_5\ => \^ex_instr_reg[11]\(0),
      \Using_FPGA.Native_6\ => \^of_instr\(3),
      \Using_FPGA.Native_7\ => \^ex_instr_reg[11]\(1),
      \Using_FPGA.Native_8\ => \^of_instr\(1),
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      \ex_instr_reg[0]\ => \^of_instr\(5),
      ex_jump_nodelay_reg => ex_jump_nodelay_reg,
      \imm_reg_reg[15]\ => \Instruction_Prefetch_Mux[0].Gen_Instr_DFF_n_2\,
      \in\(0) => \in\(32),
      of_instr_ii_42 => of_instr_ii_42,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[0].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_80
     port map (
      I0169_out => I0169_out,
      I1167_out => I1167_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_42 => of_instr_ii_42
    );
\Instruction_Prefetch_Mux[10].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_81
     port map (
      Clk => Clk,
      \EX_Op3_reg[15]\ => \Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_2\,
      \EX_Op3_reg[15]_0\ => \Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_3\,
      \EX_Op3_reg[15]_1\ => \Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_4\,
      I0129_out => I0129_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      Q(2 downto 0) => Q(2 downto 0),
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \Using_FPGA.Native_1\ => \^d\(2),
      \Using_FPGA.Native_2\ => \^d\(1),
      \ex_gpr_write_addr_reg[2]\(2 downto 0) => \ex_gpr_write_addr_reg[0]\(2 downto 0),
      \ex_gpr_write_addr_reg[4]\ => \^d\(0),
      \in\(0) => \in\(22),
      of_instr_ii_32 => of_instr_ii_32,
      \out\(0) => \out\(0),
      \wb_gpr_write_addr_reg[2]\(2 downto 0) => \wb_gpr_write_addr_reg[0]\(2 downto 0)
    );
\Instruction_Prefetch_Mux[10].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_82
     port map (
      I0129_out => I0129_out,
      I1127_out => I1127_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_32 => of_instr_ii_32
    );
\Instruction_Prefetch_Mux[11].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_83
     port map (
      Clk => Clk,
      I0125_out => I0125_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \ex_instr_reg[11]\ => \^ex_instr_reg[11]\(20),
      \in\(0) => \in\(9),
      of_instr_ii_31 => of_instr_ii_31,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[11].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_84
     port map (
      Dbg_Disable => Dbg_Disable,
      I0125_out => I0125_out,
      I1123_out => I1123_out,
      IReady => IReady,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      \Using_FPGA.Native_0\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_9\,
      if_debug_ready_i_reg => if_debug_ready_i_reg,
      if_missed_fetch => if_missed_fetch,
      of_instr_ii_31 => of_instr_ii_31,
      \wb_exception_kind_i_reg[27]\ => \wb_exception_kind_i_reg[27]_0\
    );
\Instruction_Prefetch_Mux[12].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_85
     port map (
      Clk => Clk,
      I0121_out => I0121_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \Using_FPGA.Native_1\ => \^ex_instr_reg[11]\(18),
      \Using_FPGA.Native_2\(0) => \^ex_instr_reg[11]\(20),
      \ex_instr_reg[12]\ => \^ex_instr_reg[11]\(19),
      ex_set_bip0 => ex_set_bip0,
      \in\(0) => \in\(8),
      of_instr_ii_30 => of_instr_ii_30,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[12].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_86
     port map (
      I0121_out => I0121_out,
      I1119_out => I1119_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_30 => of_instr_ii_30
    );
\Instruction_Prefetch_Mux[13].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_87
     port map (
      Clk => Clk,
      I0117_out => I0117_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \ex_instr_reg[13]\ => \^ex_instr_reg[11]\(18),
      \in\(0) => \in\(7),
      of_instr_ii_29 => of_instr_ii_29,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[13].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_88
     port map (
      I0117_out => I0117_out,
      I1115_out => I1115_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_29 => of_instr_ii_29
    );
\Instruction_Prefetch_Mux[14].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_89
     port map (
      Clk => Clk,
      I0113_out => I0113_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      \Using_FPGA.Native_1\ => \^using_fpga.native\,
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg_0,
      \ex_instr_reg[14]\(0) => \^ex_instr_reg[11]\(17),
      ex_mbar_decode => ex_mbar_decode,
      ex_mbar_decode_reg => ex_mbar_decode_cmb,
      \in\(0) => \in\(6),
      of_instr_ii_28 => of_instr_ii_28,
      \out\(0) => \out\(0),
      p_1_in16_in => p_1_in16_in
    );
\Instruction_Prefetch_Mux[14].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_90
     port map (
      I0113_out => I0113_out,
      I1111_out => I1111_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_28 => of_instr_ii_28
    );
\Instruction_Prefetch_Mux[15].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_91
     port map (
      Clk => Clk,
      I0109_out => I0109_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \ex_instr_reg[15]\(0) => \^ex_instr_reg[11]\(16),
      \in\(0) => \in\(5),
      of_instr_ii_27 => of_instr_ii_27,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[15].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_92
     port map (
      I0109_out => I0109_out,
      I1107_out => I1107_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_27 => of_instr_ii_27
    );
\Instruction_Prefetch_Mux[16].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_93
     port map (
      Clk => Clk,
      Dbg_Disable => Dbg_Disable,
      \EX_Op2_reg[0]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_1\,
      \EX_Op2_reg[10]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_7\,
      \EX_Op2_reg[11]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_6\,
      \EX_Op2_reg[12]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_5\,
      \EX_Op2_reg[13]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_4\,
      \EX_Op2_reg[14]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_3\,
      \EX_Op2_reg[15]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_2\,
      \EX_Op2_reg[1]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_16\,
      \EX_Op2_reg[2]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_15\,
      \EX_Op2_reg[3]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_14\,
      \EX_Op2_reg[4]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_13\,
      \EX_Op2_reg[5]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_12\,
      \EX_Op2_reg[6]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_11\,
      \EX_Op2_reg[7]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_10\,
      \EX_Op2_reg[8]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_9\,
      \EX_Op2_reg[9]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_8\,
      GPR_Op2(0) => GPR_Op2(0),
      I0105_out => I0105_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg_0\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \ex_instr_reg[16]\ => \^ex_instr_reg[11]\(15),
      \imm_reg_reg[0]\(15 downto 0) => \imm_reg_reg[0]\(15 downto 0),
      \in\(0) => \in\(4),
      of_instr_ii_26 => of_instr_ii_26,
      of_op2_sel_imm => of_op2_sel_imm,
      of_read_imm_reg_ii => of_read_imm_reg_ii,
      of_read_imm_reg_ii_reg => of_read_imm_reg_ii_reg,
      \out\(0) => \out\(0),
      \wb_exception_kind_i_reg[27]\ => \wb_exception_kind_i_reg[27]_0\
    );
\Instruction_Prefetch_Mux[16].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_94
     port map (
      I0105_out => I0105_out,
      I1103_out => I1103_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_26 => of_instr_ii_26
    );
\Instruction_Prefetch_Mux[17].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_95
     port map (
      Clk => Clk,
      I0101_out => I0101_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^of_instr\(0),
      \Using_FPGA.Native_1\ => \^of_instr\(3),
      \Using_FPGA.Native_2\ => \^of_instr\(4),
      \Using_FPGA.Native_3\ => \Instruction_Prefetch_Mux[0].Gen_Instr_DFF_n_2\,
      \Using_FPGA.Native_4\ => \^of_instr\(1),
      \Using_FPGA.Native_5\ => \^using_fpga.native\,
      \ex_instr_reg[17]\ => \^ex_instr_reg[11]\(14),
      \in\(0) => \in\(3),
      of_instr_ii_25 => of_instr_ii_25,
      of_op1_sel_spr => of_op1_sel_spr,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[17].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_96
     port map (
      I0101_out => I0101_out,
      I199_out => I199_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_25 => of_instr_ii_25
    );
\Instruction_Prefetch_Mux[18].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_97
     port map (
      Clk => Clk,
      I097_out => I097_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \ex_instr_reg[18]\ => \^ex_instr_reg[11]\(13),
      \in\(0) => \in\(2),
      of_instr_ii_24 => of_instr_ii_24,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[18].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_98
     port map (
      I097_out => I097_out,
      I195_out => I195_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_24 => of_instr_ii_24
    );
\Instruction_Prefetch_Mux[19].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_99
     port map (
      Clk => Clk,
      I093_out => I093_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \ex_instr_reg[19]\ => \^ex_instr_reg[11]\(12),
      \in\(0) => \in\(1),
      of_instr_ii_23 => of_instr_ii_23,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[19].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_100
     port map (
      I093_out => I093_out,
      I191_out => I191_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_23 => of_instr_ii_23
    );
\Instruction_Prefetch_Mux[1].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_101
     port map (
      Clk => Clk,
      EX_ALU_Op1 => EX_ALU_Op1,
      \EX_Sext_Op_reg[0]\ => \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_10\,
      I0165_out => I0165_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^d\(1),
      \Using_FPGA.Native_1\ => \^d\(0),
      \Using_FPGA.Native_2\ => \^d\(2),
      \Using_FPGA.Native_3\ => \^using_fpga.native\,
      \Using_FPGA.Native_4\ => \^of_instr\(2),
      \Using_FPGA.Native_5\ => \^of_instr\(5),
      \Using_FPGA.Native_6\ => \^of_instr\(0),
      \Using_FPGA.Native_7\ => \^of_instr\(1),
      \Using_FPGA.Native_8\ => \^of_instr\(3),
      ex_alu_sel_logic_i_reg => ex_alu_sel_logic_i_reg,
      ex_enable_sext_shift_i0 => ex_enable_sext_shift_i0,
      \ex_instr_reg[1]\ => \^of_instr\(4),
      ex_op1_cmp_eq => ex_op1_cmp_eq,
      ex_op1_cmp_eq_n5_out => ex_op1_cmp_eq_n5_out,
      force12_out => force12_out,
      force2_reg => ex_op1_cmp_eq1,
      force_Val10_out => force_Val10_out,
      \in\(0) => \in\(31),
      of_instr_ii_41 => of_instr_ii_41,
      \out\(0) => \out\(0),
      use_Reg_Neg_DI1_out => use_Reg_Neg_DI1_out,
      use_Reg_Neg_S3_out => use_Reg_Neg_S3_out
    );
\Instruction_Prefetch_Mux[1].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_102
     port map (
      I0165_out => I0165_out,
      I1163_out => I1163_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_41 => of_instr_ii_41
    );
\Instruction_Prefetch_Mux[20].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_103
     port map (
      Clk => Clk,
      I089_out => I089_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \ex_instr_reg[20]\ => \^ex_instr_reg[11]\(11),
      \in\(0) => \in\(0),
      of_instr_ii_22 => of_instr_ii_22,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[20].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_104
     port map (
      I089_out => I089_out,
      I187_out => I187_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_22 => of_instr_ii_22
    );
\Instruction_Prefetch_Mux[21].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_105
     port map (
      Clk => Clk,
      I085_out => I085_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Performace_Debug_Control.ex_brki_hit_reg\ => \Performace_Debug_Control.ex_brki_hit_reg\,
      \Using_FPGA.Native_0\ => \^ex_instr_reg[11]\(5),
      \Using_FPGA.Native_1\ => \^ex_instr_reg[11]\(7),
      \Using_FPGA.Native_2\ => \^ex_instr_reg[11]\(6),
      \Using_FPGA.Native_3\(2) => \^ex_instr_reg[11]\(11),
      \Using_FPGA.Native_3\(1 downto 0) => \^ex_instr_reg[11]\(9 downto 8),
      \Using_FPGA.Native_4\ => \^using_fpga.native\,
      \Using_FPGA.Native_5\ => \Instruction_Prefetch_Mux[30].Gen_Instr_DFF_n_1\,
      \Using_FPGA.Native_6\ => \Instruction_Prefetch_Mux[28].Gen_Instr_DFF_n_2\,
      \control_reg_reg[8]\(0) => \control_reg_reg[8]\(0),
      \ex_instr_reg[21]\ => \^ex_instr_reg[11]\(10),
      \in\(0) => \in\(21),
      of_instr_ii_21 => of_instr_ii_21,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[21].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_106
     port map (
      I085_out => I085_out,
      I183_out => I183_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_21 => of_instr_ii_21
    );
\Instruction_Prefetch_Mux[22].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_107
     port map (
      Clk => Clk,
      I081_out => I081_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_7\,
      \Using_FPGA.Native_1\ => \^using_fpga.native\,
      \Using_FPGA.Native_2\ => \^of_instr\(3),
      \ex_instr_reg[22]\(0) => \^ex_instr_reg[11]\(9),
      \in\(0) => \in\(20),
      of_instr_ii_20 => of_instr_ii_20,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[22].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_108
     port map (
      I081_out => I081_out,
      I179_out => I179_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_20 => of_instr_ii_20
    );
\Instruction_Prefetch_Mux[23].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_109
     port map (
      Clk => Clk,
      I077_out => I077_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \ex_instr_reg[23]\(0) => \^ex_instr_reg[11]\(8),
      \in\(0) => \in\(19),
      of_instr_ii_19 => of_instr_ii_19,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[23].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_110
     port map (
      I077_out => I077_out,
      I175_out => I175_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_19 => of_instr_ii_19
    );
\Instruction_Prefetch_Mux[24].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_111
     port map (
      Clk => Clk,
      I073_out => I073_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \ex_instr_reg[24]\ => \^ex_instr_reg[11]\(7),
      \in\(0) => \in\(18),
      of_instr_ii_18 => of_instr_ii_18,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[24].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_112
     port map (
      I073_out => I073_out,
      I171_out => I171_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_18 => of_instr_ii_18
    );
\Instruction_Prefetch_Mux[25].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_113
     port map (
      Clk => Clk,
      \EX_Sext_Op_reg[0]\(0) => \EX_Sext_Op_reg[0]\(1),
      \EX_Shift_Op_reg[0]\ => \^ex_instr_reg[11]\(6),
      I069_out => I069_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \Using_FPGA.Native_1\ => \^ex_instr_reg[11]\(5),
      \Using_FPGA.Native_2\ => \^of_instr\(0),
      \Using_FPGA.Native_3\ => \^of_instr\(5),
      \Using_FPGA.Native_4\ => \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_10\,
      \in\(0) => \in\(17),
      of_instr_ii_17 => of_instr_ii_17,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[25].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_114
     port map (
      I069_out => I069_out,
      I167_out => I167_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_17 => of_instr_ii_17
    );
\Instruction_Prefetch_Mux[26].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_115
     port map (
      Clk => Clk,
      EX_SWAP_Instr_reg => EX_SWAP_Instr_reg,
      \EX_Sext_Op_reg[1]\(0) => \EX_Sext_Op_reg[0]\(0),
      \EX_Shift_Op_reg[1]\ => \^ex_instr_reg[11]\(5),
      I065_out => I065_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^of_instr\(4),
      \Using_FPGA.Native_1\ => \^of_instr\(0),
      \Using_FPGA.Native_2\ => \^of_instr\(1),
      \Using_FPGA.Native_3\ => \^of_instr\(3),
      \Using_FPGA.Native_4\ => \^ex_instr_reg[11]\(6),
      \Using_FPGA.Native_5\(0) => \^ex_instr_reg[11]\(8),
      \Using_FPGA.Native_6\ => \^of_instr\(2),
      \Using_FPGA.Native_7\ => \^of_instr\(5),
      \Using_FPGA.Native_8\ => \^using_fpga.native\,
      \Using_FPGA.Native_9\ => \^ex_instr_reg[11]\(0),
      \in\(0) => \in\(16),
      of_instr_ii_16 => of_instr_ii_16,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[26].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_116
     port map (
      I065_out => I065_out,
      I163_out => I163_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_16 => of_instr_ii_16
    );
\Instruction_Prefetch_Mux[27].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_117
     port map (
      Clk => Clk,
      \EX_Op2_reg[27]\ => \Instruction_Prefetch_Mux[27].Gen_Instr_DFF_n_1\,
      GPR_Op2(0) => GPR_Op2(27),
      I061_out => I061_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \ex_instr_reg[27]\ => \^ex_instr_reg[11]\(4),
      \in\(0) => \in\(15),
      \interrupt_address_d1_reg[27]\(0) => \interrupt_address_d1_reg[0]\(1),
      of_Take_Interrupt_hold_reg => of_Take_Interrupt_hold_reg,
      of_instr_ii_15 => of_instr_ii_15,
      of_op2_sel(0) => of_op2_sel(0),
      of_op2_sel_imm => of_op2_sel_imm,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[27].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_118
     port map (
      I061_out => I061_out,
      I159_out => I159_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_15 => of_instr_ii_15
    );
\Instruction_Prefetch_Mux[28].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_119
     port map (
      Clk => Clk,
      \EX_Op2_reg[28]\ => \Instruction_Prefetch_Mux[28].Gen_Instr_DFF_n_1\,
      GPR_Op2(0) => GPR_Op2(28),
      I057_out => I057_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Performace_Debug_Control.ex_brki_hit_reg\ => \Instruction_Prefetch_Mux[28].Gen_Instr_DFF_n_2\,
      \Using_FPGA.Native_0\(6 downto 3) => \^ex_instr_reg[11]\(15 downto 12),
      \Using_FPGA.Native_0\(2 downto 0) => \^ex_instr_reg[11]\(2 downto 0),
      \Using_FPGA.Native_1\ => \^using_fpga.native\,
      \Using_FPGA.Native_2\ => \^ex_is_multi_instr2_reg\,
      \ex_instr_reg[28]\ => \^ex_instr_reg[11]\(3),
      \in\(0) => \in\(14),
      \interrupt_address_d1_reg[28]\(0) => \interrupt_address_d1_reg[0]\(0),
      of_Sel_SPR_MSR3_out => of_Sel_SPR_MSR3_out,
      of_Take_Interrupt_hold_reg => of_Take_Interrupt_hold_reg,
      of_instr_ii_14 => of_instr_ii_14,
      of_op2_sel(0) => of_op2_sel(0),
      of_op2_sel_imm => of_op2_sel_imm,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[28].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_120
     port map (
      I057_out => I057_out,
      I155_out => I155_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_14 => of_instr_ii_14
    );
\Instruction_Prefetch_Mux[29].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_121
     port map (
      Clk => Clk,
      I053_out => I053_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\(3) => \^ex_instr_reg[11]\(14),
      \Using_FPGA.Native_0\(2) => \^ex_instr_reg[11]\(3),
      \Using_FPGA.Native_0\(1 downto 0) => \^ex_instr_reg[11]\(1 downto 0),
      \Using_FPGA.Native_1\ => \Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_2\,
      \Using_FPGA.Native_2\ => \^using_fpga.native\,
      \ex_instr_reg[29]\(0) => \^ex_instr_reg[11]\(2),
      ex_move_to_MSR_instr29_out => ex_move_to_MSR_instr29_out,
      \in\(0) => \in\(13),
      of_instr_ii_13 => of_instr_ii_13,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[29].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_122
     port map (
      I053_out => I053_out,
      I151_out => I151_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_13 => of_instr_ii_13
    );
\Instruction_Prefetch_Mux[2].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_123
     port map (
      Clk => Clk,
      \EX_ALU_Op_reg[1]\ => \Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_3\,
      I0161_out => I0161_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \Using_FPGA.Native_1\ => \^of_instr\(5),
      \Using_FPGA.Native_2\ => \^of_instr\(2),
      \Using_FPGA.Native_3\ => \^of_instr\(4),
      \Using_FPGA.Native_4\ => \^of_instr\(0),
      \Using_FPGA.Native_5\ => \^of_instr\(1),
      \Using_FPGA.Native_6\ => \^ex_instr_reg[11]\(10),
      \ex_instr_reg[2]\ => \^of_instr\(3),
      ex_move_to_MSR_instr_reg => \Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_2\,
      \in\(0) => \in\(30),
      of_instr_ii_40 => of_instr_ii_40,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[2].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_124
     port map (
      I0161_out => I0161_out,
      I1159_out => I1159_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_40 => of_instr_ii_40
    );
\Instruction_Prefetch_Mux[30].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_125
     port map (
      Clk => Clk,
      EX_SWAP_BYTE_Instr_reg => EX_SWAP_BYTE_Instr_reg,
      I049_out => I049_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Performace_Debug_Control.ex_brki_hit_reg\ => \Instruction_Prefetch_Mux[30].Gen_Instr_DFF_n_1\,
      \Using_FPGA.Native_0\(1) => \^ex_instr_reg[11]\(2),
      \Using_FPGA.Native_0\(0) => \^ex_instr_reg[11]\(0),
      \Using_FPGA.Native_1\(0) => \^ex_instr_reg[11]\(4),
      \Using_FPGA.Native_2\ => \^using_fpga.native\,
      \ex_instr_reg[30]\(0) => \^ex_instr_reg[11]\(1),
      ex_set_bip0 => ex_set_bip0,
      \in\(0) => \in\(12),
      of_instr_ii_12 => of_instr_ii_12,
      \out\(0) => \out\(0),
      p_1_in16_in => p_1_in16_in
    );
\Instruction_Prefetch_Mux[30].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_126
     port map (
      I049_out => I049_out,
      I147_out => I147_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_12 => of_instr_ii_12
    );
\Instruction_Prefetch_Mux[31].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_127
     port map (
      Clk => Clk,
      I045_out => I045_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \ex_instr_reg[31]\(0) => \^ex_instr_reg[11]\(0),
      \in\(0) => \in\(11),
      of_instr_ii_11 => of_instr_ii_11,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[31].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_128
     port map (
      I045_out => I045_out,
      I143_out => I143_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_11 => of_instr_ii_11
    );
\Instruction_Prefetch_Mux[32].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_129
     port map (
      Clk => Clk,
      \EX_Op3_reg[15]\ => \Instruction_Prefetch_Mux[32].Gen_Instr_DFF_n_1\,
      \EX_Op3_reg[15]_0\ => \Instruction_Prefetch_Mux[32].Gen_Instr_DFF_n_2\,
      \EX_Op3_reg[15]_1\ => \Instruction_Prefetch_Mux[32].Gen_Instr_DFF_n_3\,
      \Using_FPGA.Native_0\ => \^d\(4),
      \Using_FPGA.Native_1\ => \^d\(3),
      \ex_gpr_write_addr_reg[0]\(1 downto 0) => \ex_gpr_write_addr_reg[0]\(4 downto 3),
      \ex_gpr_write_addr_reg[4]\ => \Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_4\,
      ex_is_multi_or_load_instr => ex_is_multi_or_load_instr,
      mem_gpr_write => mem_gpr_write,
      mem_valid_instr => mem_valid_instr,
      of_instr_ii_10 => of_instr_ii_10,
      of_pipe_ctrl(0) => of_pipe_ctrl(0),
      of_read_ex_write_op3_conflict_part1 => of_read_ex_write_op3_conflict_part1,
      of_read_ex_write_op3_conflict_part2 => of_read_ex_write_op3_conflict_part2,
      \out\(0) => \out\(0),
      use_Reg_Neg_S_reg => use_Reg_Neg_S_reg,
      wb_exception_i_reg => wb_exception_i_reg,
      wb_gpr_write_i => wb_gpr_write_i,
      wb_reset => wb_reset,
      wb_valid_reg => wb_valid_reg
    );
\Instruction_Prefetch_Mux[32].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_130
     port map (
      I041_out => I041_out,
      I139_out => I139_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_10 => of_instr_ii_10
    );
\Instruction_Prefetch_Mux[33].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_131
     port map (
      Clk => Clk,
      \EX_Branch_CMP_Op1_reg[0]\(15 downto 0) => \EX_Branch_CMP_Op1_reg[0]\(15 downto 0),
      \EX_Branch_CMP_Op1_reg[15]\ => \EX_Branch_CMP_Op1_reg[15]\,
      \EX_Branch_CMP_Op1_reg[15]_0\ => \EX_Branch_CMP_Op1_reg[15]_0\,
      EX_Fwd(15) => EX_Fwd(0),
      EX_Fwd(14) => EX_Fwd(1),
      EX_Fwd(13) => EX_Fwd(2),
      EX_Fwd(12) => EX_Fwd(3),
      EX_Fwd(11) => EX_Fwd(4),
      EX_Fwd(10) => EX_Fwd(5),
      EX_Fwd(9) => EX_Fwd(6),
      EX_Fwd(8) => EX_Fwd(7),
      EX_Fwd(7) => EX_Fwd(8),
      EX_Fwd(6) => EX_Fwd(9),
      EX_Fwd(5) => EX_Fwd(10),
      EX_Fwd(4) => EX_Fwd(11),
      EX_Fwd(3) => EX_Fwd(12),
      EX_Fwd(2) => EX_Fwd(13),
      EX_Fwd(1) => EX_Fwd(14),
      EX_Fwd(0) => EX_Fwd(15),
      GPR_Op1(15 downto 0) => GPR_Op1(15 downto 0),
      I037_out => I037_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      Q(1 downto 0) => Q(4 downto 3),
      \Using_FPGA.Native_0\ => \^of_predecode\(9),
      \Using_FPGA.Native_1\(14 downto 0) => \Using_FPGA.Native_10\(28 downto 14),
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_11\(2),
      \Using_FPGA.Native_3\ => \^of_predecode\(8),
      \Using_FPGA.Native_4\ => \^using_fpga.native\,
      WB_Doublet_Access_reg => WB_Doublet_Access_reg,
      WB_Doublet_Access_reg_0 => WB_Doublet_Access_reg_0,
      WB_Doublet_Access_reg_1 => WB_Doublet_Access_reg_1,
      WB_Doublet_Access_reg_10 => WB_Doublet_Access_reg_10,
      WB_Doublet_Access_reg_11 => WB_Doublet_Access_reg_11,
      WB_Doublet_Access_reg_12 => WB_Doublet_Access_reg_12,
      WB_Doublet_Access_reg_13 => WB_Doublet_Access_reg_13,
      WB_Doublet_Access_reg_14 => WB_Doublet_Access_reg_14,
      WB_Doublet_Access_reg_2 => WB_Doublet_Access_reg_2,
      WB_Doublet_Access_reg_3 => WB_Doublet_Access_reg_3,
      WB_Doublet_Access_reg_4 => WB_Doublet_Access_reg_4,
      WB_Doublet_Access_reg_5 => WB_Doublet_Access_reg_5,
      WB_Doublet_Access_reg_6 => WB_Doublet_Access_reg_6,
      WB_Doublet_Access_reg_7 => WB_Doublet_Access_reg_7,
      WB_Doublet_Access_reg_8 => WB_Doublet_Access_reg_8,
      WB_Doublet_Access_reg_9 => WB_Doublet_Access_reg_9,
      \ex_gpr_write_addr_reg[0]\(1 downto 0) => \ex_gpr_write_addr_reg[0]\(4 downto 3),
      \ex_gpr_write_addr_reg[4]\ => \Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_4\,
      \in\(0) => \in\(9),
      \mem_gpr_write_addr_reg[4]\ => \Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_2\,
      of_instr_ii_9 => of_instr_ii_9,
      \out\(0) => \out\(0),
      p_109_in => p_109_in,
      p_112_in => p_112_in,
      p_19_in => p_19_in,
      \wb_gpr_write_addr_reg[0]\(1 downto 0) => \wb_gpr_write_addr_reg[0]\(4 downto 3),
      \wb_gpr_write_addr_reg[4]\ => \Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_3\
    );
\Instruction_Prefetch_Mux[33].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_132
     port map (
      I037_out => I037_out,
      I135_out => I135_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_9 => of_instr_ii_9
    );
\Instruction_Prefetch_Mux[34].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_133
     port map (
      Clk => Clk,
      I033_out => I033_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \in\(0) => \in\(8),
      of_instr_ii_8 => of_instr_ii_8,
      of_predecode(0) => \^of_predecode\(8),
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[34].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_134
     port map (
      I033_out => I033_out,
      I131_out => I131_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_8 => of_instr_ii_8
    );
\Instruction_Prefetch_Mux[35].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_135
     port map (
      Clk => Clk,
      I029_out => I029_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^of_predecode\(7),
      \Using_FPGA.Native_1\ => \^using_fpga.native\,
      \in\(0) => \in\(7),
      of_instr_ii_7 => of_instr_ii_7,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[35].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_136
     port map (
      I029_out => I029_out,
      I127_out => I127_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_7 => of_instr_ii_7
    );
\Instruction_Prefetch_Mux[36].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_137
     port map (
      Clk => Clk,
      I025_out => I025_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^of_predecode\(6),
      \Using_FPGA.Native_1\ => \^using_fpga.native\,
      \in\(0) => \in\(6),
      of_instr_ii_6 => of_instr_ii_6,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[36].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_138
     port map (
      I025_out => I025_out,
      I123_out => I123_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_6 => of_instr_ii_6
    );
\Instruction_Prefetch_Mux[37].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_139
     port map (
      Clk => Clk,
      \EX_Branch_CMP_Op1_reg[15]\ => \Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_2\,
      \EX_Branch_CMP_Op1_reg[15]_0\ => \Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_3\,
      \EX_Branch_CMP_Op1_reg[15]_1\ => \Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_4\,
      I021_out => I021_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      Q(2 downto 0) => Q(2 downto 0),
      \Using_FPGA.Native_0\ => \^of_predecode\(5),
      \Using_FPGA.Native_1\ => \^using_fpga.native\,
      \Using_FPGA.Native_2\ => \^of_predecode\(7),
      \Using_FPGA.Native_3\ => \^of_predecode\(6),
      \ex_gpr_write_addr_reg[2]\(2 downto 0) => \ex_gpr_write_addr_reg[0]\(2 downto 0),
      \in\(0) => \in\(5),
      of_instr_ii_5 => of_instr_ii_5,
      \out\(0) => \out\(0),
      \wb_gpr_write_addr_reg[2]\(2 downto 0) => \wb_gpr_write_addr_reg[0]\(2 downto 0)
    );
\Instruction_Prefetch_Mux[37].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_140
     port map (
      I021_out => I021_out,
      I119_out => I119_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_5 => of_instr_ii_5
    );
\Instruction_Prefetch_Mux[38].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_141
     port map (
      Clk => Clk,
      EX_Fwd(0 to 31) => EX_Fwd(0 to 31),
      \EX_Op2_reg[0]\(31 downto 0) => \EX_Op2_reg[0]\(31 downto 0),
      GPR_Op2(28) => GPR_Op2(1),
      GPR_Op2(27) => GPR_Op2(2),
      GPR_Op2(26) => GPR_Op2(3),
      GPR_Op2(25) => GPR_Op2(4),
      GPR_Op2(24) => GPR_Op2(5),
      GPR_Op2(23) => GPR_Op2(6),
      GPR_Op2(22) => GPR_Op2(7),
      GPR_Op2(21) => GPR_Op2(8),
      GPR_Op2(20) => GPR_Op2(9),
      GPR_Op2(19) => GPR_Op2(10),
      GPR_Op2(18) => GPR_Op2(11),
      GPR_Op2(17) => GPR_Op2(12),
      GPR_Op2(16) => GPR_Op2(13),
      GPR_Op2(15) => GPR_Op2(14),
      GPR_Op2(14) => GPR_Op2(15),
      GPR_Op2(13) => GPR_Op2(16),
      GPR_Op2(12) => GPR_Op2(17),
      GPR_Op2(11) => GPR_Op2(18),
      GPR_Op2(10) => GPR_Op2(19),
      GPR_Op2(9) => GPR_Op2(20),
      GPR_Op2(8) => GPR_Op2(21),
      GPR_Op2(7) => GPR_Op2(22),
      GPR_Op2(6) => GPR_Op2(23),
      GPR_Op2(5) => GPR_Op2(24),
      GPR_Op2(4) => GPR_Op2(25),
      GPR_Op2(3) => GPR_Op2(26),
      GPR_Op2(2) => GPR_Op2(29),
      GPR_Op2(1) => GPR_Op2(30),
      GPR_Op2(0) => GPR_Op2(31),
      I017_out => I017_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      Q(1 downto 0) => Q(4 downto 3),
      \Using_FPGA.Native_0\ => \^of_predecode\(4),
      \Using_FPGA.Native_1\(6 downto 3) => \^ex_instr_reg[11]\(15 downto 12),
      \Using_FPGA.Native_1\(2 downto 0) => \^ex_instr_reg[11]\(2 downto 0),
      \Using_FPGA.Native_10\ => \^of_predecode\(3),
      \Using_FPGA.Native_11\ => \^using_fpga.native\,
      \Using_FPGA.Native_2\(29 downto 0) => \Using_FPGA.Native_10\(29 downto 0),
      \Using_FPGA.Native_3\(1 downto 0) => \Using_FPGA.Native_11\(1 downto 0),
      \Using_FPGA.Native_4\ => \Instruction_Prefetch_Mux[28].Gen_Instr_DFF_n_1\,
      \Using_FPGA.Native_5\ => \Instruction_Prefetch_Mux[27].Gen_Instr_DFF_n_1\,
      \Using_FPGA.Native_6\ => \^ex_instr_reg[11]\(5),
      \Using_FPGA.Native_7\ => \^ex_instr_reg[11]\(6),
      \Using_FPGA.Native_8\(4 downto 0) => \^ex_instr_reg[11]\(11 downto 7),
      \Using_FPGA.Native_9\(0) => \Using_FPGA.Native_12\(0),
      WB_Byte_Access_reg(15 downto 0) => WB_Byte_Access_reg(15 downto 0),
      WB_Doublet_Access_reg => WB_Doublet_Access_reg,
      WB_Doublet_Access_reg_0 => WB_Doublet_Access_reg_0,
      WB_Doublet_Access_reg_1 => WB_Doublet_Access_reg_1,
      WB_Doublet_Access_reg_10 => WB_Doublet_Access_reg_10,
      WB_Doublet_Access_reg_11 => WB_Doublet_Access_reg_11,
      WB_Doublet_Access_reg_12 => WB_Doublet_Access_reg_12,
      WB_Doublet_Access_reg_13 => WB_Doublet_Access_reg_13,
      WB_Doublet_Access_reg_14 => WB_Doublet_Access_reg_14,
      WB_Doublet_Access_reg_2 => WB_Doublet_Access_reg_2,
      WB_Doublet_Access_reg_3 => WB_Doublet_Access_reg_3,
      WB_Doublet_Access_reg_4 => WB_Doublet_Access_reg_4,
      WB_Doublet_Access_reg_5 => WB_Doublet_Access_reg_5,
      WB_Doublet_Access_reg_6 => WB_Doublet_Access_reg_6,
      WB_Doublet_Access_reg_7 => WB_Doublet_Access_reg_7,
      WB_Doublet_Access_reg_8 => WB_Doublet_Access_reg_8,
      WB_Doublet_Access_reg_9 => WB_Doublet_Access_reg_9,
      \ex_gpr_write_addr_reg[0]\(1 downto 0) => \ex_gpr_write_addr_reg[0]\(4 downto 3),
      \ex_gpr_write_addr_reg[4]\ => \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_4\,
      \imm_reg_reg[0]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_1\,
      \imm_reg_reg[10]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_7\,
      \imm_reg_reg[11]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_6\,
      \imm_reg_reg[12]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_5\,
      \imm_reg_reg[13]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_4\,
      \imm_reg_reg[14]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_3\,
      \imm_reg_reg[15]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_2\,
      \imm_reg_reg[1]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_16\,
      \imm_reg_reg[2]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_15\,
      \imm_reg_reg[3]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_14\,
      \imm_reg_reg[4]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_13\,
      \imm_reg_reg[5]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_12\,
      \imm_reg_reg[6]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_11\,
      \imm_reg_reg[7]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_10\,
      \imm_reg_reg[8]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_9\,
      \imm_reg_reg[9]\ => \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_8\,
      \in\(0) => \in\(4),
      \interrupt_address_d1_reg[0]\(0) => \interrupt_address_d1_reg[0]\(2),
      \interrupt_address_d1_reg[10]\ => \interrupt_address_d1_reg[10]\,
      \interrupt_address_d1_reg[11]\ => \interrupt_address_d1_reg[11]\,
      \interrupt_address_d1_reg[12]\ => \interrupt_address_d1_reg[12]\,
      \interrupt_address_d1_reg[13]\ => \interrupt_address_d1_reg[13]\,
      \interrupt_address_d1_reg[14]\ => \interrupt_address_d1_reg[14]\,
      \interrupt_address_d1_reg[15]\ => \interrupt_address_d1_reg[15]\,
      \interrupt_address_d1_reg[16]\ => \interrupt_address_d1_reg[16]\,
      \interrupt_address_d1_reg[17]\ => \interrupt_address_d1_reg[17]\,
      \interrupt_address_d1_reg[18]\ => \interrupt_address_d1_reg[18]\,
      \interrupt_address_d1_reg[19]\ => \interrupt_address_d1_reg[19]\,
      \interrupt_address_d1_reg[1]\ => \interrupt_address_d1_reg[1]\,
      \interrupt_address_d1_reg[20]\ => \interrupt_address_d1_reg[20]\,
      \interrupt_address_d1_reg[21]\ => \interrupt_address_d1_reg[21]\,
      \interrupt_address_d1_reg[22]\ => \interrupt_address_d1_reg[22]\,
      \interrupt_address_d1_reg[23]\ => \interrupt_address_d1_reg[23]\,
      \interrupt_address_d1_reg[24]\ => \interrupt_address_d1_reg[24]\,
      \interrupt_address_d1_reg[25]\ => \interrupt_address_d1_reg[25]\,
      \interrupt_address_d1_reg[26]\ => \interrupt_address_d1_reg[26]\,
      \interrupt_address_d1_reg[29]\ => \interrupt_address_d1_reg[29]\,
      \interrupt_address_d1_reg[2]\ => \interrupt_address_d1_reg[2]\,
      \interrupt_address_d1_reg[30]\ => \interrupt_address_d1_reg[30]\,
      \interrupt_address_d1_reg[31]\ => \interrupt_address_d1_reg[31]\,
      \interrupt_address_d1_reg[3]\ => \interrupt_address_d1_reg[3]\,
      \interrupt_address_d1_reg[4]\ => \interrupt_address_d1_reg[4]\,
      \interrupt_address_d1_reg[5]\ => \interrupt_address_d1_reg[5]\,
      \interrupt_address_d1_reg[6]\ => \interrupt_address_d1_reg[6]\,
      \interrupt_address_d1_reg[7]\ => \interrupt_address_d1_reg[7]\,
      \interrupt_address_d1_reg[8]\ => \interrupt_address_d1_reg[8]\,
      \interrupt_address_d1_reg[9]\ => \interrupt_address_d1_reg[9]\,
      \mem_gpr_write_addr_reg[4]\ => \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_2\,
      mem_sel_msr => mem_sel_msr,
      of_Take_Interrupt_hold_reg => of_Take_Interrupt_hold_reg,
      of_instr_ii_4 => of_instr_ii_4,
      of_op2_sel(0) => of_op2_sel(0),
      of_op2_sel_imm => of_op2_sel_imm,
      of_use_op2_s => of_use_op2_s,
      \out\(0) => \out\(0),
      p_109_in => p_109_in,
      p_112_in => p_112_in,
      p_19_in => p_19_in,
      wb_MSR_cmb(0) => wb_MSR_cmb(0),
      \wb_gpr_write_addr_reg[0]\(1 downto 0) => \wb_gpr_write_addr_reg[0]\(4 downto 3),
      \wb_gpr_write_addr_reg[4]\ => \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_3\
    );
\Instruction_Prefetch_Mux[38].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_142
     port map (
      I017_out => I017_out,
      I115_out => I115_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_4 => of_instr_ii_4
    );
\Instruction_Prefetch_Mux[39].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_143
     port map (
      Clk => Clk,
      I013_out => I013_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \in\(0) => \in\(3),
      of_instr_ii_3 => of_instr_ii_3,
      of_predecode(0) => \^of_predecode\(3),
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[39].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_144
     port map (
      I013_out => I013_out,
      I111_out => I111_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_3 => of_instr_ii_3
    );
\Instruction_Prefetch_Mux[3].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_145
     port map (
      Clk => Clk,
      EX_ALU_Op1 => EX_ALU_Op1,
      I0157_out => I0157_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_1\(0) => \^ex_instr_reg[11]\(10),
      \Using_FPGA.Native_2\ => \^using_fpga.native\,
      \Using_FPGA.Native_3\ => \^of_instr\(5),
      \Using_FPGA.Native_4\ => \^of_instr\(3),
      \Using_FPGA.Native_5\ => \^of_instr\(0),
      \Using_FPGA.Native_6\ => \^of_instr\(1),
      \Using_FPGA.Native_7\ => \^of_instr\(4),
      \ex_instr_reg[3]\ => \^of_instr\(2),
      ex_load_alu_carry_reg => ex_load_alu_carry_reg,
      ex_sel_alu_i0 => ex_sel_alu_i0,
      \in\(0) => \in\(29),
      of_instr_ii_39 => of_instr_ii_39,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[3].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_146
     port map (
      I0157_out => I0157_out,
      I1155_out => I1155_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_39 => of_instr_ii_39
    );
\Instruction_Prefetch_Mux[40].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_147
     port map (
      Clk => Clk,
      I09_out => I09_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^of_predecode\(2),
      \Using_FPGA.Native_1\ => \^using_fpga.native\,
      \in\(0) => \in\(2),
      of_instr_ii_2 => of_instr_ii_2,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[40].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_148
     port map (
      I09_out => I09_out,
      I17_out => I17_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_2 => of_instr_ii_2
    );
\Instruction_Prefetch_Mux[41].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_149
     port map (
      Clk => Clk,
      I05_out => I05_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^of_predecode\(1),
      \Using_FPGA.Native_1\ => \^using_fpga.native\,
      \in\(0) => \in\(1),
      of_instr_ii_1 => of_instr_ii_1,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[41].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_150
     port map (
      I05_out => I05_out,
      I13_out => I13_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_1 => of_instr_ii_1
    );
\Instruction_Prefetch_Mux[42].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_151
     port map (
      Clk => Clk,
      \EX_Op2_reg[27]\ => \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_2\,
      \EX_Op2_reg[27]_0\ => \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_3\,
      \EX_Op2_reg[27]_1\ => \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_4\,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      Q(2 downto 0) => Q(2 downto 0),
      \Using_FPGA.Native_0\ => \^of_predecode\(0),
      \Using_FPGA.Native_1\ => \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_1\,
      \Using_FPGA.Native_2\ => \^using_fpga.native\,
      \Using_FPGA.Native_3\ => \^of_predecode\(2),
      \Using_FPGA.Native_4\ => \^of_predecode\(1),
      \ex_gpr_write_addr_reg[2]\(2 downto 0) => \ex_gpr_write_addr_reg[0]\(2 downto 0),
      \in\(0) => \in\(0),
      of_instr_ii_0 => of_instr_ii_0,
      \out\(0) => \out\(0),
      \wb_gpr_write_addr_reg[2]\(2 downto 0) => \wb_gpr_write_addr_reg[0]\(2 downto 0)
    );
\Instruction_Prefetch_Mux[42].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_152
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      \Using_FPGA.Native_1\ => \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_1\,
      \Using_FPGA.Native_2\ => \Gen_Mux_Select_LUT6[4].Gen_Sel_DFF_n_1\,
      of_instr_ii_0 => of_instr_ii_0
    );
\Instruction_Prefetch_Mux[4].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_153
     port map (
      Clk => Clk,
      \EX_Op1_reg[10]\ => \EX_Op1_reg[10]\,
      \EX_Op1_reg[11]\ => \EX_Op1_reg[11]\,
      \EX_Op1_reg[12]\ => \EX_Op1_reg[12]\,
      \EX_Op1_reg[13]\ => \EX_Op1_reg[13]\,
      \EX_Op1_reg[14]\ => \EX_Op1_reg[14]\,
      \EX_Op1_reg[15]\ => \EX_Op1_reg[15]\,
      \EX_Op1_reg[16]\ => \EX_Op1_reg[16]\,
      \EX_Op1_reg[17]\ => \EX_Op1_reg[17]\,
      \EX_Op1_reg[18]\ => \EX_Op1_reg[18]\,
      \EX_Op1_reg[19]\ => \EX_Op1_reg[19]\,
      \EX_Op1_reg[1]\ => \EX_Op1_reg[1]\,
      \EX_Op1_reg[20]\ => \EX_Op1_reg[20]\,
      \EX_Op1_reg[21]\ => \EX_Op1_reg[21]\,
      \EX_Op1_reg[22]\ => \EX_Op1_reg[22]\,
      \EX_Op1_reg[23]\ => \EX_Op1_reg[23]\,
      \EX_Op1_reg[24]\ => \EX_Op1_reg[24]\,
      \EX_Op1_reg[25]\ => \EX_Op1_reg[25]\,
      \EX_Op1_reg[26]\ => \EX_Op1_reg[26]\,
      \EX_Op1_reg[27]\ => \EX_Op1_reg[27]\,
      \EX_Op1_reg[28]\ => \EX_Op1_reg[28]\,
      \EX_Op1_reg[29]\ => \EX_Op1_reg[29]\,
      \EX_Op1_reg[2]\ => \EX_Op1_reg[2]\,
      \EX_Op1_reg[30]\ => \EX_Op1_reg[30]\,
      \EX_Op1_reg[31]\ => \EX_Op1_reg[31]\,
      \EX_Op1_reg[3]\ => \EX_Op1_reg[3]\,
      \EX_Op1_reg[4]\ => \EX_Op1_reg[4]\,
      \EX_Op1_reg[5]\ => \EX_Op1_reg[5]\,
      \EX_Op1_reg[6]\ => \EX_Op1_reg[6]\,
      \EX_Op1_reg[7]\ => \EX_Op1_reg[7]\,
      \EX_Op1_reg[8]\ => \EX_Op1_reg[8]\,
      \EX_Op1_reg[9]\ => \EX_Op1_reg[9]\,
      I0153_out => I0153_out,
      I1 => I1,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_1\ => \^of_instr\(3),
      \Using_FPGA.Native_2\ => \^of_instr\(4),
      \Using_FPGA.Native_3\ => \^of_instr\(0),
      \Using_FPGA.Native_4\ => \^of_instr\(5),
      \Using_FPGA.Native_5\ => \^of_instr\(2),
      \Using_FPGA.Native_6\ => \^using_fpga.native\,
      \Using_FPGA.Native_7\ => \Instruction_Prefetch_Mux[0].Gen_Instr_DFF_n_2\,
      \Using_FPGA.Native_8\(1) => \^ex_instr_reg[11]\(14),
      \Using_FPGA.Native_8\(0) => \^ex_instr_reg[11]\(0),
      \Using_FPGA.Native_9\(31 downto 0) => \Using_FPGA.Native_13\(31 downto 0),
      ex_MSR(2 downto 0) => ex_MSR(2 downto 0),
      \ex_instr_reg[4]\ => \^of_instr\(1),
      ex_is_multi_instr2_reg => \^ex_is_multi_instr2_reg\,
      ex_is_multi_or_load_instr => ex_is_multi_or_load_instr,
      ex_is_multi_or_load_instr0 => ex_is_multi_or_load_instr0,
      force_Val2_N_reg => force_Val2_N_reg,
      \in\(0) => \in\(28),
      mem_is_multi_or_load_instr => mem_is_multi_or_load_instr,
      of_instr_ii_38 => of_instr_ii_38,
      of_op2_sel_imm => of_op2_sel_imm,
      of_pipe_ctrl(1 downto 0) => of_pipe_ctrl(2 downto 1),
      of_read_ex_write_op2_conflict_part1 => of_read_ex_write_op2_conflict_part1,
      of_read_ex_write_op2_conflict_part2 => of_read_ex_write_op2_conflict_part2,
      of_read_mem_write_op2_conflict_part1 => of_read_mem_write_op2_conflict_part1,
      of_read_mem_write_op2_conflict_part2 => of_read_mem_write_op2_conflict_part2,
      of_use_op2_s => of_use_op2_s,
      \out\(0) => \out\(0),
      p_1_in16_in => p_1_in16_in
    );
\Instruction_Prefetch_Mux[4].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_154
     port map (
      I0153_out => I0153_out,
      I1151_out => I1151_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_38 => of_instr_ii_38
    );
\Instruction_Prefetch_Mux[5].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_155
     port map (
      Clk => Clk,
      D122_out => D122_out,
      EX_ALU_Op1 => EX_ALU_Op1,
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_Is_Div_Instr => EX_Is_Div_Instr,
      I0149_out => I0149_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_1\ => \^of_instr\(2),
      \Using_FPGA.Native_10\ => \^using_fpga.native\,
      \Using_FPGA.Native_11\ => \Using_FPGA.Native_9\,
      \Using_FPGA.Native_2\ => \Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_3\,
      \Using_FPGA.Native_3\ => \^of_instr\(4),
      \Using_FPGA.Native_4\ => \^of_instr\(5),
      \Using_FPGA.Native_5\ => \^of_instr\(1),
      \Using_FPGA.Native_6\ => \^of_instr\(3),
      \Using_FPGA.Native_7\(0) => \^ex_instr_reg[11]\(10),
      \Using_FPGA.Native_8\(6 downto 5) => \^ex_instr_reg[11]\(19 downto 18),
      \Using_FPGA.Native_8\(4) => \^ex_instr_reg[11]\(14),
      \Using_FPGA.Native_8\(3 downto 2) => \^ex_instr_reg[11]\(6 downto 5),
      \Using_FPGA.Native_8\(1 downto 0) => \^ex_instr_reg[11]\(3 downto 2),
      \Using_FPGA.Native_9\ => \Instruction_Prefetch_Mux[0].Gen_Instr_DFF_n_2\,
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg_0,
      ex_enable_alu_i_reg => ex_enable_alu_i_reg,
      ex_gpr_write27_out => ex_gpr_write27_out,
      ex_gpr_write_dbg => ex_gpr_write_dbg,
      ex_gpr_write_dbg_reg => ex_gpr_write_dbg_reg,
      ex_gpr_write_reg => ex_gpr_write_reg,
      ex_gpr_write_reg_0 => ex_gpr_write_reg_0,
      \ex_instr_reg[5]\ => \^of_instr\(0),
      ex_is_div_instr_I_reg => ex_is_div_instr_I_reg,
      ex_load_shift_carry_reg => ex_load_shift_carry_reg,
      ex_set_bip => ex_set_bip,
      ex_set_bip0 => ex_set_bip0,
      \in\(0) => \in\(27),
      of_Take_Interrupt_hold_reg => of_Take_Interrupt_hold_reg,
      of_instr_ii_37 => of_instr_ii_37,
      \out\(0) => \out\(0),
      p_9_in => p_9_in,
      wb_exception_i_reg => wb_exception_i_reg
    );
\Instruction_Prefetch_Mux[5].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_156
     port map (
      I0149_out => I0149_out,
      I1147_out => I1147_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_37 => of_instr_ii_37
    );
\Instruction_Prefetch_Mux[6].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_157
     port map (
      Clk => Clk,
      E(0) => \^e\(0),
      EX_Fwd(15) => EX_Fwd(0),
      EX_Fwd(14) => EX_Fwd(1),
      EX_Fwd(13) => EX_Fwd(2),
      EX_Fwd(12) => EX_Fwd(3),
      EX_Fwd(11) => EX_Fwd(4),
      EX_Fwd(10) => EX_Fwd(5),
      EX_Fwd(9) => EX_Fwd(6),
      EX_Fwd(8) => EX_Fwd(7),
      EX_Fwd(7) => EX_Fwd(8),
      EX_Fwd(6) => EX_Fwd(9),
      EX_Fwd(5) => EX_Fwd(10),
      EX_Fwd(4) => EX_Fwd(11),
      EX_Fwd(3) => EX_Fwd(12),
      EX_Fwd(2) => EX_Fwd(13),
      EX_Fwd(1) => EX_Fwd(14),
      EX_Fwd(0) => EX_Fwd(15),
      \EX_Op3_reg[0]\(15 downto 0) => \EX_Op3_reg[0]\(15 downto 0),
      \EX_Op3_reg[15]\ => \EX_Op3_reg[15]\,
      \EX_Op3_reg[15]_0\ => \EX_Op3_reg[15]_0\,
      GPR_Op3(15 downto 0) => GPR_Op3(15 downto 0),
      I0145_out => I0145_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      Q(1 downto 0) => Q(4 downto 3),
      \Using_FPGA.Native_0\(14 downto 0) => \Using_FPGA.Native_10\(28 downto 14),
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_11\(2),
      \Using_FPGA.Native_10\ => \Instruction_Prefetch_Mux[32].Gen_Instr_DFF_n_2\,
      \Using_FPGA.Native_11\ => \^of_instr\(2),
      \Using_FPGA.Native_12\ => \^of_instr\(5),
      \Using_FPGA.Native_13\ => \^of_instr\(4),
      \Using_FPGA.Native_14\ => \Instruction_Prefetch_Mux[32].Gen_Instr_DFF_n_3\,
      \Using_FPGA.Native_2\ => \^d\(3),
      \Using_FPGA.Native_3\ => \Instruction_Prefetch_Mux[32].Gen_Instr_DFF_n_1\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_9\,
      \Using_FPGA.Native_5\ => \^using_fpga.native\,
      \Using_FPGA.Native_6\ => \^of_instr\(3),
      \Using_FPGA.Native_7\ => \^of_instr\(0),
      \Using_FPGA.Native_8\ => \^of_instr\(1),
      \Using_FPGA.Native_9\(0) => \^ex_instr_reg[11]\(20),
      WB_Doublet_Access_reg => WB_Doublet_Access_reg,
      WB_Doublet_Access_reg_0 => WB_Doublet_Access_reg_0,
      WB_Doublet_Access_reg_1 => WB_Doublet_Access_reg_1,
      WB_Doublet_Access_reg_10 => WB_Doublet_Access_reg_10,
      WB_Doublet_Access_reg_11 => WB_Doublet_Access_reg_11,
      WB_Doublet_Access_reg_12 => WB_Doublet_Access_reg_12,
      WB_Doublet_Access_reg_13 => WB_Doublet_Access_reg_13,
      WB_Doublet_Access_reg_14 => WB_Doublet_Access_reg_14,
      WB_Doublet_Access_reg_2 => WB_Doublet_Access_reg_2,
      WB_Doublet_Access_reg_3 => WB_Doublet_Access_reg_3,
      WB_Doublet_Access_reg_4 => WB_Doublet_Access_reg_4,
      WB_Doublet_Access_reg_5 => WB_Doublet_Access_reg_5,
      WB_Doublet_Access_reg_6 => WB_Doublet_Access_reg_6,
      WB_Doublet_Access_reg_7 => WB_Doublet_Access_reg_7,
      WB_Doublet_Access_reg_8 => WB_Doublet_Access_reg_8,
      WB_Doublet_Access_reg_9 => WB_Doublet_Access_reg_9,
      ex_atomic_Instruction_Pair0 => ex_atomic_Instruction_Pair0,
      ex_branch_with_delayslot_i => ex_branch_with_delayslot_i,
      ex_branch_with_delayslot_i_reg => \Instruction_Prefetch_Mux[6].Gen_Instr_DFF_n_23\,
      ex_branch_with_delayslot_reg => \^ex_branch_with_delayslot_reg\,
      \ex_gpr_write_addr_reg[0]\ => \^d\(4),
      ex_gpr_write_reg => ex_gpr_write_reg_0,
      ex_mbar_is_sleep => ex_mbar_is_sleep,
      ex_mbar_is_sleep_reg => ex_mbar_is_sleep_cmb,
      ex_valid => ex_valid,
      \in\(0) => \in\(26),
      \mem_gpr_write_addr_reg[4]\ => \Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_2\,
      of_Take_Interrupt_hold_reg => of_Take_Interrupt_hold_reg,
      of_instr_ii_36 => of_instr_ii_36,
      \out\(0) => \out\(0),
      \wb_exception_kind_i_reg[27]\ => \wb_exception_kind_i_reg[27]_0\,
      \wb_gpr_write_addr_reg[0]\(1 downto 0) => \wb_gpr_write_addr_reg[0]\(4 downto 3),
      \wb_gpr_write_addr_reg[4]\ => \Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_3\
    );
\Instruction_Prefetch_Mux[6].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_158
     port map (
      I0145_out => I0145_out,
      I1143_out => I1143_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_36 => of_instr_ii_36
    );
\Instruction_Prefetch_Mux[7].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_159
     port map (
      Clk => Clk,
      I0141_out => I0141_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \ex_gpr_write_addr_reg[1]\ => \^d\(3),
      \in\(0) => \in\(25),
      of_instr_ii_35 => of_instr_ii_35,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[7].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_160
     port map (
      I0141_out => I0141_out,
      I1139_out => I1139_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_35 => of_instr_ii_35
    );
\Instruction_Prefetch_Mux[8].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_161
     port map (
      Clk => Clk,
      D(3 downto 2) => \^d\(4 downto 3),
      D(1 downto 0) => \^d\(1 downto 0),
      I0137_out => I0137_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      \Using_FPGA.Native_1\ => \^using_fpga.native\,
      ex_gpr_write27_out => ex_gpr_write27_out,
      \ex_gpr_write_addr_reg[2]\ => \^d\(2),
      \in\(0) => \in\(24),
      of_instr_ii_34 => of_instr_ii_34,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[8].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_162
     port map (
      I0137_out => I0137_out,
      I1135_out => I1135_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_34 => of_instr_ii_34
    );
\Instruction_Prefetch_Mux[9].Gen_Instr_DFF\: entity work.system_microblaze_0_0_MB_FDR_163
     port map (
      Clk => Clk,
      D(0) => \^d\(1),
      I0133_out => I0133_out,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \in\(0) => \in\(23),
      of_instr_ii_33 => of_instr_ii_33,
      \out\(0) => \out\(0)
    );
\Instruction_Prefetch_Mux[9].Instr_Mux_MUXF7\: entity work.system_microblaze_0_0_MB_MUXF7_164
     port map (
      I0133_out => I0133_out,
      I1131_out => I1131_out,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_9\,
      of_instr_ii_33 => of_instr_ii_33
    );
Last_Sel_DFF: entity work.system_microblaze_0_0_MB_FDS
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \out\(0) => \out\(0),
      sel_input_i_0 => sel_input_i_0
    );
Mux_Select_Empty_LUT6: entity work.\system_microblaze_0_0_MB_LUT6__parameterized6\
     port map (
      I4 => I4,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_9\,
      sel_input_i_0 => sel_input_i_0,
      \wb_exception_kind_i_reg[27]\ => \wb_exception_kind_i_reg[27]\
    );
Mux_Select_OF_Valid_LUT6: entity work.\system_microblaze_0_0_MB_LUT6__parameterized8\
     port map (
      I4 => I4,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_9\,
      of_Valid_II => of_Valid_II,
      \wb_exception_kind_i_reg[27]\ => \wb_exception_kind_i_reg[27]\
    );
OF_Valid_DFF: entity work.system_microblaze_0_0_MB_FDR_165
     port map (
      Clk => Clk,
      Dbg_Clean_Stop_reg => Dbg_Clean_Stop_reg,
      E(0) => \^e\(0),
      \Using_FPGA.Native_0\ => \^of_instr\(1),
      \Using_FPGA.Native_1\ => \^of_instr\(4),
      \Using_FPGA.Native_2\ => \Instruction_Prefetch_Mux[0].Gen_Instr_DFF_n_2\,
      \Using_FPGA.Native_3\ => \^of_instr\(3),
      \Using_FPGA.Native_4\ => \^of_instr\(0),
      \Using_FPGA.Native_5\ => \^ex_branch_with_delayslot_reg\,
      ex_branch_with_delayslot => ex_branch_with_delayslot,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      ex_jump_nodelay_reg => ex_jump_nodelay_reg,
      ex_jump_q => ex_jump_q,
      \imm_reg_reg[15]\ => of_valid,
      mem_jump_taken_reg => mem_jump_taken_reg,
      of_Valid_II => of_Valid_II,
      \out\(0) => \out\(0),
      use_Reg_Neg_S_reg => use_Reg_Neg_S_reg_0,
      \wb_exception_kind_i_reg[27]\ => \wb_exception_kind_i_reg[27]_0\
    );
ex_branch_with_delayslot_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Instruction_Prefetch_Mux[6].Gen_Instr_DFF_n_23\,
      Q => ex_branch_with_delayslot_i,
      R => '0'
    );
\ibuffer_reg[3][0]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(0),
      Q => \ibuffer_reg[3][0]_srl4_n_0\
    );
\ibuffer_reg[3][10]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(10),
      Q => \Using_FPGA.Native_8\(0)
    );
\ibuffer_reg[3][11]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(11),
      Q => p_1_in54_in
    );
\ibuffer_reg[3][12]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(12),
      Q => p_1_in59_in
    );
\ibuffer_reg[3][13]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(13),
      Q => p_1_in64_in
    );
\ibuffer_reg[3][14]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(14),
      Q => p_1_in69_in
    );
\ibuffer_reg[3][15]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(15),
      Q => p_1_in74_in
    );
\ibuffer_reg[3][16]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(16),
      Q => p_1_in79_in
    );
\ibuffer_reg[3][17]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(17),
      Q => p_1_in84_in
    );
\ibuffer_reg[3][18]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(18),
      Q => p_1_in89_in_0
    );
\ibuffer_reg[3][19]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(19),
      Q => p_1_in94_in
    );
\ibuffer_reg[3][1]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(1),
      Q => p_1_in4_in
    );
\ibuffer_reg[3][20]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(20),
      Q => p_1_in99_in
    );
\ibuffer_reg[3][21]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(21),
      Q => p_1_in104_in
    );
\ibuffer_reg[3][22]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(0),
      Q => p_1_in109_in
    );
\ibuffer_reg[3][23]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(1),
      Q => p_1_in114_in
    );
\ibuffer_reg[3][24]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(2),
      Q => p_1_in119_in
    );
\ibuffer_reg[3][25]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(3),
      Q => p_1_in124_in
    );
\ibuffer_reg[3][26]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(4),
      Q => p_1_in129_in
    );
\ibuffer_reg[3][27]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(5),
      Q => p_1_in134_in
    );
\ibuffer_reg[3][28]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(6),
      Q => p_1_in139_in
    );
\ibuffer_reg[3][29]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(7),
      Q => p_1_in144_in
    );
\ibuffer_reg[3][2]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(2),
      Q => p_1_in9_in
    );
\ibuffer_reg[3][30]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(8),
      Q => p_1_in149_in
    );
\ibuffer_reg[3][31]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(9),
      Q => p_1_in154_in
    );
\ibuffer_reg[3][32]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(22),
      Q => p_1_in159_in
    );
\ibuffer_reg[3][33]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(23),
      Q => p_1_in164_in
    );
\ibuffer_reg[3][34]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(24),
      Q => p_1_in169_in
    );
\ibuffer_reg[3][35]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(25),
      Q => p_1_in174_in
    );
\ibuffer_reg[3][36]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(26),
      Q => p_1_in179_in
    );
\ibuffer_reg[3][37]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(27),
      Q => p_1_in184_in
    );
\ibuffer_reg[3][38]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(28),
      Q => p_1_in189_in
    );
\ibuffer_reg[3][39]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(29),
      Q => p_1_in194_in
    );
\ibuffer_reg[3][3]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(3),
      Q => p_1_in14_in
    );
\ibuffer_reg[3][40]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(30),
      Q => p_1_in199_in
    );
\ibuffer_reg[3][41]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(31),
      Q => p_1_in204_in
    );
\ibuffer_reg[3][42]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(32),
      Q => p_1_in209_in
    );
\ibuffer_reg[3][4]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(4),
      Q => p_1_in19_in
    );
\ibuffer_reg[3][5]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(5),
      Q => p_1_in24_in
    );
\ibuffer_reg[3][6]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(6),
      Q => p_1_in29_in
    );
\ibuffer_reg[3][7]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(7),
      Q => p_1_in34_in
    );
\ibuffer_reg[3][8]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(8),
      Q => p_1_in39_in
    );
\ibuffer_reg[3][9]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^if_pre_buffer_addr\(0),
      A1 => \^status_reg_reg[25]\(0),
      A2 => '0',
      A3 => '0',
      CE => \^using_fpga.native_1\,
      CLK => Clk,
      D => \in\(9),
      Q => p_1_in44_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_Register_File_gti is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 0 to 31 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 0 to 31 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 0 to 31 );
    Clk : in STD_LOGIC;
    WB_GPR_Wr : in STD_LOGIC;
    DID : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 4 downto 0 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 );
    WB_Doublet_Access_reg : in STD_LOGIC_VECTOR ( 1 downto 0 );
    WB_Doublet_Access_reg_0 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    WB_Doublet_Access_reg_1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    WB_Doublet_Access_reg_2 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    WB_Doublet_Access_reg_3 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    WB_Doublet_Access_reg_4 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    WB_Doublet_Access_reg_5 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    WB_Byte_Access_reg : in STD_LOGIC_VECTOR ( 1 downto 0 );
    WB_Byte_Access_reg_0 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    WB_Byte_Access_reg_1 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    WB_Byte_Access_reg_2 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \wb_read_lsb_sel_reg[1]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \wb_read_lsb_sel_reg[1]_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \wb_read_lsb_sel_reg[1]_1\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \wb_read_lsb_sel_reg[1]_2\ : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_Register_File_gti : entity is "Register_File_gti";
end system_microblaze_0_0_Register_File_gti;

architecture STRUCTURE of system_microblaze_0_0_Register_File_gti is
begin
\Using_LUT6.All_RAM32M[0].ram32m_i\: entity work.system_microblaze_0_0_MB_RAM32M
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      DID(1 downto 0) => DID(1 downto 0),
      GPR_Op1(1) => GPR_Op1(0),
      GPR_Op1(0) => GPR_Op1(1),
      GPR_Op2(1) => GPR_Op2(0),
      GPR_Op2(0) => GPR_Op2(1),
      GPR_Op3(1) => GPR_Op3(0),
      GPR_Op3(0) => GPR_Op3(1),
      WB_GPR_Wr => WB_GPR_Wr,
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[10].ram32m_i\: entity work.system_microblaze_0_0_MB_RAM32M_340
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      GPR_Op1(1) => GPR_Op1(20),
      GPR_Op1(0) => GPR_Op1(21),
      GPR_Op2(1) => GPR_Op2(20),
      GPR_Op2(0) => GPR_Op2(21),
      GPR_Op3(1) => GPR_Op3(20),
      GPR_Op3(0) => GPR_Op3(21),
      WB_Byte_Access_reg(1 downto 0) => WB_Byte_Access_reg_1(1 downto 0),
      WB_GPR_Wr => WB_GPR_Wr,
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[11].ram32m_i\: entity work.system_microblaze_0_0_MB_RAM32M_341
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      GPR_Op1(1) => GPR_Op1(22),
      GPR_Op1(0) => GPR_Op1(23),
      GPR_Op2(1) => GPR_Op2(22),
      GPR_Op2(0) => GPR_Op2(23),
      GPR_Op3(1) => GPR_Op3(22),
      GPR_Op3(0) => GPR_Op3(23),
      WB_Byte_Access_reg(1 downto 0) => WB_Byte_Access_reg_2(1 downto 0),
      WB_GPR_Wr => WB_GPR_Wr,
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[12].ram32m_i\: entity work.system_microblaze_0_0_MB_RAM32M_342
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      GPR_Op1(1) => GPR_Op1(24),
      GPR_Op1(0) => GPR_Op1(25),
      GPR_Op2(1) => GPR_Op2(24),
      GPR_Op2(0) => GPR_Op2(25),
      GPR_Op3(1) => GPR_Op3(24),
      GPR_Op3(0) => GPR_Op3(25),
      WB_GPR_Wr => WB_GPR_Wr,
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0),
      \wb_read_lsb_sel_reg[1]\(1 downto 0) => \wb_read_lsb_sel_reg[1]\(1 downto 0)
    );
\Using_LUT6.All_RAM32M[13].ram32m_i\: entity work.system_microblaze_0_0_MB_RAM32M_343
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      GPR_Op1(1) => GPR_Op1(26),
      GPR_Op1(0) => GPR_Op1(27),
      GPR_Op2(1) => GPR_Op2(26),
      GPR_Op2(0) => GPR_Op2(27),
      GPR_Op3(1) => GPR_Op3(26),
      GPR_Op3(0) => GPR_Op3(27),
      WB_GPR_Wr => WB_GPR_Wr,
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0),
      \wb_read_lsb_sel_reg[1]\(1 downto 0) => \wb_read_lsb_sel_reg[1]_0\(1 downto 0)
    );
\Using_LUT6.All_RAM32M[14].ram32m_i\: entity work.system_microblaze_0_0_MB_RAM32M_344
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      GPR_Op1(1) => GPR_Op1(28),
      GPR_Op1(0) => GPR_Op1(29),
      GPR_Op2(1) => GPR_Op2(28),
      GPR_Op2(0) => GPR_Op2(29),
      GPR_Op3(1) => GPR_Op3(28),
      GPR_Op3(0) => GPR_Op3(29),
      WB_GPR_Wr => WB_GPR_Wr,
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0),
      \wb_read_lsb_sel_reg[1]\(1 downto 0) => \wb_read_lsb_sel_reg[1]_1\(1 downto 0)
    );
\Using_LUT6.All_RAM32M[15].ram32m_i\: entity work.system_microblaze_0_0_MB_RAM32M_345
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      GPR_Op1(1) => GPR_Op1(30),
      GPR_Op1(0) => GPR_Op1(31),
      GPR_Op2(1) => GPR_Op2(30),
      GPR_Op2(0) => GPR_Op2(31),
      GPR_Op3(1) => GPR_Op3(30),
      GPR_Op3(0) => GPR_Op3(31),
      WB_GPR_Wr => WB_GPR_Wr,
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0),
      \wb_read_lsb_sel_reg[1]\(1 downto 0) => \wb_read_lsb_sel_reg[1]_2\(1 downto 0)
    );
\Using_LUT6.All_RAM32M[1].ram32m_i\: entity work.system_microblaze_0_0_MB_RAM32M_346
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      GPR_Op1(1) => GPR_Op1(2),
      GPR_Op1(0) => GPR_Op1(3),
      GPR_Op2(1) => GPR_Op2(2),
      GPR_Op2(0) => GPR_Op2(3),
      GPR_Op3(1) => GPR_Op3(2),
      GPR_Op3(0) => GPR_Op3(3),
      WB_Doublet_Access_reg(1 downto 0) => WB_Doublet_Access_reg(1 downto 0),
      WB_GPR_Wr => WB_GPR_Wr,
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[2].ram32m_i\: entity work.system_microblaze_0_0_MB_RAM32M_347
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      GPR_Op1(1) => GPR_Op1(4),
      GPR_Op1(0) => GPR_Op1(5),
      GPR_Op2(1) => GPR_Op2(4),
      GPR_Op2(0) => GPR_Op2(5),
      GPR_Op3(1) => GPR_Op3(4),
      GPR_Op3(0) => GPR_Op3(5),
      WB_Doublet_Access_reg(1 downto 0) => WB_Doublet_Access_reg_0(1 downto 0),
      WB_GPR_Wr => WB_GPR_Wr,
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[3].ram32m_i\: entity work.system_microblaze_0_0_MB_RAM32M_348
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      GPR_Op1(1) => GPR_Op1(6),
      GPR_Op1(0) => GPR_Op1(7),
      GPR_Op2(1) => GPR_Op2(6),
      GPR_Op2(0) => GPR_Op2(7),
      GPR_Op3(1) => GPR_Op3(6),
      GPR_Op3(0) => GPR_Op3(7),
      WB_Doublet_Access_reg(1 downto 0) => WB_Doublet_Access_reg_1(1 downto 0),
      WB_GPR_Wr => WB_GPR_Wr,
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[4].ram32m_i\: entity work.system_microblaze_0_0_MB_RAM32M_349
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      GPR_Op1(1) => GPR_Op1(8),
      GPR_Op1(0) => GPR_Op1(9),
      GPR_Op2(1) => GPR_Op2(8),
      GPR_Op2(0) => GPR_Op2(9),
      GPR_Op3(1) => GPR_Op3(8),
      GPR_Op3(0) => GPR_Op3(9),
      WB_Doublet_Access_reg(1 downto 0) => WB_Doublet_Access_reg_2(1 downto 0),
      WB_GPR_Wr => WB_GPR_Wr,
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[5].ram32m_i\: entity work.system_microblaze_0_0_MB_RAM32M_350
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      GPR_Op1(1) => GPR_Op1(10),
      GPR_Op1(0) => GPR_Op1(11),
      GPR_Op2(1) => GPR_Op2(10),
      GPR_Op2(0) => GPR_Op2(11),
      GPR_Op3(1) => GPR_Op3(10),
      GPR_Op3(0) => GPR_Op3(11),
      WB_Doublet_Access_reg(1 downto 0) => WB_Doublet_Access_reg_3(1 downto 0),
      WB_GPR_Wr => WB_GPR_Wr,
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[6].ram32m_i\: entity work.system_microblaze_0_0_MB_RAM32M_351
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      GPR_Op1(1) => GPR_Op1(12),
      GPR_Op1(0) => GPR_Op1(13),
      GPR_Op2(1) => GPR_Op2(12),
      GPR_Op2(0) => GPR_Op2(13),
      GPR_Op3(1) => GPR_Op3(12),
      GPR_Op3(0) => GPR_Op3(13),
      WB_Doublet_Access_reg(1 downto 0) => WB_Doublet_Access_reg_4(1 downto 0),
      WB_GPR_Wr => WB_GPR_Wr,
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[7].ram32m_i\: entity work.system_microblaze_0_0_MB_RAM32M_352
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      GPR_Op1(1) => GPR_Op1(14),
      GPR_Op1(0) => GPR_Op1(15),
      GPR_Op2(1) => GPR_Op2(14),
      GPR_Op2(0) => GPR_Op2(15),
      GPR_Op3(1) => GPR_Op3(14),
      GPR_Op3(0) => GPR_Op3(15),
      WB_Doublet_Access_reg(1 downto 0) => WB_Doublet_Access_reg_5(1 downto 0),
      WB_GPR_Wr => WB_GPR_Wr,
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[8].ram32m_i\: entity work.system_microblaze_0_0_MB_RAM32M_353
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      GPR_Op1(1) => GPR_Op1(16),
      GPR_Op1(0) => GPR_Op1(17),
      GPR_Op2(1) => GPR_Op2(16),
      GPR_Op2(0) => GPR_Op2(17),
      GPR_Op3(1) => GPR_Op3(16),
      GPR_Op3(0) => GPR_Op3(17),
      WB_Byte_Access_reg(1 downto 0) => WB_Byte_Access_reg(1 downto 0),
      WB_GPR_Wr => WB_GPR_Wr,
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
\Using_LUT6.All_RAM32M[9].ram32m_i\: entity work.system_microblaze_0_0_MB_RAM32M_354
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      GPR_Op1(1) => GPR_Op1(18),
      GPR_Op1(0) => GPR_Op1(19),
      GPR_Op2(1) => GPR_Op2(18),
      GPR_Op2(0) => GPR_Op2(19),
      GPR_Op3(1) => GPR_Op3(18),
      GPR_Op3(0) => GPR_Op3(19),
      WB_Byte_Access_reg(1 downto 0) => WB_Byte_Access_reg_0(1 downto 0),
      WB_GPR_Wr => WB_GPR_Wr,
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4 downto 0) => of_imm_data(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_Zero_Detect_gti is
  port (
    ex_op1_zero : out STD_LOGIC;
    ex_op1_cmp_equal : in STD_LOGIC;
    \Zero_Detecting[0].nibble_Zero_reg\ : in STD_LOGIC;
    ex_op1_cmp_equal_n : in STD_LOGIC;
    \Zero_Detecting[1].nibble_Zero_reg\ : in STD_LOGIC;
    \Zero_Detecting[2].nibble_Zero_reg\ : in STD_LOGIC;
    \Zero_Detecting[3].nibble_Zero_reg\ : in STD_LOGIC;
    \Zero_Detecting[4].nibble_Zero_reg\ : in STD_LOGIC;
    \Zero_Detecting[5].nibble_Zero_reg\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_Zero_Detect_gti : entity is "Zero_Detect_gti";
end system_microblaze_0_0_Zero_Detect_gti;

architecture STRUCTURE of system_microblaze_0_0_Zero_Detect_gti is
  signal \^lopt\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal zero_CI_0 : STD_LOGIC;
  signal zero_CI_1 : STD_LOGIC;
  signal zero_CI_2 : STD_LOGIC;
  signal zero_CI_3 : STD_LOGIC;
  signal zero_CI_4 : STD_LOGIC;
  signal zero_CI_5 : STD_LOGIC;
begin
  \^lopt_2\ <= lopt_1;
  lopt <= \^lopt_1\;
  lopt_3 <= lopt_2;
Part_Of_Zero_Carry_Start: entity work.system_microblaze_0_0_MB_MUXCY_333
     port map (
      ex_op1_cmp_equal => ex_op1_cmp_equal,
      lopt => ex_op1_cmp_equal_n,
      lopt_1 => \Zero_Detecting[0].nibble_Zero_reg\,
      lopt_2 => \Zero_Detecting[1].nibble_Zero_reg\,
      lopt_3 => \^lopt\,
      lopt_4 => \Zero_Detecting[2].nibble_Zero_reg\,
      zero_CI_0 => zero_CI_0
    );
\Zero_Detecting[0].I_Part_Of_Zero_Detect\: entity work.system_microblaze_0_0_MB_MUXCY_334
     port map (
      \Zero_Detecting[0].nibble_Zero_reg\ => \Zero_Detecting[0].nibble_Zero_reg\,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      zero_CI_0 => zero_CI_0,
      zero_CI_1 => zero_CI_1
    );
\Zero_Detecting[1].I_Part_Of_Zero_Detect\: entity work.system_microblaze_0_0_MB_MUXCY_335
     port map (
      \Zero_Detecting[1].nibble_Zero_reg\ => \Zero_Detecting[1].nibble_Zero_reg\,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      zero_CI_1 => zero_CI_1,
      zero_CI_2 => zero_CI_2
    );
\Zero_Detecting[2].I_Part_Of_Zero_Detect\: entity work.system_microblaze_0_0_MB_MUXCY_336
     port map (
      \Zero_Detecting[2].nibble_Zero_reg\ => \Zero_Detecting[2].nibble_Zero_reg\,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      lopt => \^lopt\,
      zero_CI_2 => zero_CI_2,
      zero_CI_3 => zero_CI_3
    );
\Zero_Detecting[3].I_Part_Of_Zero_Detect\: entity work.system_microblaze_0_0_MB_MUXCY_337
     port map (
      \Zero_Detecting[3].nibble_Zero_reg\ => \Zero_Detecting[3].nibble_Zero_reg\,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      lopt => \Zero_Detecting[4].nibble_Zero_reg\,
      lopt_1 => \Zero_Detecting[5].nibble_Zero_reg\,
      lopt_2 => \^lopt_1\,
      lopt_3 => \^lopt_2\,
      lopt_4 => lopt_3,
      zero_CI_3 => zero_CI_3,
      zero_CI_4 => zero_CI_4
    );
\Zero_Detecting[4].I_Part_Of_Zero_Detect\: entity work.system_microblaze_0_0_MB_MUXCY_338
     port map (
      \Zero_Detecting[4].nibble_Zero_reg\ => \Zero_Detecting[4].nibble_Zero_reg\,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      zero_CI_4 => zero_CI_4,
      zero_CI_5 => zero_CI_5
    );
\Zero_Detecting[5].I_Part_Of_Zero_Detect\: entity work.system_microblaze_0_0_MB_MUXCY_339
     port map (
      \Zero_Detecting[5].nibble_Zero_reg\ => \Zero_Detecting[5].nibble_Zero_reg\,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      ex_op1_zero => ex_op1_zero,
      zero_CI_5 => zero_CI_5
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_address_hit is
  port (
    p_36_out : out STD_LOGIC;
    Hit : out STD_LOGIC;
    \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg\ : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_i_reg\ : in STD_LOGIC;
    \control_reg_reg[8]\ : in STD_LOGIC;
    force_stop_i : in STD_LOGIC;
    \Performace_Debug_Control.watchpoint_brk_hold_reg\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : in STD_LOGIC;
    dbg_clean_stop : in STD_LOGIC;
    normal_stop_i : in STD_LOGIC;
    single_Step_N : in STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\ : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    ex_Exception_Taken : in STD_LOGIC;
    mem_Exception_Taken : in STD_LOGIC;
    Dbg_TDI : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    Dbg_Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_address_hit : entity is "address_hit";
end system_microblaze_0_0_address_hit;

architecture STRUCTURE of system_microblaze_0_0_address_hit is
  signal \Compare[1].SRLC16E_I_n_2\ : STD_LOGIC;
  signal SRL16_MC15_1 : STD_LOGIC;
  signal SRL16_MC15_2 : STD_LOGIC;
  signal SRL16_MC15_3 : STD_LOGIC;
  signal SRL16_MC15_4 : STD_LOGIC;
  signal SRL16_MC15_5 : STD_LOGIC;
  signal SRL16_MC15_6 : STD_LOGIC;
  signal SRL16_MC15_7 : STD_LOGIC;
  signal SRL16_Sel_0 : STD_LOGIC;
  signal SRL16_Sel_1 : STD_LOGIC;
  signal SRL16_Sel_2 : STD_LOGIC;
  signal SRL16_Sel_3 : STD_LOGIC;
  signal SRL16_Sel_4 : STD_LOGIC;
  signal SRL16_Sel_5 : STD_LOGIC;
  signal SRL16_Sel_6 : STD_LOGIC;
  signal SRL16_Sel_7 : STD_LOGIC;
  signal carry_0 : STD_LOGIC;
  signal carry_1 : STD_LOGIC;
  signal carry_2 : STD_LOGIC;
  signal carry_3 : STD_LOGIC;
  signal carry_4 : STD_LOGIC;
  signal carry_5 : STD_LOGIC;
  signal carry_6 : STD_LOGIC;
  signal carry_7 : STD_LOGIC;
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
begin
\Compare[0].MUXCY_I\: entity work.system_microblaze_0_0_MB_MUXCY_9
     port map (
      Q(0) => Q(0),
      SRL16_Sel_7 => SRL16_Sel_7,
      carry_7 => carry_7,
      lopt => lopt,
      lopt_1 => SRL16_Sel_6,
      lopt_2 => lopt_1,
      lopt_3 => SRL16_Sel_5,
      lopt_4 => lopt_2,
      lopt_5 => lopt_3,
      lopt_6 => SRL16_Sel_4
    );
\Compare[0].SRLC16E_I\: entity work.system_microblaze_0_0_MB_SRLC16E
     port map (
      Address(3) => Address(28),
      Address(2) => Address(29),
      Address(1) => Address(30),
      Address(0) => Address(31),
      Dbg_Clk => Dbg_Clk,
      SRL16_En => \Compare[1].SRLC16E_I_n_2\,
      SRL16_MC15_7 => SRL16_MC15_7,
      SRL16_Sel_7 => SRL16_Sel_7
    );
\Compare[1].MUXCY_I\: entity work.system_microblaze_0_0_MB_MUXCY_10
     port map (
      SRL16_Sel_6 => SRL16_Sel_6,
      carry_6 => carry_6,
      carry_7 => carry_7,
      lopt => lopt
    );
\Compare[1].SRLC16E_I\: entity work.system_microblaze_0_0_MB_SRLC16E_11
     port map (
      Address(3) => Address(24),
      Address(2) => Address(25),
      Address(1) => Address(26),
      Address(0) => Address(27),
      Dbg_Clk => Dbg_Clk,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      \Performace_Debug_Control.ex_dbg_hit_reg[0]\ => \Compare[1].SRLC16E_I_n_2\,
      SRL16_MC15_6 => SRL16_MC15_6,
      SRL16_MC15_7 => SRL16_MC15_7,
      SRL16_Sel_6 => SRL16_Sel_6
    );
\Compare[2].MUXCY_I\: entity work.system_microblaze_0_0_MB_MUXCY_12
     port map (
      SRL16_Sel_5 => SRL16_Sel_5,
      carry_5 => carry_5,
      carry_6 => carry_6,
      lopt => lopt_1
    );
\Compare[2].SRLC16E_I\: entity work.system_microblaze_0_0_MB_SRLC16E_13
     port map (
      Address(3) => Address(20),
      Address(2) => Address(21),
      Address(1) => Address(22),
      Address(0) => Address(23),
      Dbg_Clk => Dbg_Clk,
      \Dbg_Reg_En[6]\ => \Compare[1].SRLC16E_I_n_2\,
      SRL16_MC15_5 => SRL16_MC15_5,
      SRL16_MC15_6 => SRL16_MC15_6,
      SRL16_Sel_5 => SRL16_Sel_5
    );
\Compare[3].MUXCY_I\: entity work.system_microblaze_0_0_MB_MUXCY_14
     port map (
      SRL16_Sel_4 => SRL16_Sel_4,
      carry_4 => carry_4,
      carry_5 => carry_5,
      lopt => lopt_2,
      lopt_1 => lopt_3
    );
\Compare[3].SRLC16E_I\: entity work.system_microblaze_0_0_MB_SRLC16E_15
     port map (
      Address(3) => Address(16),
      Address(2) => Address(17),
      Address(1) => Address(18),
      Address(0) => Address(19),
      Dbg_Clk => Dbg_Clk,
      \Dbg_Reg_En[6]\ => \Compare[1].SRLC16E_I_n_2\,
      SRL16_MC15_4 => SRL16_MC15_4,
      SRL16_MC15_5 => SRL16_MC15_5,
      SRL16_Sel_4 => SRL16_Sel_4
    );
\Compare[4].MUXCY_I\: entity work.system_microblaze_0_0_MB_MUXCY_16
     port map (
      SRL16_Sel_3 => SRL16_Sel_3,
      carry_3 => carry_3,
      carry_4 => carry_4,
      lopt => lopt_4,
      lopt_1 => SRL16_Sel_2,
      lopt_2 => lopt_5,
      lopt_3 => SRL16_Sel_1,
      lopt_4 => lopt_6,
      lopt_5 => lopt_7,
      lopt_6 => SRL16_Sel_0
    );
\Compare[4].SRLC16E_I\: entity work.system_microblaze_0_0_MB_SRLC16E_17
     port map (
      Address(3) => Address(12),
      Address(2) => Address(13),
      Address(1) => Address(14),
      Address(0) => Address(15),
      Dbg_Clk => Dbg_Clk,
      \Dbg_Reg_En[6]\ => \Compare[1].SRLC16E_I_n_2\,
      SRL16_MC15_3 => SRL16_MC15_3,
      SRL16_MC15_4 => SRL16_MC15_4,
      SRL16_Sel_3 => SRL16_Sel_3
    );
\Compare[5].MUXCY_I\: entity work.system_microblaze_0_0_MB_MUXCY_18
     port map (
      SRL16_Sel_2 => SRL16_Sel_2,
      carry_2 => carry_2,
      carry_3 => carry_3,
      lopt => lopt_4
    );
\Compare[5].SRLC16E_I\: entity work.system_microblaze_0_0_MB_SRLC16E_19
     port map (
      Address(3) => Address(8),
      Address(2) => Address(9),
      Address(1) => Address(10),
      Address(0) => Address(11),
      Dbg_Clk => Dbg_Clk,
      \Dbg_Reg_En[6]\ => \Compare[1].SRLC16E_I_n_2\,
      SRL16_MC15_2 => SRL16_MC15_2,
      SRL16_MC15_3 => SRL16_MC15_3,
      SRL16_Sel_2 => SRL16_Sel_2
    );
\Compare[6].MUXCY_I\: entity work.system_microblaze_0_0_MB_MUXCY_20
     port map (
      SRL16_Sel_1 => SRL16_Sel_1,
      carry_1 => carry_1,
      carry_2 => carry_2,
      lopt => lopt_5
    );
\Compare[6].SRLC16E_I\: entity work.system_microblaze_0_0_MB_SRLC16E_21
     port map (
      Address(3) => Address(4),
      Address(2) => Address(5),
      Address(1) => Address(6),
      Address(0) => Address(7),
      Dbg_Clk => Dbg_Clk,
      \Dbg_Reg_En[6]\ => \Compare[1].SRLC16E_I_n_2\,
      SRL16_MC15_1 => SRL16_MC15_1,
      SRL16_MC15_2 => SRL16_MC15_2,
      SRL16_Sel_1 => SRL16_Sel_1
    );
\Compare[7].MUXCY_I\: entity work.system_microblaze_0_0_MB_MUXCY_22
     port map (
      SRL16_Sel_0 => SRL16_Sel_0,
      carry_0 => carry_0,
      carry_1 => carry_1,
      lopt => lopt_6,
      lopt_1 => lopt_7
    );
\Compare[7].SRLC16E_I\: entity work.system_microblaze_0_0_MB_SRLC16E_23
     port map (
      Address(3) => Address(0),
      Address(2) => Address(1),
      Address(1) => Address(2),
      Address(0) => Address(3),
      Dbg_Clk => Dbg_Clk,
      \Dbg_Reg_En[6]\ => \Compare[1].SRLC16E_I_n_2\,
      Dbg_TDI => Dbg_TDI,
      SRL16_MC15_1 => SRL16_MC15_1,
      SRL16_Sel_0 => SRL16_Sel_0
    );
\The_First_BreakPoints.MUXCY_Post\: entity work.system_microblaze_0_0_MB_MUXCY_24
     port map (
      Hit => Hit,
      \Performace_Debug_Control.dbg_stop_i_reg\ => \Performace_Debug_Control.dbg_stop_i_reg\,
      \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg\ => \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg\,
      \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\ => \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\,
      \Performace_Debug_Control.watchpoint_brk_hold_reg\ => \Performace_Debug_Control.watchpoint_brk_hold_reg\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      carry_0 => carry_0,
      \control_reg_reg[8]\ => \control_reg_reg[8]\,
      dbg_clean_stop => dbg_clean_stop,
      ex_Exception_Taken => ex_Exception_Taken,
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg,
      force_stop_i => force_stop_i,
      mem_Exception_Taken => mem_Exception_Taken,
      normal_stop_i => normal_stop_i,
      p_36_out => p_36_out,
      single_Step_N => single_Step_N
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_carry_and is
  port (
    of_PipeRun_for_ce : out STD_LOGIC;
    ex_Take_Intr_or_Exc_reg : out STD_LOGIC;
    ex_is_mul_instr_reg : out STD_LOGIC;
    ex_valid_keep_reg : out STD_LOGIC;
    ex_first_cycle_reg : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Instr_Excep_combo_reg : out STD_LOGIC;
    \Performace_Debug_Control.ex_watchpoint_brk_reg\ : out STD_LOGIC;
    of_Take_Interrupt_hold_reg : out STD_LOGIC;
    ex_jump_nodelay_reg : out STD_LOGIC;
    of_pipe_ctrl : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun_carry_2 : in STD_LOGIC;
    of_Take_Interrupt_hold_reg_0 : in STD_LOGIC;
    ex_Take_Intr_or_Exc : in STD_LOGIC;
    ex_delayslot_Instr2 : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_div_unsigned : in STD_LOGIC;
    ex_valid_keep : in STD_LOGIC;
    of_next_ex_valid : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    ex_Take_Intr_or_Exc_reg_0 : in STD_LOGIC;
    ex_set_MSR_IE_instr : in STD_LOGIC;
    \EX_Op1_reg[30]\ : in STD_LOGIC;
    of_MSR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \wb_exception_kind_i_reg[27]\ : in STD_LOGIC;
    ex_Instr_Excep_combo : in STD_LOGIC;
    \Performace_Debug_Control.ex_watchpoint_brk_reg_0\ : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC;
    of_Take_Interrupt_hold : in STD_LOGIC;
    ex_jump_nodelay_reg_0 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_carry_and : entity is "carry_and";
end system_microblaze_0_0_carry_and;

architecture STRUCTURE of system_microblaze_0_0_carry_and is
begin
MUXCY_I: entity work.system_microblaze_0_0_MB_MUXCY_71
     port map (
      Dbg_Disable => Dbg_Disable,
      \EX_Op1_reg[30]\ => \EX_Op1_reg[30]\,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      \Performace_Debug_Control.ex_watchpoint_brk_reg\ => \Performace_Debug_Control.ex_watchpoint_brk_reg\,
      \Performace_Debug_Control.ex_watchpoint_brk_reg_0\ => \Performace_Debug_Control.ex_watchpoint_brk_reg_0\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      ex_Instr_Excep_combo => ex_Instr_Excep_combo,
      ex_Instr_Excep_combo_reg => ex_Instr_Excep_combo_reg,
      ex_Take_Intr_or_Exc => ex_Take_Intr_or_Exc,
      ex_Take_Intr_or_Exc_reg => ex_Take_Intr_or_Exc_reg,
      ex_Take_Intr_or_Exc_reg_0 => ex_Take_Intr_or_Exc_reg_0,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      ex_div_unsigned => ex_div_unsigned,
      ex_first_cycle_reg => ex_first_cycle_reg,
      ex_is_mul_instr_reg => ex_is_mul_instr_reg,
      ex_jump_nodelay_reg => ex_jump_nodelay_reg,
      ex_jump_nodelay_reg_0 => ex_jump_nodelay_reg_0,
      ex_set_MSR_IE_instr => ex_set_MSR_IE_instr,
      ex_valid_keep => ex_valid_keep,
      ex_valid_keep_reg => ex_valid_keep_reg,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9,
      of_MSR(0) => of_MSR(0),
      of_PipeRun_carry_2 => of_PipeRun_carry_2,
      of_Take_Interrupt_hold => of_Take_Interrupt_hold,
      of_Take_Interrupt_hold_reg => of_Take_Interrupt_hold_reg,
      of_Take_Interrupt_hold_reg_0 => of_Take_Interrupt_hold_reg_0,
      of_next_ex_valid => of_next_ex_valid,
      of_pipe_ctrl(0) => of_pipe_ctrl(0),
      \out\(0) => \out\(0),
      use_Reg_Neg_S_reg => of_PipeRun_for_ce,
      wb_exception_i_reg => wb_exception_i_reg,
      \wb_exception_kind_i_reg[27]\ => \wb_exception_kind_i_reg[27]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_carry_and_25 is
  port (
    of_PipeRun_carry_10 : out STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_carry_and_25 : entity is "carry_and";
end system_microblaze_0_0_carry_and_25;

architecture STRUCTURE of system_microblaze_0_0_carry_and_25 is
begin
MUXCY_I: entity work.system_microblaze_0_0_MB_MUXCY_70
     port map (
      E(0) => E(0),
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      of_PipeRun_carry_10 => of_PipeRun_carry_10
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_carry_and_26 is
  port (
    of_PipeRun_carry_9 : out STD_LOGIC;
    EX_MBAR_Stall : out STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    of_PipeRun_carry_10 : in STD_LOGIC;
    ex_mbar_sleep : in STD_LOGIC;
    ex_mbar_decode : in STD_LOGIC;
    ex_first_cycle : in STD_LOGIC;
    ex_mbar_stall_no_sleep_1 : in STD_LOGIC;
    ex_jump_hold : in STD_LOGIC;
    ex_Take_Intr_or_Exc : in STD_LOGIC;
    lopt : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_carry_and_26 : entity is "carry_and";
end system_microblaze_0_0_carry_and_26;

architecture STRUCTURE of system_microblaze_0_0_carry_and_26 is
begin
MUXCY_I: entity work.system_microblaze_0_0_MB_MUXCY_69
     port map (
      EX_MBAR_Stall => EX_MBAR_Stall,
      ex_Take_Intr_or_Exc => ex_Take_Intr_or_Exc,
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg,
      ex_first_cycle => ex_first_cycle,
      ex_jump_hold => ex_jump_hold,
      ex_mbar_decode => ex_mbar_decode,
      ex_mbar_sleep => ex_mbar_sleep,
      ex_mbar_stall_no_sleep_1 => ex_mbar_stall_no_sleep_1,
      lopt => lopt,
      of_PipeRun_carry_10 => of_PipeRun_carry_10,
      of_PipeRun_carry_9 => of_PipeRun_carry_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_carry_and_27 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Write_DCache_decode_cmb : out STD_LOGIC;
    ex_Write_ICache_i_cmb : out STD_LOGIC;
    \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\ : out STD_LOGIC;
    mem_gpr_write_reg : out STD_LOGIC;
    ex_bt_hit_hold_reg : out STD_LOGIC;
    mem_gpr_write_dbg_reg : out STD_LOGIC;
    of_set_MSR_IE_hold_reg : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_PipeRun_carry_9 : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \wb_exception_kind_i_reg[27]\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    ex_write_dcache_instr : in STD_LOGIC;
    ex_Write_ICache_i : in STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg\ : in STD_LOGIC;
    \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg\ : in STD_LOGIC;
    p_36_out : in STD_LOGIC;
    \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_0\ : in STD_LOGIC;
    mem_gpr_write : in STD_LOGIC;
    ex_gpr_write_reg : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    mem_jump_hit0 : in STD_LOGIC;
    ex_gpr_write_dbg : in STD_LOGIC;
    mem_gpr_write_dbg : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    p_82_in : in STD_LOGIC;
    of_set_MSR_IE_hold_reg_0 : in STD_LOGIC;
    ex_Take_Intr_or_Exc_reg : in STD_LOGIC;
    ex_set_MSR_IE_instr : in STD_LOGIC;
    \EX_Op1_reg[30]\ : in STD_LOGIC;
    ex_MSR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \wb_exception_kind_i_reg[27]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_carry_and_27 : entity is "carry_and";
end system_microblaze_0_0_carry_and_27;

architecture STRUCTURE of system_microblaze_0_0_carry_and_27 is
begin
MUXCY_I: entity work.system_microblaze_0_0_MB_MUXCY_68
     port map (
      Dbg_Disable => Dbg_Disable,
      E(0) => E(0),
      \EX_Op1_reg[30]\ => \EX_Op1_reg[30]\,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      \Performace_Debug_Control.dbg_stop_if_delay_i_reg\ => \Performace_Debug_Control.dbg_stop_if_delay_i_reg\,
      \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\ => \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\,
      \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_0\ => \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_0\,
      \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg\ => \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg\,
      Q(0) => Q(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      ex_MSR(0) => ex_MSR(0),
      ex_Take_Intr_or_Exc_reg => ex_Take_Intr_or_Exc_reg,
      ex_Write_DCache_decode_reg => ex_Write_DCache_decode_cmb,
      ex_Write_ICache_i => ex_Write_ICache_i,
      ex_Write_ICache_i_reg => ex_Write_ICache_i_cmb,
      ex_bt_hit_hold_reg => ex_bt_hit_hold_reg,
      ex_gpr_write_dbg => ex_gpr_write_dbg,
      ex_gpr_write_reg => ex_gpr_write_reg,
      ex_set_MSR_IE_instr => ex_set_MSR_IE_instr,
      ex_write_dcache_instr => ex_write_dcache_instr,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      mem_gpr_write => mem_gpr_write,
      mem_gpr_write_dbg => mem_gpr_write_dbg,
      mem_gpr_write_dbg_reg => mem_gpr_write_dbg_reg,
      mem_gpr_write_reg => mem_gpr_write_reg,
      mem_jump_hit0 => mem_jump_hit0,
      mem_valid_reg => mem_valid_reg,
      of_PipeRun_carry_9 => of_PipeRun_carry_9,
      of_set_MSR_IE_hold_reg => of_set_MSR_IE_hold_reg,
      of_set_MSR_IE_hold_reg_0 => of_set_MSR_IE_hold_reg_0,
      \out\(0) => \out\(0),
      p_36_out => p_36_out,
      p_82_in => p_82_in,
      wb_exception_i_reg => wb_exception_i_reg,
      \wb_exception_kind_i_reg[27]\ => \wb_exception_kind_i_reg[27]\,
      \wb_exception_kind_i_reg[27]_0\ => \wb_exception_kind_i_reg[27]_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_carry_and_28 is
  port (
    of_PipeRun_carry_7 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : out STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_carry_and_28 : entity is "carry_and";
end system_microblaze_0_0_carry_and_28;

architecture STRUCTURE of system_microblaze_0_0_carry_and_28 is
begin
MUXCY_I: entity work.system_microblaze_0_0_MB_MUXCY_67
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      of_PipeRun_carry_7 => of_PipeRun_carry_7
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_carry_and_29 is
  port (
    of_PipeRun_carry_6 : out STD_LOGIC;
    of_pipe_ctrl : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun_carry_7 : in STD_LOGIC;
    lopt : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_carry_and_29 : entity is "carry_and";
end system_microblaze_0_0_carry_and_29;

architecture STRUCTURE of system_microblaze_0_0_carry_and_29 is
begin
MUXCY_I: entity work.system_microblaze_0_0_MB_MUXCY_66
     port map (
      lopt => lopt,
      of_PipeRun_carry_6 => of_PipeRun_carry_6,
      of_PipeRun_carry_7 => of_PipeRun_carry_7,
      of_pipe_ctrl(0) => of_pipe_ctrl(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_carry_and_30 is
  port (
    of_PipeRun_carry_5 : out STD_LOGIC;
    of_pipe_ctrl : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun_carry_6 : in STD_LOGIC;
    lopt : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_carry_and_30 : entity is "carry_and";
end system_microblaze_0_0_carry_and_30;

architecture STRUCTURE of system_microblaze_0_0_carry_and_30 is
begin
MUXCY_I: entity work.system_microblaze_0_0_MB_MUXCY_65
     port map (
      lopt => lopt,
      of_PipeRun_carry_5 => of_PipeRun_carry_5,
      of_PipeRun_carry_6 => of_PipeRun_carry_6,
      of_pipe_ctrl(0) => of_pipe_ctrl(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_carry_and_31 is
  port (
    of_PipeRun_carry_4 : out STD_LOGIC;
    of_pipe_ctrl : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun_carry_5 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_carry_and_31 : entity is "carry_and";
end system_microblaze_0_0_carry_and_31;

architecture STRUCTURE of system_microblaze_0_0_carry_and_31 is
begin
MUXCY_I: entity work.system_microblaze_0_0_MB_MUXCY_64
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      of_PipeRun_carry_4 => of_PipeRun_carry_4,
      of_PipeRun_carry_5 => of_PipeRun_carry_5,
      of_pipe_ctrl(0) => of_pipe_ctrl(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_carry_and_32 is
  port (
    of_PipeRun_carry_3 : out STD_LOGIC;
    of_pipe_ctrl : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun_carry_4 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_carry_and_32 : entity is "carry_and";
end system_microblaze_0_0_carry_and_32;

architecture STRUCTURE of system_microblaze_0_0_carry_and_32 is
begin
MUXCY_I: entity work.system_microblaze_0_0_MB_MUXCY_63
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      of_PipeRun_carry_3 => of_PipeRun_carry_3,
      of_PipeRun_carry_4 => of_PipeRun_carry_4,
      of_pipe_ctrl(0) => of_pipe_ctrl(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_carry_and_33 is
  port (
    of_PipeRun_carry_2 : out STD_LOGIC;
    of_pipe_ctrl : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_PipeRun_carry_3 : in STD_LOGIC;
    lopt : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_carry_and_33 : entity is "carry_and";
end system_microblaze_0_0_carry_and_33;

architecture STRUCTURE of system_microblaze_0_0_carry_and_33 is
begin
MUXCY_I: entity work.system_microblaze_0_0_MB_MUXCY_62
     port map (
      lopt => lopt,
      of_PipeRun_carry_2 => of_PipeRun_carry_2,
      of_PipeRun_carry_3 => of_PipeRun_carry_3,
      of_pipe_ctrl(0) => of_pipe_ctrl(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_carry_and_46 is
  port (
    if_pc_incr_carry1 : out STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg\ : in STD_LOGIC;
    if_pc_incr_carry0 : in STD_LOGIC;
    lopt : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_carry_and_46 : entity is "carry_and";
end system_microblaze_0_0_carry_and_46;

architecture STRUCTURE of system_microblaze_0_0_carry_and_46 is
begin
MUXCY_I: entity work.system_microblaze_0_0_MB_MUXCY_61
     port map (
      \Performace_Debug_Control.dbg_stop_if_delay_i_reg\ => \Performace_Debug_Control.dbg_stop_if_delay_i_reg\,
      if_pc_incr_carry0 => if_pc_incr_carry0,
      if_pc_incr_carry1 => if_pc_incr_carry1,
      lopt => lopt
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_carry_and_47 is
  port (
    if_pc_incr_carry0 : out STD_LOGIC;
    if_missed_fetch : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_carry_and_47 : entity is "carry_and";
end system_microblaze_0_0_carry_and_47;

architecture STRUCTURE of system_microblaze_0_0_carry_and_47 is
begin
MUXCY_I: entity work.system_microblaze_0_0_MB_MUXCY_60
     port map (
      if_missed_fetch => if_missed_fetch,
      if_pc_incr_carry0 => if_pc_incr_carry0,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_carry_and_48 is
  port (
    if_pc_incr_carry3 : out STD_LOGIC;
    if_fetch_for_timing_optimization1 : in STD_LOGIC;
    if_pc_incr_carry1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_carry_and_48 : entity is "carry_and";
end system_microblaze_0_0_carry_and_48;

architecture STRUCTURE of system_microblaze_0_0_carry_and_48 is
begin
MUXCY_I: entity work.system_microblaze_0_0_MB_MUXCY_59
     port map (
      if_fetch_for_timing_optimization1 => if_fetch_for_timing_optimization1,
      if_pc_incr_carry1 => if_pc_incr_carry1,
      if_pc_incr_carry3 => if_pc_incr_carry3,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_carry_and_49 is
  port (
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    wb_gpr_write_dbg0 : out STD_LOGIC;
    wb_gpr_write_i0 : out STD_LOGIC;
    mem_valid_reg : out STD_LOGIC;
    wb_valid_reg : out STD_LOGIC;
    mem_wait_on_ready_N : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_exception_i_reg : in STD_LOGIC;
    mem_gpr_write_dbg : in STD_LOGIC;
    mem_gpr_write : in STD_LOGIC;
    mem_valid_instr : in STD_LOGIC;
    mem_exception_from_ex : in STD_LOGIC;
    ex_valid_reg : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    flush_pipe : in STD_LOGIC;
    wb_valid_reg_0 : in STD_LOGIC;
    wb_piperun : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_carry_and_49 : entity is "carry_and";
end system_microblaze_0_0_carry_and_49;

architecture STRUCTURE of system_microblaze_0_0_carry_and_49 is
begin
MUXCY_I: entity work.system_microblaze_0_0_MB_MUXCY_52
     port map (
      Trace_WB_Jump_Hit_reg => E(0),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg,
      ex_valid_reg => ex_valid_reg,
      flush_pipe => flush_pipe,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      mem_exception_from_ex => mem_exception_from_ex,
      mem_gpr_write => mem_gpr_write,
      mem_gpr_write_dbg => mem_gpr_write_dbg,
      mem_valid_instr => mem_valid_instr,
      mem_valid_reg => mem_valid_reg,
      mem_wait_on_ready_N => mem_wait_on_ready_N,
      \out\(0) => \out\(0),
      wb_exception_i_reg => wb_exception_i_reg,
      wb_gpr_write_dbg0 => wb_gpr_write_dbg0,
      wb_gpr_write_i0 => wb_gpr_write_i0,
      wb_piperun => wb_piperun,
      wb_valid_reg => wb_valid_reg,
      wb_valid_reg_0 => wb_valid_reg_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_carry_or is
  port (
    mem_databus_ready : out STD_LOGIC;
    mem_access_completed_reg : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_carry_or : entity is "carry_or";
end system_microblaze_0_0_carry_or;

architecture STRUCTURE of system_microblaze_0_0_carry_or is
begin
MUXCY_I: entity work.system_microblaze_0_0_MB_MUXCY
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      mem_access_completed_reg => mem_access_completed_reg,
      mem_databus_ready => mem_databus_ready
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_carry_or_50 is
  port (
    mem_wait_on_ready_N : out STD_LOGIC;
    mem_databus_ready : in STD_LOGIC;
    mem_valid_instr : in STD_LOGIC;
    mem_load_store_access : in STD_LOGIC;
    mem_Write_DCache : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_carry_or_50 : entity is "carry_or";
end system_microblaze_0_0_carry_or_50;

architecture STRUCTURE of system_microblaze_0_0_carry_or_50 is
begin
MUXCY_I: entity work.system_microblaze_0_0_MB_MUXCY_51
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      mem_Write_DCache => mem_Write_DCache,
      mem_databus_ready => mem_databus_ready,
      mem_load_store_access => mem_load_store_access,
      mem_valid_instr => mem_valid_instr,
      mem_wait_on_ready_N => mem_wait_on_ready_N
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_exception_registers_gti is
  port (
    DI : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3738]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3737]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3736]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3735]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3734]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3733]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3732]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3731]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3730]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3729]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3728]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3727]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3726]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3725]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3724]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3723]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3722]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3721]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3720]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3719]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3718]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3717]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3716]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3715]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3714]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3713]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3712]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3711]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3710]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3709]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3708]\ : out STD_LOGIC_VECTOR ( 16 downto 0 );
    \LOCKSTEP_Out_reg[3769]\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    \EX_Op3_reg[16]\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    \EX_Branch_CMP_Op1_reg[16]\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    \data_rd_reg_reg[31]\ : out STD_LOGIC;
    \data_rd_reg_reg[30]\ : out STD_LOGIC;
    \data_rd_reg_reg[29]\ : out STD_LOGIC;
    \data_rd_reg_reg[28]\ : out STD_LOGIC;
    \data_rd_reg_reg[27]\ : out STD_LOGIC;
    \data_rd_reg_reg[26]\ : out STD_LOGIC;
    \data_rd_reg_reg[25]\ : out STD_LOGIC;
    \data_rd_reg_reg[24]\ : out STD_LOGIC;
    \data_rd_reg_reg[23]\ : out STD_LOGIC;
    \data_rd_reg_reg[22]\ : out STD_LOGIC;
    \data_rd_reg_reg[21]\ : out STD_LOGIC;
    \data_rd_reg_reg[20]\ : out STD_LOGIC;
    \data_rd_reg_reg[19]\ : out STD_LOGIC;
    \data_rd_reg_reg[18]\ : out STD_LOGIC;
    \data_rd_reg_reg[17]\ : out STD_LOGIC;
    \data_rd_reg_reg[16]\ : out STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[0]\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]_0\ : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 12 downto 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op3 : in STD_LOGIC_VECTOR ( 15 downto 0 );
    D : in STD_LOGIC_VECTOR ( 2 downto 0 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 15 downto 0 );
    wb_gpr_wr_dbg : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : in STD_LOGIC;
    read_register_MSR_1_reg : in STD_LOGIC;
    \wb_MSR_i_reg[30]\ : in STD_LOGIC;
    \wb_MSR_i_reg[28]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    wb_exception_i_reg : in STD_LOGIC;
    wb_byte_access : in STD_LOGIC;
    \wb_read_lsb_1_sel_reg[0]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \wb_read_lsb_1_sel_reg[0]_0\ : in STD_LOGIC;
    \wb_read_lsb_1_sel_reg[0]_1\ : in STD_LOGIC;
    \wb_read_lsb_1_sel_reg[0]_2\ : in STD_LOGIC;
    \wb_read_lsb_sel_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Use_DLMB.wb_dlmb_valid_read_data_reg[17]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[25]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[19]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[27]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[21]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[29]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[23]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[31]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[22]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[30]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[20]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[28]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[18]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[26]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[16]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[24]\ : in STD_LOGIC;
    \wb_read_lsb_1_sel_reg[0]_3\ : in STD_LOGIC;
    \wb_read_lsb_1_sel_reg[0]_4\ : in STD_LOGIC;
    \wb_read_lsb_1_sel_reg[0]_5\ : in STD_LOGIC;
    \wb_read_lsb_1_sel_reg[0]_6\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_exception_registers_gti : entity is "exception_registers_gti";
end system_microblaze_0_0_exception_registers_gti;

architecture STRUCTURE of system_microblaze_0_0_exception_registers_gti is
  signal \^di\ : STD_LOGIC;
  signal \^lockstep_out_reg[3708]\ : STD_LOGIC_VECTOR ( 16 downto 0 );
  signal \^lockstep_out_reg[3709]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3710]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3711]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3712]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3713]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3714]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3715]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3716]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3717]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3718]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3719]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3720]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3721]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3722]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3723]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3724]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3725]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3726]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3727]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3728]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3729]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3730]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3731]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3732]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3733]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3734]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3735]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3736]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3737]\ : STD_LOGIC;
  signal \^lockstep_out_reg[3738]\ : STD_LOGIC;
  signal addr_AddSub_0 : STD_LOGIC;
  signal addr_AddSub_1 : STD_LOGIC;
  signal addr_AddSub_10 : STD_LOGIC;
  signal addr_AddSub_11 : STD_LOGIC;
  signal addr_AddSub_12 : STD_LOGIC;
  signal addr_AddSub_13 : STD_LOGIC;
  signal addr_AddSub_14 : STD_LOGIC;
  signal addr_AddSub_15 : STD_LOGIC;
  signal addr_AddSub_16 : STD_LOGIC;
  signal addr_AddSub_17 : STD_LOGIC;
  signal addr_AddSub_18 : STD_LOGIC;
  signal addr_AddSub_19 : STD_LOGIC;
  signal addr_AddSub_2 : STD_LOGIC;
  signal addr_AddSub_20 : STD_LOGIC;
  signal addr_AddSub_21 : STD_LOGIC;
  signal addr_AddSub_22 : STD_LOGIC;
  signal addr_AddSub_23 : STD_LOGIC;
  signal addr_AddSub_24 : STD_LOGIC;
  signal addr_AddSub_25 : STD_LOGIC;
  signal addr_AddSub_26 : STD_LOGIC;
  signal addr_AddSub_27 : STD_LOGIC;
  signal addr_AddSub_28 : STD_LOGIC;
  signal addr_AddSub_29 : STD_LOGIC;
  signal addr_AddSub_3 : STD_LOGIC;
  signal addr_AddSub_30 : STD_LOGIC;
  signal addr_AddSub_31 : STD_LOGIC;
  signal addr_AddSub_4 : STD_LOGIC;
  signal addr_AddSub_5 : STD_LOGIC;
  signal addr_AddSub_6 : STD_LOGIC;
  signal addr_AddSub_7 : STD_LOGIC;
  signal addr_AddSub_8 : STD_LOGIC;
  signal addr_AddSub_9 : STD_LOGIC;
  signal carry_0 : STD_LOGIC;
  signal carry_1 : STD_LOGIC;
  signal carry_10 : STD_LOGIC;
  signal carry_11 : STD_LOGIC;
  signal carry_12 : STD_LOGIC;
  signal carry_13 : STD_LOGIC;
  signal carry_14 : STD_LOGIC;
  signal carry_15 : STD_LOGIC;
  signal carry_16 : STD_LOGIC;
  signal carry_17 : STD_LOGIC;
  signal carry_18 : STD_LOGIC;
  signal carry_19 : STD_LOGIC;
  signal carry_2 : STD_LOGIC;
  signal carry_20 : STD_LOGIC;
  signal carry_21 : STD_LOGIC;
  signal carry_22 : STD_LOGIC;
  signal carry_23 : STD_LOGIC;
  signal carry_24 : STD_LOGIC;
  signal carry_25 : STD_LOGIC;
  signal carry_26 : STD_LOGIC;
  signal carry_27 : STD_LOGIC;
  signal carry_28 : STD_LOGIC;
  signal carry_29 : STD_LOGIC;
  signal carry_3 : STD_LOGIC;
  signal carry_30 : STD_LOGIC;
  signal carry_31 : STD_LOGIC;
  signal carry_4 : STD_LOGIC;
  signal carry_5 : STD_LOGIC;
  signal carry_6 : STD_LOGIC;
  signal carry_7 : STD_LOGIC;
  signal carry_8 : STD_LOGIC;
  signal carry_9 : STD_LOGIC;
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal lopt_13 : STD_LOGIC;
  signal lopt_14 : STD_LOGIC;
  signal lopt_15 : STD_LOGIC;
  signal lopt_16 : STD_LOGIC;
  signal lopt_17 : STD_LOGIC;
  signal lopt_18 : STD_LOGIC;
  signal lopt_19 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal lopt_20 : STD_LOGIC;
  signal lopt_21 : STD_LOGIC;
  signal lopt_22 : STD_LOGIC;
  signal lopt_23 : STD_LOGIC;
  signal lopt_24 : STD_LOGIC;
  signal lopt_25 : STD_LOGIC;
  signal lopt_26 : STD_LOGIC;
  signal lopt_27 : STD_LOGIC;
  signal lopt_28 : STD_LOGIC;
  signal lopt_29 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_30 : STD_LOGIC;
  signal lopt_31 : STD_LOGIC;
  signal lopt_32 : STD_LOGIC;
  signal lopt_33 : STD_LOGIC;
  signal lopt_34 : STD_LOGIC;
  signal lopt_35 : STD_LOGIC;
  signal lopt_36 : STD_LOGIC;
  signal lopt_37 : STD_LOGIC;
  signal lopt_38 : STD_LOGIC;
  signal lopt_39 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_40 : STD_LOGIC;
  signal lopt_41 : STD_LOGIC;
  signal lopt_42 : STD_LOGIC;
  signal lopt_43 : STD_LOGIC;
  signal lopt_44 : STD_LOGIC;
  signal lopt_45 : STD_LOGIC;
  signal lopt_46 : STD_LOGIC;
  signal lopt_47 : STD_LOGIC;
  signal lopt_48 : STD_LOGIC;
  signal lopt_49 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_50 : STD_LOGIC;
  signal lopt_51 : STD_LOGIC;
  signal lopt_52 : STD_LOGIC;
  signal lopt_53 : STD_LOGIC;
  signal lopt_54 : STD_LOGIC;
  signal lopt_55 : STD_LOGIC;
  signal lopt_56 : STD_LOGIC;
  signal lopt_57 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal wb_PC_II_0 : STD_LOGIC;
  signal wb_PC_II_1 : STD_LOGIC;
  signal wb_PC_II_10 : STD_LOGIC;
  signal wb_PC_II_11 : STD_LOGIC;
  signal wb_PC_II_12 : STD_LOGIC;
  signal wb_PC_II_13 : STD_LOGIC;
  signal wb_PC_II_14 : STD_LOGIC;
  signal wb_PC_II_15 : STD_LOGIC;
  signal wb_PC_II_16 : STD_LOGIC;
  signal wb_PC_II_17 : STD_LOGIC;
  signal wb_PC_II_18 : STD_LOGIC;
  signal wb_PC_II_19 : STD_LOGIC;
  signal wb_PC_II_2 : STD_LOGIC;
  signal wb_PC_II_20 : STD_LOGIC;
  signal wb_PC_II_21 : STD_LOGIC;
  signal wb_PC_II_22 : STD_LOGIC;
  signal wb_PC_II_23 : STD_LOGIC;
  signal wb_PC_II_24 : STD_LOGIC;
  signal wb_PC_II_25 : STD_LOGIC;
  signal wb_PC_II_26 : STD_LOGIC;
  signal wb_PC_II_27 : STD_LOGIC;
  signal wb_PC_II_28 : STD_LOGIC;
  signal wb_PC_II_29 : STD_LOGIC;
  signal wb_PC_II_3 : STD_LOGIC;
  signal wb_PC_II_30 : STD_LOGIC;
  signal wb_PC_II_31 : STD_LOGIC;
  signal wb_PC_II_4 : STD_LOGIC;
  signal wb_PC_II_5 : STD_LOGIC;
  signal wb_PC_II_6 : STD_LOGIC;
  signal wb_PC_II_7 : STD_LOGIC;
  signal wb_PC_II_8 : STD_LOGIC;
  signal wb_PC_II_9 : STD_LOGIC;
begin
  DI <= \^di\;
  \LOCKSTEP_Out_reg[3708]\(16 downto 0) <= \^lockstep_out_reg[3708]\(16 downto 0);
  \LOCKSTEP_Out_reg[3709]\ <= \^lockstep_out_reg[3709]\;
  \LOCKSTEP_Out_reg[3710]\ <= \^lockstep_out_reg[3710]\;
  \LOCKSTEP_Out_reg[3711]\ <= \^lockstep_out_reg[3711]\;
  \LOCKSTEP_Out_reg[3712]\ <= \^lockstep_out_reg[3712]\;
  \LOCKSTEP_Out_reg[3713]\ <= \^lockstep_out_reg[3713]\;
  \LOCKSTEP_Out_reg[3714]\ <= \^lockstep_out_reg[3714]\;
  \LOCKSTEP_Out_reg[3715]\ <= \^lockstep_out_reg[3715]\;
  \LOCKSTEP_Out_reg[3716]\ <= \^lockstep_out_reg[3716]\;
  \LOCKSTEP_Out_reg[3717]\ <= \^lockstep_out_reg[3717]\;
  \LOCKSTEP_Out_reg[3718]\ <= \^lockstep_out_reg[3718]\;
  \LOCKSTEP_Out_reg[3719]\ <= \^lockstep_out_reg[3719]\;
  \LOCKSTEP_Out_reg[3720]\ <= \^lockstep_out_reg[3720]\;
  \LOCKSTEP_Out_reg[3721]\ <= \^lockstep_out_reg[3721]\;
  \LOCKSTEP_Out_reg[3722]\ <= \^lockstep_out_reg[3722]\;
  \LOCKSTEP_Out_reg[3723]\ <= \^lockstep_out_reg[3723]\;
  \LOCKSTEP_Out_reg[3724]\ <= \^lockstep_out_reg[3724]\;
  \LOCKSTEP_Out_reg[3725]\ <= \^lockstep_out_reg[3725]\;
  \LOCKSTEP_Out_reg[3726]\ <= \^lockstep_out_reg[3726]\;
  \LOCKSTEP_Out_reg[3727]\ <= \^lockstep_out_reg[3727]\;
  \LOCKSTEP_Out_reg[3728]\ <= \^lockstep_out_reg[3728]\;
  \LOCKSTEP_Out_reg[3729]\ <= \^lockstep_out_reg[3729]\;
  \LOCKSTEP_Out_reg[3730]\ <= \^lockstep_out_reg[3730]\;
  \LOCKSTEP_Out_reg[3731]\ <= \^lockstep_out_reg[3731]\;
  \LOCKSTEP_Out_reg[3732]\ <= \^lockstep_out_reg[3732]\;
  \LOCKSTEP_Out_reg[3733]\ <= \^lockstep_out_reg[3733]\;
  \LOCKSTEP_Out_reg[3734]\ <= \^lockstep_out_reg[3734]\;
  \LOCKSTEP_Out_reg[3735]\ <= \^lockstep_out_reg[3735]\;
  \LOCKSTEP_Out_reg[3736]\ <= \^lockstep_out_reg[3736]\;
  \LOCKSTEP_Out_reg[3737]\ <= \^lockstep_out_reg[3737]\;
  \LOCKSTEP_Out_reg[3738]\ <= \^lockstep_out_reg[3738]\;
CarryIn_MUXCY: entity work.system_microblaze_0_0_MB_MUXCY_269
     port map (
      CI => carry_0,
      lopt => lopt,
      lopt_1 => \^di\,
      lopt_10 => lopt_4,
      lopt_11 => lopt_5,
      lopt_2 => addr_AddSub_0,
      lopt_3 => lopt_1,
      lopt_4 => \^lockstep_out_reg[3738]\,
      lopt_5 => addr_AddSub_1,
      lopt_6 => lopt_2,
      lopt_7 => \^lockstep_out_reg[3737]\,
      lopt_8 => addr_AddSub_2,
      lopt_9 => lopt_3,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[0].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized97\
     port map (
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      \Using_FPGA.Native_0\(0) => \^lockstep_out_reg[3708]\(16),
      addr_AddSub_31 => addr_AddSub_31,
      \mem_pc_i_reg[0]\(0) => \mem_pc_i_reg[0]\(31),
      wb_PC_II_31 => wb_PC_II_31,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[0].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_270
     port map (
      LO => carry_31,
      \LOCKSTEP_Out_reg[3769]\(0) => \LOCKSTEP_Out_reg[3769]\(15),
      addr_AddSub_31 => addr_AddSub_31
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[0].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3708]\(0) => \^lockstep_out_reg[3708]\(16),
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_31 => wb_PC_II_31
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[10].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized77\
     port map (
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_21,
      \Using_FPGA.Native_0\ => \^lockstep_out_reg[3718]\,
      \mem_pc_i_reg[10]\(0) => \mem_pc_i_reg[0]\(21),
      wb_PC_II_21 => wb_PC_II_21,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_271
     port map (
      LO => carry_22,
      \LOCKSTEP_Out_reg[3779]\(0) => \LOCKSTEP_Out_reg[3769]\(5),
      S => addr_AddSub_21,
      \Using_FPGA.Native\ => \^lockstep_out_reg[3718]\,
      \Using_FPGA.Native_0\ => carry_21,
      lopt => lopt_6,
      lopt_1 => lopt_2,
      lopt_10 => lopt_9,
      lopt_11 => \^lockstep_out_reg[3733]\,
      lopt_12 => addr_AddSub_6,
      lopt_13 => lopt_10,
      lopt_14 => lopt_11,
      lopt_15 => lopt_12,
      lopt_16 => lopt_13,
      lopt_17 => lopt_14,
      lopt_18 => \^lockstep_out_reg[3732]\,
      lopt_19 => addr_AddSub_7,
      lopt_2 => \^lockstep_out_reg[3736]\,
      lopt_20 => lopt_15,
      lopt_21 => \^lockstep_out_reg[3731]\,
      lopt_22 => addr_AddSub_8,
      lopt_23 => lopt_16,
      lopt_24 => \^lockstep_out_reg[3730]\,
      lopt_25 => addr_AddSub_9,
      lopt_26 => lopt_17,
      lopt_27 => \^lockstep_out_reg[3729]\,
      lopt_28 => addr_AddSub_10,
      lopt_29 => lopt_18,
      lopt_3 => addr_AddSub_3,
      lopt_30 => lopt_19,
      lopt_31 => lopt_20,
      lopt_32 => lopt_21,
      lopt_33 => lopt_22,
      lopt_34 => \^lockstep_out_reg[3728]\,
      lopt_35 => addr_AddSub_11,
      lopt_36 => lopt_23,
      lopt_37 => \^lockstep_out_reg[3727]\,
      lopt_38 => addr_AddSub_12,
      lopt_39 => lopt_24,
      lopt_4 => lopt_7,
      lopt_40 => \^lockstep_out_reg[3726]\,
      lopt_41 => addr_AddSub_13,
      lopt_42 => lopt_25,
      lopt_43 => \^lockstep_out_reg[3725]\,
      lopt_44 => addr_AddSub_14,
      lopt_45 => lopt_26,
      lopt_46 => lopt_27,
      lopt_47 => lopt_28,
      lopt_48 => lopt_29,
      lopt_49 => lopt_30,
      lopt_5 => \^lockstep_out_reg[3735]\,
      lopt_50 => \^lockstep_out_reg[3724]\,
      lopt_51 => addr_AddSub_15,
      lopt_52 => lopt_31,
      lopt_53 => \^lockstep_out_reg[3723]\,
      lopt_54 => addr_AddSub_16,
      lopt_55 => lopt_32,
      lopt_56 => \^lockstep_out_reg[3722]\,
      lopt_57 => addr_AddSub_17,
      lopt_58 => lopt_33,
      lopt_59 => \^lockstep_out_reg[3721]\,
      lopt_6 => addr_AddSub_4,
      lopt_60 => addr_AddSub_18,
      lopt_61 => lopt_34,
      lopt_62 => lopt_35,
      lopt_63 => lopt_36,
      lopt_64 => lopt_37,
      lopt_65 => lopt_38,
      lopt_66 => \^lockstep_out_reg[3720]\,
      lopt_67 => addr_AddSub_19,
      lopt_68 => lopt_39,
      lopt_69 => \^lockstep_out_reg[3719]\,
      lopt_7 => lopt_8,
      lopt_70 => addr_AddSub_20,
      lopt_71 => lopt_40,
      lopt_72 => \^lockstep_out_reg[3717]\,
      lopt_73 => addr_AddSub_22,
      lopt_74 => lopt_41,
      lopt_75 => lopt_42,
      lopt_76 => lopt_43,
      lopt_8 => \^lockstep_out_reg[3734]\,
      lopt_9 => addr_AddSub_5
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[10].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_272
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3718]\ => \^lockstep_out_reg[3718]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_21 => wb_PC_II_21
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[11].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized75\
     port map (
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_20,
      \Using_FPGA.Native_0\ => \^lockstep_out_reg[3719]\,
      \mem_pc_i_reg[11]\(0) => \mem_pc_i_reg[0]\(20),
      wb_PC_II_20 => wb_PC_II_20,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_273
     port map (
      LO => carry_21,
      \LOCKSTEP_Out_reg[3780]\(0) => \LOCKSTEP_Out_reg[3769]\(4),
      S => addr_AddSub_20,
      \Using_FPGA.Native\ => \^lockstep_out_reg[3719]\,
      \Using_FPGA.Native_0\ => carry_20,
      lopt => lopt_39,
      lopt_1 => lopt_42
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[11].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_274
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3719]\ => \^lockstep_out_reg[3719]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_20 => wb_PC_II_20
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[12].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized73\
     port map (
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_19,
      \Using_FPGA.Native_0\ => \^lockstep_out_reg[3720]\,
      \mem_pc_i_reg[12]\(0) => \mem_pc_i_reg[0]\(19),
      wb_PC_II_19 => wb_PC_II_19,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[12].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_275
     port map (
      LO => carry_20,
      \LOCKSTEP_Out_reg[3781]\(0) => \LOCKSTEP_Out_reg[3769]\(3),
      S => addr_AddSub_19,
      \Using_FPGA.Native\ => \^lockstep_out_reg[3720]\,
      \Using_FPGA.Native_0\ => carry_19,
      lopt => lopt_38,
      lopt_1 => lopt_41
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[12].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_276
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3720]\ => \^lockstep_out_reg[3720]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_19 => wb_PC_II_19
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[13].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized71\
     port map (
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_18,
      \Using_FPGA.Native_0\ => \^lockstep_out_reg[3721]\,
      \mem_pc_i_reg[13]\(0) => \mem_pc_i_reg[0]\(18),
      wb_PC_II_18 => wb_PC_II_18,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[13].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_277
     port map (
      LO => carry_19,
      \LOCKSTEP_Out_reg[3782]\(0) => \LOCKSTEP_Out_reg[3769]\(2),
      S => addr_AddSub_18,
      \Using_FPGA.Native\ => \^lockstep_out_reg[3721]\,
      \Using_FPGA.Native_0\ => carry_18,
      lopt => lopt_33,
      lopt_1 => lopt_37
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[13].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_278
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3721]\ => \^lockstep_out_reg[3721]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_18 => wb_PC_II_18
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[14].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized69\
     port map (
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_17,
      \Using_FPGA.Native_0\ => \^lockstep_out_reg[3722]\,
      \mem_pc_i_reg[14]\(0) => \mem_pc_i_reg[0]\(17),
      wb_PC_II_17 => wb_PC_II_17,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_279
     port map (
      LO => carry_18,
      \LOCKSTEP_Out_reg[3783]\(0) => \LOCKSTEP_Out_reg[3769]\(1),
      S => addr_AddSub_17,
      \Using_FPGA.Native\ => \^lockstep_out_reg[3722]\,
      \Using_FPGA.Native_0\ => carry_17,
      lopt => lopt_32,
      lopt_1 => lopt_36
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[14].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_280
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3722]\ => \^lockstep_out_reg[3722]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_17 => wb_PC_II_17
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[15].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized67\
     port map (
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_16,
      \Using_FPGA.Native_0\ => \^lockstep_out_reg[3723]\,
      \mem_pc_i_reg[15]\(0) => \mem_pc_i_reg[0]\(16),
      wb_PC_II_16 => wb_PC_II_16,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_281
     port map (
      LO => carry_17,
      \LOCKSTEP_Out_reg[3784]\(0) => \LOCKSTEP_Out_reg[3769]\(0),
      S => addr_AddSub_16,
      \Using_FPGA.Native\ => \^lockstep_out_reg[3723]\,
      \Using_FPGA.Native_0\ => carry_16,
      lopt => lopt_31,
      lopt_1 => lopt_35
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[15].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_282
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3723]\ => \^lockstep_out_reg[3723]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_16 => wb_PC_II_16
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[16].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized65\
     port map (
      DI => \^lockstep_out_reg[3724]\,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_15,
      \mem_pc_i_reg[16]\(0) => \mem_pc_i_reg[0]\(15),
      wb_PC_II_15 => wb_PC_II_15,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[16].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_283
     port map (
      DI => \^lockstep_out_reg[3724]\,
      \EX_Branch_CMP_Op1_reg[16]\(0) => \EX_Branch_CMP_Op1_reg[16]\(15),
      EX_Fwd(0) => EX_Fwd(15),
      \EX_Op3_reg[16]\(0) => \EX_Op3_reg[16]\(15),
      GPR_Op1(0) => GPR_Op1(15),
      GPR_Op3(0) => GPR_Op3(15),
      LO => carry_16,
      \LOCKSTEP_Out_reg[3785]\ => \^lockstep_out_reg[3708]\(15),
      Q(0) => Q(15),
      S => addr_AddSub_15,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native\(12),
      \Using_FPGA.Native_0\ => carry_15,
      lopt => lopt_30,
      lopt_1 => lopt_34,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1),
      wb_byte_access => wb_byte_access,
      wb_exception_i_reg => wb_exception_i_reg,
      \wb_read_lsb_1_sel_reg[0]\ => \wb_read_lsb_1_sel_reg[0]_6\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[16].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_284
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3724]\ => \^lockstep_out_reg[3724]\,
      \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      WB_Byte_Access_reg(0) => \^lockstep_out_reg[3708]\(15),
      \data_rd_reg_reg[16]\ => \data_rd_reg_reg[16]\,
      mem_valid_reg => mem_valid_reg,
      read_register_MSR_1_reg => read_register_MSR_1_reg,
      wb_PC_II_15 => wb_PC_II_15,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[17].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized63\
     port map (
      DI => \^lockstep_out_reg[3725]\,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_14,
      \mem_pc_i_reg[17]\(0) => \mem_pc_i_reg[0]\(14),
      wb_PC_II_14 => wb_PC_II_14,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[17].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_285
     port map (
      DI => \^lockstep_out_reg[3725]\,
      \EX_Branch_CMP_Op1_reg[17]\(0) => \EX_Branch_CMP_Op1_reg[16]\(14),
      EX_Fwd(0) => EX_Fwd(14),
      \EX_Op3_reg[17]\(0) => \EX_Op3_reg[16]\(14),
      GPR_Op1(0) => GPR_Op1(14),
      GPR_Op3(0) => GPR_Op3(14),
      LO => carry_15,
      \LOCKSTEP_Out_reg[3786]\ => \^lockstep_out_reg[3708]\(14),
      \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      Q(0) => Q(14),
      S => addr_AddSub_14,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native\(11),
      \Using_FPGA.Native_0\ => carry_14,
      \data_rd_reg_reg[17]\ => \data_rd_reg_reg[17]\,
      lopt => lopt_25,
      lopt_1 => lopt_29,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1),
      read_register_MSR_1_reg => read_register_MSR_1_reg,
      wb_byte_access => wb_byte_access,
      wb_exception_i_reg => wb_exception_i_reg,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      \wb_read_lsb_1_sel_reg[0]\ => \wb_read_lsb_1_sel_reg[0]\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[17].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_286
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3725]\ => \^lockstep_out_reg[3725]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_14 => wb_PC_II_14
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[18].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized61\
     port map (
      DI => \^lockstep_out_reg[3726]\,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_13,
      \mem_pc_i_reg[18]\(0) => \mem_pc_i_reg[0]\(13),
      wb_PC_II_13 => wb_PC_II_13,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_287
     port map (
      DI => \^lockstep_out_reg[3726]\,
      \EX_Branch_CMP_Op1_reg[18]\(0) => \EX_Branch_CMP_Op1_reg[16]\(13),
      EX_Fwd(0) => EX_Fwd(13),
      \EX_Op3_reg[18]\(0) => \EX_Op3_reg[16]\(13),
      GPR_Op1(0) => GPR_Op1(13),
      GPR_Op3(0) => GPR_Op3(13),
      LO => carry_14,
      \LOCKSTEP_Out_reg[3787]\ => \^lockstep_out_reg[3708]\(13),
      \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      Q(0) => Q(13),
      S => addr_AddSub_13,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native\(10),
      \Using_FPGA.Native_0\ => carry_13,
      \data_rd_reg_reg[18]\ => \data_rd_reg_reg[18]\,
      lopt => lopt_24,
      lopt_1 => lopt_28,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1),
      read_register_MSR_1_reg => read_register_MSR_1_reg,
      wb_byte_access => wb_byte_access,
      wb_exception_i_reg => wb_exception_i_reg,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      \wb_read_lsb_1_sel_reg[0]\ => \wb_read_lsb_1_sel_reg[0]_5\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[18].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_288
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3726]\ => \^lockstep_out_reg[3726]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_13 => wb_PC_II_13
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[19].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized59\
     port map (
      DI => \^lockstep_out_reg[3727]\,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_12,
      \mem_pc_i_reg[19]\(0) => \mem_pc_i_reg[0]\(12),
      wb_PC_II_12 => wb_PC_II_12,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_289
     port map (
      DI => \^lockstep_out_reg[3727]\,
      \EX_Branch_CMP_Op1_reg[19]\(0) => \EX_Branch_CMP_Op1_reg[16]\(12),
      EX_Fwd(0) => EX_Fwd(12),
      \EX_Op3_reg[19]\(0) => \EX_Op3_reg[16]\(12),
      GPR_Op1(0) => GPR_Op1(12),
      GPR_Op3(0) => GPR_Op3(12),
      LO => carry_13,
      \LOCKSTEP_Out_reg[3788]\ => \^lockstep_out_reg[3708]\(12),
      \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      Q(0) => Q(12),
      S => addr_AddSub_12,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native\(9),
      \Using_FPGA.Native_0\ => carry_12,
      \data_rd_reg_reg[19]\ => \data_rd_reg_reg[19]\,
      lopt => lopt_23,
      lopt_1 => lopt_27,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1),
      read_register_MSR_1_reg => read_register_MSR_1_reg,
      wb_byte_access => wb_byte_access,
      wb_exception_i_reg => wb_exception_i_reg,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      \wb_read_lsb_1_sel_reg[0]\ => \wb_read_lsb_1_sel_reg[0]_0\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[19].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_290
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3727]\ => \^lockstep_out_reg[3727]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_12 => wb_PC_II_12
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[1].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized95\
     port map (
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_30,
      \Using_FPGA.Native_0\ => \^lockstep_out_reg[3709]\,
      \mem_pc_i_reg[1]\(0) => \mem_pc_i_reg[0]\(30),
      wb_PC_II_30 => wb_PC_II_30,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[1].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_291
     port map (
      LO => carry_31,
      \LOCKSTEP_Out_reg[3770]\(0) => \LOCKSTEP_Out_reg[3769]\(14),
      S => addr_AddSub_30,
      \Using_FPGA.Native\ => \^lockstep_out_reg[3709]\,
      \Using_FPGA.Native_0\ => carry_30,
      lopt => lopt_44,
      lopt_1 => lopt_40,
      lopt_10 => lopt_47,
      lopt_11 => \^lockstep_out_reg[3713]\,
      lopt_12 => addr_AddSub_26,
      lopt_13 => lopt_48,
      lopt_14 => lopt_49,
      lopt_15 => lopt_50,
      lopt_16 => lopt_51,
      lopt_17 => lopt_52,
      lopt_18 => \^lockstep_out_reg[3712]\,
      lopt_19 => addr_AddSub_27,
      lopt_2 => \^lockstep_out_reg[3716]\,
      lopt_20 => lopt_53,
      lopt_21 => \^lockstep_out_reg[3711]\,
      lopt_22 => addr_AddSub_28,
      lopt_23 => lopt_54,
      lopt_24 => \^lockstep_out_reg[3710]\,
      lopt_25 => addr_AddSub_29,
      lopt_26 => lopt_55,
      lopt_27 => lopt_56,
      lopt_28 => lopt_57,
      lopt_3 => addr_AddSub_23,
      lopt_4 => lopt_45,
      lopt_5 => \^lockstep_out_reg[3715]\,
      lopt_6 => addr_AddSub_24,
      lopt_7 => lopt_46,
      lopt_8 => \^lockstep_out_reg[3714]\,
      lopt_9 => addr_AddSub_25
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[1].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_292
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3709]\ => \^lockstep_out_reg[3709]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_30 => wb_PC_II_30
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[20].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized57\
     port map (
      DI => \^lockstep_out_reg[3728]\,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_11,
      \mem_pc_i_reg[20]\(0) => \mem_pc_i_reg[0]\(11),
      wb_PC_II_11 => wb_PC_II_11,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[20].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_293
     port map (
      DI => \^lockstep_out_reg[3728]\,
      \EX_Branch_CMP_Op1_reg[20]\(0) => \EX_Branch_CMP_Op1_reg[16]\(11),
      EX_Fwd(0) => EX_Fwd(11),
      \EX_Op3_reg[20]\(0) => \EX_Op3_reg[16]\(11),
      GPR_Op1(0) => GPR_Op1(11),
      GPR_Op3(0) => GPR_Op3(11),
      LO => carry_12,
      \LOCKSTEP_Out_reg[3789]\ => \^lockstep_out_reg[3708]\(11),
      \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      Q(0) => Q(11),
      S => addr_AddSub_11,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native\(8),
      \Using_FPGA.Native_0\ => carry_11,
      \data_rd_reg_reg[20]\ => \data_rd_reg_reg[20]\,
      lopt => lopt_22,
      lopt_1 => lopt_26,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1),
      read_register_MSR_1_reg => read_register_MSR_1_reg,
      wb_byte_access => wb_byte_access,
      wb_exception_i_reg => wb_exception_i_reg,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      \wb_read_lsb_1_sel_reg[0]\ => \wb_read_lsb_1_sel_reg[0]_4\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[20].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_294
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3728]\ => \^lockstep_out_reg[3728]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_11 => wb_PC_II_11
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[21].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized55\
     port map (
      DI => \^lockstep_out_reg[3729]\,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_10,
      \mem_pc_i_reg[21]\(0) => \mem_pc_i_reg[0]\(10),
      wb_PC_II_10 => wb_PC_II_10,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[21].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_295
     port map (
      DI => \^lockstep_out_reg[3729]\,
      \EX_Branch_CMP_Op1_reg[21]\(0) => \EX_Branch_CMP_Op1_reg[16]\(10),
      EX_Fwd(0) => EX_Fwd(10),
      \EX_Op3_reg[21]\(0) => \EX_Op3_reg[16]\(10),
      GPR_Op1(0) => GPR_Op1(10),
      GPR_Op3(0) => GPR_Op3(10),
      LO => carry_11,
      \LOCKSTEP_Out_reg[3790]\ => \^lockstep_out_reg[3708]\(10),
      \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      Q(0) => Q(10),
      S => addr_AddSub_10,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native\(7),
      \Using_FPGA.Native_0\ => carry_10,
      \data_rd_reg_reg[21]\ => \data_rd_reg_reg[21]\,
      lopt => lopt_17,
      lopt_1 => lopt_21,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1),
      read_register_MSR_1_reg => read_register_MSR_1_reg,
      wb_byte_access => wb_byte_access,
      wb_exception_i_reg => wb_exception_i_reg,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      \wb_read_lsb_1_sel_reg[0]\ => \wb_read_lsb_1_sel_reg[0]_1\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[21].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_296
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3729]\ => \^lockstep_out_reg[3729]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_10 => wb_PC_II_10
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[22].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized53\
     port map (
      DI => \^lockstep_out_reg[3730]\,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_9,
      \mem_pc_i_reg[22]\(0) => \mem_pc_i_reg[0]\(9),
      wb_PC_II_9 => wb_PC_II_9,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_297
     port map (
      DI => \^lockstep_out_reg[3730]\,
      \EX_Branch_CMP_Op1_reg[22]\(0) => \EX_Branch_CMP_Op1_reg[16]\(9),
      EX_Fwd(0) => EX_Fwd(9),
      \EX_Op3_reg[22]\(0) => \EX_Op3_reg[16]\(9),
      GPR_Op1(0) => GPR_Op1(9),
      GPR_Op3(0) => GPR_Op3(9),
      LO => carry_10,
      \LOCKSTEP_Out_reg[3791]\ => \^lockstep_out_reg[3708]\(9),
      \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      Q(0) => Q(9),
      S => addr_AddSub_9,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native\(6),
      \Using_FPGA.Native_0\ => carry_9,
      \data_rd_reg_reg[22]\ => \data_rd_reg_reg[22]\,
      lopt => lopt_16,
      lopt_1 => lopt_20,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1),
      read_register_MSR_1_reg => read_register_MSR_1_reg,
      wb_byte_access => wb_byte_access,
      wb_exception_i_reg => wb_exception_i_reg,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      \wb_read_lsb_1_sel_reg[0]\ => \wb_read_lsb_1_sel_reg[0]_3\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[22].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_298
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3730]\ => \^lockstep_out_reg[3730]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_9 => wb_PC_II_9
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[23].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized51\
     port map (
      DI => \^lockstep_out_reg[3731]\,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_8,
      \mem_pc_i_reg[23]\(0) => \mem_pc_i_reg[0]\(8),
      wb_PC_II_8 => wb_PC_II_8,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_299
     port map (
      DI => \^lockstep_out_reg[3731]\,
      \EX_Branch_CMP_Op1_reg[23]\(0) => \EX_Branch_CMP_Op1_reg[16]\(8),
      EX_Fwd(0) => EX_Fwd(8),
      \EX_Op3_reg[23]\(0) => \EX_Op3_reg[16]\(8),
      GPR_Op1(0) => GPR_Op1(8),
      GPR_Op3(0) => GPR_Op3(8),
      LO => carry_9,
      \LOCKSTEP_Out_reg[3792]\ => \^lockstep_out_reg[3708]\(8),
      \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      Q(0) => Q(8),
      S => addr_AddSub_8,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native\(5),
      \Using_FPGA.Native_0\ => carry_8,
      \data_rd_reg_reg[23]\ => \data_rd_reg_reg[23]\,
      lopt => lopt_15,
      lopt_1 => lopt_19,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1),
      read_register_MSR_1_reg => read_register_MSR_1_reg,
      wb_byte_access => wb_byte_access,
      wb_exception_i_reg => wb_exception_i_reg,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      \wb_read_lsb_1_sel_reg[0]\ => \wb_read_lsb_1_sel_reg[0]_2\
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[23].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_300
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3731]\ => \^lockstep_out_reg[3731]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_8 => wb_PC_II_8
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[24].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized49\
     port map (
      DI => \^lockstep_out_reg[3732]\,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_7,
      \mem_pc_i_reg[24]\(0) => \mem_pc_i_reg[0]\(7),
      wb_PC_II_7 => wb_PC_II_7,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[24].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_301
     port map (
      DI => \^lockstep_out_reg[3732]\,
      \EX_Branch_CMP_Op1_reg[24]\(0) => \EX_Branch_CMP_Op1_reg[16]\(7),
      EX_Fwd(0) => EX_Fwd(7),
      \EX_Op3_reg[24]\(0) => \EX_Op3_reg[16]\(7),
      GPR_Op1(0) => GPR_Op1(7),
      GPR_Op3(0) => GPR_Op3(7),
      LO => carry_8,
      \LOCKSTEP_Out_reg[3793]\ => \^lockstep_out_reg[3708]\(7),
      \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      Q(0) => Q(7),
      S => addr_AddSub_7,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[16]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[16]\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[24]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[24]\,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native\(4),
      \Using_FPGA.Native_0\ => carry_7,
      \data_rd_reg_reg[24]\ => \data_rd_reg_reg[24]\,
      lopt => lopt_14,
      lopt_1 => lopt_18,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1),
      read_register_MSR_1_reg => read_register_MSR_1_reg,
      wb_exception_i_reg => wb_exception_i_reg,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      \wb_read_lsb_sel_reg[1]\(0) => \wb_read_lsb_sel_reg[1]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[24].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_302
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3732]\ => \^lockstep_out_reg[3732]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_7 => wb_PC_II_7
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[25].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized47\
     port map (
      DI => \^lockstep_out_reg[3733]\,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_6,
      \mem_pc_i_reg[25]\(0) => \mem_pc_i_reg[0]\(6),
      wb_PC_II_6 => wb_PC_II_6,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[25].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_303
     port map (
      DI => \^lockstep_out_reg[3733]\,
      \EX_Branch_CMP_Op1_reg[25]\(0) => \EX_Branch_CMP_Op1_reg[16]\(6),
      EX_Fwd(0) => EX_Fwd(6),
      \EX_Op3_reg[25]\(0) => \EX_Op3_reg[16]\(6),
      GPR_Op1(0) => GPR_Op1(6),
      GPR_Op3(0) => GPR_Op3(6),
      LO => carry_7,
      \LOCKSTEP_Out_reg[3794]\ => \^lockstep_out_reg[3708]\(6),
      \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      Q(0) => Q(6),
      S => addr_AddSub_6,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[17]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[17]\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[25]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[25]\,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native\(3),
      \Using_FPGA.Native_0\ => carry_6,
      \data_rd_reg_reg[25]\ => \data_rd_reg_reg[25]\,
      lopt => lopt_9,
      lopt_1 => lopt_13,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1),
      read_register_MSR_1_reg => read_register_MSR_1_reg,
      wb_exception_i_reg => wb_exception_i_reg,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      \wb_read_lsb_sel_reg[1]\(0) => \wb_read_lsb_sel_reg[1]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[25].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_304
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3733]\ => \^lockstep_out_reg[3733]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_6 => wb_PC_II_6
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[26].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized45\
     port map (
      DI => \^lockstep_out_reg[3734]\,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_5,
      \mem_pc_i_reg[26]\(0) => \mem_pc_i_reg[0]\(5),
      wb_PC_II_5 => wb_PC_II_5,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_305
     port map (
      DI => \^lockstep_out_reg[3734]\,
      \EX_Branch_CMP_Op1_reg[26]\(0) => \EX_Branch_CMP_Op1_reg[16]\(5),
      EX_Fwd(0) => EX_Fwd(5),
      \EX_Op3_reg[26]\(0) => \EX_Op3_reg[16]\(5),
      GPR_Op1(0) => GPR_Op1(5),
      GPR_Op3(0) => GPR_Op3(5),
      LO => carry_6,
      \LOCKSTEP_Out_reg[3795]\ => \^lockstep_out_reg[3708]\(5),
      \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      Q(0) => Q(5),
      S => addr_AddSub_5,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[18]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[18]\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[26]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[26]\,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native\(2),
      \Using_FPGA.Native_0\ => carry_5,
      \data_rd_reg_reg[26]\ => \data_rd_reg_reg[26]\,
      lopt => lopt_8,
      lopt_1 => lopt_12,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1),
      read_register_MSR_1_reg => read_register_MSR_1_reg,
      wb_exception_i_reg => wb_exception_i_reg,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      \wb_read_lsb_sel_reg[1]\(0) => \wb_read_lsb_sel_reg[1]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[26].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_306
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3734]\ => \^lockstep_out_reg[3734]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_5 => wb_PC_II_5
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[27].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized43\
     port map (
      DI => \^lockstep_out_reg[3735]\,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_4,
      \mem_pc_i_reg[27]\(0) => \mem_pc_i_reg[0]\(4),
      wb_PC_II_4 => wb_PC_II_4,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_307
     port map (
      DI => \^lockstep_out_reg[3735]\,
      \EX_Branch_CMP_Op1_reg[27]\(0) => \EX_Branch_CMP_Op1_reg[16]\(4),
      EX_Fwd(0) => EX_Fwd(4),
      \EX_Op3_reg[27]\(0) => \EX_Op3_reg[16]\(4),
      GPR_Op1(0) => GPR_Op1(4),
      GPR_Op3(0) => GPR_Op3(4),
      LO => carry_5,
      \LOCKSTEP_Out_reg[3796]\ => \^lockstep_out_reg[3708]\(4),
      \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      Q(0) => Q(4),
      S => addr_AddSub_4,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[19]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[19]\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[27]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[27]\,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native\(1),
      \Using_FPGA.Native_0\ => carry_4,
      \data_rd_reg_reg[27]\ => \data_rd_reg_reg[27]\,
      lopt => lopt_7,
      lopt_1 => lopt_11,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1),
      read_register_MSR_1_reg => read_register_MSR_1_reg,
      wb_exception_i_reg => wb_exception_i_reg,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      \wb_read_lsb_sel_reg[1]\(0) => \wb_read_lsb_sel_reg[1]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[27].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_308
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3735]\ => \^lockstep_out_reg[3735]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_4 => wb_PC_II_4
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[28].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized41\
     port map (
      DI => \^lockstep_out_reg[3736]\,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_3,
      \mem_pc_i_reg[28]\(0) => \mem_pc_i_reg[0]\(3),
      wb_PC_II_3 => wb_PC_II_3,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[28].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_309
     port map (
      D(0) => D(2),
      DI => \^lockstep_out_reg[3736]\,
      \EX_Branch_CMP_Op1_reg[28]\(0) => \EX_Branch_CMP_Op1_reg[16]\(3),
      EX_Fwd(0) => EX_Fwd(3),
      \EX_Op3_reg[28]\(0) => \EX_Op3_reg[16]\(3),
      GPR_Op1(0) => GPR_Op1(3),
      GPR_Op3(0) => GPR_Op3(3),
      LO => carry_4,
      \LOCKSTEP_Out_reg[3797]\ => \^lockstep_out_reg[3708]\(3),
      \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      Q(0) => Q(3),
      S => addr_AddSub_3,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[20]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[20]\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[28]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[28]\,
      \Using_FPGA.Native\ => carry_3,
      \data_rd_reg_reg[28]\ => \data_rd_reg_reg[28]\,
      lopt => lopt_6,
      lopt_1 => lopt_10,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1),
      read_register_MSR_1_reg => read_register_MSR_1_reg,
      \wb_MSR_i_reg[28]\(0) => \wb_MSR_i_reg[28]\(1),
      wb_exception_i_reg => wb_exception_i_reg,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      \wb_read_lsb_sel_reg[1]\(0) => \wb_read_lsb_sel_reg[1]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[28].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_310
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3736]\ => \^lockstep_out_reg[3736]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_3 => wb_PC_II_3
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[29].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized39\
     port map (
      DI => \^lockstep_out_reg[3737]\,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_2,
      \mem_pc_i_reg[29]\(0) => \mem_pc_i_reg[0]\(2),
      wb_PC_II_2 => wb_PC_II_2,
      \wb_exception_kind_i_reg[28]\ => \wb_exception_kind_i_reg[28]_0\,
      \wb_exception_kind_i_reg[28]_0\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[29].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_311
     port map (
      D(0) => D(1),
      DI => \^lockstep_out_reg[3737]\,
      \EX_Branch_CMP_Op1_reg[29]\(0) => \EX_Branch_CMP_Op1_reg[16]\(2),
      EX_Fwd(0) => EX_Fwd(2),
      \EX_Op3_reg[29]\(0) => \EX_Op3_reg[16]\(2),
      GPR_Op1(0) => GPR_Op1(2),
      GPR_Op3(0) => GPR_Op3(2),
      LO => carry_3,
      \LOCKSTEP_Out_reg[3798]\ => \^lockstep_out_reg[3708]\(2),
      \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      Q(0) => Q(2),
      S => addr_AddSub_2,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[21]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[21]\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[29]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[29]\,
      \Using_FPGA.Native\ => carry_2,
      \data_rd_reg_reg[29]\ => \data_rd_reg_reg[29]\,
      lopt => lopt_2,
      lopt_1 => lopt_5,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1),
      read_register_MSR_1_reg => read_register_MSR_1_reg,
      \wb_MSR_i_reg[29]\(0) => \wb_MSR_i_reg[28]\(0),
      wb_exception_i_reg => wb_exception_i_reg,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      \wb_read_lsb_sel_reg[1]\(0) => \wb_read_lsb_sel_reg[1]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[29].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_312
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3737]\ => \^lockstep_out_reg[3737]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_2 => wb_PC_II_2
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[2].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized93\
     port map (
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_29,
      \Using_FPGA.Native_0\ => \^lockstep_out_reg[3710]\,
      \mem_pc_i_reg[2]\(0) => \mem_pc_i_reg[0]\(29),
      wb_PC_II_29 => wb_PC_II_29,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_313
     port map (
      LO => carry_30,
      \LOCKSTEP_Out_reg[3771]\(0) => \LOCKSTEP_Out_reg[3769]\(13),
      S => addr_AddSub_29,
      \Using_FPGA.Native\ => \^lockstep_out_reg[3710]\,
      \Using_FPGA.Native_0\ => carry_29,
      lopt => lopt_54,
      lopt_1 => lopt_57
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[2].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_314
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3710]\ => \^lockstep_out_reg[3710]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_29 => wb_PC_II_29
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[30].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized37\
     port map (
      DI => \^lockstep_out_reg[3738]\,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_1,
      \mem_pc_i_reg[30]\(0) => \mem_pc_i_reg[0]\(1),
      wb_PC_II_1 => wb_PC_II_1,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_315
     port map (
      D(0) => D(0),
      DI => \^lockstep_out_reg[3738]\,
      \EX_Branch_CMP_Op1_reg[30]\(0) => \EX_Branch_CMP_Op1_reg[16]\(1),
      EX_Fwd(0) => EX_Fwd(1),
      \EX_Op3_reg[30]\(0) => \EX_Op3_reg[16]\(1),
      GPR_Op1(0) => GPR_Op1(1),
      GPR_Op3(0) => GPR_Op3(1),
      LO => carry_2,
      \LOCKSTEP_Out_reg[3799]\ => \^lockstep_out_reg[3708]\(1),
      \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      Q(0) => Q(1),
      S => addr_AddSub_1,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[22]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[22]\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[30]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[30]\,
      \Using_FPGA.Native\ => carry_1,
      \data_rd_reg_reg[30]\ => \data_rd_reg_reg[30]\,
      lopt => lopt_1,
      lopt_1 => lopt_4,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1),
      read_register_MSR_1_reg => read_register_MSR_1_reg,
      \wb_MSR_i_reg[30]\ => \wb_MSR_i_reg[30]\,
      wb_exception_i_reg => wb_exception_i_reg,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      \wb_read_lsb_sel_reg[1]\(0) => \wb_read_lsb_sel_reg[1]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[30].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_316
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3738]\ => \^lockstep_out_reg[3738]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_1 => wb_PC_II_1
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[31].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized35\
     port map (
      DI => \^di\,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_0,
      \mem_pc_i_reg[31]\(0) => \mem_pc_i_reg[0]\(0),
      wb_PC_II_0 => wb_PC_II_0,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_317
     port map (
      CI => carry_0,
      DI => \^di\,
      \EX_Branch_CMP_Op1_reg[31]\(0) => \EX_Branch_CMP_Op1_reg[16]\(0),
      EX_Fwd(0) => EX_Fwd(0),
      \EX_Op3_reg[31]\(0) => \EX_Op3_reg[16]\(0),
      GPR_Op1(0) => GPR_Op1(0),
      GPR_Op3(0) => GPR_Op3(0),
      LO => carry_1,
      \LOCKSTEP_Out_reg[3800]\ => \^lockstep_out_reg[3708]\(0),
      \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      Q(0) => Q(0),
      S => addr_AddSub_0,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[23]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[23]\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[31]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[31]\,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native\(0),
      \data_rd_reg_reg[31]\ => \data_rd_reg_reg[31]\,
      lopt => lopt,
      lopt_1 => lopt_3,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1),
      read_register_MSR_1_reg => read_register_MSR_1_reg,
      wb_exception_i_reg => wb_exception_i_reg,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      \wb_read_lsb_sel_reg[1]\(0) => \wb_read_lsb_sel_reg[1]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[31].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_318
     port map (
      Clk => Clk,
      DI => \^di\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_0 => wb_PC_II_0
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[3].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized91\
     port map (
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_28,
      \Using_FPGA.Native_0\ => \^lockstep_out_reg[3711]\,
      \mem_pc_i_reg[3]\(0) => \mem_pc_i_reg[0]\(28),
      wb_PC_II_28 => wb_PC_II_28,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_319
     port map (
      LO => carry_29,
      \LOCKSTEP_Out_reg[3772]\(0) => \LOCKSTEP_Out_reg[3769]\(12),
      S => addr_AddSub_28,
      \Using_FPGA.Native\ => \^lockstep_out_reg[3711]\,
      \Using_FPGA.Native_0\ => carry_28,
      lopt => lopt_53,
      lopt_1 => lopt_56
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[3].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_320
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3711]\ => \^lockstep_out_reg[3711]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_28 => wb_PC_II_28
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[4].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized89\
     port map (
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_27,
      \Using_FPGA.Native_0\ => \^lockstep_out_reg[3712]\,
      \mem_pc_i_reg[4]\(0) => \mem_pc_i_reg[0]\(27),
      wb_PC_II_27 => wb_PC_II_27,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[4].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_321
     port map (
      LO => carry_28,
      \LOCKSTEP_Out_reg[3773]\(0) => \LOCKSTEP_Out_reg[3769]\(11),
      S => addr_AddSub_27,
      \Using_FPGA.Native\ => \^lockstep_out_reg[3712]\,
      \Using_FPGA.Native_0\ => carry_27,
      lopt => lopt_52,
      lopt_1 => lopt_55
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[4].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_322
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3712]\ => \^lockstep_out_reg[3712]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_27 => wb_PC_II_27
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[5].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized87\
     port map (
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_26,
      \Using_FPGA.Native_0\ => \^lockstep_out_reg[3713]\,
      \mem_pc_i_reg[5]\(0) => \mem_pc_i_reg[0]\(26),
      wb_PC_II_26 => wb_PC_II_26,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[5].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_323
     port map (
      LO => carry_27,
      \LOCKSTEP_Out_reg[3774]\(0) => \LOCKSTEP_Out_reg[3769]\(10),
      S => addr_AddSub_26,
      \Using_FPGA.Native\ => \^lockstep_out_reg[3713]\,
      \Using_FPGA.Native_0\ => carry_26,
      lopt => lopt_47,
      lopt_1 => lopt_51
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[5].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_324
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3713]\ => \^lockstep_out_reg[3713]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_26 => wb_PC_II_26
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[6].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized85\
     port map (
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_25,
      \Using_FPGA.Native_0\ => \^lockstep_out_reg[3714]\,
      \mem_pc_i_reg[6]\(0) => \mem_pc_i_reg[0]\(25),
      wb_PC_II_25 => wb_PC_II_25,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_325
     port map (
      LO => carry_26,
      \LOCKSTEP_Out_reg[3775]\(0) => \LOCKSTEP_Out_reg[3769]\(9),
      S => addr_AddSub_25,
      \Using_FPGA.Native\ => \^lockstep_out_reg[3714]\,
      \Using_FPGA.Native_0\ => carry_25,
      lopt => lopt_46,
      lopt_1 => lopt_50
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[6].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_326
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3714]\ => \^lockstep_out_reg[3714]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_25 => wb_PC_II_25
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[7].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized83\
     port map (
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_24,
      \Using_FPGA.Native_0\ => \^lockstep_out_reg[3715]\,
      \mem_pc_i_reg[7]\(0) => \mem_pc_i_reg[0]\(24),
      wb_PC_II_24 => wb_PC_II_24,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_327
     port map (
      LO => carry_25,
      \LOCKSTEP_Out_reg[3776]\(0) => \LOCKSTEP_Out_reg[3769]\(8),
      S => addr_AddSub_24,
      \Using_FPGA.Native\ => \^lockstep_out_reg[3715]\,
      \Using_FPGA.Native_0\ => carry_24,
      lopt => lopt_45,
      lopt_1 => lopt_49
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[7].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_328
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3715]\ => \^lockstep_out_reg[3715]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_24 => wb_PC_II_24
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[8].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized81\
     port map (
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_23,
      \Using_FPGA.Native_0\ => \^lockstep_out_reg[3716]\,
      \mem_pc_i_reg[8]\(0) => \mem_pc_i_reg[0]\(23),
      wb_PC_II_23 => wb_PC_II_23,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[8].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_329
     port map (
      LO => carry_24,
      \LOCKSTEP_Out_reg[3777]\(0) => \LOCKSTEP_Out_reg[3769]\(7),
      S => addr_AddSub_23,
      \Using_FPGA.Native\ => \^lockstep_out_reg[3716]\,
      \Using_FPGA.Native_0\ => carry_23,
      lopt => lopt_44,
      lopt_1 => lopt_48
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[8].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_330
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3716]\ => \^lockstep_out_reg[3716]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_23 => wb_PC_II_23
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[9].I_RET_ADDR_WB\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized79\
     port map (
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      S => addr_AddSub_22,
      \Using_FPGA.Native_0\ => \^lockstep_out_reg[3717]\,
      \mem_pc_i_reg[9]\(0) => \mem_pc_i_reg[0]\(22),
      wb_PC_II_22 => wb_PC_II_22,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0)
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[9].MUXCY_XOR_I\: entity work.system_microblaze_0_0_MB_MUXCY_XORCY_331
     port map (
      CI => carry_22,
      LO => carry_23,
      \LOCKSTEP_Out_reg[3778]\(0) => \LOCKSTEP_Out_reg[3769]\(6),
      S => addr_AddSub_22,
      \Using_FPGA.Native\ => \^lockstep_out_reg[3717]\,
      lopt => lopt_40,
      lopt_1 => lopt_43
    );
\Using_FPGA_LUT6.Gen_Ret_Addr[9].WB_PC_FDE\: entity work.system_microblaze_0_0_MB_FDE_332
     port map (
      Clk => Clk,
      \LOCKSTEP_Out_reg[3717]\ => \^lockstep_out_reg[3717]\,
      mem_valid_reg => mem_valid_reg,
      wb_PC_II_22 => wb_PC_II_22
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_jump_logic is
  port (
    ex_delayslot_Instr2 : out STD_LOGIC;
    ex_op1_cmp_equal : out STD_LOGIC;
    ex_op1_cmp_equal_n : out STD_LOGIC;
    \if_pc_reg[0]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_next_ex_valid : out STD_LOGIC;
    ex_delayslot_Instr0 : out STD_LOGIC;
    mem_jump_taken0 : out STD_LOGIC;
    if_missed_fetch_reg : out STD_LOGIC;
    of_read_imm_reg_ii_reg : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_valid_jump_reg : out STD_LOGIC;
    ex_valid_reg : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    ex_jump_hold_reg : out STD_LOGIC;
    keep_jump_taken_with_ds_reg : out STD_LOGIC;
    ex_jump_q : out STD_LOGIC;
    ex_op1_zero : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    ex_branch_with_delayslot_reg_0 : in STD_LOGIC;
    ex_op1_cmp_eq : in STD_LOGIC;
    Clk : in STD_LOGIC;
    ex_op1_cmp_eq_n5_out : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    ex_op1_cmp_eq1 : in STD_LOGIC;
    use_Reg_Neg_DI1_out : in STD_LOGIC;
    force_Val10_out : in STD_LOGIC;
    use_Reg_Neg_S3_out : in STD_LOGIC;
    force12_out : in STD_LOGIC;
    if_fetch_in_progress_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_Take_Intr_or_Exc : in STD_LOGIC;
    EX_Valid : in STD_LOGIC;
    ex_jump_nodelay_reg : in STD_LOGIC;
    mem_valid_instr : in STD_LOGIC;
    mem_exception_from_ex : in STD_LOGIC;
    of_valid : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg\ : in STD_LOGIC;
    ex_jump_hold : in STD_LOGIC;
    ex_mbar_stall_no_sleep_1 : in STD_LOGIC;
    ex_first_cycle : in STD_LOGIC;
    ex_mbar_decode : in STD_LOGIC;
    ex_mbar_sleep : in STD_LOGIC;
    keep_jump_taken_with_ds : in STD_LOGIC;
    ex_branch_with_delayslot : in STD_LOGIC;
    if_missed_fetch : in STD_LOGIC;
    IB_Ready : in STD_LOGIC;
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 1 downto 0 );
    wb_exception_i_reg : in STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    p_9_in : in STD_LOGIC;
    of_Take_Interrupt_hold_reg : in STD_LOGIC;
    of_read_imm_reg_ii : in STD_LOGIC;
    EX_MBAR_Stall : in STD_LOGIC;
    ex_valid_jump_reg_0 : in STD_LOGIC;
    \^ex_valid\ : in STD_LOGIC;
    ex_Instr_Excep_combo : in STD_LOGIC;
    dbg_stop_if_delay_i : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC;
    \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\ : in STD_LOGIC;
    ex_Interrupt_i : in STD_LOGIC;
    \wb_exception_kind_i_reg[27]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_jump_logic : entity is "jump_logic";
end system_microblaze_0_0_jump_logic;

architecture STRUCTURE of system_microblaze_0_0_jump_logic is
  signal \^ex_delayslot_instr2\ : STD_LOGIC;
  signal \^ex_jump_q\ : STD_LOGIC;
  signal ex_jump_q_i_1_n_0 : STD_LOGIC;
  signal ex_jump_wanted : STD_LOGIC;
  signal force1_reg_n_0 : STD_LOGIC;
  signal force2 : STD_LOGIC;
  signal force_Val1_reg_n_0 : STD_LOGIC;
  signal force_Val2_N : STD_LOGIC;
  signal jump_carry1 : STD_LOGIC;
  signal jump_carry2 : STD_LOGIC;
  signal jump_carry4 : STD_LOGIC;
  signal jump_carry5 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal of_PipeRun_for_ce : STD_LOGIC;
  attribute DIRECT_ENABLE : boolean;
  attribute DIRECT_ENABLE of of_PipeRun_for_ce : signal is std.standard.true;
  signal reset_bool_for_rst : STD_LOGIC;
  attribute DIRECT_RESET : boolean;
  attribute DIRECT_RESET of reset_bool_for_rst : signal is std.standard.true;
  signal use_Reg_Neg_DI_reg_n_0 : STD_LOGIC;
  signal use_Reg_Neg_S_reg_n_0 : STD_LOGIC;
begin
  ex_delayslot_Instr2 <= \^ex_delayslot_instr2\;
  ex_jump_q <= \^ex_jump_q\;
  of_PipeRun_for_ce <= \Using_FPGA.Native_1\;
  reset_bool_for_rst <= \out\(0);
MUXCY_JUMP_CARRY: entity work.system_microblaze_0_0_MB_MUXCY_53
     port map (
      \EX_Branch_CMP_Op1_reg[0]\(0) => \EX_Branch_CMP_Op1_reg[0]\(0),
      ex_op1_zero => ex_op1_zero,
      force1_reg => force1_reg_n_0,
      force_Val1_reg => force_Val1_reg_n_0,
      jump_carry1 => jump_carry1,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      use_Reg_Neg_DI_reg => use_Reg_Neg_DI_reg_n_0,
      use_Reg_Neg_S_reg => use_Reg_Neg_S_reg_n_0
    );
MUXCY_JUMP_CARRY2: entity work.system_microblaze_0_0_MB_MUXCY_54
     port map (
      EX_Valid => EX_Valid,
      ex_Take_Intr_or_Exc => ex_Take_Intr_or_Exc,
      force2 => force2,
      force_Val2_N => force_Val2_N,
      jump_carry1 => jump_carry1,
      jump_carry2 => jump_carry2,
      lopt => lopt_3,
      lopt_1 => lopt_4,
      lopt_2 => lopt_5,
      lopt_3 => lopt_6,
      lopt_4 => ex_branch_with_delayslot_reg,
      lopt_5 => lopt_7,
      lopt_6 => lopt_8,
      lopt_7 => lopt_9
    );
MUXCY_JUMP_CARRY3: entity work.system_microblaze_0_0_MB_MUXCY_55
     port map (
      Dbg_Disable => Dbg_Disable,
      EX_MBAR_Stall => EX_MBAR_Stall,
      \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\ => \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      dbg_stop_if_delay_i => dbg_stop_if_delay_i,
      ex_Instr_Excep_combo => ex_Instr_Excep_combo,
      ex_Interrupt_i => ex_Interrupt_i,
      ex_Take_Intr_or_Exc => ex_Take_Intr_or_Exc,
      ex_branch_with_delayslot => ex_branch_with_delayslot,
      ex_jump_wanted => ex_jump_wanted,
      jump_carry2 => jump_carry2,
      lopt => lopt_3,
      lopt_1 => lopt_4,
      lopt_2 => lopt_5,
      of_valid => of_valid
    );
MUXCY_JUMP_CARRY4: entity work.system_microblaze_0_0_MB_MUXCY_56
     port map (
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg,
      ex_jump_wanted => ex_jump_wanted,
      jump_carry4 => jump_carry4,
      lopt => lopt_6
    );
MUXCY_JUMP_CARRY5: entity work.system_microblaze_0_0_MB_MUXCY_57
     port map (
      jump_carry4 => jump_carry4,
      jump_carry5 => jump_carry5,
      lopt => lopt_7,
      lopt_1 => lopt_8,
      lopt_2 => lopt_9
    );
MUXCY_JUMP_CARRY6: entity work.system_microblaze_0_0_MB_MUXCY_58
     port map (
      IB_Ready => IB_Ready,
      LOCKSTEP_Master_Out(1 downto 0) => LOCKSTEP_Master_Out(1 downto 0),
      \Performace_Debug_Control.dbg_stop_if_delay_i_reg\ => \Performace_Debug_Control.dbg_stop_if_delay_i_reg\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => of_PipeRun_for_ce,
      ex_Take_Intr_or_Exc => ex_Take_Intr_or_Exc,
      ex_branch_with_delayslot => ex_branch_with_delayslot,
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg_0,
      ex_delayslot_Instr0 => ex_delayslot_Instr0,
      ex_first_cycle => ex_first_cycle,
      ex_jump_for_ce => \^ex_delayslot_instr2\,
      ex_jump_hold => ex_jump_hold,
      ex_jump_hold_reg => ex_jump_hold_reg,
      ex_jump_nodelay_reg => ex_jump_nodelay_reg,
      ex_mbar_decode => ex_mbar_decode,
      ex_mbar_sleep => ex_mbar_sleep,
      ex_mbar_stall_no_sleep_1 => ex_mbar_stall_no_sleep_1,
      ex_valid => \^ex_valid\,
      ex_valid_jump_reg => ex_valid_jump_reg,
      ex_valid_jump_reg_0 => ex_valid_jump_reg_0,
      ex_valid_reg => ex_valid_reg,
      if_fetch_in_progress_reg(0) => if_fetch_in_progress_reg(0),
      if_missed_fetch => if_missed_fetch,
      if_missed_fetch_reg => if_missed_fetch_reg,
      \if_pc_reg[0]\(0) => \if_pc_reg[0]\(0),
      jump_carry5 => jump_carry5,
      keep_jump_taken_with_ds => keep_jump_taken_with_ds,
      keep_jump_taken_with_ds_reg => keep_jump_taken_with_ds_reg,
      mem_exception_from_ex => mem_exception_from_ex,
      mem_jump_taken0 => mem_jump_taken0,
      mem_valid_instr => mem_valid_instr,
      mem_valid_reg => mem_valid_reg,
      of_Take_Interrupt_hold_reg => of_Take_Interrupt_hold_reg,
      of_next_ex_valid => of_next_ex_valid,
      of_read_imm_reg_ii => of_read_imm_reg_ii,
      of_read_imm_reg_ii_reg => of_read_imm_reg_ii_reg,
      of_valid => of_valid,
      \out\(0) => reset_bool_for_rst,
      p_9_in => p_9_in,
      wb_exception_i_reg => wb_exception_i_reg,
      \wb_exception_kind_i_reg[27]\ => \wb_exception_kind_i_reg[27]\
    );
ex_jump_q_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"0E"
    )
        port map (
      I0 => \^ex_jump_q\,
      I1 => \^ex_delayslot_instr2\,
      I2 => ex_branch_with_delayslot_reg_0,
      O => ex_jump_q_i_1_n_0
    );
ex_jump_q_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_jump_q_i_1_n_0,
      Q => \^ex_jump_q\,
      R => '0'
    );
ex_op1_cmp_eq_n_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_op1_cmp_eq_n5_out,
      Q => ex_op1_cmp_equal_n,
      R => reset_bool_for_rst
    );
ex_op1_cmp_eq_reg: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_op1_cmp_eq,
      Q => ex_op1_cmp_equal,
      S => reset_bool_for_rst
    );
force1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => force12_out,
      Q => force1_reg_n_0,
      R => reset_bool_for_rst
    );
force2_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_op1_cmp_eq1,
      Q => force2,
      R => reset_bool_for_rst
    );
force_Val1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => force_Val10_out,
      Q => force_Val1_reg_n_0,
      R => reset_bool_for_rst
    );
force_Val2_N_reg: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \Using_FPGA.Native_2\,
      Q => force_Val2_N,
      S => reset_bool_for_rst
    );
use_Reg_Neg_DI_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => use_Reg_Neg_DI1_out,
      Q => use_Reg_Neg_DI_reg_n_0,
      R => reset_bool_for_rst
    );
use_Reg_Neg_S_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => use_Reg_Neg_S3_out,
      Q => use_Reg_Neg_S_reg_n_0,
      R => reset_bool_for_rst
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_mb_sync_vec is
  port (
    D : out STD_LOGIC_VECTOR ( 15 downto 0 );
    \Performace_Debug_Control.dbg_hit_reg[15]\ : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    \Performace_Debug_Control.dbg_hit_reg[14]\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_hit_reg[13]\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_hit_reg[12]\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_hit_reg[11]\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_hit_reg[10]\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_hit_reg[9]\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_hit_reg[8]\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_hit_reg[7]\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_hit_reg[6]\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_hit_reg[5]\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_hit_reg[4]\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_hit_reg[3]\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_hit_reg[2]\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_hit_reg[1]\ : in STD_LOGIC;
    Raw : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_mb_sync_vec : entity is "mb_sync_vec";
end system_microblaze_0_0_mb_sync_vec;

architecture STRUCTURE of system_microblaze_0_0_mb_sync_vec is
begin
\sync_bits[0].sync_bit\: entity work.\system_microblaze_0_0_mb_sync_bit__parameterized1\
     port map (
      D(0) => D(15),
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      Raw => Raw,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel
    );
\sync_bits[10].sync_bit\: entity work.\system_microblaze_0_0_mb_sync_bit__parameterized21\
     port map (
      D(0) => D(5),
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      \Performace_Debug_Control.dbg_hit_reg[10]\ => \Performace_Debug_Control.dbg_hit_reg[10]\,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel
    );
\sync_bits[11].sync_bit\: entity work.\system_microblaze_0_0_mb_sync_bit__parameterized23\
     port map (
      D(0) => D(4),
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      \Performace_Debug_Control.dbg_hit_reg[11]\ => \Performace_Debug_Control.dbg_hit_reg[11]\,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel
    );
\sync_bits[12].sync_bit\: entity work.\system_microblaze_0_0_mb_sync_bit__parameterized25\
     port map (
      D(0) => D(3),
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      \Performace_Debug_Control.dbg_hit_reg[12]\ => \Performace_Debug_Control.dbg_hit_reg[12]\,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel
    );
\sync_bits[13].sync_bit\: entity work.\system_microblaze_0_0_mb_sync_bit__parameterized27\
     port map (
      D(0) => D(2),
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      \Performace_Debug_Control.dbg_hit_reg[13]\ => \Performace_Debug_Control.dbg_hit_reg[13]\,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel
    );
\sync_bits[14].sync_bit\: entity work.\system_microblaze_0_0_mb_sync_bit__parameterized29\
     port map (
      D(0) => D(1),
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      \Performace_Debug_Control.dbg_hit_reg[14]\ => \Performace_Debug_Control.dbg_hit_reg[14]\,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel
    );
\sync_bits[15].sync_bit\: entity work.\system_microblaze_0_0_mb_sync_bit__parameterized31\
     port map (
      D(0) => D(0),
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      \Performace_Debug_Control.dbg_hit_reg[15]\ => \Performace_Debug_Control.dbg_hit_reg[15]\,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel
    );
\sync_bits[1].sync_bit\: entity work.\system_microblaze_0_0_mb_sync_bit__parameterized3\
     port map (
      D(0) => D(14),
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      \Performace_Debug_Control.dbg_hit_reg[1]\ => \Performace_Debug_Control.dbg_hit_reg[1]\,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel
    );
\sync_bits[2].sync_bit\: entity work.\system_microblaze_0_0_mb_sync_bit__parameterized5\
     port map (
      D(0) => D(13),
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      \Performace_Debug_Control.dbg_hit_reg[2]\ => \Performace_Debug_Control.dbg_hit_reg[2]\,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel
    );
\sync_bits[3].sync_bit\: entity work.\system_microblaze_0_0_mb_sync_bit__parameterized7\
     port map (
      D(0) => D(12),
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      \Performace_Debug_Control.dbg_hit_reg[3]\ => \Performace_Debug_Control.dbg_hit_reg[3]\,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel
    );
\sync_bits[4].sync_bit\: entity work.\system_microblaze_0_0_mb_sync_bit__parameterized9\
     port map (
      D(0) => D(11),
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      \Performace_Debug_Control.dbg_hit_reg[4]\ => \Performace_Debug_Control.dbg_hit_reg[4]\,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel
    );
\sync_bits[5].sync_bit\: entity work.\system_microblaze_0_0_mb_sync_bit__parameterized11\
     port map (
      D(0) => D(10),
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      \Performace_Debug_Control.dbg_hit_reg[5]\ => \Performace_Debug_Control.dbg_hit_reg[5]\,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel
    );
\sync_bits[6].sync_bit\: entity work.\system_microblaze_0_0_mb_sync_bit__parameterized13\
     port map (
      D(0) => D(9),
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      \Performace_Debug_Control.dbg_hit_reg[6]\ => \Performace_Debug_Control.dbg_hit_reg[6]\,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel
    );
\sync_bits[7].sync_bit\: entity work.\system_microblaze_0_0_mb_sync_bit__parameterized15\
     port map (
      D(0) => D(8),
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      \Performace_Debug_Control.dbg_hit_reg[7]\ => \Performace_Debug_Control.dbg_hit_reg[7]\,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel
    );
\sync_bits[8].sync_bit\: entity work.\system_microblaze_0_0_mb_sync_bit__parameterized17\
     port map (
      D(0) => D(7),
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      \Performace_Debug_Control.dbg_hit_reg[8]\ => \Performace_Debug_Control.dbg_hit_reg[8]\,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel
    );
\sync_bits[9].sync_bit\: entity work.\system_microblaze_0_0_mb_sync_bit__parameterized19\
     port map (
      D(0) => D(6),
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      \Performace_Debug_Control.dbg_hit_reg[9]\ => \Performace_Debug_Control.dbg_hit_reg[9]\,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \system_microblaze_0_0_mb_sync_vec__parameterized1\ is
  port (
    D : out STD_LOGIC_VECTOR ( 8 downto 0 );
    if_debug_ready_i0 : out STD_LOGIC;
    read_register_MSR0 : out STD_LOGIC;
    read_register_PC0 : out STD_LOGIC;
    start_single_cmd0 : out STD_LOGIC;
    force_stop_cmd_i0 : out STD_LOGIC;
    normal_stop_cmd_i0 : out STD_LOGIC;
    continue_from_brk0 : out STD_LOGIC;
    trig_in_1_reg : out STD_LOGIC;
    trig_ack_out_1_reg : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 8 downto 0 );
    Dbg_Trig_In : in STD_LOGIC_VECTOR ( 0 to 0 );
    Rst18_out : in STD_LOGIC;
    Dbg_Trig_Ack_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Disable : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    normal_stop_TClk_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    force_stop_TClk_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    single_Step_TClk_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    \command_reg_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    continue_from_brk_TClk_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Dbg_Instr2_TCK_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \system_microblaze_0_0_mb_sync_vec__parameterized1\ : entity is "mb_sync_vec";
end \system_microblaze_0_0_mb_sync_vec__parameterized1\;

architecture STRUCTURE of \system_microblaze_0_0_mb_sync_vec__parameterized1\ is
  signal \^d\ : STD_LOGIC_VECTOR ( 8 downto 0 );
begin
  D(8 downto 0) <= \^d\(8 downto 0);
\sync_bits[0].sync_bit\: entity work.system_microblaze_0_0_mb_sync_bit_0
     port map (
      Clk => Clk,
      D(0) => \^d\(8),
      Q(0) => Q(8),
      Rst18_out => Rst18_out,
      normal_stop_TClk_reg(0) => normal_stop_TClk_reg(0),
      normal_stop_cmd_i0 => normal_stop_cmd_i0
    );
\sync_bits[1].sync_bit\: entity work.system_microblaze_0_0_mb_sync_bit_1
     port map (
      Clk => Clk,
      D(0) => \^d\(7),
      Q(0) => Q(7),
      Rst18_out => Rst18_out,
      force_stop_TClk_reg(0) => force_stop_TClk_reg(0),
      force_stop_cmd_i0 => force_stop_cmd_i0
    );
\sync_bits[2].sync_bit\: entity work.system_microblaze_0_0_mb_sync_bit_2
     port map (
      Clk => Clk,
      D(0) => \^d\(6),
      Q(0) => Q(6),
      Rst18_out => Rst18_out,
      single_Step_TClk_reg(0) => single_Step_TClk_reg(0),
      start_single_cmd0 => start_single_cmd0
    );
\sync_bits[3].sync_bit\: entity work.system_microblaze_0_0_mb_sync_bit_3
     port map (
      Clk => Clk,
      D(0) => \^d\(5),
      Q(0) => Q(5),
      Rst18_out => Rst18_out,
      \command_reg_reg[0]\(0) => \command_reg_reg[0]\(1),
      read_register_MSR0 => read_register_MSR0
    );
\sync_bits[4].sync_bit\: entity work.system_microblaze_0_0_mb_sync_bit_4
     port map (
      Clk => Clk,
      D(0) => \^d\(4),
      Q(0) => Q(4),
      Rst18_out => Rst18_out,
      \command_reg_reg[1]\(0) => \command_reg_reg[0]\(0),
      read_register_PC0 => read_register_PC0
    );
\sync_bits[5].sync_bit\: entity work.system_microblaze_0_0_mb_sync_bit_5
     port map (
      Clk => Clk,
      D(0) => \^d\(3),
      Dbg_Trig_In(0) => Dbg_Trig_In(0),
      Q(1) => Q(3),
      Q(0) => Q(0),
      Rst18_out => Rst18_out,
      \Synchronize.use_sync_reset.sync_reg[2]_0\(0) => \^d\(0),
      continue_from_brk_TClk_reg(0) => continue_from_brk_TClk_reg(0),
      trig_in_1_reg => trig_in_1_reg
    );
\sync_bits[6].sync_bit\: entity work.system_microblaze_0_0_mb_sync_bit_6
     port map (
      Clk => Clk,
      D(0) => \^d\(2),
      New_Dbg_Instr2_TCK_reg(0) => New_Dbg_Instr2_TCK_reg(0),
      Q(0) => Q(2),
      Rst18_out => Rst18_out,
      if_debug_ready_i0 => if_debug_ready_i0
    );
\sync_bits[7].sync_bit\: entity work.system_microblaze_0_0_mb_sync_bit_7
     port map (
      Clk => Clk,
      D(0) => \^d\(1),
      Dbg_Disable => Dbg_Disable,
      Dbg_Trig_Ack_Out(0) => Dbg_Trig_Ack_Out(0),
      Dbg_Trig_Out(0) => Dbg_Trig_Out(0),
      Q(1) => Q(3),
      Q(0) => Q(1),
      Rst18_out => Rst18_out,
      \Synchronize.use_sync_reset.sync_reg[2]_0\(0) => \^d\(3),
      continue_from_brk0 => continue_from_brk0,
      \out\(0) => \out\(0),
      trig_ack_out_1_reg => trig_ack_out_1_reg
    );
\sync_bits[8].sync_bit\: entity work.system_microblaze_0_0_mb_sync_bit_8
     port map (
      Clk => Clk,
      D(0) => \^d\(0),
      Dbg_Trig_Ack_In(0) => Dbg_Trig_Ack_In(0),
      Rst18_out => Rst18_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_msr_reg_gti is
  port (
    \WB_MEM_Result_reg[28]\ : out STD_LOGIC;
    \WB_MEM_Result_reg[29]\ : out STD_LOGIC;
    ex_MSR : out STD_LOGIC_VECTOR ( 2 downto 0 );
    of_MSR : out STD_LOGIC_VECTOR ( 1 downto 0 );
    D : out STD_LOGIC_VECTOR ( 3 downto 0 );
    ex_Interrupt_Brk_combo_reg : out STD_LOGIC;
    \Using_Fast_Interrupt.wb_ie_rising_reg\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3759]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3757]\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    ex_set_MSR_IE_instr_reg : in STD_LOGIC;
    ex_set_MSR_IE_instr_reg_0 : in STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    restore_wb_msr_to_ex : in STD_LOGIC;
    mem_ex_result : in STD_LOGIC_VECTOR ( 1 downto 0 );
    mem_sel_msr : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \control_reg_reg[3]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Disable : in STD_LOGIC;
    Interrupt : in STD_LOGIC;
    of_Take_Interrupt : in STD_LOGIC;
    wb_piperun : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_msr_reg_gti : entity is "msr_reg_gti";
end system_microblaze_0_0_msr_reg_gti;

architecture STRUCTURE of system_microblaze_0_0_msr_reg_gti is
  signal \^lockstep_out_reg[3757]\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^lockstep_out_reg[3759]\ : STD_LOGIC;
  signal \OF_EX_MSR_Bits[28].Using_FDR.MSR_ex_I_n_1\ : STD_LOGIC;
  signal \OF_EX_MSR_Bits[29].Using_FDR.MSR_ex_I_n_1\ : STD_LOGIC;
  signal \OF_EX_MSR_Bits[30].Using_FDR.MSR_ex_I_n_1\ : STD_LOGIC;
  signal \^wb_mem_result_reg[28]\ : STD_LOGIC;
  signal \^wb_mem_result_reg[29]\ : STD_LOGIC;
  signal mem_MSR : STD_LOGIC_VECTOR ( 30 to 30 );
  signal \^of_msr\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \wb_MSR_i[28]_i_1_n_0\ : STD_LOGIC;
  signal \wb_MSR_i[29]_i_1_n_0\ : STD_LOGIC;
  signal \wb_MSR_i[30]_i_1_n_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \wb_MSR_i[28]_i_1\ : label is "soft_lutpair4";
  attribute SOFT_HLUTNM of \wb_MSR_i[29]_i_1\ : label is "soft_lutpair4";
begin
  \LOCKSTEP_Out_reg[3757]\(1 downto 0) <= \^lockstep_out_reg[3757]\(1 downto 0);
  \LOCKSTEP_Out_reg[3759]\ <= \^lockstep_out_reg[3759]\;
  \WB_MEM_Result_reg[28]\ <= \^wb_mem_result_reg[28]\;
  \WB_MEM_Result_reg[29]\ <= \^wb_mem_result_reg[29]\;
  of_MSR(1 downto 0) <= \^of_msr\(1 downto 0);
\MEM_MSR_Bits[28].Using_FDR.MSR_I\: entity work.system_microblaze_0_0_MB_FDR_261
     port map (
      Clk => Clk,
      D(0) => D(2),
      \Using_FPGA.Native_0\ => \OF_EX_MSR_Bits[28].Using_FDR.MSR_ex_I_n_1\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_2\(0),
      \WB_MEM_Result_reg[28]\ => \^wb_mem_result_reg[28]\,
      mem_sel_msr => mem_sel_msr,
      \out\(0) => \out\(0)
    );
\MEM_MSR_Bits[29].Using_FDR.MSR_I\: entity work.system_microblaze_0_0_MB_FDR_262
     port map (
      Clk => Clk,
      D(1) => D(3),
      D(0) => D(1),
      \Using_FPGA.Native_0\ => \OF_EX_MSR_Bits[29].Using_FDR.MSR_ex_I_n_1\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_2\(1),
      \WB_MEM_Result_reg[29]\ => \^wb_mem_result_reg[29]\,
      mem_ex_result(0) => mem_ex_result(1),
      mem_sel_msr => mem_sel_msr,
      \out\(0) => \out\(0)
    );
\MEM_MSR_Bits[30].Using_FDR.MSR_I\: entity work.system_microblaze_0_0_MB_FDR_263
     port map (
      Clk => Clk,
      D(0) => D(0),
      \Using_FPGA.Native_0\ => \OF_EX_MSR_Bits[30].Using_FDR.MSR_ex_I_n_1\,
      \Using_Fast_Interrupt.wb_ie_rising_reg\ => \Using_Fast_Interrupt.wb_ie_rising_reg\,
      mem_MSR(0) => mem_MSR(30),
      mem_ex_result(0) => mem_ex_result(0),
      mem_sel_msr => mem_sel_msr,
      \out\(0) => \out\(0),
      \wb_MSR_i_reg[30]\ => \^lockstep_out_reg[3759]\
    );
\OF_EX_MSR_Bits[28].Using_FDR.MSR_ex_I\: entity work.system_microblaze_0_0_MB_FDR_264
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \OF_EX_MSR_Bits[28].Using_FDR.MSR_ex_I_n_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_2\ => \^wb_mem_result_reg[28]\,
      ex_MSR(0) => ex_MSR(2),
      mem_valid_reg => mem_valid_reg,
      \out\(0) => \out\(0),
      restore_wb_msr_to_ex => restore_wb_msr_to_ex
    );
\OF_EX_MSR_Bits[28].Using_FDR.MSR_of_I\: entity work.system_microblaze_0_0_MB_FDR_265
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      of_MSR(0) => \^of_msr\(1),
      \out\(0) => \out\(0)
    );
\OF_EX_MSR_Bits[29].Using_FDR.MSR_ex_I\: entity work.system_microblaze_0_0_MB_FDR_266
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \OF_EX_MSR_Bits[29].Using_FDR.MSR_ex_I_n_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_2\ => \^wb_mem_result_reg[29]\,
      ex_MSR(0) => ex_MSR(1),
      mem_valid_reg => mem_valid_reg,
      \out\(0) => \out\(0),
      restore_wb_msr_to_ex => restore_wb_msr_to_ex
    );
\OF_EX_MSR_Bits[30].Using_FDR.MSR_ex_I\: entity work.system_microblaze_0_0_MB_FDR_267
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \OF_EX_MSR_Bits[30].Using_FDR.MSR_ex_I_n_1\,
      ex_MSR(0) => ex_MSR(0),
      ex_set_MSR_IE_instr_reg => ex_set_MSR_IE_instr_reg,
      mem_MSR(0) => mem_MSR(30),
      mem_valid_reg => mem_valid_reg,
      \out\(0) => \out\(0),
      restore_wb_msr_to_ex => restore_wb_msr_to_ex
    );
\OF_EX_MSR_Bits[30].Using_FDR.MSR_of_I\: entity work.system_microblaze_0_0_MB_FDR_268
     port map (
      Clk => Clk,
      Dbg_Disable => Dbg_Disable,
      Interrupt => Interrupt,
      \Using_FPGA.Native_0\(0) => \^of_msr\(1),
      \control_reg_reg[3]\(0) => \control_reg_reg[3]\(0),
      ex_Interrupt_Brk_combo_reg => ex_Interrupt_Brk_combo_reg,
      ex_set_MSR_IE_instr_reg => ex_set_MSR_IE_instr_reg_0,
      of_MSR(0) => \^of_msr\(0),
      of_Take_Interrupt => of_Take_Interrupt,
      \out\(0) => \out\(0)
    );
\wb_MSR_i[28]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^wb_mem_result_reg[28]\,
      I1 => wb_piperun,
      I2 => \^lockstep_out_reg[3757]\(1),
      O => \wb_MSR_i[28]_i_1_n_0\
    );
\wb_MSR_i[29]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^wb_mem_result_reg[29]\,
      I1 => wb_piperun,
      I2 => \^lockstep_out_reg[3757]\(0),
      O => \wb_MSR_i[29]_i_1_n_0\
    );
\wb_MSR_i[30]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F20"
    )
        port map (
      I0 => mem_MSR(30),
      I1 => restore_wb_msr_to_ex,
      I2 => wb_piperun,
      I3 => \^lockstep_out_reg[3759]\,
      O => \wb_MSR_i[30]_i_1_n_0\
    );
\wb_MSR_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \wb_MSR_i[28]_i_1_n_0\,
      Q => \^lockstep_out_reg[3757]\(1),
      R => \out\(0)
    );
\wb_MSR_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \wb_MSR_i[29]_i_1_n_0\,
      Q => \^lockstep_out_reg[3757]\(0),
      R => \out\(0)
    );
\wb_MSR_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \wb_MSR_i[30]_i_1_n_0\,
      Q => \^lockstep_out_reg[3759]\,
      R => \out\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_mux_bus is
  port (
    I041_out : out STD_LOGIC;
    Y : out STD_LOGIC_VECTOR ( 0 to 31 );
    I139_out : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 32 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_mux_bus : entity is "mux_bus";
end system_microblaze_0_0_mux_bus;

architecture STRUCTURE of system_microblaze_0_0_mux_bus is
  signal \^y\ : STD_LOGIC_VECTOR ( 0 to 31 );
begin
  Y(0 to 31) <= \^y\(0 to 31);
\Mux_Loop[0].I_MUX_LUT6\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized3\
     port map (
      I041_out => I041_out,
      I139_out => I139_out,
      Instr(1) => Instr(0),
      Instr(0) => Instr(16),
      LOCKSTEP_Master_Out(2 downto 1) => LOCKSTEP_Master_Out(32 downto 31),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(15),
      \New_Instr_Reg_TCK_reg[1]\ => \^y\(1),
      \New_Instr_Reg_TCK_reg[3]\ => \^y\(3),
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      \Using_FPGA.Native_0\ => \^y\(0),
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native\(0),
      \Using_FPGA.Native_2\(1 downto 0) => \Using_FPGA.Native_0\(1 downto 0),
      \Using_FPGA.Native_3\(0) => \Using_FPGA.Native_1\(0),
      Y(0) => \^y\(16),
      \in\(0) => \in\(0)
    );
\Mux_Loop[10].I_MUX_LUT6\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized23\
     port map (
      Instr(1) => Instr(10),
      Instr(0) => Instr(26),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(21),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(5),
      Y(1) => \^y\(10),
      Y(0) => \^y\(26)
    );
\Mux_Loop[11].I_MUX_LUT6\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized25\
     port map (
      Instr(1) => Instr(11),
      Instr(0) => Instr(27),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(20),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(4),
      Y(1) => \^y\(11),
      Y(0) => \^y\(27)
    );
\Mux_Loop[12].I_MUX_LUT6\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized27\
     port map (
      Instr(1) => Instr(12),
      Instr(0) => Instr(28),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(19),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(3),
      Y(1) => \^y\(12),
      Y(0) => \^y\(28)
    );
\Mux_Loop[13].I_MUX_LUT6\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized29\
     port map (
      Instr(1) => Instr(13),
      Instr(0) => Instr(29),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(18),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(2),
      Y(1) => \^y\(13),
      Y(0) => \^y\(29)
    );
\Mux_Loop[14].I_MUX_LUT6\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized31\
     port map (
      Instr(1) => Instr(14),
      Instr(0) => Instr(30),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(17),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(1),
      Y(1) => \^y\(14),
      Y(0) => \^y\(30)
    );
\Mux_Loop[15].I_MUX_LUT6\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized33\
     port map (
      Instr(1) => Instr(15),
      Instr(0) => Instr(31),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(16),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(0),
      Y(1) => \^y\(15),
      Y(0) => \^y\(31)
    );
\Mux_Loop[1].I_MUX_LUT6\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized5\
     port map (
      Instr(1) => Instr(1),
      Instr(0) => Instr(17),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(30),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(14),
      Y(1) => \^y\(1),
      Y(0) => \^y\(17)
    );
\Mux_Loop[2].I_MUX_LUT6\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized7\
     port map (
      Instr(1) => Instr(2),
      Instr(0) => Instr(18),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(29),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(13),
      Y(1) => \^y\(2),
      Y(0) => \^y\(18)
    );
\Mux_Loop[3].I_MUX_LUT6\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized9\
     port map (
      Instr(1) => Instr(3),
      Instr(0) => Instr(19),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(28),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(12),
      Y(1) => \^y\(3),
      Y(0) => \^y\(19)
    );
\Mux_Loop[4].I_MUX_LUT6\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized11\
     port map (
      Instr(1) => Instr(4),
      Instr(0) => Instr(20),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(27),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(11),
      Y(1) => \^y\(4),
      Y(0) => \^y\(20)
    );
\Mux_Loop[5].I_MUX_LUT6\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized13\
     port map (
      Instr(1) => Instr(5),
      Instr(0) => Instr(21),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(26),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(10),
      Y(1) => \^y\(5),
      Y(0) => \^y\(21)
    );
\Mux_Loop[6].I_MUX_LUT6\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized15\
     port map (
      Instr(1) => Instr(6),
      Instr(0) => Instr(22),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(25),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(9),
      Y(1) => \^y\(6),
      Y(0) => \^y\(22)
    );
\Mux_Loop[7].I_MUX_LUT6\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized17\
     port map (
      Instr(1) => Instr(7),
      Instr(0) => Instr(23),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(24),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(8),
      Y(1) => \^y\(7),
      Y(0) => \^y\(23)
    );
\Mux_Loop[8].I_MUX_LUT6\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized19\
     port map (
      Instr(1) => Instr(8),
      Instr(0) => Instr(24),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(23),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(7),
      Y(1) => \^y\(8),
      Y(0) => \^y\(24)
    );
\Mux_Loop[9].I_MUX_LUT6\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized21\
     port map (
      Instr(1) => Instr(9),
      Instr(0) => Instr(25),
      LOCKSTEP_Master_Out(2) => LOCKSTEP_Master_Out(32),
      LOCKSTEP_Master_Out(1) => LOCKSTEP_Master_Out(22),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(6),
      Y(1) => \^y\(9),
      Y(0) => \^y\(25)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_ALU is
  port (
    LO : out STD_LOGIC;
    \Data_Addr[0]\ : out STD_LOGIC_VECTOR ( 29 downto 0 );
    \MEM_DataBus_Addr_reg[30]\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_use_carry : in STD_LOGIC;
    DI_0 : in STD_LOGIC;
    ex_alu_carryin : in STD_LOGIC;
    EX_CMP_Op_reg : in STD_LOGIC;
    ex_unsigned_op : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[0]\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    S : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_ALU : entity is "ALU";
end system_microblaze_0_0_ALU;

architecture STRUCTURE of system_microblaze_0_0_ALU is
  signal alu_carry_0 : STD_LOGIC;
  signal alu_carry_1 : STD_LOGIC;
  signal alu_carry_10 : STD_LOGIC;
  signal alu_carry_11 : STD_LOGIC;
  signal alu_carry_12 : STD_LOGIC;
  signal alu_carry_13 : STD_LOGIC;
  signal alu_carry_14 : STD_LOGIC;
  signal alu_carry_15 : STD_LOGIC;
  signal alu_carry_16 : STD_LOGIC;
  signal alu_carry_17 : STD_LOGIC;
  signal alu_carry_18 : STD_LOGIC;
  signal alu_carry_19 : STD_LOGIC;
  signal alu_carry_2 : STD_LOGIC;
  signal alu_carry_20 : STD_LOGIC;
  signal alu_carry_21 : STD_LOGIC;
  signal alu_carry_22 : STD_LOGIC;
  signal alu_carry_23 : STD_LOGIC;
  signal alu_carry_24 : STD_LOGIC;
  signal alu_carry_25 : STD_LOGIC;
  signal alu_carry_26 : STD_LOGIC;
  signal alu_carry_27 : STD_LOGIC;
  signal alu_carry_28 : STD_LOGIC;
  signal alu_carry_29 : STD_LOGIC;
  signal alu_carry_3 : STD_LOGIC;
  signal alu_carry_30 : STD_LOGIC;
  signal alu_carry_31 : STD_LOGIC;
  signal alu_carry_4 : STD_LOGIC;
  signal alu_carry_5 : STD_LOGIC;
  signal alu_carry_6 : STD_LOGIC;
  signal alu_carry_7 : STD_LOGIC;
  signal alu_carry_8 : STD_LOGIC;
  signal alu_carry_9 : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_100 : STD_LOGIC;
  signal lopt_101 : STD_LOGIC;
  signal lopt_102 : STD_LOGIC;
  signal lopt_103 : STD_LOGIC;
  signal lopt_104 : STD_LOGIC;
  signal lopt_105 : STD_LOGIC;
  signal lopt_106 : STD_LOGIC;
  signal lopt_107 : STD_LOGIC;
  signal lopt_108 : STD_LOGIC;
  signal lopt_109 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_110 : STD_LOGIC;
  signal lopt_111 : STD_LOGIC;
  signal lopt_112 : STD_LOGIC;
  signal lopt_113 : STD_LOGIC;
  signal lopt_114 : STD_LOGIC;
  signal lopt_115 : STD_LOGIC;
  signal lopt_116 : STD_LOGIC;
  signal lopt_117 : STD_LOGIC;
  signal lopt_118 : STD_LOGIC;
  signal lopt_119 : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal lopt_120 : STD_LOGIC;
  signal lopt_121 : STD_LOGIC;
  signal lopt_122 : STD_LOGIC;
  signal lopt_123 : STD_LOGIC;
  signal lopt_124 : STD_LOGIC;
  signal lopt_125 : STD_LOGIC;
  signal lopt_126 : STD_LOGIC;
  signal lopt_127 : STD_LOGIC;
  signal lopt_128 : STD_LOGIC;
  signal lopt_13 : STD_LOGIC;
  signal lopt_14 : STD_LOGIC;
  signal lopt_15 : STD_LOGIC;
  signal lopt_16 : STD_LOGIC;
  signal lopt_17 : STD_LOGIC;
  signal lopt_18 : STD_LOGIC;
  signal lopt_19 : STD_LOGIC;
  signal lopt_20 : STD_LOGIC;
  signal lopt_21 : STD_LOGIC;
  signal lopt_22 : STD_LOGIC;
  signal lopt_23 : STD_LOGIC;
  signal lopt_24 : STD_LOGIC;
  signal lopt_25 : STD_LOGIC;
  signal lopt_26 : STD_LOGIC;
  signal lopt_27 : STD_LOGIC;
  signal lopt_28 : STD_LOGIC;
  signal lopt_29 : STD_LOGIC;
  signal lopt_30 : STD_LOGIC;
  signal lopt_31 : STD_LOGIC;
  signal lopt_32 : STD_LOGIC;
  signal lopt_33 : STD_LOGIC;
  signal lopt_34 : STD_LOGIC;
  signal lopt_35 : STD_LOGIC;
  signal lopt_36 : STD_LOGIC;
  signal lopt_37 : STD_LOGIC;
  signal lopt_38 : STD_LOGIC;
  signal lopt_39 : STD_LOGIC;
  signal lopt_40 : STD_LOGIC;
  signal lopt_41 : STD_LOGIC;
  signal lopt_42 : STD_LOGIC;
  signal lopt_43 : STD_LOGIC;
  signal lopt_44 : STD_LOGIC;
  signal lopt_45 : STD_LOGIC;
  signal lopt_46 : STD_LOGIC;
  signal lopt_47 : STD_LOGIC;
  signal lopt_48 : STD_LOGIC;
  signal lopt_49 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_50 : STD_LOGIC;
  signal lopt_51 : STD_LOGIC;
  signal lopt_52 : STD_LOGIC;
  signal lopt_53 : STD_LOGIC;
  signal lopt_54 : STD_LOGIC;
  signal lopt_55 : STD_LOGIC;
  signal lopt_56 : STD_LOGIC;
  signal lopt_57 : STD_LOGIC;
  signal lopt_58 : STD_LOGIC;
  signal lopt_59 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_60 : STD_LOGIC;
  signal lopt_61 : STD_LOGIC;
  signal lopt_62 : STD_LOGIC;
  signal lopt_63 : STD_LOGIC;
  signal lopt_64 : STD_LOGIC;
  signal lopt_65 : STD_LOGIC;
  signal lopt_66 : STD_LOGIC;
  signal lopt_67 : STD_LOGIC;
  signal lopt_68 : STD_LOGIC;
  signal lopt_69 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_70 : STD_LOGIC;
  signal lopt_71 : STD_LOGIC;
  signal lopt_72 : STD_LOGIC;
  signal lopt_73 : STD_LOGIC;
  signal lopt_74 : STD_LOGIC;
  signal lopt_75 : STD_LOGIC;
  signal lopt_76 : STD_LOGIC;
  signal lopt_77 : STD_LOGIC;
  signal lopt_78 : STD_LOGIC;
  signal lopt_79 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_80 : STD_LOGIC;
  signal lopt_81 : STD_LOGIC;
  signal lopt_82 : STD_LOGIC;
  signal lopt_83 : STD_LOGIC;
  signal lopt_84 : STD_LOGIC;
  signal lopt_85 : STD_LOGIC;
  signal lopt_86 : STD_LOGIC;
  signal lopt_87 : STD_LOGIC;
  signal lopt_88 : STD_LOGIC;
  signal lopt_89 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal lopt_90 : STD_LOGIC;
  signal lopt_91 : STD_LOGIC;
  signal lopt_92 : STD_LOGIC;
  signal lopt_93 : STD_LOGIC;
  signal lopt_94 : STD_LOGIC;
  signal lopt_95 : STD_LOGIC;
  signal lopt_96 : STD_LOGIC;
  signal lopt_97 : STD_LOGIC;
  signal lopt_98 : STD_LOGIC;
  signal lopt_99 : STD_LOGIC;
begin
\ALL_Bits[0].ALU_Bit_I1\: entity work.\system_microblaze_0_0_ALU_Bit__parameterized31\
     port map (
      \Data_Addr[0]\(0) => \Data_Addr[0]\(29),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CMP_Op_reg => EX_CMP_Op_reg,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[0]\(0) => \EX_Op1_reg[0]\(31),
      LO => alu_carry_31,
      Q(0) => Q(31),
      S => S,
      \Using_FPGA.Native\ => LO,
      ex_unsigned_op => ex_unsigned_op,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_8,
      lopt_100 => lopt_98,
      lopt_101 => lopt_99,
      lopt_102 => lopt_100,
      lopt_103 => lopt_101,
      lopt_104 => lopt_102,
      lopt_105 => lopt_103,
      lopt_106 => lopt_104,
      lopt_107 => lopt_105,
      lopt_108 => lopt_106,
      lopt_109 => lopt_107,
      lopt_11 => lopt_9,
      lopt_110 => lopt_108,
      lopt_111 => lopt_109,
      lopt_112 => lopt_110,
      lopt_113 => lopt_111,
      lopt_114 => lopt_112,
      lopt_115 => lopt_113,
      lopt_116 => lopt_114,
      lopt_117 => lopt_115,
      lopt_118 => lopt_116,
      lopt_119 => lopt_117,
      lopt_12 => lopt_10,
      lopt_120 => lopt_118,
      lopt_121 => lopt_119,
      lopt_122 => lopt_120,
      lopt_123 => lopt_121,
      lopt_124 => lopt_122,
      lopt_125 => lopt_123,
      lopt_126 => lopt_124,
      lopt_127 => lopt_125,
      lopt_128 => lopt_126,
      lopt_129 => lopt_127,
      lopt_13 => lopt_11,
      lopt_130 => lopt_128,
      lopt_14 => lopt_12,
      lopt_15 => lopt_13,
      lopt_16 => lopt_14,
      lopt_17 => lopt_15,
      lopt_18 => lopt_16,
      lopt_19 => lopt_17,
      lopt_2 => lopt_2,
      lopt_20 => lopt_18,
      lopt_21 => lopt_19,
      lopt_22 => lopt_20,
      lopt_23 => lopt_21,
      lopt_24 => lopt_22,
      lopt_25 => lopt_23,
      lopt_26 => lopt_24,
      lopt_27 => lopt_25,
      lopt_28 => lopt_26,
      lopt_29 => lopt_27,
      lopt_3 => lopt_3,
      lopt_30 => lopt_28,
      lopt_31 => lopt_29,
      lopt_32 => lopt_30,
      lopt_33 => lopt_31,
      lopt_34 => lopt_32,
      lopt_35 => lopt_33,
      lopt_36 => lopt_34,
      lopt_37 => lopt_35,
      lopt_38 => lopt_36,
      lopt_39 => lopt_37,
      lopt_4 => lopt_4,
      lopt_40 => lopt_38,
      lopt_41 => lopt_39,
      lopt_42 => lopt_40,
      lopt_43 => lopt_41,
      lopt_44 => lopt_42,
      lopt_45 => lopt_43,
      lopt_46 => lopt_44,
      lopt_47 => lopt_45,
      lopt_48 => lopt_46,
      lopt_49 => lopt_47,
      lopt_5 => lopt_5,
      lopt_50 => lopt_48,
      lopt_51 => lopt_49,
      lopt_52 => lopt_50,
      lopt_53 => lopt_51,
      lopt_54 => lopt_52,
      lopt_55 => lopt_53,
      lopt_56 => lopt_54,
      lopt_57 => lopt_55,
      lopt_58 => lopt_56,
      lopt_59 => lopt_57,
      lopt_6 => DI_0,
      lopt_60 => lopt_58,
      lopt_61 => lopt_59,
      lopt_62 => lopt_60,
      lopt_63 => lopt_61,
      lopt_64 => lopt_62,
      lopt_65 => lopt_63,
      lopt_66 => lopt_64,
      lopt_67 => lopt_65,
      lopt_68 => lopt_66,
      lopt_69 => lopt_67,
      lopt_7 => ex_use_carry,
      lopt_70 => lopt_68,
      lopt_71 => lopt_69,
      lopt_72 => lopt_70,
      lopt_73 => lopt_71,
      lopt_74 => lopt_72,
      lopt_75 => lopt_73,
      lopt_76 => lopt_74,
      lopt_77 => lopt_75,
      lopt_78 => lopt_76,
      lopt_79 => lopt_77,
      lopt_8 => lopt_6,
      lopt_80 => lopt_78,
      lopt_81 => lopt_79,
      lopt_82 => lopt_80,
      lopt_83 => lopt_81,
      lopt_84 => lopt_82,
      lopt_85 => lopt_83,
      lopt_86 => lopt_84,
      lopt_87 => lopt_85,
      lopt_88 => lopt_86,
      lopt_89 => lopt_87,
      lopt_9 => lopt_7,
      lopt_90 => lopt_88,
      lopt_91 => lopt_89,
      lopt_92 => lopt_90,
      lopt_93 => lopt_91,
      lopt_94 => lopt_92,
      lopt_95 => lopt_93,
      lopt_96 => lopt_94,
      lopt_97 => lopt_95,
      lopt_98 => lopt_96,
      lopt_99 => lopt_97
    );
\ALL_Bits[10].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit
     port map (
      \Data_Addr[10]\(0) => \Data_Addr[0]\(19),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_22,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[10]\(0) => \EX_Op1_reg[0]\(21),
      LO => alu_carry_21,
      Q(0) => Q(21),
      lopt => lopt_90,
      lopt_1 => lopt_91,
      lopt_2 => lopt_92,
      lopt_3 => lopt_102
    );
\ALL_Bits[11].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_419
     port map (
      \Data_Addr[11]\(0) => \Data_Addr[0]\(18),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_21,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[11]\(0) => \EX_Op1_reg[0]\(20),
      LO => alu_carry_20,
      Q(0) => Q(20),
      lopt => lopt_83,
      lopt_1 => lopt_84,
      lopt_2 => lopt_85,
      lopt_3 => lopt_89
    );
\ALL_Bits[12].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_420
     port map (
      \Data_Addr[12]\(0) => \Data_Addr[0]\(17),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_20,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[12]\(0) => \EX_Op1_reg[0]\(19),
      LO => alu_carry_19,
      Q(0) => Q(19),
      lopt => lopt_80,
      lopt_1 => lopt_81,
      lopt_2 => lopt_82,
      lopt_3 => lopt_88
    );
\ALL_Bits[13].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_421
     port map (
      \Data_Addr[13]\(0) => \Data_Addr[0]\(16),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_19,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[13]\(0) => \EX_Op1_reg[0]\(18),
      LO => alu_carry_18,
      Q(0) => Q(18),
      lopt => lopt_77,
      lopt_1 => lopt_78,
      lopt_2 => lopt_79,
      lopt_3 => lopt_87
    );
\ALL_Bits[14].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_422
     port map (
      \Data_Addr[14]\(0) => \Data_Addr[0]\(15),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_18,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[14]\(0) => \EX_Op1_reg[0]\(17),
      LO => alu_carry_17,
      Q(0) => Q(17),
      lopt => lopt_74,
      lopt_1 => lopt_75,
      lopt_2 => lopt_76,
      lopt_3 => lopt_86
    );
\ALL_Bits[15].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_423
     port map (
      \Data_Addr[15]\(0) => \Data_Addr[0]\(14),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_17,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[15]\(0) => \EX_Op1_reg[0]\(16),
      LO => alu_carry_16,
      Q(0) => Q(16),
      lopt => lopt_67,
      lopt_1 => lopt_68,
      lopt_2 => lopt_69,
      lopt_3 => lopt_73
    );
\ALL_Bits[16].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_424
     port map (
      \Data_Addr[16]\(0) => \Data_Addr[0]\(13),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_16,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[16]\(0) => \EX_Op1_reg[0]\(15),
      LO => alu_carry_15,
      Q(0) => Q(15),
      lopt => lopt_64,
      lopt_1 => lopt_65,
      lopt_2 => lopt_66,
      lopt_3 => lopt_72
    );
\ALL_Bits[17].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_425
     port map (
      \Data_Addr[17]\(0) => \Data_Addr[0]\(12),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_15,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[17]\(0) => \EX_Op1_reg[0]\(14),
      LO => alu_carry_14,
      Q(0) => Q(14),
      lopt => lopt_61,
      lopt_1 => lopt_62,
      lopt_2 => lopt_63,
      lopt_3 => lopt_71
    );
\ALL_Bits[18].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_426
     port map (
      \Data_Addr[18]\(0) => \Data_Addr[0]\(11),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_14,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[18]\(0) => \EX_Op1_reg[0]\(13),
      LO => alu_carry_13,
      Q(0) => Q(13),
      lopt => lopt_58,
      lopt_1 => lopt_59,
      lopt_2 => lopt_60,
      lopt_3 => lopt_70
    );
\ALL_Bits[19].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_427
     port map (
      \Data_Addr[19]\(0) => \Data_Addr[0]\(10),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_13,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[19]\(0) => \EX_Op1_reg[0]\(12),
      LO => alu_carry_12,
      Q(0) => Q(12),
      lopt => lopt_51,
      lopt_1 => lopt_52,
      lopt_2 => lopt_53,
      lopt_3 => lopt_57
    );
\ALL_Bits[1].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_428
     port map (
      \Data_Addr[1]\(0) => \Data_Addr[0]\(28),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_31,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[1]\(0) => \EX_Op1_reg[0]\(30),
      LO => alu_carry_30,
      Q(0) => Q(30),
      lopt => lopt_125,
      lopt_1 => lopt_126,
      lopt_2 => lopt_128
    );
\ALL_Bits[20].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_429
     port map (
      \Data_Addr[20]\(0) => \Data_Addr[0]\(9),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_12,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[20]\(0) => \EX_Op1_reg[0]\(11),
      LO => alu_carry_11,
      Q(0) => Q(11),
      lopt => lopt_48,
      lopt_1 => lopt_49,
      lopt_2 => lopt_50,
      lopt_3 => lopt_56
    );
\ALL_Bits[21].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_430
     port map (
      \Data_Addr[21]\(0) => \Data_Addr[0]\(8),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_11,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[21]\(0) => \EX_Op1_reg[0]\(10),
      LO => alu_carry_10,
      Q(0) => Q(10),
      lopt => lopt_45,
      lopt_1 => lopt_46,
      lopt_2 => lopt_47,
      lopt_3 => lopt_55
    );
\ALL_Bits[22].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_431
     port map (
      \Data_Addr[22]\(0) => \Data_Addr[0]\(7),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_10,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[22]\(0) => \EX_Op1_reg[0]\(9),
      LO => alu_carry_9,
      Q(0) => Q(9),
      lopt => lopt_42,
      lopt_1 => lopt_43,
      lopt_2 => lopt_44,
      lopt_3 => lopt_54
    );
\ALL_Bits[23].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_432
     port map (
      \Data_Addr[23]\(0) => \Data_Addr[0]\(6),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_9,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[23]\(0) => \EX_Op1_reg[0]\(8),
      LO => alu_carry_8,
      Q(0) => Q(8),
      lopt => lopt_35,
      lopt_1 => lopt_36,
      lopt_2 => lopt_37,
      lopt_3 => lopt_41
    );
\ALL_Bits[24].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_433
     port map (
      \Data_Addr[24]\(0) => \Data_Addr[0]\(5),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_8,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[24]\(0) => \EX_Op1_reg[0]\(7),
      LO => alu_carry_7,
      Q(0) => Q(7),
      lopt => lopt_32,
      lopt_1 => lopt_33,
      lopt_2 => lopt_34,
      lopt_3 => lopt_40
    );
\ALL_Bits[25].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_434
     port map (
      \Data_Addr[25]\(0) => \Data_Addr[0]\(4),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_7,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[25]\(0) => \EX_Op1_reg[0]\(6),
      LO => alu_carry_6,
      Q(0) => Q(6),
      lopt => lopt_29,
      lopt_1 => lopt_30,
      lopt_2 => lopt_31,
      lopt_3 => lopt_39
    );
\ALL_Bits[26].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_435
     port map (
      \Data_Addr[26]\(0) => \Data_Addr[0]\(3),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_6,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[26]\(0) => \EX_Op1_reg[0]\(5),
      LO => alu_carry_5,
      Q(0) => Q(5),
      lopt => lopt_26,
      lopt_1 => lopt_27,
      lopt_2 => lopt_28,
      lopt_3 => lopt_38
    );
\ALL_Bits[27].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_436
     port map (
      \Data_Addr[27]\(0) => \Data_Addr[0]\(2),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_5,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[27]\(0) => \EX_Op1_reg[0]\(4),
      LO => alu_carry_4,
      Q(0) => Q(4),
      lopt => lopt_19,
      lopt_1 => lopt_20,
      lopt_2 => lopt_21,
      lopt_3 => lopt_25
    );
\ALL_Bits[28].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_437
     port map (
      \Data_Addr[28]\(0) => \Data_Addr[0]\(1),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_4,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[28]\(0) => \EX_Op1_reg[0]\(3),
      LO => alu_carry_3,
      Q(0) => Q(3),
      lopt => lopt_16,
      lopt_1 => lopt_17,
      lopt_2 => lopt_18,
      lopt_3 => lopt_24
    );
\ALL_Bits[29].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_438
     port map (
      \Data_Addr[29]\(0) => \Data_Addr[0]\(0),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_3,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[29]\(0) => \EX_Op1_reg[0]\(2),
      LO => alu_carry_2,
      Q(0) => Q(2),
      lopt => lopt_13,
      lopt_1 => lopt_14,
      lopt_2 => lopt_15,
      lopt_3 => lopt_23
    );
\ALL_Bits[2].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_439
     port map (
      \Data_Addr[2]\(0) => \Data_Addr[0]\(27),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_30,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[2]\(0) => \EX_Op1_reg[0]\(29),
      LO => alu_carry_29,
      Q(0) => Q(29),
      lopt => lopt_122,
      lopt_1 => lopt_123,
      lopt_2 => lopt_124,
      lopt_3 => lopt_127
    );
\ALL_Bits[30].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_440
     port map (
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_2,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[30]\(0) => \EX_Op1_reg[0]\(1),
      LO => alu_carry_1,
      \MEM_DataBus_Addr_reg[30]\(0) => \MEM_DataBus_Addr_reg[30]\(1),
      Q(0) => Q(1),
      lopt => lopt_10,
      lopt_1 => lopt_11,
      lopt_2 => lopt_12,
      lopt_3 => lopt_22
    );
\ALL_Bits[31].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_441
     port map (
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryIn => alu_carry_0,
      EX_CarryOut => alu_carry_1,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[31]\(0) => \EX_Op1_reg[0]\(0),
      \MEM_DataBus_Addr_reg[31]\(0) => \MEM_DataBus_Addr_reg[30]\(0),
      Q(0) => Q(0),
      lopt => lopt_6,
      lopt_1 => lopt_7,
      lopt_2 => lopt_8,
      lopt_3 => lopt_9
    );
\ALL_Bits[3].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_442
     port map (
      \Data_Addr[3]\(0) => \Data_Addr[0]\(26),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_29,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[3]\(0) => \EX_Op1_reg[0]\(28),
      LO => alu_carry_28,
      Q(0) => Q(28),
      lopt => lopt_115,
      lopt_1 => lopt_116,
      lopt_2 => lopt_117,
      lopt_3 => lopt_121
    );
\ALL_Bits[4].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_443
     port map (
      \Data_Addr[4]\(0) => \Data_Addr[0]\(25),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_28,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[4]\(0) => \EX_Op1_reg[0]\(27),
      LO => alu_carry_27,
      Q(0) => Q(27),
      lopt => lopt_112,
      lopt_1 => lopt_113,
      lopt_2 => lopt_114,
      lopt_3 => lopt_120
    );
\ALL_Bits[5].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_444
     port map (
      \Data_Addr[5]\(0) => \Data_Addr[0]\(24),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_27,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[5]\(0) => \EX_Op1_reg[0]\(26),
      LO => alu_carry_26,
      Q(0) => Q(26),
      lopt => lopt_109,
      lopt_1 => lopt_110,
      lopt_2 => lopt_111,
      lopt_3 => lopt_119
    );
\ALL_Bits[6].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_445
     port map (
      \Data_Addr[6]\(0) => \Data_Addr[0]\(23),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_26,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[6]\(0) => \EX_Op1_reg[0]\(25),
      LO => alu_carry_25,
      Q(0) => Q(25),
      lopt => lopt_106,
      lopt_1 => lopt_107,
      lopt_2 => lopt_108,
      lopt_3 => lopt_118
    );
\ALL_Bits[7].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_446
     port map (
      \Data_Addr[7]\(0) => \Data_Addr[0]\(22),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_25,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[7]\(0) => \EX_Op1_reg[0]\(24),
      LO => alu_carry_24,
      Q(0) => Q(24),
      lopt => lopt_99,
      lopt_1 => lopt_100,
      lopt_2 => lopt_101,
      lopt_3 => lopt_105
    );
\ALL_Bits[8].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_447
     port map (
      \Data_Addr[8]\(0) => \Data_Addr[0]\(21),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryOut => alu_carry_24,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[8]\(0) => \EX_Op1_reg[0]\(23),
      LO => alu_carry_23,
      Q(0) => Q(23),
      lopt => lopt_96,
      lopt_1 => lopt_97,
      lopt_2 => lopt_98,
      lopt_3 => lopt_104
    );
\ALL_Bits[9].ALU_Bit_I1\: entity work.system_microblaze_0_0_ALU_Bit_448
     port map (
      \Data_Addr[9]\(0) => \Data_Addr[0]\(20),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CarryIn => alu_carry_22,
      EX_CarryOut => alu_carry_23,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[9]\(0) => \EX_Op1_reg[0]\(22),
      Q(0) => Q(22),
      lopt => lopt_93,
      lopt_1 => lopt_94,
      lopt_2 => lopt_95,
      lopt_3 => lopt_103
    );
\Use_Carry_Decoding.CarryIn_MUXCY\: entity work.system_microblaze_0_0_MB_MUXCY_449
     port map (
      DI_0 => DI_0,
      alu_carry_0 => alu_carry_0,
      ex_alu_carryin => ex_alu_carryin,
      ex_use_carry => ex_use_carry,
      lopt => lopt_5
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_Debug is
  port (
    start_dbg_exec_reg_0 : out STD_LOGIC;
    executing0 : out STD_LOGIC;
    command_reg_clear_reg_0 : out STD_LOGIC;
    \Single_Synchronize.use_async_reset.sync_reg\ : out STD_LOGIC;
    saved_reset_mode_dbg_halt : out STD_LOGIC;
    \Performace_Debug_Control.normal_stop_i_reg_0\ : out STD_LOGIC;
    \Single_Synchronize.use_async_reset.sync_reg_0\ : out STD_LOGIC;
    \Performace_Debug_Control.dbg_freeze_nohalt_reg_0\ : out STD_LOGIC;
    \instr_read_reg_reg[0]_0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\ : out STD_LOGIC;
    \Performace_Debug_Control.watchpoint_brk_hold_reg_0\ : out STD_LOGIC;
    dbg_stop_if_delay_i : out STD_LOGIC;
    \Performace_Debug_Control.ex_watchpoint_brk_reg_0\ : out STD_LOGIC;
    p_36_out : out STD_LOGIC;
    \if_pc_reg[29]\ : out STD_LOGIC;
    IB_Ready : out STD_LOGIC;
    Dbg_TDO : out STD_LOGIC;
    LOCKSTEP_Master_Out : out STD_LOGIC_VECTOR ( 41 downto 0 );
    \LOCKSTEP_Out_reg[0]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Trig_In : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Trig_Ack_Out : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Clk : in STD_LOGIC;
    Rst18_out : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \control_reg_reg[8]_0\ : in STD_LOGIC;
    wb_Halted : in STD_LOGIC;
    Dbg_Update : in STD_LOGIC;
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 1 downto 0 );
    wb_read_imm_reg_1 : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 33 downto 0 );
    wb_read_imm_reg : in STD_LOGIC;
    dbg_state_i : in STD_LOGIC;
    no_sleeping : in STD_LOGIC;
    Dbg_Stop : in STD_LOGIC;
    Dbg_Capture : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[2]\ : in STD_LOGIC;
    exception_reg_0 : in STD_LOGIC;
    wb_valid_reg : in STD_LOGIC;
    \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_1\ : in STD_LOGIC;
    \Performace_Debug_Control.ex_watchpoint_brk_reg_1\ : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Reset_Mode : in STD_LOGIC_VECTOR ( 0 to 1 );
    wb_pc_valid : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Sleep_Decode : in STD_LOGIC;
    \Dbg_Reg_En_2__s_port_]\ : in STD_LOGIC;
    \Dbg_Reg_En[2]_0\ : in STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    \Dbg_Reg_En[2]_1\ : in STD_LOGIC;
    dbg_clean_stop : in STD_LOGIC;
    Wakeup : in STD_LOGIC_VECTOR ( 0 to 1 );
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    ex_Exception_Taken : in STD_LOGIC;
    mem_Exception_Taken : in STD_LOGIC;
    MEM_DataBus_Access_reg : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Shift : in STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    Dbg_TDI : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    wb_gpr_write_dbg_reg : in STD_LOGIC;
    wb_gpr_write_dbg_reg_0 : in STD_LOGIC;
    wb_gpr_write_dbg_reg_1 : in STD_LOGIC;
    wb_gpr_write_dbg_reg_2 : in STD_LOGIC;
    wb_gpr_write_dbg_reg_3 : in STD_LOGIC;
    wb_gpr_write_dbg_reg_4 : in STD_LOGIC;
    wb_gpr_write_dbg_reg_5 : in STD_LOGIC;
    wb_gpr_write_dbg_reg_6 : in STD_LOGIC;
    wb_gpr_write_dbg_reg_7 : in STD_LOGIC;
    wb_gpr_write_dbg_reg_8 : in STD_LOGIC;
    wb_gpr_write_dbg_reg_9 : in STD_LOGIC;
    wb_gpr_write_dbg_reg_10 : in STD_LOGIC;
    wb_gpr_write_dbg_reg_11 : in STD_LOGIC;
    wb_gpr_write_dbg_reg_12 : in STD_LOGIC;
    wb_gpr_write_dbg_reg_13 : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[2]_0\ : in STD_LOGIC;
    dbg_stop_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_Debug : entity is "Debug";
end system_microblaze_0_0_Debug;

architecture STRUCTURE of system_microblaze_0_0_Debug is
  signal A1 : STD_LOGIC;
  signal A2 : STD_LOGIC;
  signal A3 : STD_LOGIC;
  signal Command_Reg_En : STD_LOGIC;
  signal Control_Reg_En : STD_LOGIC;
  signal \Dbg_Reg_En_2__s_net_1\ : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_10_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_11_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_13_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_14_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_15_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_16_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_17_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_19_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_20_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_21_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_22_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_23_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_24_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_25_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_26_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_27_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_28_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_29_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_2_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_30_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_31_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_32_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_33_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_34_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_35_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_36_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_37_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_38_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_3_n_0 : STD_LOGIC;
  signal \^dbg_trig_ack_out\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^dbg_trig_in\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal Full_32_bit : STD_LOGIC;
  signal Full_32_bit_1 : STD_LOGIC;
  signal Instr_Insert_Reg_En : STD_LOGIC;
  signal Instr_Insert_Reg_En_1 : STD_LOGIC;
  signal Instr_Insert_Reg_En_1_i_2_n_0 : STD_LOGIC;
  signal New_Dbg_Instr2_TCK : STD_LOGIC;
  signal New_Dbg_Instr_TCK : STD_LOGIC;
  signal New_Dbg_Instr_TCK_i_1_n_0 : STD_LOGIC;
  signal \New_Instr_Reg_TCK[0]_i_1_n_0\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_freeze_nohalt_i_1_n_0\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_freeze_nohalt_i_2_n_0\ : STD_LOGIC;
  signal \^performace_debug_control.dbg_freeze_nohalt_reg_0\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_hit_reg_n_0_[10]\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_hit_reg_n_0_[11]\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_hit_reg_n_0_[12]\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_hit_reg_n_0_[13]\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_hit_reg_n_0_[14]\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_hit_reg_n_0_[15]\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_hit_reg_n_0_[1]\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_hit_reg_n_0_[2]\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_hit_reg_n_0_[3]\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_hit_reg_n_0_[4]\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_hit_reg_n_0_[5]\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_hit_reg_n_0_[6]\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_hit_reg_n_0_[7]\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_hit_reg_n_0_[8]\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_hit_reg_n_0_[9]\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_state_nohalt_i_1_n_0\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_state_nohalt_i_3_n_0\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_state_nohalt_i_5_n_0\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_stop_i_reg_n_0\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_stop_if_delay_i_i_1_n_0\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_1_n_0\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_2_n_0\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_3_n_0\ : STD_LOGIC;
  signal \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_4_n_0\ : STD_LOGIC;
  signal \^performace_debug_control.ex_dbg_pc_hit_single_step_reg_0\ : STD_LOGIC;
  signal \^performace_debug_control.ex_watchpoint_brk_reg_0\ : STD_LOGIC;
  signal \Performace_Debug_Control.force_stop_i_i_1_n_0\ : STD_LOGIC;
  signal \Performace_Debug_Control.mem_brki_hit_i_1_n_0\ : STD_LOGIC;
  signal \Performace_Debug_Control.mem_dbg_hit[0]_i_1_n_0\ : STD_LOGIC;
  signal \Performace_Debug_Control.mem_dbg_hit[0]_i_2_n_0\ : STD_LOGIC;
  signal \Performace_Debug_Control.mem_dbg_hit_reg_n_0_[0]\ : STD_LOGIC;
  signal \Performace_Debug_Control.normal_stop_i_i_1_n_0\ : STD_LOGIC;
  signal \^performace_debug_control.normal_stop_i_reg_0\ : STD_LOGIC;
  signal \Performace_Debug_Control.step_continue_hold_i_1_n_0\ : STD_LOGIC;
  signal \Performace_Debug_Control.watchpoint_brk_hold_i_1_n_0\ : STD_LOGIC;
  signal \^performace_debug_control.watchpoint_brk_hold_reg_0\ : STD_LOGIC;
  signal \Performace_Debug_Control.watchpoint_brk_hold_reg_n_0\ : STD_LOGIC;
  signal \Performace_Debug_Control.wb_brki_hit_i_1_n_0\ : STD_LOGIC;
  signal \Performace_Debug_Control.wb_dbg_hit[0]_i_1_n_0\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal Q0_in : STD_LOGIC;
  signal Q0_out : STD_LOGIC;
  signal Q11_in : STD_LOGIC;
  signal Q2_in : STD_LOGIC;
  signal Q2_out : STD_LOGIC;
  signal Q3_in : STD_LOGIC;
  signal Q3_out : STD_LOGIC;
  signal Q4_out : STD_LOGIC;
  signal Q6_out : STD_LOGIC;
  signal Q_0 : STD_LOGIC;
  signal Raw : STD_LOGIC;
  signal SRL16E_4_n_0 : STD_LOGIC;
  signal \^single_synchronize.use_async_reset.sync_reg\ : STD_LOGIC;
  signal \^single_synchronize.use_async_reset.sync_reg_0\ : STD_LOGIC;
  signal TDO_Data_Reg : STD_LOGIC;
  signal \The_Cache_Addresses[6].SRL16E_Cache_I_n_0\ : STD_LOGIC;
  signal \Using_PC_Breakpoints.All_PC_Brks[0].address_hit_I_n_1\ : STD_LOGIC;
  signal \Using_PC_Breakpoints.All_PC_Brks[0].address_hit_I_n_2\ : STD_LOGIC;
  signal capture_1 : STD_LOGIC;
  signal command_reg : STD_LOGIC_VECTOR ( 0 to 1 );
  signal \command_reg[0]_i_3_n_0\ : STD_LOGIC;
  signal command_reg_clear : STD_LOGIC;
  signal command_reg_clear_i_1_n_0 : STD_LOGIC;
  signal \^command_reg_clear_reg_0\ : STD_LOGIC;
  signal command_reg_rst : STD_LOGIC;
  signal continue_from_brk0 : STD_LOGIC;
  signal continue_from_brk_TClk : STD_LOGIC;
  signal continue_from_brk_reg_n_0 : STD_LOGIC;
  signal continue_from_brk_rst : STD_LOGIC;
  signal \control_reg_reg_n_0_[0]\ : STD_LOGIC;
  signal \control_reg_reg_n_0_[4]\ : STD_LOGIC;
  signal \control_reg_reg_n_0_[5]\ : STD_LOGIC;
  signal \data_rd_reg[0]_i_1_n_0\ : STD_LOGIC;
  signal \data_rd_reg[0]_i_2_n_0\ : STD_LOGIC;
  signal \data_rd_reg[10]_i_1_n_0\ : STD_LOGIC;
  signal \data_rd_reg[11]_i_1_n_0\ : STD_LOGIC;
  signal \data_rd_reg[12]_i_1_n_0\ : STD_LOGIC;
  signal \data_rd_reg[13]_i_1_n_0\ : STD_LOGIC;
  signal \data_rd_reg[14]_i_1_n_0\ : STD_LOGIC;
  signal \data_rd_reg[15]_i_1_n_0\ : STD_LOGIC;
  signal \data_rd_reg[1]_i_1_n_0\ : STD_LOGIC;
  signal \data_rd_reg[2]_i_1_n_0\ : STD_LOGIC;
  signal \data_rd_reg[32]_i_1_n_0\ : STD_LOGIC;
  signal \data_rd_reg[32]_i_2_n_0\ : STD_LOGIC;
  signal \data_rd_reg[32]_i_3_n_0\ : STD_LOGIC;
  signal \data_rd_reg[3]_i_1_n_0\ : STD_LOGIC;
  signal \data_rd_reg[4]_i_1_n_0\ : STD_LOGIC;
  signal \data_rd_reg[5]_i_1_n_0\ : STD_LOGIC;
  signal \data_rd_reg[6]_i_1_n_0\ : STD_LOGIC;
  signal \data_rd_reg[7]_i_1_n_0\ : STD_LOGIC;
  signal \data_rd_reg[8]_i_1_n_0\ : STD_LOGIC;
  signal \data_rd_reg[9]_i_1_n_0\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[0]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[10]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[11]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[12]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[13]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[14]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[15]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[16]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[17]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[18]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[19]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[1]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[20]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[21]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[22]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[23]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[24]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[25]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[26]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[27]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[28]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[29]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[2]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[30]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[31]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[32]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[3]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[4]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[5]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[6]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[7]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[8]\ : STD_LOGIC;
  signal \data_rd_reg_reg_n_0_[9]\ : STD_LOGIC;
  signal data_read_reg : STD_LOGIC_VECTOR ( 0 to 32 );
  signal dbg_brki_hit : STD_LOGIC;
  signal dbg_brki_hit_synced : STD_LOGIC;
  signal dbg_freeze_nohalt0_in : STD_LOGIC;
  signal dbg_halt_reset_mode_i_1_n_0 : STD_LOGIC;
  signal dbg_halt_reset_mode_reg_n_0 : STD_LOGIC;
  signal dbg_stop_1 : STD_LOGIC;
  signal \^dbg_stop_if_delay_i\ : STD_LOGIC;
  signal dbg_wakeup_i : STD_LOGIC;
  signal delay_slot_instr : STD_LOGIC;
  signal ex_brki_hit : STD_LOGIC;
  signal ex_pc_brk : STD_LOGIC;
  signal ex_step_continue_hold : STD_LOGIC;
  signal ex_watchpoint_brk_hold : STD_LOGIC;
  signal force_stop_TClk : STD_LOGIC;
  signal force_stop_cmd_1 : STD_LOGIC;
  signal force_stop_cmd_i0 : STD_LOGIC;
  signal force_stop_cmd_i_reg_n_0 : STD_LOGIC;
  signal force_stop_cmd_rst : STD_LOGIC;
  signal force_stop_i : STD_LOGIC;
  signal if_debug_ready_i0 : STD_LOGIC;
  signal instr_read_reg : STD_LOGIC_VECTOR ( 0 to 1 );
  signal \^instr_read_reg_reg[0]_0\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal mb_halted_1 : STD_LOGIC;
  signal mem_brki_hit : STD_LOGIC;
  signal new_dbg_instr_shifting_CLK_reg_n_0 : STD_LOGIC;
  signal normal_stop_TClk : STD_LOGIC;
  signal normal_stop_TClk_i_3_n_0 : STD_LOGIC;
  signal normal_stop_cmd_1 : STD_LOGIC;
  signal normal_stop_cmd_i0 : STD_LOGIC;
  signal normal_stop_cmd_i_reg_n_0 : STD_LOGIC;
  signal normal_stop_cmd_rst : STD_LOGIC;
  signal normal_stop_i : STD_LOGIC;
  signal p_0_in : STD_LOGIC;
  signal p_0_in59_in : STD_LOGIC;
  signal p_4_out : STD_LOGIC;
  signal read_register_MSR : STD_LOGIC;
  signal read_register_MSR0 : STD_LOGIC;
  signal read_register_PC : STD_LOGIC;
  signal read_register_PC0 : STD_LOGIC;
  signal read_register_PC_1_reg_n_0 : STD_LOGIC;
  signal reset_mode_sleep : STD_LOGIC;
  signal running_clock : STD_LOGIC;
  signal running_clock_rst : STD_LOGIC;
  signal running_clock_synced : STD_LOGIC;
  signal sample_synced : STD_LOGIC_VECTOR ( 0 to 8 );
  signal \sample_synced_1_reg_n_0_[0]\ : STD_LOGIC;
  signal \sample_synced_1_reg_n_0_[1]\ : STD_LOGIC;
  signal \sample_synced_1_reg_n_0_[2]\ : STD_LOGIC;
  signal \sample_synced_1_reg_n_0_[3]\ : STD_LOGIC;
  signal \sample_synced_1_reg_n_0_[4]\ : STD_LOGIC;
  signal \sample_synced_1_reg_n_0_[6]\ : STD_LOGIC;
  signal \sample_synced_1_reg_n_0_[8]\ : STD_LOGIC;
  signal \^saved_reset_mode_dbg_halt\ : STD_LOGIC;
  signal saved_reset_mode_sleep : STD_LOGIC;
  signal saved_reset_mode_sleep_i_1_n_0 : STD_LOGIC;
  signal sel0 : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \sel0__0\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \shift_count[0]_i_1_n_0\ : STD_LOGIC;
  signal \shift_count[1]_i_1_n_0\ : STD_LOGIC;
  signal \shift_count[2]_i_1_n_0\ : STD_LOGIC;
  signal \shift_count[3]_i_1_n_0\ : STD_LOGIC;
  signal \shift_count[4]_i_1_n_0\ : STD_LOGIC;
  signal \shift_count[5]_i_1_n_0\ : STD_LOGIC;
  signal \shift_count[5]_i_2_n_0\ : STD_LOGIC;
  signal \shift_count[6]_i_1_n_0\ : STD_LOGIC;
  signal \shift_count[7]_i_1_n_0\ : STD_LOGIC;
  signal \shift_count[7]_i_2_n_0\ : STD_LOGIC;
  signal \shift_count_reg_n_0_[0]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[10]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[11]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[12]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[13]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[14]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[15]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[16]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[17]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[18]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[19]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[1]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[20]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[21]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[22]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[23]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[24]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[25]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[26]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[27]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[28]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[29]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[2]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[30]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[31]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[3]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[4]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[5]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[6]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[7]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[8]\ : STD_LOGIC;
  signal \shift_datain_reg_n_0_[9]\ : STD_LOGIC;
  signal single_Step_N : STD_LOGIC;
  signal single_Step_N_i_1_n_0 : STD_LOGIC;
  signal single_Step_TClk : STD_LOGIC;
  signal single_step_count : STD_LOGIC_VECTOR ( 0 to 1 );
  signal \single_step_count[0]_i_1_n_0\ : STD_LOGIC;
  signal \single_step_count[1]_i_1_n_0\ : STD_LOGIC;
  signal sleep_reset_mode_i_1_n_0 : STD_LOGIC;
  signal sleep_synced : STD_LOGIC;
  signal stack_violation_occurence_synced : STD_LOGIC;
  signal \^start_dbg_exec_reg_0\ : STD_LOGIC;
  signal start_single_cmd : STD_LOGIC;
  signal start_single_cmd0 : STD_LOGIC;
  signal start_single_step_i_1_n_0 : STD_LOGIC;
  signal start_single_step_reg_n_0 : STD_LOGIC;
  signal start_single_step_rst : STD_LOGIC;
  signal \status_reg_reg_n_0_[0]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[10]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[11]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[12]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[13]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[14]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[15]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[16]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[17]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[18]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[19]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[1]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[20]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[21]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[22]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[23]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[24]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[25]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[26]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[27]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[2]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[3]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[4]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[5]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[6]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[7]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[8]\ : STD_LOGIC;
  signal \status_reg_reg_n_0_[9]\ : STD_LOGIC;
  signal step_continue : STD_LOGIC;
  signal step_continue_hold : STD_LOGIC;
  signal sync : STD_LOGIC;
  signal sync_dbg_hit_n_1 : STD_LOGIC;
  signal sync_dbg_hit_n_10 : STD_LOGIC;
  signal sync_dbg_hit_n_11 : STD_LOGIC;
  signal sync_dbg_hit_n_12 : STD_LOGIC;
  signal sync_dbg_hit_n_13 : STD_LOGIC;
  signal sync_dbg_hit_n_14 : STD_LOGIC;
  signal sync_dbg_hit_n_15 : STD_LOGIC;
  signal sync_dbg_hit_n_2 : STD_LOGIC;
  signal sync_dbg_hit_n_3 : STD_LOGIC;
  signal sync_dbg_hit_n_4 : STD_LOGIC;
  signal sync_dbg_hit_n_5 : STD_LOGIC;
  signal sync_dbg_hit_n_6 : STD_LOGIC;
  signal sync_dbg_hit_n_7 : STD_LOGIC;
  signal sync_dbg_hit_n_8 : STD_LOGIC;
  signal sync_dbg_hit_n_9 : STD_LOGIC;
  signal sync_sample_n_16 : STD_LOGIC;
  signal sync_sample_n_17 : STD_LOGIC;
  signal sync_stop_CPU_n_0 : STD_LOGIC;
  signal sync_trig_ack_in_0_n_1 : STD_LOGIC;
  signal sync_trig_out_0_n_1 : STD_LOGIC;
  signal sync_trig_out_0_n_2 : STD_LOGIC;
  signal tdo_config_word1_0 : STD_LOGIC;
  signal trig_ack_in_0_synced : STD_LOGIC;
  signal trig_ack_in_0_synced_1 : STD_LOGIC;
  signal trig_out_0_synced : STD_LOGIC;
  signal trig_out_0_synced_1 : STD_LOGIC;
  signal wb_brki_hit : STD_LOGIC;
  signal wb_dbg_hit : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of Dbg_TDO_INST_0_i_13 : label is "soft_lutpair79";
  attribute SOFT_HLUTNM of Dbg_TDO_INST_0_i_16 : label is "soft_lutpair73";
  attribute SOFT_HLUTNM of I_AS_INST_0_i_1 : label is "soft_lutpair74";
  attribute SOFT_HLUTNM of Instr_Insert_Reg_En_1_i_2 : label is "soft_lutpair77";
  attribute SOFT_HLUTNM of \LOCKSTEP_Master_Out[12]_INST_0\ : label is "soft_lutpair86";
  attribute SOFT_HLUTNM of \LOCKSTEP_Master_Out[13]_INST_0\ : label is "soft_lutpair86";
  attribute SOFT_HLUTNM of \LOCKSTEP_Master_Out[1]_INST_0\ : label is "soft_lutpair83";
  attribute SOFT_HLUTNM of \LOCKSTEP_Master_Out[3]_INST_0\ : label is "soft_lutpair87";
  attribute SOFT_HLUTNM of \LOCKSTEP_Master_Out[4]_INST_0\ : label is "soft_lutpair87";
  attribute SOFT_HLUTNM of \LOCKSTEP_Master_Out[5]_INST_0\ : label is "soft_lutpair78";
  attribute SOFT_HLUTNM of \LOCKSTEP_Master_Out[6]_INST_0\ : label is "soft_lutpair81";
  attribute SOFT_HLUTNM of \LOCKSTEP_Master_Out[7]_INST_0\ : label is "soft_lutpair74";
  attribute SOFT_HLUTNM of \LOCKSTEP_Master_Out[8]_INST_0\ : label is "soft_lutpair78";
  attribute SOFT_HLUTNM of \Performace_Debug_Control.wb_brki_hit_i_1\ : label is "soft_lutpair84";
  attribute SOFT_HLUTNM of \Performace_Debug_Control.wb_dbg_hit[0]_i_1\ : label is "soft_lutpair84";
  attribute SOFT_HLUTNM of Read_Strobe_INST_0_i_1 : label is "soft_lutpair81";
  attribute SOFT_HLUTNM of Trace_MB_Halted_INST_0 : label is "soft_lutpair83";
  attribute SOFT_HLUTNM of \command_reg[0]_i_3\ : label is "soft_lutpair77";
  attribute SOFT_HLUTNM of command_reg_clear_i_1 : label is "soft_lutpair75";
  attribute SOFT_HLUTNM of \data_rd_reg[32]_i_3\ : label is "soft_lutpair75";
  attribute SOFT_HLUTNM of dbg_halt_reset_mode_i_2 : label is "soft_lutpair85";
  attribute SOFT_HLUTNM of saved_reset_mode_sleep_i_1 : label is "soft_lutpair72";
  attribute SOFT_HLUTNM of \shift_count[0]_i_1\ : label is "soft_lutpair79";
  attribute SOFT_HLUTNM of \shift_count[1]_i_1\ : label is "soft_lutpair82";
  attribute SOFT_HLUTNM of \shift_count[2]_i_1\ : label is "soft_lutpair76";
  attribute SOFT_HLUTNM of \shift_count[3]_i_1\ : label is "soft_lutpair76";
  attribute SOFT_HLUTNM of \shift_count[5]_i_1\ : label is "soft_lutpair82";
  attribute SOFT_HLUTNM of \shift_count[5]_i_2\ : label is "soft_lutpair73";
  attribute SOFT_HLUTNM of \shift_count[6]_i_1\ : label is "soft_lutpair80";
  attribute SOFT_HLUTNM of \shift_count[7]_i_1\ : label is "soft_lutpair80";
  attribute SOFT_HLUTNM of single_Step_N_i_1 : label is "soft_lutpair85";
  attribute SOFT_HLUTNM of sleep_reset_mode_i_2 : label is "soft_lutpair72";
begin
  \Dbg_Reg_En_2__s_net_1\ <= \Dbg_Reg_En_2__s_port_]\;
  Dbg_Trig_Ack_Out(1 downto 0) <= \^dbg_trig_ack_out\(1 downto 0);
  Dbg_Trig_In(1 downto 0) <= \^dbg_trig_in\(1 downto 0);
  \Performace_Debug_Control.dbg_freeze_nohalt_reg_0\ <= \^performace_debug_control.dbg_freeze_nohalt_reg_0\;
  \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\ <= \^performace_debug_control.ex_dbg_pc_hit_single_step_reg_0\;
  \Performace_Debug_Control.ex_watchpoint_brk_reg_0\ <= \^performace_debug_control.ex_watchpoint_brk_reg_0\;
  \Performace_Debug_Control.normal_stop_i_reg_0\ <= \^performace_debug_control.normal_stop_i_reg_0\;
  \Performace_Debug_Control.watchpoint_brk_hold_reg_0\ <= \^performace_debug_control.watchpoint_brk_hold_reg_0\;
  Q(1 downto 0) <= \^q\(1 downto 0);
  \Single_Synchronize.use_async_reset.sync_reg\ <= \^single_synchronize.use_async_reset.sync_reg\;
  \Single_Synchronize.use_async_reset.sync_reg_0\ <= \^single_synchronize.use_async_reset.sync_reg_0\;
  command_reg_clear_reg_0 <= \^command_reg_clear_reg_0\;
  dbg_stop_if_delay_i <= \^dbg_stop_if_delay_i\;
  \instr_read_reg_reg[0]_0\(1 downto 0) <= \^instr_read_reg_reg[0]_0\(1 downto 0);
  saved_reset_mode_dbg_halt <= \^saved_reset_mode_dbg_halt\;
  start_dbg_exec_reg_0 <= \^start_dbg_exec_reg_0\;
Dbg_TDO_INST_0_i_10: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACFFAC00ACF0AC0"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_19_n_0,
      I1 => Dbg_TDO_INST_0_i_20_n_0,
      I2 => A2,
      I3 => A3,
      I4 => Dbg_TDO_INST_0_i_21_n_0,
      I5 => Dbg_TDO_INST_0_i_22_n_0,
      O => Dbg_TDO_INST_0_i_10_n_0
    );
Dbg_TDO_INST_0_i_11: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FAABFFABFAFBFFFB"
    )
        port map (
      I0 => sel0(0),
      I1 => Dbg_TDO_INST_0_i_23_n_0,
      I2 => A3,
      I3 => A2,
      I4 => Dbg_TDO_INST_0_i_24_n_0,
      I5 => Dbg_TDO_INST_0_i_25_n_0,
      O => Dbg_TDO_INST_0_i_11_n_0
    );
Dbg_TDO_INST_0_i_13: unisim.vcomponents.LUT4
    generic map(
      INIT => X"A280"
    )
        port map (
      I0 => Instr_Insert_Reg_En,
      I1 => \shift_count_reg_n_0_[0]\,
      I2 => instr_read_reg(1),
      I3 => instr_read_reg(0),
      O => Dbg_TDO_INST_0_i_13_n_0
    );
Dbg_TDO_INST_0_i_14: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF01FEFE010000"
    )
        port map (
      I0 => A2,
      I1 => A1,
      I2 => \shift_count_reg_n_0_[0]\,
      I3 => A3,
      I4 => Dbg_TDO_INST_0_i_26_n_0,
      I5 => Dbg_TDO_INST_0_i_27_n_0,
      O => Dbg_TDO_INST_0_i_14_n_0
    );
Dbg_TDO_INST_0_i_15: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF01FEFE010000"
    )
        port map (
      I0 => A2,
      I1 => A1,
      I2 => \shift_count_reg_n_0_[0]\,
      I3 => A3,
      I4 => Dbg_TDO_INST_0_i_28_n_0,
      I5 => Dbg_TDO_INST_0_i_29_n_0,
      O => Dbg_TDO_INST_0_i_15_n_0
    );
Dbg_TDO_INST_0_i_16: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0001"
    )
        port map (
      I0 => A2,
      I1 => A1,
      I2 => \shift_count_reg_n_0_[0]\,
      I3 => A3,
      O => Dbg_TDO_INST_0_i_16_n_0
    );
Dbg_TDO_INST_0_i_17: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000002"
    )
        port map (
      I0 => data_read_reg(0),
      I1 => sel0(0),
      I2 => A2,
      I3 => A1,
      I4 => \shift_count_reg_n_0_[0]\,
      I5 => A3,
      O => Dbg_TDO_INST_0_i_17_n_0
    );
Dbg_TDO_INST_0_i_19: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \status_reg_reg_n_0_[27]\,
      I1 => \status_reg_reg_n_0_[26]\,
      I2 => A1,
      I3 => \status_reg_reg_n_0_[25]\,
      I4 => \shift_count_reg_n_0_[0]\,
      I5 => \status_reg_reg_n_0_[24]\,
      O => Dbg_TDO_INST_0_i_19_n_0
    );
Dbg_TDO_INST_0_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EBBBFFFFAAAAAAAA"
    )
        port map (
      I0 => Dbg_Reg_En(5),
      I1 => sel0(0),
      I2 => A2,
      I3 => A3,
      I4 => Dbg_TDO_INST_0_i_10_n_0,
      I5 => Dbg_TDO_INST_0_i_11_n_0,
      O => Dbg_TDO_INST_0_i_2_n_0
    );
Dbg_TDO_INST_0_i_20: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \status_reg_reg_n_0_[23]\,
      I1 => \status_reg_reg_n_0_[22]\,
      I2 => A1,
      I3 => \status_reg_reg_n_0_[21]\,
      I4 => \shift_count_reg_n_0_[0]\,
      I5 => \status_reg_reg_n_0_[20]\,
      O => Dbg_TDO_INST_0_i_20_n_0
    );
Dbg_TDO_INST_0_i_21: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \status_reg_reg_n_0_[19]\,
      I1 => \status_reg_reg_n_0_[18]\,
      I2 => A1,
      I3 => \status_reg_reg_n_0_[17]\,
      I4 => \shift_count_reg_n_0_[0]\,
      I5 => \status_reg_reg_n_0_[16]\,
      O => Dbg_TDO_INST_0_i_21_n_0
    );
Dbg_TDO_INST_0_i_22: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \status_reg_reg_n_0_[15]\,
      I1 => \status_reg_reg_n_0_[14]\,
      I2 => A1,
      I3 => \status_reg_reg_n_0_[13]\,
      I4 => \shift_count_reg_n_0_[0]\,
      I5 => \status_reg_reg_n_0_[12]\,
      O => Dbg_TDO_INST_0_i_22_n_0
    );
Dbg_TDO_INST_0_i_23: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFF000AACCAACC"
    )
        port map (
      I0 => \status_reg_reg_n_0_[1]\,
      I1 => \status_reg_reg_n_0_[0]\,
      I2 => \status_reg_reg_n_0_[3]\,
      I3 => \shift_count_reg_n_0_[0]\,
      I4 => \status_reg_reg_n_0_[2]\,
      I5 => A1,
      O => Dbg_TDO_INST_0_i_23_n_0
    );
Dbg_TDO_INST_0_i_24: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \status_reg_reg_n_0_[7]\,
      I1 => \status_reg_reg_n_0_[6]\,
      I2 => A1,
      I3 => \status_reg_reg_n_0_[5]\,
      I4 => \shift_count_reg_n_0_[0]\,
      I5 => \status_reg_reg_n_0_[4]\,
      O => Dbg_TDO_INST_0_i_24_n_0
    );
Dbg_TDO_INST_0_i_25: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \status_reg_reg_n_0_[11]\,
      I1 => \status_reg_reg_n_0_[10]\,
      I2 => A1,
      I3 => \status_reg_reg_n_0_[9]\,
      I4 => \shift_count_reg_n_0_[0]\,
      I5 => \status_reg_reg_n_0_[8]\,
      O => Dbg_TDO_INST_0_i_25_n_0
    );
Dbg_TDO_INST_0_i_26: unisim.vcomponents.MUXF7
     port map (
      I0 => Dbg_TDO_INST_0_i_31_n_0,
      I1 => Dbg_TDO_INST_0_i_32_n_0,
      O => Dbg_TDO_INST_0_i_26_n_0,
      S => Dbg_TDO_INST_0_i_30_n_0
    );
Dbg_TDO_INST_0_i_27: unisim.vcomponents.MUXF7
     port map (
      I0 => Dbg_TDO_INST_0_i_33_n_0,
      I1 => Dbg_TDO_INST_0_i_34_n_0,
      O => Dbg_TDO_INST_0_i_27_n_0,
      S => Dbg_TDO_INST_0_i_30_n_0
    );
Dbg_TDO_INST_0_i_28: unisim.vcomponents.MUXF7
     port map (
      I0 => Dbg_TDO_INST_0_i_35_n_0,
      I1 => Dbg_TDO_INST_0_i_36_n_0,
      O => Dbg_TDO_INST_0_i_28_n_0,
      S => Dbg_TDO_INST_0_i_30_n_0
    );
Dbg_TDO_INST_0_i_29: unisim.vcomponents.MUXF7
     port map (
      I0 => Dbg_TDO_INST_0_i_37_n_0,
      I1 => Dbg_TDO_INST_0_i_38_n_0,
      O => Dbg_TDO_INST_0_i_29_n_0,
      S => Dbg_TDO_INST_0_i_30_n_0
    );
Dbg_TDO_INST_0_i_3: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F0F"
    )
        port map (
      I0 => \Dbg_Reg_En[2]_1\,
      I1 => Dbg_Reg_En(6),
      I2 => Dbg_TDO_INST_0_i_13_n_0,
      I3 => Dbg_Reg_En(5),
      O => Dbg_TDO_INST_0_i_3_n_0
    );
Dbg_TDO_INST_0_i_30: unisim.vcomponents.LUT3
    generic map(
      INIT => X"1E"
    )
        port map (
      I0 => \shift_count_reg_n_0_[0]\,
      I1 => A1,
      I2 => A2,
      O => Dbg_TDO_INST_0_i_30_n_0
    );
Dbg_TDO_INST_0_i_31: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACFFAC00ACF0AC0"
    )
        port map (
      I0 => data_read_reg(14),
      I1 => data_read_reg(13),
      I2 => \shift_count_reg_n_0_[0]\,
      I3 => A1,
      I4 => data_read_reg(16),
      I5 => data_read_reg(15),
      O => Dbg_TDO_INST_0_i_31_n_0
    );
Dbg_TDO_INST_0_i_32: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACFFAC00ACF0AC0"
    )
        port map (
      I0 => data_read_reg(10),
      I1 => data_read_reg(9),
      I2 => \shift_count_reg_n_0_[0]\,
      I3 => A1,
      I4 => data_read_reg(12),
      I5 => data_read_reg(11),
      O => Dbg_TDO_INST_0_i_32_n_0
    );
Dbg_TDO_INST_0_i_33: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACFFAC00ACF0AC0"
    )
        port map (
      I0 => data_read_reg(6),
      I1 => data_read_reg(5),
      I2 => \shift_count_reg_n_0_[0]\,
      I3 => A1,
      I4 => data_read_reg(8),
      I5 => data_read_reg(7),
      O => Dbg_TDO_INST_0_i_33_n_0
    );
Dbg_TDO_INST_0_i_34: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACFFAC00ACF0AC0"
    )
        port map (
      I0 => data_read_reg(2),
      I1 => data_read_reg(1),
      I2 => \shift_count_reg_n_0_[0]\,
      I3 => A1,
      I4 => data_read_reg(4),
      I5 => data_read_reg(3),
      O => Dbg_TDO_INST_0_i_34_n_0
    );
Dbg_TDO_INST_0_i_35: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACFFAC00ACF0AC0"
    )
        port map (
      I0 => data_read_reg(30),
      I1 => data_read_reg(29),
      I2 => \shift_count_reg_n_0_[0]\,
      I3 => A1,
      I4 => data_read_reg(32),
      I5 => data_read_reg(31),
      O => Dbg_TDO_INST_0_i_35_n_0
    );
Dbg_TDO_INST_0_i_36: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACFFAC00ACF0AC0"
    )
        port map (
      I0 => data_read_reg(26),
      I1 => data_read_reg(25),
      I2 => \shift_count_reg_n_0_[0]\,
      I3 => A1,
      I4 => data_read_reg(28),
      I5 => data_read_reg(27),
      O => Dbg_TDO_INST_0_i_36_n_0
    );
Dbg_TDO_INST_0_i_37: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACFFAC00ACF0AC0"
    )
        port map (
      I0 => data_read_reg(22),
      I1 => data_read_reg(21),
      I2 => \shift_count_reg_n_0_[0]\,
      I3 => A1,
      I4 => data_read_reg(24),
      I5 => data_read_reg(23),
      O => Dbg_TDO_INST_0_i_37_n_0
    );
Dbg_TDO_INST_0_i_38: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FACFFAC00ACF0AC0"
    )
        port map (
      I0 => data_read_reg(18),
      I1 => data_read_reg(17),
      I2 => \shift_count_reg_n_0_[0]\,
      I3 => A1,
      I4 => data_read_reg(20),
      I5 => data_read_reg(19),
      O => Dbg_TDO_INST_0_i_38_n_0
    );
Dbg_TDO_INST_0_i_5: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FCFFAFCA0C00A0CA"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_14_n_0,
      I1 => Dbg_TDO_INST_0_i_15_n_0,
      I2 => sel0(0),
      I3 => Dbg_TDO_INST_0_i_16_n_0,
      I4 => \sel0__0\(1),
      I5 => Dbg_TDO_INST_0_i_17_n_0,
      O => TDO_Data_Reg
    );
Full_32_bit_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => wb_read_imm_reg_1,
      Q => Full_32_bit_1,
      R => Rst18_out
    );
Full_32_bit_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => wb_read_imm_reg,
      Q => Full_32_bit,
      R => Rst18_out
    );
I_AS_INST_0_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"EEEF2222"
    )
        port map (
      I0 => \^start_dbg_exec_reg_0\,
      I1 => Dbg_Disable,
      I2 => \^performace_debug_control.dbg_freeze_nohalt_reg_0\,
      I3 => wb_Halted,
      I4 => IReady,
      O => IB_Ready
    );
Instr_Insert_Reg_En_1_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000100"
    )
        port map (
      I0 => Dbg_Reg_En(2),
      I1 => Dbg_Reg_En(3),
      I2 => Dbg_Reg_En(1),
      I3 => Dbg_Reg_En(5),
      I4 => Instr_Insert_Reg_En_1_i_2_n_0,
      O => Instr_Insert_Reg_En
    );
Instr_Insert_Reg_En_1_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => Dbg_Reg_En(7),
      I1 => Dbg_Reg_En(4),
      I2 => Dbg_Reg_En(0),
      I3 => Dbg_Reg_En(6),
      O => Instr_Insert_Reg_En_1_i_2_n_0
    );
Instr_Insert_Reg_En_1_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => Instr_Insert_Reg_En,
      Q => Instr_Insert_Reg_En_1
    );
\LOCKSTEP_Master_Out[11]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => dbg_wakeup_i,
      I1 => Dbg_Disable,
      O => LOCKSTEP_Master_Out(34)
    );
\LOCKSTEP_Master_Out[12]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^single_synchronize.use_async_reset.sync_reg_0\,
      I1 => Dbg_Disable,
      O => LOCKSTEP_Master_Out(33)
    );
\LOCKSTEP_Master_Out[13]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^dbg_stop_if_delay_i\,
      I1 => Dbg_Disable,
      O => LOCKSTEP_Master_Out(32)
    );
\LOCKSTEP_Master_Out[1]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => Dbg_Disable,
      I1 => force_stop_cmd_i_reg_n_0,
      I2 => MEM_DataBus_Access_reg(0),
      O => LOCKSTEP_Master_Out(41)
    );
\LOCKSTEP_Master_Out[3]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^q\(1),
      I1 => Dbg_Disable,
      O => LOCKSTEP_Master_Out(40)
    );
\LOCKSTEP_Master_Out[4]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^start_dbg_exec_reg_0\,
      I1 => Dbg_Disable,
      O => LOCKSTEP_Master_Out(39)
    );
\LOCKSTEP_Master_Out[5]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => wb_Halted,
      I1 => \^performace_debug_control.normal_stop_i_reg_0\,
      I2 => \^single_synchronize.use_async_reset.sync_reg\,
      I3 => Dbg_Disable,
      O => LOCKSTEP_Master_Out(38)
    );
\LOCKSTEP_Master_Out[6]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^performace_debug_control.watchpoint_brk_hold_reg_0\,
      I1 => Dbg_Disable,
      O => LOCKSTEP_Master_Out(37)
    );
\LOCKSTEP_Master_Out[7]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"54"
    )
        port map (
      I0 => Dbg_Disable,
      I1 => \^performace_debug_control.dbg_freeze_nohalt_reg_0\,
      I2 => wb_Halted,
      O => LOCKSTEP_Master_Out(36)
    );
\LOCKSTEP_Master_Out[8]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"0E"
    )
        port map (
      I0 => \^performace_debug_control.normal_stop_i_reg_0\,
      I1 => wb_Halted,
      I2 => Dbg_Disable,
      O => LOCKSTEP_Master_Out(35)
    );
New_Dbg_Instr2_TCK_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => New_Dbg_Instr_TCK,
      Q => New_Dbg_Instr2_TCK
    );
New_Dbg_Instr_TCK_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000800000000000"
    )
        port map (
      I0 => A2,
      I1 => A1,
      I2 => sel0(0),
      I3 => A3,
      I4 => \shift_count_reg_n_0_[0]\,
      I5 => Instr_Insert_Reg_En,
      O => New_Dbg_Instr_TCK_i_1_n_0
    );
New_Dbg_Instr_TCK_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => New_Dbg_Instr_TCK_i_1_n_0,
      Q => New_Dbg_Instr_TCK
    );
\New_Instr_Reg_TCK[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Dbg_Disable,
      I2 => Scan_Reset_Sel,
      O => \New_Instr_Reg_TCK[0]_i_1_n_0\
    );
\New_Instr_Reg_TCK_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[1]\,
      Q => LOCKSTEP_Master_Out(31)
    );
\New_Instr_Reg_TCK_reg[10]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[11]\,
      Q => LOCKSTEP_Master_Out(21)
    );
\New_Instr_Reg_TCK_reg[11]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[12]\,
      Q => LOCKSTEP_Master_Out(20)
    );
\New_Instr_Reg_TCK_reg[12]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[13]\,
      Q => LOCKSTEP_Master_Out(19)
    );
\New_Instr_Reg_TCK_reg[13]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[14]\,
      Q => LOCKSTEP_Master_Out(18)
    );
\New_Instr_Reg_TCK_reg[14]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[15]\,
      Q => LOCKSTEP_Master_Out(17)
    );
\New_Instr_Reg_TCK_reg[15]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[16]\,
      Q => LOCKSTEP_Master_Out(16)
    );
\New_Instr_Reg_TCK_reg[16]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[17]\,
      Q => LOCKSTEP_Master_Out(15)
    );
\New_Instr_Reg_TCK_reg[17]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[18]\,
      Q => LOCKSTEP_Master_Out(14)
    );
\New_Instr_Reg_TCK_reg[18]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[19]\,
      Q => LOCKSTEP_Master_Out(13)
    );
\New_Instr_Reg_TCK_reg[19]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[20]\,
      Q => LOCKSTEP_Master_Out(12)
    );
\New_Instr_Reg_TCK_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[2]\,
      Q => LOCKSTEP_Master_Out(30)
    );
\New_Instr_Reg_TCK_reg[20]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[21]\,
      Q => LOCKSTEP_Master_Out(11)
    );
\New_Instr_Reg_TCK_reg[21]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[22]\,
      Q => LOCKSTEP_Master_Out(10)
    );
\New_Instr_Reg_TCK_reg[22]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[23]\,
      Q => LOCKSTEP_Master_Out(9)
    );
\New_Instr_Reg_TCK_reg[23]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[24]\,
      Q => LOCKSTEP_Master_Out(8)
    );
\New_Instr_Reg_TCK_reg[24]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[25]\,
      Q => LOCKSTEP_Master_Out(7)
    );
\New_Instr_Reg_TCK_reg[25]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[26]\,
      Q => LOCKSTEP_Master_Out(6)
    );
\New_Instr_Reg_TCK_reg[26]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[27]\,
      Q => LOCKSTEP_Master_Out(5)
    );
\New_Instr_Reg_TCK_reg[27]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[28]\,
      Q => LOCKSTEP_Master_Out(4)
    );
\New_Instr_Reg_TCK_reg[28]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[29]\,
      Q => LOCKSTEP_Master_Out(3)
    );
\New_Instr_Reg_TCK_reg[29]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[30]\,
      Q => LOCKSTEP_Master_Out(2)
    );
\New_Instr_Reg_TCK_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[3]\,
      Q => LOCKSTEP_Master_Out(29)
    );
\New_Instr_Reg_TCK_reg[30]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[31]\,
      Q => LOCKSTEP_Master_Out(1)
    );
\New_Instr_Reg_TCK_reg[31]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => Dbg_TDI,
      Q => LOCKSTEP_Master_Out(0)
    );
\New_Instr_Reg_TCK_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[4]\,
      Q => LOCKSTEP_Master_Out(28)
    );
\New_Instr_Reg_TCK_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[5]\,
      Q => LOCKSTEP_Master_Out(27)
    );
\New_Instr_Reg_TCK_reg[5]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[6]\,
      Q => LOCKSTEP_Master_Out(26)
    );
\New_Instr_Reg_TCK_reg[6]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[7]\,
      Q => LOCKSTEP_Master_Out(25)
    );
\New_Instr_Reg_TCK_reg[7]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[8]\,
      Q => LOCKSTEP_Master_Out(24)
    );
\New_Instr_Reg_TCK_reg[8]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[9]\,
      Q => LOCKSTEP_Master_Out(23)
    );
\New_Instr_Reg_TCK_reg[9]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[10]\,
      Q => LOCKSTEP_Master_Out(22)
    );
\Performace_Debug_Control.dbg_brki_hit_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => wb_brki_hit,
      Q => dbg_brki_hit,
      R => Rst18_out
    );
\Performace_Debug_Control.dbg_freeze_nohalt_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAABAAAAAAA8AAAA"
    )
        port map (
      I0 => dbg_freeze_nohalt0_in,
      I1 => Rst18_out,
      I2 => new_dbg_instr_shifting_CLK_reg_n_0,
      I3 => p_4_out,
      I4 => \Performace_Debug_Control.dbg_freeze_nohalt_i_2_n_0\,
      I5 => \^performace_debug_control.dbg_freeze_nohalt_reg_0\,
      O => \Performace_Debug_Control.dbg_freeze_nohalt_i_1_n_0\
    );
\Performace_Debug_Control.dbg_freeze_nohalt_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000005555555D"
    )
        port map (
      I0 => \^performace_debug_control.normal_stop_i_reg_0\,
      I1 => \control_reg_reg_n_0_[0]\,
      I2 => start_single_step_reg_n_0,
      I3 => \out\(0),
      I4 => Dbg_Disable,
      I5 => continue_from_brk_reg_n_0,
      O => \Performace_Debug_Control.dbg_freeze_nohalt_i_2_n_0\
    );
\Performace_Debug_Control.dbg_freeze_nohalt_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performace_Debug_Control.dbg_freeze_nohalt_i_1_n_0\,
      Q => \^performace_debug_control.dbg_freeze_nohalt_reg_0\,
      R => '0'
    );
\Performace_Debug_Control.dbg_hit_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => wb_dbg_hit,
      Q => Raw,
      R => Rst18_out
    );
\Performace_Debug_Control.dbg_hit_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => '0',
      Q => \Performace_Debug_Control.dbg_hit_reg_n_0_[10]\,
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\
    );
\Performace_Debug_Control.dbg_hit_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => '0',
      Q => \Performace_Debug_Control.dbg_hit_reg_n_0_[11]\,
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\
    );
\Performace_Debug_Control.dbg_hit_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => '0',
      Q => \Performace_Debug_Control.dbg_hit_reg_n_0_[12]\,
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\
    );
\Performace_Debug_Control.dbg_hit_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => '0',
      Q => \Performace_Debug_Control.dbg_hit_reg_n_0_[13]\,
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\
    );
\Performace_Debug_Control.dbg_hit_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => '0',
      Q => \Performace_Debug_Control.dbg_hit_reg_n_0_[14]\,
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\
    );
\Performace_Debug_Control.dbg_hit_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => '0',
      Q => \Performace_Debug_Control.dbg_hit_reg_n_0_[15]\,
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\
    );
\Performace_Debug_Control.dbg_hit_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => '0',
      Q => \Performace_Debug_Control.dbg_hit_reg_n_0_[1]\,
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\
    );
\Performace_Debug_Control.dbg_hit_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => '0',
      Q => \Performace_Debug_Control.dbg_hit_reg_n_0_[2]\,
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\
    );
\Performace_Debug_Control.dbg_hit_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => '0',
      Q => \Performace_Debug_Control.dbg_hit_reg_n_0_[3]\,
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\
    );
\Performace_Debug_Control.dbg_hit_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => '0',
      Q => \Performace_Debug_Control.dbg_hit_reg_n_0_[4]\,
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\
    );
\Performace_Debug_Control.dbg_hit_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => '0',
      Q => \Performace_Debug_Control.dbg_hit_reg_n_0_[5]\,
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\
    );
\Performace_Debug_Control.dbg_hit_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => '0',
      Q => \Performace_Debug_Control.dbg_hit_reg_n_0_[6]\,
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\
    );
\Performace_Debug_Control.dbg_hit_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => '0',
      Q => \Performace_Debug_Control.dbg_hit_reg_n_0_[7]\,
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\
    );
\Performace_Debug_Control.dbg_hit_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => '0',
      Q => \Performace_Debug_Control.dbg_hit_reg_n_0_[8]\,
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\
    );
\Performace_Debug_Control.dbg_hit_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => '0',
      Q => \Performace_Debug_Control.dbg_hit_reg_n_0_[9]\,
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\
    );
\Performace_Debug_Control.dbg_state_nohalt_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2223222222202222"
    )
        port map (
      I0 => dbg_freeze_nohalt0_in,
      I1 => \Performace_Debug_Control.dbg_state_nohalt_i_3_n_0\,
      I2 => p_4_out,
      I3 => Rst18_out,
      I4 => \Performace_Debug_Control.dbg_state_nohalt_i_5_n_0\,
      I5 => \^performace_debug_control.normal_stop_i_reg_0\,
      O => \Performace_Debug_Control.dbg_state_nohalt_i_1_n_0\
    );
\Performace_Debug_Control.dbg_state_nohalt_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000054FE5454"
    )
        port map (
      I0 => Rst18_out,
      I1 => wb_Halted,
      I2 => dbg_halt_reset_mode_reg_n_0,
      I3 => Reset_Mode(1),
      I4 => Reset_Mode(0),
      I5 => continue_from_brk_reg_n_0,
      O => dbg_freeze_nohalt0_in
    );
\Performace_Debug_Control.dbg_state_nohalt_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"07"
    )
        port map (
      I0 => \^saved_reset_mode_dbg_halt\,
      I1 => dbg_halt_reset_mode_reg_n_0,
      I2 => \control_reg_reg_n_0_[0]\,
      O => \Performace_Debug_Control.dbg_state_nohalt_i_3_n_0\
    );
\Performace_Debug_Control.dbg_state_nohalt_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => dbg_halt_reset_mode_reg_n_0,
      I1 => wb_Halted,
      O => p_4_out
    );
\Performace_Debug_Control.dbg_state_nohalt_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000ABAAFFFF"
    )
        port map (
      I0 => new_dbg_instr_shifting_CLK_reg_n_0,
      I1 => Rst18_out,
      I2 => start_single_step_reg_n_0,
      I3 => \control_reg_reg_n_0_[0]\,
      I4 => \^performace_debug_control.normal_stop_i_reg_0\,
      I5 => continue_from_brk_reg_n_0,
      O => \Performace_Debug_Control.dbg_state_nohalt_i_5_n_0\
    );
\Performace_Debug_Control.dbg_state_nohalt_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performace_Debug_Control.dbg_state_nohalt_i_1_n_0\,
      Q => \^performace_debug_control.normal_stop_i_reg_0\,
      R => '0'
    );
\Performace_Debug_Control.dbg_stop_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Dbg_Stop,
      Q => dbg_stop_1,
      R => Rst18_out
    );
\Performace_Debug_Control.dbg_stop_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sync_trig_out_0_n_2,
      Q => \Performace_Debug_Control.dbg_stop_i_reg_n_0\,
      R => '0'
    );
\Performace_Debug_Control.dbg_stop_if_delay_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000000000FE"
    )
        port map (
      I0 => wb_Halted,
      I1 => \^performace_debug_control.normal_stop_i_reg_0\,
      I2 => \^single_synchronize.use_async_reset.sync_reg\,
      I3 => Rst18_out,
      I4 => dbg_halt_reset_mode_reg_n_0,
      I5 => saved_reset_mode_sleep,
      O => \Performace_Debug_Control.dbg_stop_if_delay_i_i_1_n_0\
    );
\Performace_Debug_Control.dbg_stop_if_delay_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performace_Debug_Control.dbg_stop_if_delay_i_i_1_n_0\,
      Q => \^dbg_stop_if_delay_i\,
      R => '0'
    );
\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFFB0008"
    )
        port map (
      I0 => \^single_synchronize.use_async_reset.sync_reg\,
      I1 => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_2_n_0\,
      I2 => dbg_halt_reset_mode_reg_n_0,
      I3 => wb_Halted,
      I4 => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_3_n_0\,
      I5 => continue_from_brk_reg_n_0,
      O => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_1_n_0\
    );
\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1010101011101111"
    )
        port map (
      I0 => \out\(0),
      I1 => Dbg_Disable,
      I2 => new_dbg_instr_shifting_CLK_reg_n_0,
      I3 => \^single_synchronize.use_async_reset.sync_reg_0\,
      I4 => saved_reset_mode_sleep,
      I5 => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_4_n_0\,
      O => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_2_n_0\
    );
\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"666666666666FFF0"
    )
        port map (
      I0 => Reset_Mode(1),
      I1 => Reset_Mode(0),
      I2 => dbg_halt_reset_mode_reg_n_0,
      I3 => wb_Halted,
      I4 => Dbg_Disable,
      I5 => \out\(0),
      O => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_3_n_0\
    );
\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF00000000"
    )
        port map (
      I0 => Dbg_Disable,
      I1 => \out\(0),
      I2 => start_single_step_reg_n_0,
      I3 => continue_from_brk_reg_n_0,
      I4 => \control_reg_reg_n_0_[0]\,
      I5 => \^performace_debug_control.normal_stop_i_reg_0\,
      O => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_4_n_0\
    );
\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_1_n_0\,
      Q => \^single_synchronize.use_async_reset.sync_reg\,
      R => '0'
    );
\Performace_Debug_Control.ex_brki_hit_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \control_reg_reg[8]_0\,
      Q => ex_brki_hit,
      R => Rst18_out
    );
\Performace_Debug_Control.ex_dbg_hit_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Using_PC_Breakpoints.All_PC_Brks[0].address_hit_I_n_1\,
      Q => ex_pc_brk,
      R => Rst18_out
    );
\Performace_Debug_Control.ex_dbg_pc_hit_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_1\,
      Q => \^performace_debug_control.watchpoint_brk_hold_reg_0\,
      R => Rst18_out
    );
\Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_PC_Breakpoints.All_PC_Brks[0].address_hit_I_n_2\,
      Q => \^performace_debug_control.ex_dbg_pc_hit_single_step_reg_0\,
      R => Rst18_out
    );
\Performace_Debug_Control.ex_step_continue_hold_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => step_continue_hold,
      Q => ex_step_continue_hold,
      R => Rst18_out
    );
\Performace_Debug_Control.ex_watchpoint_brk_hold_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => \Performace_Debug_Control.watchpoint_brk_hold_reg_n_0\,
      Q => ex_watchpoint_brk_hold,
      R => Rst18_out
    );
\Performace_Debug_Control.ex_watchpoint_brk_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performace_Debug_Control.ex_watchpoint_brk_reg_1\,
      Q => \^performace_debug_control.ex_watchpoint_brk_reg_0\,
      R => '0'
    );
\Performace_Debug_Control.force_stop_cmd_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => force_stop_cmd_i_reg_n_0,
      Q => force_stop_cmd_1,
      R => Rst18_out
    );
\Performace_Debug_Control.force_stop_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000ABAA"
    )
        port map (
      I0 => force_stop_i,
      I1 => force_stop_cmd_i_reg_n_0,
      I2 => \^performace_debug_control.normal_stop_i_reg_0\,
      I3 => force_stop_cmd_1,
      I4 => Rst18_out,
      I5 => wb_Halted,
      O => \Performace_Debug_Control.force_stop_i_i_1_n_0\
    );
\Performace_Debug_Control.force_stop_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performace_Debug_Control.force_stop_i_i_1_n_0\,
      Q => force_stop_i,
      R => '0'
    );
\Performace_Debug_Control.mem_brki_hit_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => ex_brki_hit,
      I1 => ex_branch_with_delayslot_reg,
      I2 => mem_brki_hit,
      O => \Performace_Debug_Control.mem_brki_hit_i_1_n_0\
    );
\Performace_Debug_Control.mem_brki_hit_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performace_Debug_Control.mem_brki_hit_i_1_n_0\,
      Q => mem_brki_hit,
      R => Rst18_out
    );
\Performace_Debug_Control.mem_dbg_hit[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"004F0040"
    )
        port map (
      I0 => ex_watchpoint_brk_hold,
      I1 => ex_pc_brk,
      I2 => \Performace_Debug_Control.mem_dbg_hit[0]_i_2_n_0\,
      I3 => Rst18_out,
      I4 => \Performace_Debug_Control.mem_dbg_hit_reg_n_0_[0]\,
      O => \Performace_Debug_Control.mem_dbg_hit[0]_i_1_n_0\
    );
\Performace_Debug_Control.mem_dbg_hit[0]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAAAAA8"
    )
        port map (
      I0 => ex_branch_with_delayslot_reg,
      I1 => ex_watchpoint_brk_hold,
      I2 => ex_step_continue_hold,
      I3 => \^performace_debug_control.ex_watchpoint_brk_reg_0\,
      I4 => ex_pc_brk,
      O => \Performace_Debug_Control.mem_dbg_hit[0]_i_2_n_0\
    );
\Performace_Debug_Control.mem_dbg_hit_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performace_Debug_Control.mem_dbg_hit[0]_i_1_n_0\,
      Q => \Performace_Debug_Control.mem_dbg_hit_reg_n_0_[0]\,
      R => '0'
    );
\Performace_Debug_Control.normal_stop_cmd_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => normal_stop_cmd_i_reg_n_0,
      Q => normal_stop_cmd_1,
      R => Rst18_out
    );
\Performace_Debug_Control.normal_stop_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000ABAA"
    )
        port map (
      I0 => normal_stop_i,
      I1 => normal_stop_cmd_i_reg_n_0,
      I2 => \^performace_debug_control.normal_stop_i_reg_0\,
      I3 => normal_stop_cmd_1,
      I4 => Rst18_out,
      I5 => wb_Halted,
      O => \Performace_Debug_Control.normal_stop_i_i_1_n_0\
    );
\Performace_Debug_Control.normal_stop_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performace_Debug_Control.normal_stop_i_i_1_n_0\,
      Q => normal_stop_i,
      R => '0'
    );
\Performace_Debug_Control.step_continue_hold_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000000000FE"
    )
        port map (
      I0 => step_continue_hold,
      I1 => start_single_step_reg_n_0,
      I2 => continue_from_brk_reg_n_0,
      I3 => Dbg_Disable,
      I4 => \out\(0),
      I5 => \Using_FPGA.Native_0\,
      O => \Performace_Debug_Control.step_continue_hold_i_1_n_0\
    );
\Performace_Debug_Control.step_continue_hold_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performace_Debug_Control.step_continue_hold_i_1_n_0\,
      Q => step_continue_hold,
      R => '0'
    );
\Performace_Debug_Control.trig_ack_out_0_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sync_trig_out_0_n_1,
      Q => \^dbg_trig_ack_out\(1),
      R => '0'
    );
\Performace_Debug_Control.trig_out_0_synced_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trig_out_0_synced,
      Q => trig_out_0_synced_1,
      R => Rst18_out
    );
\Performace_Debug_Control.watchpoint_brk_hold_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0002020202020202"
    )
        port map (
      I0 => \Performace_Debug_Control.watchpoint_brk_hold_reg_n_0\,
      I1 => Dbg_Disable,
      I2 => \out\(0),
      I3 => ex_Exception_Taken,
      I4 => \^performace_debug_control.watchpoint_brk_hold_reg_0\,
      I5 => ex_branch_with_delayslot_reg,
      O => \Performace_Debug_Control.watchpoint_brk_hold_i_1_n_0\
    );
\Performace_Debug_Control.watchpoint_brk_hold_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performace_Debug_Control.watchpoint_brk_hold_i_1_n_0\,
      Q => \Performace_Debug_Control.watchpoint_brk_hold_reg_n_0\,
      R => '0'
    );
\Performace_Debug_Control.wb_brki_hit_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => mem_brki_hit,
      I1 => mem_valid_reg,
      I2 => wb_brki_hit,
      O => \Performace_Debug_Control.wb_brki_hit_i_1_n_0\
    );
\Performace_Debug_Control.wb_brki_hit_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performace_Debug_Control.wb_brki_hit_i_1_n_0\,
      Q => wb_brki_hit,
      R => Rst18_out
    );
\Performace_Debug_Control.wb_dbg_hit[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Performace_Debug_Control.mem_dbg_hit_reg_n_0_[0]\,
      I1 => mem_valid_reg,
      I2 => wb_dbg_hit,
      O => \Performace_Debug_Control.wb_dbg_hit[0]_i_1_n_0\
    );
\Performace_Debug_Control.wb_dbg_hit_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performace_Debug_Control.wb_dbg_hit[0]_i_1_n_0\,
      Q => wb_dbg_hit,
      R => Rst18_out
    );
Read_Strobe_INST_0_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => \^performace_debug_control.watchpoint_brk_hold_reg_0\,
      I1 => Dbg_Disable,
      I2 => \^dbg_stop_if_delay_i\,
      O => \Using_FPGA.Native\
    );
SRL16E_1: entity work.system_microblaze_0_0_MB_SRL16E
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \shift_count_reg_n_0_[0]\,
      Q_0 => Q_0
    );
SRL16E_2: entity work.\system_microblaze_0_0_MB_SRL16E__parameterized1\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \shift_count_reg_n_0_[0]\,
      Q11_in => Q11_in
    );
SRL16E_3: entity work.\system_microblaze_0_0_MB_SRL16E__parameterized19\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \shift_count_reg_n_0_[0]\,
      Q2_in => Q2_in
    );
SRL16E_4: entity work.\system_microblaze_0_0_MB_SRL16E__parameterized21\
     port map (
      Dbg_Clk => Dbg_Clk,
      Dbg_TDO => SRL16E_4_n_0,
      Q(6 downto 5) => \sel0__0\(2 downto 1),
      Q(4) => sel0(0),
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \shift_count_reg_n_0_[0]\,
      Q0_in => Q0_in,
      Q0_out => Q0_out,
      Q2_in => Q2_in,
      Q3_in => Q3_in,
      tdo_config_word1_0 => tdo_config_word1_0
    );
SRL16E_7: entity work.\system_microblaze_0_0_MB_SRL16E__parameterized23\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \shift_count_reg_n_0_[0]\,
      Q0_in => Q0_in
    );
SRL16E_8: entity work.\system_microblaze_0_0_MB_SRL16E__parameterized25\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \shift_count_reg_n_0_[0]\,
      tdo_config_word1_0 => tdo_config_word1_0
    );
\The_Cache_Addresses[1].SRL16E_Cache_I\: entity work.\system_microblaze_0_0_MB_SRL16E__parameterized3\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \shift_count_reg_n_0_[0]\,
      Q6_out => Q6_out
    );
\The_Cache_Addresses[2].SRL16E_Cache_I\: entity work.\system_microblaze_0_0_MB_SRL16E__parameterized5\
     port map (
      Dbg_Clk => Dbg_Clk,
      Dbg_Reg_En(0) => Dbg_Reg_En(5),
      \Dbg_Reg_En[2]\ => \Dbg_Reg_En_2__s_net_1\,
      \Dbg_Reg_En[2]_0\ => \Dbg_Reg_En[2]_0\,
      Dbg_TDO => Dbg_TDO,
      Q(7 downto 5) => \sel0__0\(3 downto 1),
      Q(4) => sel0(0),
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \shift_count_reg_n_0_[0]\,
      Q11_in => Q11_in,
      Q6_out => Q6_out,
      Q_0 => Q_0,
      TDO_Data_Reg => TDO_Data_Reg,
      \shift_count_reg[0]\ => Dbg_TDO_INST_0_i_3_n_0,
      \shift_count_reg[4]\ => Dbg_TDO_INST_0_i_2_n_0,
      \shift_count_reg[5]\ => \The_Cache_Addresses[6].SRL16E_Cache_I_n_0\,
      \shift_count_reg[5]_0\ => SRL16E_4_n_0
    );
\The_Cache_Addresses[3].SRL16E_Cache_I\: entity work.\system_microblaze_0_0_MB_SRL16E__parameterized7\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \shift_count_reg_n_0_[0]\,
      Q4_out => Q4_out
    );
\The_Cache_Addresses[4].SRL16E_Cache_I\: entity work.\system_microblaze_0_0_MB_SRL16E__parameterized9\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \shift_count_reg_n_0_[0]\,
      Q3_out => Q3_out
    );
\The_Cache_Addresses[5].SRL16E_Cache_I\: entity work.\system_microblaze_0_0_MB_SRL16E__parameterized11\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \shift_count_reg_n_0_[0]\,
      Q2_out => Q2_out
    );
\The_Cache_Addresses[6].SRL16E_Cache_I\: entity work.\system_microblaze_0_0_MB_SRL16E__parameterized13\
     port map (
      Dbg_Clk => Dbg_Clk,
      Dbg_TDO => \The_Cache_Addresses[6].SRL16E_Cache_I_n_0\,
      Q(5) => \sel0__0\(1),
      Q(4) => sel0(0),
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \shift_count_reg_n_0_[0]\,
      Q2_out => Q2_out,
      Q3_out => Q3_out,
      Q4_out => Q4_out
    );
\The_Cache_Addresses[7].SRL16E_Cache_I\: entity work.\system_microblaze_0_0_MB_SRL16E__parameterized15\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \shift_count_reg_n_0_[0]\,
      Q0_out => Q0_out
    );
\The_Cache_Addresses[8].SRL16E_Cache_I\: entity work.\system_microblaze_0_0_MB_SRL16E__parameterized17\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \shift_count_reg_n_0_[0]\,
      Q3_in => Q3_in
    );
Trace_MB_Halted_INST_0: unisim.vcomponents.LUT3
    generic map(
      INIT => X"0E"
    )
        port map (
      I0 => \^performace_debug_control.normal_stop_i_reg_0\,
      I1 => wb_Halted,
      I2 => Dbg_Disable,
      O => \LOCKSTEP_Out_reg[0]\(0)
    );
\Using_FPGA.Native_i_1__79\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => Dbg_Disable,
      I1 => \^dbg_stop_if_delay_i\,
      O => \if_pc_reg[29]\
    );
\Using_PC_Breakpoints.All_PC_Brks[0].address_hit_I\: entity work.system_microblaze_0_0_address_hit
     port map (
      Address(0 to 31) => Address(0 to 31),
      Dbg_Clk => Dbg_Clk,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      Dbg_TDI => Dbg_TDI,
      Hit => \Using_PC_Breakpoints.All_PC_Brks[0].address_hit_I_n_1\,
      \Performace_Debug_Control.dbg_stop_i_reg\ => \Performace_Debug_Control.dbg_stop_i_reg_n_0\,
      \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ => \^single_synchronize.use_async_reset.sync_reg\,
      \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg\ => \Using_PC_Breakpoints.All_PC_Brks[0].address_hit_I_n_2\,
      \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\ => \^performace_debug_control.ex_dbg_pc_hit_single_step_reg_0\,
      \Performace_Debug_Control.watchpoint_brk_hold_reg\ => \Performace_Debug_Control.watchpoint_brk_hold_reg_n_0\,
      Q(0) => \control_reg_reg_n_0_[0]\,
      \Using_FPGA.Native\ => \Using_FPGA.Native_0\,
      \control_reg_reg[8]\ => \control_reg_reg[8]_0\,
      dbg_clean_stop => dbg_clean_stop,
      ex_Exception_Taken => ex_Exception_Taken,
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg,
      force_stop_i => force_stop_i,
      mem_Exception_Taken => mem_Exception_Taken,
      normal_stop_i => normal_stop_i,
      p_36_out => p_36_out,
      single_Step_N => single_Step_N
    );
capture_1_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => Dbg_Capture,
      Q => capture_1
    );
\command_reg[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000100"
    )
        port map (
      I0 => Dbg_Reg_En(2),
      I1 => Dbg_Reg_En(3),
      I2 => Dbg_Reg_En(1),
      I3 => Dbg_Reg_En(6),
      I4 => \command_reg[0]_i_3_n_0\,
      O => Command_Reg_En
    );
\command_reg[0]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFC"
    )
        port map (
      I0 => Scan_Reset,
      I1 => command_reg_clear,
      I2 => Dbg_Disable,
      I3 => Scan_Reset_Sel,
      O => command_reg_rst
    );
\command_reg[0]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => Dbg_Reg_En(5),
      I1 => Dbg_Reg_En(4),
      I2 => Dbg_Reg_En(0),
      I3 => Dbg_Reg_En(7),
      O => \command_reg[0]_i_3_n_0\
    );
command_reg_clear_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => read_register_PC_1_reg_n_0,
      I1 => \^command_reg_clear_reg_0\,
      O => command_reg_clear_i_1_n_0
    );
command_reg_clear_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => command_reg_clear_i_1_n_0,
      Q => command_reg_clear,
      R => Rst18_out
    );
\command_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Command_Reg_En,
      CLR => command_reg_rst,
      D => \shift_datain_reg_n_0_[30]\,
      Q => command_reg(0)
    );
\command_reg_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Command_Reg_En,
      CLR => command_reg_rst,
      D => \shift_datain_reg_n_0_[31]\,
      Q => command_reg(1)
    );
continue_from_brk_TClk_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFC"
    )
        port map (
      I0 => Scan_Reset,
      I1 => continue_from_brk_reg_n_0,
      I2 => Dbg_Disable,
      I3 => Scan_Reset_Sel,
      O => continue_from_brk_rst
    );
continue_from_brk_TClk_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => continue_from_brk_rst,
      D => \shift_datain_reg_n_0_[24]\,
      Q => continue_from_brk_TClk
    );
continue_from_brk_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => continue_from_brk0,
      Q => continue_from_brk_reg_n_0,
      R => Rst18_out
    );
\control_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[22]\,
      Q => \control_reg_reg_n_0_[0]\
    );
\control_reg_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[25]\,
      Q => \^q\(1)
    );
\control_reg_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[26]\,
      Q => \control_reg_reg_n_0_[4]\
    );
\control_reg_reg[5]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[27]\,
      Q => \control_reg_reg_n_0_[5]\
    );
\control_reg_reg[8]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[30]\,
      Q => \^q\(0)
    );
\data_rd_reg[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FEEE"
    )
        port map (
      I0 => \^command_reg_clear_reg_0\,
      I1 => read_register_PC_1_reg_n_0,
      I2 => wb_gpr_wr_dbg,
      I3 => \^single_synchronize.use_async_reset.sync_reg\,
      O => \data_rd_reg[0]_i_1_n_0\
    );
\data_rd_reg[0]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F2220222"
    )
        port map (
      I0 => D(32),
      I1 => \^command_reg_clear_reg_0\,
      I2 => wb_gpr_wr_dbg,
      I3 => \^single_synchronize.use_async_reset.sync_reg\,
      I4 => D(16),
      O => \data_rd_reg[0]_i_2_n_0\
    );
\data_rd_reg[10]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F2220222"
    )
        port map (
      I0 => D(22),
      I1 => \^command_reg_clear_reg_0\,
      I2 => wb_gpr_wr_dbg,
      I3 => \^single_synchronize.use_async_reset.sync_reg\,
      I4 => D(6),
      O => \data_rd_reg[10]_i_1_n_0\
    );
\data_rd_reg[11]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F2220222"
    )
        port map (
      I0 => D(21),
      I1 => \^command_reg_clear_reg_0\,
      I2 => wb_gpr_wr_dbg,
      I3 => \^single_synchronize.use_async_reset.sync_reg\,
      I4 => D(5),
      O => \data_rd_reg[11]_i_1_n_0\
    );
\data_rd_reg[12]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F2220222"
    )
        port map (
      I0 => D(20),
      I1 => \^command_reg_clear_reg_0\,
      I2 => wb_gpr_wr_dbg,
      I3 => \^single_synchronize.use_async_reset.sync_reg\,
      I4 => D(4),
      O => \data_rd_reg[12]_i_1_n_0\
    );
\data_rd_reg[13]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F2220222"
    )
        port map (
      I0 => D(19),
      I1 => \^command_reg_clear_reg_0\,
      I2 => wb_gpr_wr_dbg,
      I3 => \^single_synchronize.use_async_reset.sync_reg\,
      I4 => D(3),
      O => \data_rd_reg[13]_i_1_n_0\
    );
\data_rd_reg[14]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F2220222"
    )
        port map (
      I0 => D(18),
      I1 => \^command_reg_clear_reg_0\,
      I2 => wb_gpr_wr_dbg,
      I3 => \^single_synchronize.use_async_reset.sync_reg\,
      I4 => D(2),
      O => \data_rd_reg[14]_i_1_n_0\
    );
\data_rd_reg[15]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F2220222"
    )
        port map (
      I0 => D(17),
      I1 => \^command_reg_clear_reg_0\,
      I2 => wb_gpr_wr_dbg,
      I3 => \^single_synchronize.use_async_reset.sync_reg\,
      I4 => D(1),
      O => \data_rd_reg[15]_i_1_n_0\
    );
\data_rd_reg[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F2220222"
    )
        port map (
      I0 => D(31),
      I1 => \^command_reg_clear_reg_0\,
      I2 => wb_gpr_wr_dbg,
      I3 => \^single_synchronize.use_async_reset.sync_reg\,
      I4 => D(15),
      O => \data_rd_reg[1]_i_1_n_0\
    );
\data_rd_reg[2]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F2220222"
    )
        port map (
      I0 => D(30),
      I1 => \^command_reg_clear_reg_0\,
      I2 => wb_gpr_wr_dbg,
      I3 => \^single_synchronize.use_async_reset.sync_reg\,
      I4 => D(14),
      O => \data_rd_reg[2]_i_1_n_0\
    );
\data_rd_reg[32]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \data_rd_reg[32]_i_2_n_0\,
      I1 => \data_rd_reg[32]_i_3_n_0\,
      I2 => \data_rd_reg_reg_n_0_[32]\,
      O => \data_rd_reg[32]_i_1_n_0\
    );
\data_rd_reg[32]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BFBFBFBFBFBFBFA0"
    )
        port map (
      I0 => wb_gpr_wr_dbg,
      I1 => \^start_dbg_exec_reg_0\,
      I2 => \^single_synchronize.use_async_reset.sync_reg\,
      I3 => wb_pc_valid,
      I4 => \^performace_debug_control.dbg_freeze_nohalt_reg_0\,
      I5 => \^command_reg_clear_reg_0\,
      O => \data_rd_reg[32]_i_2_n_0\
    );
\data_rd_reg[32]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFEEEEE"
    )
        port map (
      I0 => \^command_reg_clear_reg_0\,
      I1 => read_register_PC_1_reg_n_0,
      I2 => \^start_dbg_exec_reg_0\,
      I3 => wb_gpr_wr_dbg,
      I4 => \^single_synchronize.use_async_reset.sync_reg\,
      O => \data_rd_reg[32]_i_3_n_0\
    );
\data_rd_reg[3]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F2220222"
    )
        port map (
      I0 => D(29),
      I1 => \^command_reg_clear_reg_0\,
      I2 => wb_gpr_wr_dbg,
      I3 => \^single_synchronize.use_async_reset.sync_reg\,
      I4 => D(13),
      O => \data_rd_reg[3]_i_1_n_0\
    );
\data_rd_reg[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F2220222"
    )
        port map (
      I0 => D(28),
      I1 => \^command_reg_clear_reg_0\,
      I2 => wb_gpr_wr_dbg,
      I3 => \^single_synchronize.use_async_reset.sync_reg\,
      I4 => D(12),
      O => \data_rd_reg[4]_i_1_n_0\
    );
\data_rd_reg[5]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F2220222"
    )
        port map (
      I0 => D(27),
      I1 => \^command_reg_clear_reg_0\,
      I2 => wb_gpr_wr_dbg,
      I3 => \^single_synchronize.use_async_reset.sync_reg\,
      I4 => D(11),
      O => \data_rd_reg[5]_i_1_n_0\
    );
\data_rd_reg[6]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F2220222"
    )
        port map (
      I0 => D(26),
      I1 => \^command_reg_clear_reg_0\,
      I2 => wb_gpr_wr_dbg,
      I3 => \^single_synchronize.use_async_reset.sync_reg\,
      I4 => D(10),
      O => \data_rd_reg[6]_i_1_n_0\
    );
\data_rd_reg[7]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F2220222"
    )
        port map (
      I0 => D(25),
      I1 => \^command_reg_clear_reg_0\,
      I2 => wb_gpr_wr_dbg,
      I3 => \^single_synchronize.use_async_reset.sync_reg\,
      I4 => D(9),
      O => \data_rd_reg[7]_i_1_n_0\
    );
\data_rd_reg[8]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F2220222"
    )
        port map (
      I0 => D(24),
      I1 => \^command_reg_clear_reg_0\,
      I2 => wb_gpr_wr_dbg,
      I3 => \^single_synchronize.use_async_reset.sync_reg\,
      I4 => D(8),
      O => \data_rd_reg[8]_i_1_n_0\
    );
\data_rd_reg[9]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F2220222"
    )
        port map (
      I0 => D(23),
      I1 => \^command_reg_clear_reg_0\,
      I2 => wb_gpr_wr_dbg,
      I3 => \^single_synchronize.use_async_reset.sync_reg\,
      I4 => D(7),
      O => \data_rd_reg[9]_i_1_n_0\
    );
\data_rd_reg_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg[0]_i_2_n_0\,
      Q => \data_rd_reg_reg_n_0_[0]\,
      R => Rst18_out
    );
\data_rd_reg_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg[10]_i_1_n_0\,
      Q => \data_rd_reg_reg_n_0_[10]\,
      R => Rst18_out
    );
\data_rd_reg_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg[11]_i_1_n_0\,
      Q => \data_rd_reg_reg_n_0_[11]\,
      R => Rst18_out
    );
\data_rd_reg_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg[12]_i_1_n_0\,
      Q => \data_rd_reg_reg_n_0_[12]\,
      R => Rst18_out
    );
\data_rd_reg_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg[13]_i_1_n_0\,
      Q => \data_rd_reg_reg_n_0_[13]\,
      R => Rst18_out
    );
\data_rd_reg_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg[14]_i_1_n_0\,
      Q => \data_rd_reg_reg_n_0_[14]\,
      R => Rst18_out
    );
\data_rd_reg_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg[15]_i_1_n_0\,
      Q => \data_rd_reg_reg_n_0_[15]\,
      R => Rst18_out
    );
\data_rd_reg_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \Using_FPGA.Native_1\,
      Q => \data_rd_reg_reg_n_0_[16]\,
      R => Rst18_out
    );
\data_rd_reg_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => wb_gpr_write_dbg_reg,
      Q => \data_rd_reg_reg_n_0_[17]\,
      R => Rst18_out
    );
\data_rd_reg_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => wb_gpr_write_dbg_reg_0,
      Q => \data_rd_reg_reg_n_0_[18]\,
      R => Rst18_out
    );
\data_rd_reg_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => wb_gpr_write_dbg_reg_1,
      Q => \data_rd_reg_reg_n_0_[19]\,
      R => Rst18_out
    );
\data_rd_reg_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg[1]_i_1_n_0\,
      Q => \data_rd_reg_reg_n_0_[1]\,
      R => Rst18_out
    );
\data_rd_reg_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => wb_gpr_write_dbg_reg_2,
      Q => \data_rd_reg_reg_n_0_[20]\,
      R => Rst18_out
    );
\data_rd_reg_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => wb_gpr_write_dbg_reg_3,
      Q => \data_rd_reg_reg_n_0_[21]\,
      R => Rst18_out
    );
\data_rd_reg_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => wb_gpr_write_dbg_reg_4,
      Q => \data_rd_reg_reg_n_0_[22]\,
      R => Rst18_out
    );
\data_rd_reg_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => wb_gpr_write_dbg_reg_5,
      Q => \data_rd_reg_reg_n_0_[23]\,
      R => Rst18_out
    );
\data_rd_reg_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => wb_gpr_write_dbg_reg_6,
      Q => \data_rd_reg_reg_n_0_[24]\,
      R => Rst18_out
    );
\data_rd_reg_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => wb_gpr_write_dbg_reg_7,
      Q => \data_rd_reg_reg_n_0_[25]\,
      R => Rst18_out
    );
\data_rd_reg_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => wb_gpr_write_dbg_reg_8,
      Q => \data_rd_reg_reg_n_0_[26]\,
      R => Rst18_out
    );
\data_rd_reg_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => wb_gpr_write_dbg_reg_9,
      Q => \data_rd_reg_reg_n_0_[27]\,
      R => Rst18_out
    );
\data_rd_reg_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => wb_gpr_write_dbg_reg_10,
      Q => \data_rd_reg_reg_n_0_[28]\,
      R => Rst18_out
    );
\data_rd_reg_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => wb_gpr_write_dbg_reg_11,
      Q => \data_rd_reg_reg_n_0_[29]\,
      R => Rst18_out
    );
\data_rd_reg_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg[2]_i_1_n_0\,
      Q => \data_rd_reg_reg_n_0_[2]\,
      R => Rst18_out
    );
\data_rd_reg_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => wb_gpr_write_dbg_reg_12,
      Q => \data_rd_reg_reg_n_0_[30]\,
      R => Rst18_out
    );
\data_rd_reg_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => wb_gpr_write_dbg_reg_13,
      Q => \data_rd_reg_reg_n_0_[31]\,
      R => Rst18_out
    );
\data_rd_reg_reg[32]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \data_rd_reg[32]_i_1_n_0\,
      Q => \data_rd_reg_reg_n_0_[32]\,
      R => Rst18_out
    );
\data_rd_reg_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg[3]_i_1_n_0\,
      Q => \data_rd_reg_reg_n_0_[3]\,
      R => Rst18_out
    );
\data_rd_reg_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg[4]_i_1_n_0\,
      Q => \data_rd_reg_reg_n_0_[4]\,
      R => Rst18_out
    );
\data_rd_reg_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg[5]_i_1_n_0\,
      Q => \data_rd_reg_reg_n_0_[5]\,
      R => Rst18_out
    );
\data_rd_reg_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg[6]_i_1_n_0\,
      Q => \data_rd_reg_reg_n_0_[6]\,
      R => Rst18_out
    );
\data_rd_reg_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg[7]_i_1_n_0\,
      Q => \data_rd_reg_reg_n_0_[7]\,
      R => Rst18_out
    );
\data_rd_reg_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg[8]_i_1_n_0\,
      Q => \data_rd_reg_reg_n_0_[8]\,
      R => Rst18_out
    );
\data_rd_reg_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg[9]_i_1_n_0\,
      Q => \data_rd_reg_reg_n_0_[9]\,
      R => Rst18_out
    );
\data_read_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[0]\,
      Q => data_read_reg(0)
    );
\data_read_reg_reg[10]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[10]\,
      Q => data_read_reg(10)
    );
\data_read_reg_reg[11]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[11]\,
      Q => data_read_reg(11)
    );
\data_read_reg_reg[12]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[12]\,
      Q => data_read_reg(12)
    );
\data_read_reg_reg[13]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[13]\,
      Q => data_read_reg(13)
    );
\data_read_reg_reg[14]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[14]\,
      Q => data_read_reg(14)
    );
\data_read_reg_reg[15]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[15]\,
      Q => data_read_reg(15)
    );
\data_read_reg_reg[16]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[16]\,
      Q => data_read_reg(16)
    );
\data_read_reg_reg[17]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[17]\,
      Q => data_read_reg(17)
    );
\data_read_reg_reg[18]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[18]\,
      Q => data_read_reg(18)
    );
\data_read_reg_reg[19]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[19]\,
      Q => data_read_reg(19)
    );
\data_read_reg_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[1]\,
      Q => data_read_reg(1)
    );
\data_read_reg_reg[20]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[20]\,
      Q => data_read_reg(20)
    );
\data_read_reg_reg[21]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[21]\,
      Q => data_read_reg(21)
    );
\data_read_reg_reg[22]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[22]\,
      Q => data_read_reg(22)
    );
\data_read_reg_reg[23]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[23]\,
      Q => data_read_reg(23)
    );
\data_read_reg_reg[24]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[24]\,
      Q => data_read_reg(24)
    );
\data_read_reg_reg[25]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[25]\,
      Q => data_read_reg(25)
    );
\data_read_reg_reg[26]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[26]\,
      Q => data_read_reg(26)
    );
\data_read_reg_reg[27]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[27]\,
      Q => data_read_reg(27)
    );
\data_read_reg_reg[28]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[28]\,
      Q => data_read_reg(28)
    );
\data_read_reg_reg[29]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[29]\,
      Q => data_read_reg(29)
    );
\data_read_reg_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[2]\,
      Q => data_read_reg(2)
    );
\data_read_reg_reg[30]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[30]\,
      Q => data_read_reg(30)
    );
\data_read_reg_reg[31]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[31]\,
      Q => data_read_reg(31)
    );
\data_read_reg_reg[32]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[32]\,
      Q => data_read_reg(32)
    );
\data_read_reg_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[3]\,
      Q => data_read_reg(3)
    );
\data_read_reg_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[4]\,
      Q => data_read_reg(4)
    );
\data_read_reg_reg[5]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[5]\,
      Q => data_read_reg(5)
    );
\data_read_reg_reg[6]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[6]\,
      Q => data_read_reg(6)
    );
\data_read_reg_reg[7]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[7]\,
      Q => data_read_reg(7)
    );
\data_read_reg_reg[8]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[8]\,
      Q => data_read_reg(8)
    );
\data_read_reg_reg[9]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \data_rd_reg_reg_n_0_[9]\,
      Q => data_read_reg(9)
    );
dbg_halt_reset_mode_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4444444400000F00"
    )
        port map (
      I0 => Reset_Mode(1),
      I1 => Reset_Mode(0),
      I2 => \control_reg_reg_n_0_[0]\,
      I3 => dbg_halt_reset_mode_reg_n_0,
      I4 => step_continue,
      I5 => Rst18_out,
      O => dbg_halt_reset_mode_i_1_n_0
    );
dbg_halt_reset_mode_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => continue_from_brk_reg_n_0,
      I1 => start_single_step_reg_n_0,
      O => step_continue
    );
dbg_halt_reset_mode_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => dbg_halt_reset_mode_i_1_n_0,
      Q => dbg_halt_reset_mode_reg_n_0,
      R => '0'
    );
dbg_wakeup_i_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => no_sleeping,
      D => \shift_datain_reg_n_0_[31]\,
      Q => dbg_wakeup_i
    );
delay_slot_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_Halted,
      D => D(0),
      Q => delay_slot_instr,
      R => Rst18_out
    );
exception_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => exception_reg_0,
      Q => \^instr_read_reg_reg[0]_0\(0),
      R => '0'
    );
executing_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_valid_reg,
      Q => \^instr_read_reg_reg[0]_0\(1),
      R => Rst18_out
    );
force_stop_TClk_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFC"
    )
        port map (
      I0 => Scan_Reset,
      I1 => force_stop_cmd_i_reg_n_0,
      I2 => Dbg_Disable,
      I3 => Scan_Reset_Sel,
      O => force_stop_cmd_rst
    );
force_stop_TClk_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => force_stop_cmd_rst,
      D => \shift_datain_reg_n_0_[29]\,
      Q => force_stop_TClk
    );
force_stop_cmd_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => force_stop_cmd_i0,
      Q => force_stop_cmd_i_reg_n_0,
      R => Rst18_out
    );
if_debug_ready_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => if_debug_ready_i0,
      Q => \^start_dbg_exec_reg_0\,
      R => Rst18_out
    );
\instr_read_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \^instr_read_reg_reg[0]_0\(1),
      Q => instr_read_reg(0)
    );
\instr_read_reg_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \^instr_read_reg_reg[0]_0\(0),
      Q => instr_read_reg(1)
    );
mb_halted_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => dbg_state_i,
      Q => mb_halted_1,
      R => Rst18_out
    );
new_dbg_instr_shifting_CLK_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Instr_Insert_Reg_En_1,
      Q => new_dbg_instr_shifting_CLK_reg_n_0,
      R => Rst18_out
    );
normal_stop_TClk_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000100"
    )
        port map (
      I0 => Dbg_Reg_En(2),
      I1 => Dbg_Reg_En(3),
      I2 => Dbg_Reg_En(1),
      I3 => Dbg_Reg_En(7),
      I4 => normal_stop_TClk_i_3_n_0,
      O => Control_Reg_En
    );
normal_stop_TClk_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFC"
    )
        port map (
      I0 => Scan_Reset,
      I1 => normal_stop_cmd_i_reg_n_0,
      I2 => Dbg_Disable,
      I3 => Scan_Reset_Sel,
      O => normal_stop_cmd_rst
    );
normal_stop_TClk_i_3: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => Dbg_Reg_En(5),
      I1 => Dbg_Reg_En(4),
      I2 => Dbg_Reg_En(0),
      I3 => Dbg_Reg_En(6),
      O => normal_stop_TClk_i_3_n_0
    );
normal_stop_TClk_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => normal_stop_cmd_rst,
      D => \shift_datain_reg_n_0_[28]\,
      Q => normal_stop_TClk
    );
normal_stop_cmd_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => normal_stop_cmd_i0,
      Q => normal_stop_cmd_i_reg_n_0,
      R => Rst18_out
    );
read_register_MSR_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => read_register_MSR,
      Q => \^command_reg_clear_reg_0\,
      R => Rst18_out
    );
read_register_MSR_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => read_register_MSR0,
      Q => read_register_MSR,
      R => Rst18_out
    );
read_register_PC_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => read_register_PC,
      Q => read_register_PC_1_reg_n_0,
      R => Rst18_out
    );
read_register_PC_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => read_register_PC0,
      Q => read_register_PC,
      R => Rst18_out
    );
running_clock_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => Scan_Reset,
      I1 => capture_1,
      I2 => Scan_Reset_Sel,
      O => running_clock_rst
    );
running_clock_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      CLR => running_clock_rst,
      D => '1',
      Q => running_clock
    );
\sample_synced_1_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(0),
      Q => \sample_synced_1_reg_n_0_[0]\,
      R => Rst18_out
    );
\sample_synced_1_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(1),
      Q => \sample_synced_1_reg_n_0_[1]\,
      R => Rst18_out
    );
\sample_synced_1_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(2),
      Q => \sample_synced_1_reg_n_0_[2]\,
      R => Rst18_out
    );
\sample_synced_1_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(3),
      Q => \sample_synced_1_reg_n_0_[3]\,
      R => Rst18_out
    );
\sample_synced_1_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(4),
      Q => \sample_synced_1_reg_n_0_[4]\,
      R => Rst18_out
    );
\sample_synced_1_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(5),
      Q => p_0_in,
      R => Rst18_out
    );
\sample_synced_1_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(6),
      Q => \sample_synced_1_reg_n_0_[6]\,
      R => Rst18_out
    );
\sample_synced_1_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(7),
      Q => p_0_in59_in,
      R => Rst18_out
    );
\sample_synced_1_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(8),
      Q => \sample_synced_1_reg_n_0_[8]\,
      R => Rst18_out
    );
saved_reset_mode_dbg_halt_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Synchronize.use_sync_reset.sync_reg[2]\,
      Q => \^saved_reset_mode_dbg_halt\,
      R => '0'
    );
saved_reset_mode_sleep_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"222222F0"
    )
        port map (
      I0 => Reset_Mode(1),
      I1 => Reset_Mode(0),
      I2 => \^single_synchronize.use_async_reset.sync_reg_0\,
      I3 => Dbg_Disable,
      I4 => \out\(0),
      O => saved_reset_mode_sleep_i_1_n_0
    );
saved_reset_mode_sleep_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => saved_reset_mode_sleep_i_1_n_0,
      Q => saved_reset_mode_sleep,
      R => '0'
    );
\shift_count[0]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"4"
    )
        port map (
      I0 => \shift_count_reg_n_0_[0]\,
      I1 => Dbg_Shift,
      O => \shift_count[0]_i_1_n_0\
    );
\shift_count[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"60"
    )
        port map (
      I0 => A1,
      I1 => \shift_count_reg_n_0_[0]\,
      I2 => Dbg_Shift,
      O => \shift_count[1]_i_1_n_0\
    );
\shift_count[2]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6A00"
    )
        port map (
      I0 => A2,
      I1 => A1,
      I2 => \shift_count_reg_n_0_[0]\,
      I3 => Dbg_Shift,
      O => \shift_count[2]_i_1_n_0\
    );
\shift_count[3]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6AAA0000"
    )
        port map (
      I0 => A3,
      I1 => A2,
      I2 => \shift_count_reg_n_0_[0]\,
      I3 => A1,
      I4 => Dbg_Shift,
      O => \shift_count[3]_i_1_n_0\
    );
\shift_count[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6AAAAAAA00000000"
    )
        port map (
      I0 => sel0(0),
      I1 => A3,
      I2 => A1,
      I3 => \shift_count_reg_n_0_[0]\,
      I4 => A2,
      I5 => Dbg_Shift,
      O => \shift_count[4]_i_1_n_0\
    );
\shift_count[5]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"60"
    )
        port map (
      I0 => \sel0__0\(1),
      I1 => \shift_count[5]_i_2_n_0\,
      I2 => Dbg_Shift,
      O => \shift_count[5]_i_1_n_0\
    );
\shift_count[5]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"80000000"
    )
        port map (
      I0 => sel0(0),
      I1 => A2,
      I2 => \shift_count_reg_n_0_[0]\,
      I3 => A1,
      I4 => A3,
      O => \shift_count[5]_i_2_n_0\
    );
\shift_count[6]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"60"
    )
        port map (
      I0 => \sel0__0\(2),
      I1 => \shift_count[7]_i_2_n_0\,
      I2 => Dbg_Shift,
      O => \shift_count[6]_i_1_n_0\
    );
\shift_count[7]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6A00"
    )
        port map (
      I0 => \sel0__0\(3),
      I1 => \sel0__0\(2),
      I2 => \shift_count[7]_i_2_n_0\,
      I3 => Dbg_Shift,
      O => \shift_count[7]_i_1_n_0\
    );
\shift_count[7]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => \sel0__0\(1),
      I1 => A3,
      I2 => A1,
      I3 => \shift_count_reg_n_0_[0]\,
      I4 => A2,
      I5 => sel0(0),
      O => \shift_count[7]_i_2_n_0\
    );
\shift_count_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_count[0]_i_1_n_0\,
      Q => \shift_count_reg_n_0_[0]\
    );
\shift_count_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_count[1]_i_1_n_0\,
      Q => A1
    );
\shift_count_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_count[2]_i_1_n_0\,
      Q => A2
    );
\shift_count_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_count[3]_i_1_n_0\,
      Q => A3
    );
\shift_count_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_count[4]_i_1_n_0\,
      Q => sel0(0)
    );
\shift_count_reg[5]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_count[5]_i_1_n_0\,
      Q => \sel0__0\(1)
    );
\shift_count_reg[6]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_count[6]_i_1_n_0\,
      Q => \sel0__0\(2)
    );
\shift_count_reg[7]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_count[7]_i_1_n_0\,
      Q => \sel0__0\(3)
    );
\shift_datain_reg[10]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[11]\,
      Q => \shift_datain_reg_n_0_[10]\
    );
\shift_datain_reg[11]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[12]\,
      Q => \shift_datain_reg_n_0_[11]\
    );
\shift_datain_reg[12]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[13]\,
      Q => \shift_datain_reg_n_0_[12]\
    );
\shift_datain_reg[13]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[14]\,
      Q => \shift_datain_reg_n_0_[13]\
    );
\shift_datain_reg[14]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[15]\,
      Q => \shift_datain_reg_n_0_[14]\
    );
\shift_datain_reg[15]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[16]\,
      Q => \shift_datain_reg_n_0_[15]\
    );
\shift_datain_reg[16]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[17]\,
      Q => \shift_datain_reg_n_0_[16]\
    );
\shift_datain_reg[17]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[18]\,
      Q => \shift_datain_reg_n_0_[17]\
    );
\shift_datain_reg[18]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[19]\,
      Q => \shift_datain_reg_n_0_[18]\
    );
\shift_datain_reg[19]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[20]\,
      Q => \shift_datain_reg_n_0_[19]\
    );
\shift_datain_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[2]\,
      Q => \shift_datain_reg_n_0_[1]\
    );
\shift_datain_reg[20]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[21]\,
      Q => \shift_datain_reg_n_0_[20]\
    );
\shift_datain_reg[21]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[22]\,
      Q => \shift_datain_reg_n_0_[21]\
    );
\shift_datain_reg[22]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[23]\,
      Q => \shift_datain_reg_n_0_[22]\
    );
\shift_datain_reg[23]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[24]\,
      Q => \shift_datain_reg_n_0_[23]\
    );
\shift_datain_reg[24]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[25]\,
      Q => \shift_datain_reg_n_0_[24]\
    );
\shift_datain_reg[25]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[26]\,
      Q => \shift_datain_reg_n_0_[25]\
    );
\shift_datain_reg[26]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[27]\,
      Q => \shift_datain_reg_n_0_[26]\
    );
\shift_datain_reg[27]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[28]\,
      Q => \shift_datain_reg_n_0_[27]\
    );
\shift_datain_reg[28]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[29]\,
      Q => \shift_datain_reg_n_0_[28]\
    );
\shift_datain_reg[29]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[30]\,
      Q => \shift_datain_reg_n_0_[29]\
    );
\shift_datain_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[3]\,
      Q => \shift_datain_reg_n_0_[2]\
    );
\shift_datain_reg[30]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[31]\,
      Q => \shift_datain_reg_n_0_[30]\
    );
\shift_datain_reg[31]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => Dbg_TDI,
      Q => \shift_datain_reg_n_0_[31]\
    );
\shift_datain_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[4]\,
      Q => \shift_datain_reg_n_0_[3]\
    );
\shift_datain_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[5]\,
      Q => \shift_datain_reg_n_0_[4]\
    );
\shift_datain_reg[5]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[6]\,
      Q => \shift_datain_reg_n_0_[5]\
    );
\shift_datain_reg[6]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[7]\,
      Q => \shift_datain_reg_n_0_[6]\
    );
\shift_datain_reg[7]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[8]\,
      Q => \shift_datain_reg_n_0_[7]\
    );
\shift_datain_reg[8]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[9]\,
      Q => \shift_datain_reg_n_0_[8]\
    );
\shift_datain_reg[9]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => \shift_datain_reg_n_0_[10]\,
      Q => \shift_datain_reg_n_0_[9]\
    );
single_Step_N_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FB"
    )
        port map (
      I0 => single_step_count(1),
      I1 => start_single_step_reg_n_0,
      I2 => single_step_count(0),
      O => single_Step_N_i_1_n_0
    );
single_Step_N_reg: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Using_FPGA.Native_0\,
      D => single_Step_N_i_1_n_0,
      Q => single_Step_N,
      S => Rst18_out
    );
single_Step_TClk_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAFC"
    )
        port map (
      I0 => Scan_Reset,
      I1 => start_single_step_reg_n_0,
      I2 => Dbg_Disable,
      I3 => Scan_Reset_Sel,
      O => start_single_step_rst
    );
single_Step_TClk_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => start_single_step_rst,
      D => \shift_datain_reg_n_0_[23]\,
      Q => single_Step_TClk
    );
\single_step_count[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AACF55C0"
    )
        port map (
      I0 => single_step_count(1),
      I1 => \control_reg_reg_n_0_[4]\,
      I2 => start_single_cmd,
      I3 => \Using_FPGA.Native_0\,
      I4 => single_step_count(0),
      O => \single_step_count[0]_i_1_n_0\
    );
\single_step_count[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0BF8"
    )
        port map (
      I0 => \control_reg_reg_n_0_[5]\,
      I1 => start_single_cmd,
      I2 => \Using_FPGA.Native_0\,
      I3 => single_step_count(1),
      O => \single_step_count[1]_i_1_n_0\
    );
\single_step_count_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \single_step_count[0]_i_1_n_0\,
      Q => single_step_count(0),
      R => Rst18_out
    );
\single_step_count_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \single_step_count[1]_i_1_n_0\,
      Q => single_step_count(1),
      R => Rst18_out
    );
sleep_reset_mode_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAA03FFAAAA0000"
    )
        port map (
      I0 => reset_mode_sleep,
      I1 => Wakeup(1),
      I2 => Wakeup(0),
      I3 => saved_reset_mode_sleep,
      I4 => Rst18_out,
      I5 => \^single_synchronize.use_async_reset.sync_reg_0\,
      O => sleep_reset_mode_i_1_n_0
    );
sleep_reset_mode_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => Reset_Mode(1),
      I1 => Reset_Mode(0),
      O => reset_mode_sleep
    );
sleep_reset_mode_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sleep_reset_mode_i_1_n_0,
      Q => \^single_synchronize.use_async_reset.sync_reg_0\,
      R => '0'
    );
start_dbg_exec_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^start_dbg_exec_reg_0\,
      Q => executing0,
      R => Rst18_out
    );
start_single_cmd_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => start_single_cmd0,
      Q => start_single_cmd,
      R => Rst18_out
    );
start_single_step_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3333222233032222"
    )
        port map (
      I0 => start_single_cmd,
      I1 => Rst18_out,
      I2 => \Using_FPGA.Native_0\,
      I3 => single_step_count(1),
      I4 => start_single_step_reg_n_0,
      I5 => single_step_count(0),
      O => start_single_step_i_1_n_0
    );
start_single_step_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => start_single_step_i_1_n_0,
      Q => start_single_step_reg_n_0,
      R => '0'
    );
\status_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => sync,
      Q => \status_reg_reg_n_0_[0]\
    );
\status_reg_reg[10]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => sync_dbg_hit_n_10,
      Q => \status_reg_reg_n_0_[10]\
    );
\status_reg_reg[11]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => sync_dbg_hit_n_11,
      Q => \status_reg_reg_n_0_[11]\
    );
\status_reg_reg[12]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => sync_dbg_hit_n_12,
      Q => \status_reg_reg_n_0_[12]\
    );
\status_reg_reg[13]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => sync_dbg_hit_n_13,
      Q => \status_reg_reg_n_0_[13]\
    );
\status_reg_reg[14]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => sync_dbg_hit_n_14,
      Q => \status_reg_reg_n_0_[14]\
    );
\status_reg_reg[15]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => sync_dbg_hit_n_15,
      Q => \status_reg_reg_n_0_[15]\
    );
\status_reg_reg[16]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => sync_stop_CPU_n_0,
      Q => \status_reg_reg_n_0_[16]\
    );
\status_reg_reg[17]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => Rst18_out,
      Q => \status_reg_reg_n_0_[17]\
    );
\status_reg_reg[18]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => Full_32_bit,
      Q => \status_reg_reg_n_0_[18]\
    );
\status_reg_reg[19]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => delay_slot_instr,
      Q => \status_reg_reg_n_0_[19]\
    );
\status_reg_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => sync_dbg_hit_n_1,
      Q => \status_reg_reg_n_0_[1]\
    );
\status_reg_reg[20]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => Full_32_bit_1,
      Q => \status_reg_reg_n_0_[20]\
    );
\status_reg_reg[21]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => '0',
      Q => \status_reg_reg_n_0_[21]\
    );
\status_reg_reg[22]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => MEM_DataBus_Access_reg(0),
      Q => \status_reg_reg_n_0_[22]\
    );
\status_reg_reg[23]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => dbg_brki_hit_synced,
      Q => \status_reg_reg_n_0_[23]\
    );
\status_reg_reg[24]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => running_clock_synced,
      Q => \status_reg_reg_n_0_[24]\
    );
\status_reg_reg[25]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => D(33),
      Q => \status_reg_reg_n_0_[25]\
    );
\status_reg_reg[26]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => stack_violation_occurence_synced,
      Q => \status_reg_reg_n_0_[26]\
    );
\status_reg_reg[27]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => sleep_synced,
      Q => \status_reg_reg_n_0_[27]\
    );
\status_reg_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => sync_dbg_hit_n_2,
      Q => \status_reg_reg_n_0_[2]\
    );
\status_reg_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => sync_dbg_hit_n_3,
      Q => \status_reg_reg_n_0_[3]\
    );
\status_reg_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => sync_dbg_hit_n_4,
      Q => \status_reg_reg_n_0_[4]\
    );
\status_reg_reg[5]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => sync_dbg_hit_n_5,
      Q => \status_reg_reg_n_0_[5]\
    );
\status_reg_reg[6]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => sync_dbg_hit_n_6,
      Q => \status_reg_reg_n_0_[6]\
    );
\status_reg_reg[7]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => sync_dbg_hit_n_7,
      Q => \status_reg_reg_n_0_[7]\
    );
\status_reg_reg[8]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => sync_dbg_hit_n_8,
      Q => \status_reg_reg_n_0_[8]\
    );
\status_reg_reg[9]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => \New_Instr_Reg_TCK[0]_i_1_n_0\,
      D => sync_dbg_hit_n_9,
      Q => \status_reg_reg_n_0_[9]\
    );
sync_dbg_brk_hit: entity work.\system_microblaze_0_0_mb_sync_bit__parameterized35\
     port map (
      D(0) => dbg_brki_hit_synced,
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel,
      dbg_brki_hit => dbg_brki_hit
    );
sync_dbg_hit: entity work.system_microblaze_0_0_mb_sync_vec
     port map (
      D(15) => sync,
      D(14) => sync_dbg_hit_n_1,
      D(13) => sync_dbg_hit_n_2,
      D(12) => sync_dbg_hit_n_3,
      D(11) => sync_dbg_hit_n_4,
      D(10) => sync_dbg_hit_n_5,
      D(9) => sync_dbg_hit_n_6,
      D(8) => sync_dbg_hit_n_7,
      D(7) => sync_dbg_hit_n_8,
      D(6) => sync_dbg_hit_n_9,
      D(5) => sync_dbg_hit_n_10,
      D(4) => sync_dbg_hit_n_11,
      D(3) => sync_dbg_hit_n_12,
      D(2) => sync_dbg_hit_n_13,
      D(1) => sync_dbg_hit_n_14,
      D(0) => sync_dbg_hit_n_15,
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      \Performace_Debug_Control.dbg_hit_reg[10]\ => \Performace_Debug_Control.dbg_hit_reg_n_0_[10]\,
      \Performace_Debug_Control.dbg_hit_reg[11]\ => \Performace_Debug_Control.dbg_hit_reg_n_0_[11]\,
      \Performace_Debug_Control.dbg_hit_reg[12]\ => \Performace_Debug_Control.dbg_hit_reg_n_0_[12]\,
      \Performace_Debug_Control.dbg_hit_reg[13]\ => \Performace_Debug_Control.dbg_hit_reg_n_0_[13]\,
      \Performace_Debug_Control.dbg_hit_reg[14]\ => \Performace_Debug_Control.dbg_hit_reg_n_0_[14]\,
      \Performace_Debug_Control.dbg_hit_reg[15]\ => \Performace_Debug_Control.dbg_hit_reg_n_0_[15]\,
      \Performace_Debug_Control.dbg_hit_reg[1]\ => \Performace_Debug_Control.dbg_hit_reg_n_0_[1]\,
      \Performace_Debug_Control.dbg_hit_reg[2]\ => \Performace_Debug_Control.dbg_hit_reg_n_0_[2]\,
      \Performace_Debug_Control.dbg_hit_reg[3]\ => \Performace_Debug_Control.dbg_hit_reg_n_0_[3]\,
      \Performace_Debug_Control.dbg_hit_reg[4]\ => \Performace_Debug_Control.dbg_hit_reg_n_0_[4]\,
      \Performace_Debug_Control.dbg_hit_reg[5]\ => \Performace_Debug_Control.dbg_hit_reg_n_0_[5]\,
      \Performace_Debug_Control.dbg_hit_reg[6]\ => \Performace_Debug_Control.dbg_hit_reg_n_0_[6]\,
      \Performace_Debug_Control.dbg_hit_reg[7]\ => \Performace_Debug_Control.dbg_hit_reg_n_0_[7]\,
      \Performace_Debug_Control.dbg_hit_reg[8]\ => \Performace_Debug_Control.dbg_hit_reg_n_0_[8]\,
      \Performace_Debug_Control.dbg_hit_reg[9]\ => \Performace_Debug_Control.dbg_hit_reg_n_0_[9]\,
      Raw => Raw,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel
    );
sync_running_clock: entity work.\system_microblaze_0_0_mb_sync_bit__parameterized37\
     port map (
      D(0) => running_clock_synced,
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel,
      running_clock => running_clock
    );
sync_sample: entity work.\system_microblaze_0_0_mb_sync_vec__parameterized1\
     port map (
      Clk => Clk,
      D(8) => sample_synced(0),
      D(7) => sample_synced(1),
      D(6) => sample_synced(2),
      D(5) => sample_synced(3),
      D(4) => sample_synced(4),
      D(3) => sample_synced(5),
      D(2) => sample_synced(6),
      D(1) => sample_synced(7),
      D(0) => sample_synced(8),
      Dbg_Disable => Dbg_Disable,
      Dbg_Trig_Ack_In(0) => Dbg_Trig_Ack_In(0),
      Dbg_Trig_Ack_Out(0) => \^dbg_trig_ack_out\(0),
      Dbg_Trig_In(0) => \^dbg_trig_in\(0),
      Dbg_Trig_Out(0) => Dbg_Trig_Out(0),
      New_Dbg_Instr2_TCK_reg(0) => New_Dbg_Instr2_TCK,
      Q(8) => \sample_synced_1_reg_n_0_[0]\,
      Q(7) => \sample_synced_1_reg_n_0_[1]\,
      Q(6) => \sample_synced_1_reg_n_0_[2]\,
      Q(5) => \sample_synced_1_reg_n_0_[3]\,
      Q(4) => \sample_synced_1_reg_n_0_[4]\,
      Q(3) => p_0_in,
      Q(2) => \sample_synced_1_reg_n_0_[6]\,
      Q(1) => p_0_in59_in,
      Q(0) => \sample_synced_1_reg_n_0_[8]\,
      Rst18_out => Rst18_out,
      \command_reg_reg[0]\(1) => command_reg(0),
      \command_reg_reg[0]\(0) => command_reg(1),
      continue_from_brk0 => continue_from_brk0,
      continue_from_brk_TClk_reg(0) => continue_from_brk_TClk,
      force_stop_TClk_reg(0) => force_stop_TClk,
      force_stop_cmd_i0 => force_stop_cmd_i0,
      if_debug_ready_i0 => if_debug_ready_i0,
      normal_stop_TClk_reg(0) => normal_stop_TClk,
      normal_stop_cmd_i0 => normal_stop_cmd_i0,
      \out\(0) => \out\(0),
      read_register_MSR0 => read_register_MSR0,
      read_register_PC0 => read_register_PC0,
      single_Step_TClk_reg(0) => single_Step_TClk,
      start_single_cmd0 => start_single_cmd0,
      trig_ack_out_1_reg => sync_sample_n_17,
      trig_in_1_reg => sync_sample_n_16
    );
sync_sleep: entity work.\system_microblaze_0_0_mb_sync_bit__parameterized41\
     port map (
      D(0) => sleep_synced,
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel,
      Sleep_Decode => Sleep_Decode,
      sleep_reset_mode_reg => \^single_synchronize.use_async_reset.sync_reg_0\
    );
sync_stack_violation_occurence: entity work.\system_microblaze_0_0_mb_sync_bit__parameterized39\
     port map (
      D(0) => stack_violation_occurence_synced,
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel
    );
sync_stop_CPU: entity work.\system_microblaze_0_0_mb_sync_bit__parameterized33\
     port map (
      D(0) => sync_stop_CPU_n_0,
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ => \^single_synchronize.use_async_reset.sync_reg\,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel
    );
sync_trig_ack_in_0: entity work.\system_microblaze_0_0_mb_sync_bit__parameterized52\
     port map (
      Clk => Clk,
      Dbg_Trig_Ack_In(0) => Dbg_Trig_Ack_In(1),
      Dbg_Trig_In(0) => \^dbg_trig_in\(1),
      Rst18_out => Rst18_out,
      dbg_state_i => dbg_state_i,
      mb_halted_1 => mb_halted_1,
      trig_ack_in_0_synced => trig_ack_in_0_synced,
      trig_ack_in_0_synced_1 => trig_ack_in_0_synced_1,
      trig_in_0_reg => sync_trig_ack_in_0_n_1
    );
sync_trig_out_0: entity work.\system_microblaze_0_0_mb_sync_bit__parameterized54\
     port map (
      Clk => Clk,
      Dbg_Disable => Dbg_Disable,
      Dbg_Stop => Dbg_Stop,
      Dbg_Trig_Ack_Out(0) => \^dbg_trig_ack_out\(1),
      Dbg_Trig_Out(0) => Dbg_Trig_Out(1),
      \Performace_Debug_Control.dbg_stop_i_reg\ => sync_trig_out_0_n_2,
      \Performace_Debug_Control.dbg_stop_i_reg_0\ => \Performace_Debug_Control.dbg_stop_i_reg_n_0\,
      \Performace_Debug_Control.trig_ack_out_0_reg\ => sync_trig_out_0_n_1,
      Rst18_out => Rst18_out,
      dbg_state_i => dbg_state_i,
      dbg_stop_1 => dbg_stop_1,
      dbg_stop_i => dbg_stop_i,
      \out\(0) => \out\(0),
      trig_out_0_synced => trig_out_0_synced,
      trig_out_0_synced_1 => trig_out_0_synced_1
    );
trig_ack_in_0_synced_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trig_ack_in_0_synced,
      Q => trig_ack_in_0_synced_1,
      R => Rst18_out
    );
trig_ack_out_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sync_sample_n_17,
      Q => \^dbg_trig_ack_out\(0),
      R => '0'
    );
trig_in_0_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sync_trig_ack_in_0_n_1,
      Q => \^dbg_trig_in\(1),
      R => '0'
    );
trig_in_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sync_sample_n_16,
      Q => \^dbg_trig_in\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_Decode_gti is
  port (
    use_Reg_Neg_S_reg : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_gpr_op3_rd_addr : out STD_LOGIC_VECTOR ( 0 to 4 );
    of_gpr_op1_rd_addr : out STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : out STD_LOGIC_VECTOR ( 0 to 15 );
    use_Reg_Neg_S_reg_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    Trace_WB_Jump_Hit_reg_0 : out STD_LOGIC;
    ex_byte_access : out STD_LOGIC;
    ex_doublet_access : out STD_LOGIC;
    ex_reverse_byteorder : out STD_LOGIC;
    ex_op1_cmp_equal : out STD_LOGIC;
    ex_op1_cmp_equal_n : out STD_LOGIC;
    wb_gpr_write_i_reg_0 : out STD_LOGIC;
    mem_Exception_Taken : out STD_LOGIC;
    ex_move_to_MSR_instr : out STD_LOGIC;
    ex_Exception_Taken : out STD_LOGIC;
    wb_piperun : out STD_LOGIC;
    mem_databus_read : out STD_LOGIC;
    IFetch : out STD_LOGIC_VECTOR ( 135 downto 0 );
    mem_databus_write : out STD_LOGIC;
    wb_byte_access : out STD_LOGIC;
    ex_cmp_op : out STD_LOGIC;
    ex_unsigned_op : out STD_LOGIC;
    ex_use_carry : out STD_LOGIC;
    EX_Enable_ALU : out STD_LOGIC;
    EX_ALU_Sel_Logic : out STD_LOGIC;
    ex_swap_byte_instr : out STD_LOGIC;
    mem_sel_msr : out STD_LOGIC;
    MEM_Sel_MEM_Res : out STD_LOGIC;
    wb_gpr_wr_dbg : out STD_LOGIC;
    wb_read_imm_reg : out STD_LOGIC;
    wb_read_imm_reg_1 : out STD_LOGIC;
    wb_pc_valid : out STD_LOGIC;
    dbg_clean_stop : out STD_LOGIC;
    wb_sel_spr_shr : out STD_LOGIC;
    mem_databus_access : out STD_LOGIC;
    DI : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 1 downto 0 );
    wb_Halted : out STD_LOGIC;
    \EX_Op2_reg[0]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    EX_Fwd : out STD_LOGIC_VECTOR ( 0 to 31 );
    of_Take_Interrupt : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    restore_wb_msr_to_ex : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    SRI : out STD_LOGIC;
    dbg_state_i : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    of_op1_sel_spr : out STD_LOGIC;
    \EX_Op3_reg[0]\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    of_op3_sel : out STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Branch_CMP_Op1_reg[0]\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    of_op1_sel : out STD_LOGIC_VECTOR ( 0 to 1 );
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    M_AXI_DP_AWVALID_i : out STD_LOGIC;
    \Performace_Debug_Control.dbg_hit_reg[15]\ : out STD_LOGIC;
    dbg_stop_i : out STD_LOGIC;
    Sleep : out STD_LOGIC;
    Sleep_Decode : out STD_LOGIC;
    no_sleeping : out STD_LOGIC;
    M_AXI_DP_AWVALID_i1 : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    R : out STD_LOGIC;
    exception_reg : out STD_LOGIC;
    executing_reg : out STD_LOGIC;
    \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\ : out STD_LOGIC;
    \Performace_Debug_Control.ex_brki_hit_reg\ : out STD_LOGIC;
    \Using_FPGA.Native_9\ : out STD_LOGIC;
    \Using_FPGA.Native_10\ : out STD_LOGIC;
    \Using_FPGA.Native_11\ : out STD_LOGIC;
    I1 : out STD_LOGIC;
    \EX_Op1_reg[28]\ : out STD_LOGIC;
    \EX_Op1_reg[29]\ : out STD_LOGIC;
    \EX_Op1_reg[30]\ : out STD_LOGIC;
    \EX_Op1_reg[31]\ : out STD_LOGIC;
    \EX_Op1_reg[27]\ : out STD_LOGIC;
    \EX_Op1_reg[26]\ : out STD_LOGIC;
    \EX_Op1_reg[25]\ : out STD_LOGIC;
    \EX_Op1_reg[24]\ : out STD_LOGIC;
    \EX_Op1_reg[23]\ : out STD_LOGIC;
    \EX_Op1_reg[22]\ : out STD_LOGIC;
    \EX_Op1_reg[21]\ : out STD_LOGIC;
    \EX_Op1_reg[20]\ : out STD_LOGIC;
    \EX_Op1_reg[19]\ : out STD_LOGIC;
    \EX_Op1_reg[18]\ : out STD_LOGIC;
    \EX_Op1_reg[17]\ : out STD_LOGIC;
    \EX_Op1_reg[16]\ : out STD_LOGIC;
    \EX_Op1_reg[15]\ : out STD_LOGIC;
    \EX_Op1_reg[14]\ : out STD_LOGIC;
    \EX_Op1_reg[13]\ : out STD_LOGIC;
    \EX_Op1_reg[12]\ : out STD_LOGIC;
    \EX_Op1_reg[11]\ : out STD_LOGIC;
    \EX_Op1_reg[10]\ : out STD_LOGIC;
    \EX_Op1_reg[9]\ : out STD_LOGIC;
    \EX_Op1_reg[8]\ : out STD_LOGIC;
    \EX_Op1_reg[7]\ : out STD_LOGIC;
    \EX_Op1_reg[6]\ : out STD_LOGIC;
    \EX_Op1_reg[5]\ : out STD_LOGIC;
    \EX_Op1_reg[4]\ : out STD_LOGIC;
    \EX_Op1_reg[3]\ : out STD_LOGIC;
    \EX_Op1_reg[2]\ : out STD_LOGIC;
    \EX_Op1_reg[1]\ : out STD_LOGIC;
    \Performace_Debug_Control.ex_watchpoint_brk_reg\ : out STD_LOGIC;
    \Using_FPGA.Native_12\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_13\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    Interrupt_Ack : out STD_LOGIC_VECTOR ( 0 to 1 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    I041_out : in STD_LOGIC;
    I139_out : in STD_LOGIC;
    ex_op1_zero : in STD_LOGIC;
    mem_databus_ready : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg\ : in STD_LOGIC;
    \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_0\ : in STD_LOGIC;
    \Using_FPGA.Native_14\ : in STD_LOGIC;
    flush_pipe : in STD_LOGIC;
    IB_Ready : in STD_LOGIC;
    GPR_Op2 : in STD_LOGIC_VECTOR ( 0 to 31 );
    \EX_Op2_reg[0]_0\ : in STD_LOGIC_VECTOR ( 45 downto 0 );
    \Using_FPGA.Native_15\ : in STD_LOGIC_VECTOR ( 29 downto 0 );
    \Using_FPGA.Native_16\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \interrupt_address_d1_reg[0]\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \Using_FPGA.Native_17\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \control_reg_reg[3]\ : in STD_LOGIC;
    ex_MSR : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \EX_Op1_reg[29]_0\ : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC;
    wb_MSR_cmb : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_MSR : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[28]_0\ : in STD_LOGIC;
    ex_alu_carry : in STD_LOGIC;
    \EX_Op1_reg[0]\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    dbg_stop_if_delay_i : in STD_LOGIC;
    \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_1\ : in STD_LOGIC;
    \imm_reg_reg[0]\ : in STD_LOGIC_VECTOR ( 15 downto 0 );
    GPR_Op3 : in STD_LOGIC_VECTOR ( 15 downto 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \EX_Op2_reg[31]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_18\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_19\ : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \Use_DLMB.wb_dlmb_valid_read_data_reg[24]\ : in STD_LOGIC;
    \WB_MEM_Result_reg[0]\ : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \Use_DLMB.wb_dlmb_valid_read_data_reg[25]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[26]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[27]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[28]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[29]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[30]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[31]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[16]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[17]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[18]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[19]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[20]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[21]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[22]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[23]\ : in STD_LOGIC;
    active_access_d1 : in STD_LOGIC;
    DWait : in STD_LOGIC;
    DReady : in STD_LOGIC;
    \Performace_Debug_Control.dbg_state_nohalt_reg\ : in STD_LOGIC;
    sleep_reset_mode_reg : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 32 downto 0 );
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Wakeup : in STD_LOGIC_VECTOR ( 0 to 1 );
    \EX_Op2_reg[30]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[7]_0\ : in STD_LOGIC;
    \EX_Op1_reg[6]_0\ : in STD_LOGIC;
    \EX_Op1_reg[5]_0\ : in STD_LOGIC;
    \EX_Op1_reg[4]_0\ : in STD_LOGIC;
    \EX_Op1_reg[3]_0\ : in STD_LOGIC;
    \EX_Op1_reg[2]_0\ : in STD_LOGIC;
    \EX_Op1_reg[1]_0\ : in STD_LOGIC;
    \EX_Op1_reg[0]_0\ : in STD_LOGIC;
    \EX_Op1_reg[15]_0\ : in STD_LOGIC;
    \EX_Op1_reg[24]_0\ : in STD_LOGIC;
    \EX_Op1_reg[14]_0\ : in STD_LOGIC;
    \EX_Op1_reg[13]_0\ : in STD_LOGIC;
    \EX_Op1_reg[12]_0\ : in STD_LOGIC;
    \EX_Op1_reg[11]_0\ : in STD_LOGIC;
    \EX_Op1_reg[10]_0\ : in STD_LOGIC;
    \EX_Op1_reg[9]_0\ : in STD_LOGIC;
    \EX_Op1_reg[8]_0\ : in STD_LOGIC;
    \EX_Op1_reg[23]_0\ : in STD_LOGIC;
    \EX_Op1_reg[24]_1\ : in STD_LOGIC;
    \EX_Op1_reg[22]_0\ : in STD_LOGIC;
    \EX_Op1_reg[21]_0\ : in STD_LOGIC;
    \EX_Op1_reg[20]_0\ : in STD_LOGIC;
    \EX_Op1_reg[19]_0\ : in STD_LOGIC;
    \EX_Op1_reg[18]_0\ : in STD_LOGIC;
    \EX_Op1_reg[17]_0\ : in STD_LOGIC;
    \EX_Op1_reg[16]_0\ : in STD_LOGIC;
    \EX_Op1_reg[31]_0\ : in STD_LOGIC;
    \EX_Op1_reg[30]_0\ : in STD_LOGIC;
    \EX_Op1_reg[29]_1\ : in STD_LOGIC;
    \EX_Op1_reg[28]_1\ : in STD_LOGIC;
    \EX_Op1_reg[27]_0\ : in STD_LOGIC;
    \EX_Op1_reg[26]_0\ : in STD_LOGIC;
    \EX_Op1_reg[25]_0\ : in STD_LOGIC;
    \EX_Op1_reg[24]_2\ : in STD_LOGIC;
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 1 downto 0 );
    executing_reg_0 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Rst18_out : in STD_LOGIC;
    executing0 : in STD_LOGIC;
    \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg\ : in STD_LOGIC;
    p_36_out : in STD_LOGIC;
    \control_reg_reg[8]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    IReady : in STD_LOGIC;
    if_debug_ready_i_reg : in STD_LOGIC;
    \EX_Op1_reg[30]_1\ : in STD_LOGIC;
    \Performace_Debug_Control.ex_watchpoint_brk_reg_0\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[0]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_Decode_gti : entity is "Decode_gti";
end system_microblaze_0_0_Decode_gti;

architecture STRUCTURE of system_microblaze_0_0_Decode_gti is
  signal \^d\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal D122_out : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O0_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O10_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O11_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O12_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O13_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O14_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O15_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O17_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O18_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O19_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O1_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O20_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O21_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O22_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O23_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O24_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O26_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O27_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O28_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O29_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O2_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O30_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O31_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O3_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O4_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O5_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O6_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O7_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O8_out\ : STD_LOGIC;
  signal \Data_Flow_I/Shift_Logic_Module_I/O9_out\ : STD_LOGIC;
  signal \Data_Flow_I/msr_reg_i/p_20_in\ : STD_LOGIC;
  signal \^ex_alu_sel_logic\ : STD_LOGIC;
  signal \^ex_fwd\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal EX_Is_Div_Instr : STD_LOGIC;
  signal EX_MBAR_Stall : STD_LOGIC;
  signal \EX_Op2[10]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op2[11]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op2[12]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op2[13]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op2[14]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op2[15]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op2[16]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[17]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[18]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[19]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[1]_i_6_n_0\ : STD_LOGIC;
  signal \EX_Op2[20]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[21]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[22]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[23]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[24]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[25]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[26]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[29]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[2]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op2[30]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[31]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[3]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op2[4]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op2[5]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op2[6]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op2[7]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op2[8]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op2[9]_i_4_n_0\ : STD_LOGIC;
  signal I0 : STD_LOGIC;
  signal I2 : STD_LOGIC;
  signal I4 : STD_LOGIC;
  signal IF_PC_Write : STD_LOGIC;
  signal \^ifetch\ : STD_LOGIC_VECTOR ( 135 downto 0 );
  signal MEM_Sel_MEM_Res_I_i_2_n_0 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_138 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_141 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_143 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_145 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_146 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_147 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_154 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_155 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_156 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_157 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_158 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_159 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_160 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_161 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_162 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_163 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_164 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_165 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_167 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_168 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_169 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_170 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_171 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_172 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_54 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_92 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_94 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_95 : STD_LOGIC;
  signal PreFetch_Buffer_I1_n_96 : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^sleep_decode\ : STD_LOGIC;
  signal \^trace_wb_jump_hit_reg_0\ : STD_LOGIC;
  signal \Use_MuxCy[10].OF_Piperun_Stage_n_1\ : STD_LOGIC;
  signal \Use_MuxCy[10].OF_Piperun_Stage_n_2\ : STD_LOGIC;
  signal \Use_MuxCy[10].OF_Piperun_Stage_n_3\ : STD_LOGIC;
  signal \Use_MuxCy[10].OF_Piperun_Stage_n_4\ : STD_LOGIC;
  signal \Use_MuxCy[10].OF_Piperun_Stage_n_6\ : STD_LOGIC;
  signal \Use_MuxCy[10].OF_Piperun_Stage_n_8\ : STD_LOGIC;
  signal \Use_MuxCy[10].OF_Piperun_Stage_n_9\ : STD_LOGIC;
  signal \Use_MuxCy[3].OF_Piperun_Stage_n_1\ : STD_LOGIC;
  signal \Use_MuxCy[3].OF_Piperun_Stage_n_5\ : STD_LOGIC;
  signal \Use_MuxCy[3].OF_Piperun_Stage_n_6\ : STD_LOGIC;
  signal \Use_MuxCy[3].OF_Piperun_Stage_n_7\ : STD_LOGIC;
  signal \Use_MuxCy[3].OF_Piperun_Stage_n_8\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_1\ : STD_LOGIC;
  signal \^using_fpga.native_2\ : STD_LOGIC;
  signal \^using_fpga.native_7\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \Using_FPGA.Native_i_3__33_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_3_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_5__1_n_0\ : STD_LOGIC;
  signal \Using_FPGA_2.ex_is_load_instr_Inst_n_3\ : STD_LOGIC;
  signal \Using_FPGA_2.ex_is_lwx_instr_Inst_n_1\ : STD_LOGIC;
  signal \Using_FPGA_2.ex_is_swx_instr_Inst_n_3\ : STD_LOGIC;
  signal \Using_FPGA_2.ex_load_store_instr_Inst_n_3\ : STD_LOGIC;
  signal \Using_FPGA_3.of_clear_MSR_BIP_hold_Inst_n_1\ : STD_LOGIC;
  signal \Using_Fast_Interrupt.Interrupt_Ack[0]_i_1_n_0\ : STD_LOGIC;
  signal \Using_Fast_Interrupt.Interrupt_Ack[1]_i_1_n_0\ : STD_LOGIC;
  signal Write_Strobe_INST_0_i_1_n_0 : STD_LOGIC;
  signal active_wakeup : STD_LOGIC;
  signal active_wakeup0 : STD_LOGIC;
  signal \^dbg_state_i\ : STD_LOGIC;
  signal ex_Enable_Sext_Shift : STD_LOGIC;
  signal \^ex_exception_taken\ : STD_LOGIC;
  signal ex_Instr_Excep_combo : STD_LOGIC;
  signal ex_Interrupt_Brk_combo_i_3_n_0 : STD_LOGIC;
  signal ex_Interrupt_i : STD_LOGIC;
  signal ex_MSR_Load_LWX_SWX_C : STD_LOGIC;
  signal ex_MSR_Set_SW_BIP : STD_LOGIC;
  signal ex_Sel_SPR_BTR : STD_LOGIC;
  signal ex_Sel_SPR_EAR : STD_LOGIC;
  signal ex_Sel_SPR_EDR : STD_LOGIC;
  signal ex_Sel_SPR_ESR : STD_LOGIC;
  signal ex_Sel_SPR_FSR : STD_LOGIC;
  signal ex_Sel_SPR_PVR : STD_LOGIC;
  signal ex_Sel_SPR_SHR : STD_LOGIC;
  signal ex_Sel_SPR_SLR : STD_LOGIC;
  signal ex_Take_Intr_or_Exc : STD_LOGIC;
  signal ex_Write_DCache_decode_cmb : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of ex_Write_DCache_decode_cmb : signal is "true";
  signal ex_Write_ICache_i : STD_LOGIC;
  signal ex_Write_ICache_i_cmb : STD_LOGIC;
  attribute RTL_KEEP of ex_Write_ICache_i_cmb : signal is "true";
  signal ex_atomic_Instruction_Pair : STD_LOGIC;
  signal ex_atomic_Instruction_Pair0 : STD_LOGIC;
  signal ex_branch_with_delayslot : STD_LOGIC;
  signal \^ex_byte_access\ : STD_LOGIC;
  signal ex_delayslot_Instr : STD_LOGIC;
  signal ex_delayslot_Instr0 : STD_LOGIC;
  signal ex_delayslot_Instr2 : STD_LOGIC;
  signal ex_div_unsigned : STD_LOGIC;
  signal \^ex_doublet_access\ : STD_LOGIC;
  signal ex_enable_sext_shift_i0 : STD_LOGIC;
  signal ex_first_cycle : STD_LOGIC;
  signal \ex_gpr_write_addr_reg_n_0_[0]\ : STD_LOGIC;
  signal \ex_gpr_write_addr_reg_n_0_[4]\ : STD_LOGIC;
  signal ex_gpr_write_dbg : STD_LOGIC;
  signal ex_gpr_write_reg_n_0 : STD_LOGIC;
  signal ex_instr : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \ex_instr_reg_n_0_[27]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[30]\ : STD_LOGIC;
  signal ex_is_lwx_instr_s : STD_LOGIC;
  signal ex_is_multi_instr2 : STD_LOGIC;
  signal ex_is_multi_or_load_instr : STD_LOGIC;
  signal ex_is_multi_or_load_instr0 : STD_LOGIC;
  signal ex_is_swx_instr_s : STD_LOGIC;
  signal ex_jump_hold : STD_LOGIC;
  signal ex_jump_nodelay_i_2_n_0 : STD_LOGIC;
  signal ex_jump_nodelay_reg_n_0 : STD_LOGIC;
  signal ex_jump_q : STD_LOGIC;
  signal ex_load_alu_carry_reg_n_0 : STD_LOGIC;
  signal ex_load_shift_carry : STD_LOGIC;
  signal ex_load_store_instr_s : STD_LOGIC;
  signal ex_mbar_decode : STD_LOGIC;
  signal ex_mbar_decode_cmb : STD_LOGIC;
  attribute RTL_KEEP of ex_mbar_decode_cmb : signal is "true";
  signal ex_mbar_is_sleep : STD_LOGIC;
  signal ex_mbar_is_sleep_cmb : STD_LOGIC;
  attribute RTL_KEEP of ex_mbar_is_sleep_cmb : signal is "true";
  signal ex_mbar_sleep : STD_LOGIC;
  signal ex_mbar_sleep0 : STD_LOGIC;
  signal ex_mbar_sleep_i_1_n_0 : STD_LOGIC;
  signal ex_mbar_stall_no_sleep : STD_LOGIC;
  signal ex_mbar_stall_no_sleep_1 : STD_LOGIC;
  signal ex_mbar_stall_no_sleep_10 : STD_LOGIC;
  signal ex_mfsmsr_i : STD_LOGIC;
  signal \^ex_move_to_msr_instr\ : STD_LOGIC;
  signal ex_move_to_MSR_instr29_out : STD_LOGIC;
  signal ex_op1_cmp_eq : STD_LOGIC;
  signal ex_op1_cmp_eq1 : STD_LOGIC;
  signal ex_op1_cmp_eq_n5_out : STD_LOGIC;
  signal ex_opcode : STD_LOGIC_VECTOR ( 0 to 5 );
  signal ex_read_imm_reg : STD_LOGIC;
  signal ex_read_imm_reg_1 : STD_LOGIC;
  signal ex_read_imm_reg_i_1_n_0 : STD_LOGIC;
  signal ex_reservation : STD_LOGIC;
  signal \^ex_reverse_byteorder\ : STD_LOGIC;
  signal ex_sel_alu : STD_LOGIC;
  signal ex_sel_alu_i0 : STD_LOGIC;
  signal ex_set_MSR_IE_instr : STD_LOGIC;
  signal ex_set_bip : STD_LOGIC;
  signal ex_set_bip_reg_n_0 : STD_LOGIC;
  signal ex_shift_op : STD_LOGIC_VECTOR ( 0 to 1 );
  signal ex_sleep_i_i_1_n_0 : STD_LOGIC;
  signal ex_sleep_i_i_2_n_0 : STD_LOGIC;
  signal ex_swap_instr : STD_LOGIC;
  signal \^ex_use_carry\ : STD_LOGIC;
  signal ex_valid : STD_LOGIC;
  signal ex_valid_jump : STD_LOGIC;
  attribute RTL_KEEP of ex_valid_jump : signal is "true";
  signal ex_valid_keep : STD_LOGIC;
  signal \ex_which_branch_reg_n_0_[10]\ : STD_LOGIC;
  signal ex_write_dcache_instr : STD_LOGIC;
  signal force12_out : STD_LOGIC;
  signal force_Val10_out : STD_LOGIC;
  signal if_fetch_for_timing_optimization1 : STD_LOGIC;
  signal if_fetch_in_progress : STD_LOGIC;
  signal if_fetch_without_full_or_jump : STD_LOGIC;
  attribute RTL_KEEP of if_fetch_without_full_or_jump : signal is "true";
  signal if_missed_fetch : STD_LOGIC;
  signal if_pc_incr_carry0 : STD_LOGIC;
  signal if_pc_incr_carry1 : STD_LOGIC;
  signal if_pc_incr_carry3 : STD_LOGIC;
  signal if_pre_buffer_addr : STD_LOGIC_VECTOR ( 1 to 1 );
  signal if_sel_input : STD_LOGIC_VECTOR ( 0 to 0 );
  signal jump_logic_I1_n_10 : STD_LOGIC;
  signal jump_logic_I1_n_11 : STD_LOGIC;
  signal jump_logic_I1_n_12 : STD_LOGIC;
  signal jump_logic_I1_n_13 : STD_LOGIC;
  signal jump_logic_I1_n_14 : STD_LOGIC;
  signal jump_logic_I1_n_7 : STD_LOGIC;
  signal jump_logic_I1_n_8 : STD_LOGIC;
  signal jump_logic_I1_n_9 : STD_LOGIC;
  signal keep_jump_taken_with_ds : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal lopt_13 : STD_LOGIC;
  signal lopt_14 : STD_LOGIC;
  signal lopt_15 : STD_LOGIC;
  signal lopt_16 : STD_LOGIC;
  signal lopt_17 : STD_LOGIC;
  signal lopt_18 : STD_LOGIC;
  signal lopt_19 : STD_LOGIC;
  signal lopt_20 : STD_LOGIC;
  signal lopt_21 : STD_LOGIC;
  signal lopt_22 : STD_LOGIC;
  signal lopt_23 : STD_LOGIC;
  signal lopt_24 : STD_LOGIC;
  signal lopt_25 : STD_LOGIC;
  signal lopt_26 : STD_LOGIC;
  signal lopt_27 : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \^mem_exception_taken\ : STD_LOGIC;
  signal mem_PipeRun_carry_and_n_3 : STD_LOGIC;
  signal mem_PipeRun_carry_and_n_4 : STD_LOGIC;
  signal mem_Write_DCache : STD_LOGIC;
  signal mem_Write_DCache_i_1_n_0 : STD_LOGIC;
  signal mem_byte_access : STD_LOGIC;
  signal \^mem_databus_access\ : STD_LOGIC;
  signal \^mem_databus_write\ : STD_LOGIC;
  signal mem_delayslot_instr : STD_LOGIC;
  signal mem_doublet_access : STD_LOGIC;
  signal mem_exception_from_ex : STD_LOGIC;
  signal mem_exception_kind : STD_LOGIC_VECTOR ( 27 to 31 );
  signal mem_gpr_write : STD_LOGIC;
  signal mem_gpr_write_addr : STD_LOGIC_VECTOR ( 0 to 4 );
  signal mem_gpr_write_dbg : STD_LOGIC;
  signal mem_instr : STD_LOGIC_VECTOR ( 0 to 31 );
  signal mem_is_msr_instr0 : STD_LOGIC;
  signal mem_is_multi_or_load_instr : STD_LOGIC;
  signal mem_is_multi_or_load_instr0 : STD_LOGIC;
  signal mem_jump_hit : STD_LOGIC;
  signal mem_jump_hit0 : STD_LOGIC;
  signal mem_jump_taken : STD_LOGIC;
  signal mem_jump_taken0 : STD_LOGIC;
  signal mem_load_store_access : STD_LOGIC;
  signal mem_load_store_access0 : STD_LOGIC;
  signal mem_read_imm_reg : STD_LOGIC;
  signal mem_read_imm_reg_1 : STD_LOGIC;
  signal mem_rtid_instr : STD_LOGIC;
  signal \^mem_sel_msr\ : STD_LOGIC;
  signal mem_valid_i_2_n_0 : STD_LOGIC;
  signal mem_valid_instr : STD_LOGIC;
  signal mem_wait_on_ready_N : STD_LOGIC;
  signal of_Interrupt : STD_LOGIC;
  signal of_PVR_Select : STD_LOGIC_VECTOR ( 0 to 3 );
  signal of_PipeRun_carry_10 : STD_LOGIC;
  signal of_PipeRun_carry_2 : STD_LOGIC;
  signal of_PipeRun_carry_3 : STD_LOGIC;
  signal of_PipeRun_carry_4 : STD_LOGIC;
  signal of_PipeRun_carry_5 : STD_LOGIC;
  signal of_PipeRun_carry_6 : STD_LOGIC;
  signal of_PipeRun_carry_7 : STD_LOGIC;
  signal of_PipeRun_carry_9 : STD_LOGIC;
  signal of_PipeRun_for_ce : STD_LOGIC;
  attribute DIRECT_ENABLE : boolean;
  attribute DIRECT_ENABLE of of_PipeRun_for_ce : signal is std.standard.true;
  signal of_Sel_SPR_BTR : STD_LOGIC;
  attribute RTL_KEEP of of_Sel_SPR_BTR : signal is "true";
  signal of_Sel_SPR_EAR : STD_LOGIC;
  attribute RTL_KEEP of of_Sel_SPR_EAR : signal is "true";
  signal of_Sel_SPR_EDR : STD_LOGIC;
  attribute RTL_KEEP of of_Sel_SPR_EDR : signal is "true";
  signal of_Sel_SPR_ESR : STD_LOGIC;
  attribute RTL_KEEP of of_Sel_SPR_ESR : signal is "true";
  signal of_Sel_SPR_FSR : STD_LOGIC;
  attribute RTL_KEEP of of_Sel_SPR_FSR : signal is "true";
  signal of_Sel_SPR_MSR3_out : STD_LOGIC;
  signal of_Sel_SPR_PVR : STD_LOGIC;
  attribute RTL_KEEP of of_Sel_SPR_PVR : signal is "true";
  signal of_Sel_SPR_SHR : STD_LOGIC;
  attribute RTL_KEEP of of_Sel_SPR_SHR : signal is "true";
  signal of_Sel_SPR_SLR : STD_LOGIC;
  attribute RTL_KEEP of of_Sel_SPR_SLR : signal is "true";
  signal \^of_take_interrupt\ : STD_LOGIC;
  signal of_Take_Interrupt_hold : STD_LOGIC;
  signal \^of_gpr_op1_rd_addr\ : STD_LOGIC_VECTOR ( 0 to 4 );
  signal \^of_gpr_op3_rd_addr\ : STD_LOGIC_VECTOR ( 0 to 4 );
  signal \^of_imm_data\ : STD_LOGIC_VECTOR ( 0 to 15 );
  signal of_instr : STD_LOGIC_VECTOR ( 0 to 5 );
  signal of_next_ex_valid : STD_LOGIC;
  signal of_pipe_ctrl : STD_LOGIC_VECTOR ( 5 to 10 );
  signal of_predecode : STD_LOGIC_VECTOR ( 1 to 10 );
  signal of_read_ex_write_op1_conflict_part2 : STD_LOGIC;
  signal of_read_ex_write_op2_conflict_part1 : STD_LOGIC;
  signal of_read_ex_write_op2_conflict_part2 : STD_LOGIC;
  signal of_read_ex_write_op3_conflict_part1 : STD_LOGIC;
  signal of_read_ex_write_op3_conflict_part2 : STD_LOGIC;
  signal of_read_imm_reg_ii : STD_LOGIC;
  signal of_read_mem_write_op1_conflict_part1 : STD_LOGIC;
  signal of_read_mem_write_op2_conflict_part1 : STD_LOGIC;
  signal of_read_mem_write_op2_conflict_part2 : STD_LOGIC;
  signal of_read_mem_write_op3_conflict_part2 : STD_LOGIC;
  signal of_set_MSR_IE : STD_LOGIC;
  signal of_set_MSR_IE_hold0 : STD_LOGIC;
  signal of_set_MSR_IE_hold_reg_n_0 : STD_LOGIC;
  signal of_valid : STD_LOGIC;
  signal p_0_in81_in : STD_LOGIC;
  signal p_109_in : STD_LOGIC;
  signal p_112_in : STD_LOGIC;
  signal p_126_in : STD_LOGIC;
  signal p_19_in : STD_LOGIC;
  signal p_82_in : STD_LOGIC;
  signal p_9_in : STD_LOGIC;
  signal reset_bool_for_rst : STD_LOGIC;
  attribute DIRECT_RESET : boolean;
  attribute DIRECT_RESET of reset_bool_for_rst : signal is std.standard.true;
  signal \^restore_wb_msr_to_ex\ : STD_LOGIC;
  signal use_Reg_Neg_DI1_out : STD_LOGIC;
  signal use_Reg_Neg_S3_out : STD_LOGIC;
  signal \^use_reg_neg_s_reg_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^wb_halted\ : STD_LOGIC;
  signal \^wb_byte_access\ : STD_LOGIC;
  signal wb_doublet_access : STD_LOGIC;
  signal wb_gpr_write_dbg0 : STD_LOGIC;
  signal wb_gpr_write_i : STD_LOGIC;
  signal wb_gpr_write_i0 : STD_LOGIC;
  signal \^wb_gpr_write_i_reg_0\ : STD_LOGIC;
  signal wb_ie_rising : STD_LOGIC;
  signal wb_new_esr_ess_rx : STD_LOGIC_VECTOR ( 0 to 4 );
  signal \^wb_piperun\ : STD_LOGIC;
  signal wb_reset : STD_LOGIC;
  signal wb_rtid_instr : STD_LOGIC;
  signal \^wb_sel_spr_shr\ : STD_LOGIC;
  signal wb_valid_reg_n_0 : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \EX_Op2[10]_i_4\ : label is "soft_lutpair48";
  attribute SOFT_HLUTNM of \EX_Op2[11]_i_4\ : label is "soft_lutpair49";
  attribute SOFT_HLUTNM of \EX_Op2[12]_i_4\ : label is "soft_lutpair50";
  attribute SOFT_HLUTNM of \EX_Op2[13]_i_4\ : label is "soft_lutpair51";
  attribute SOFT_HLUTNM of \EX_Op2[14]_i_4\ : label is "soft_lutpair54";
  attribute SOFT_HLUTNM of \EX_Op2[15]_i_4\ : label is "soft_lutpair53";
  attribute SOFT_HLUTNM of \EX_Op2[16]_i_3\ : label is "soft_lutpair54";
  attribute SOFT_HLUTNM of \EX_Op2[17]_i_3\ : label is "soft_lutpair53";
  attribute SOFT_HLUTNM of \EX_Op2[18]_i_3\ : label is "soft_lutpair52";
  attribute SOFT_HLUTNM of \EX_Op2[19]_i_3\ : label is "soft_lutpair51";
  attribute SOFT_HLUTNM of \EX_Op2[1]_i_6\ : label is "soft_lutpair41";
  attribute SOFT_HLUTNM of \EX_Op2[20]_i_3\ : label is "soft_lutpair50";
  attribute SOFT_HLUTNM of \EX_Op2[21]_i_3\ : label is "soft_lutpair49";
  attribute SOFT_HLUTNM of \EX_Op2[22]_i_3\ : label is "soft_lutpair48";
  attribute SOFT_HLUTNM of \EX_Op2[23]_i_3\ : label is "soft_lutpair47";
  attribute SOFT_HLUTNM of \EX_Op2[24]_i_3\ : label is "soft_lutpair46";
  attribute SOFT_HLUTNM of \EX_Op2[25]_i_3\ : label is "soft_lutpair45";
  attribute SOFT_HLUTNM of \EX_Op2[26]_i_3\ : label is "soft_lutpair44";
  attribute SOFT_HLUTNM of \EX_Op2[29]_i_3\ : label is "soft_lutpair43";
  attribute SOFT_HLUTNM of \EX_Op2[2]_i_4\ : label is "soft_lutpair42";
  attribute SOFT_HLUTNM of \EX_Op2[30]_i_3\ : label is "soft_lutpair42";
  attribute SOFT_HLUTNM of \EX_Op2[31]_i_3\ : label is "soft_lutpair41";
  attribute SOFT_HLUTNM of \EX_Op2[3]_i_4\ : label is "soft_lutpair43";
  attribute SOFT_HLUTNM of \EX_Op2[4]_i_4\ : label is "soft_lutpair45";
  attribute SOFT_HLUTNM of \EX_Op2[5]_i_4\ : label is "soft_lutpair44";
  attribute SOFT_HLUTNM of \EX_Op2[6]_i_4\ : label is "soft_lutpair52";
  attribute SOFT_HLUTNM of \EX_Op2[8]_i_4\ : label is "soft_lutpair46";
  attribute SOFT_HLUTNM of \EX_Op2[9]_i_4\ : label is "soft_lutpair47";
  attribute SOFT_HLUTNM of M_AXI_DP_ARVALID_i_i_2 : label is "soft_lutpair31";
  attribute SOFT_HLUTNM of M_AXI_DP_AWVALID_i_i_2 : label is "soft_lutpair31";
  attribute SOFT_HLUTNM of \Performace_Debug_Control.dbg_hit[1]_i_1\ : label is "soft_lutpair39";
  attribute SOFT_HLUTNM of \Performace_Debug_Control.dbg_stop_i_i_3\ : label is "soft_lutpair39";
  attribute SOFT_HLUTNM of Sleep_INST_0 : label is "soft_lutpair33";
  attribute SOFT_HLUTNM of Trace_Valid_Instr_INST_0 : label is "soft_lutpair36";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_11\ : label is "soft_lutpair40";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_15\ : label is "soft_lutpair36";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__177\ : label is "soft_lutpair37";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_3\ : label is "soft_lutpair34";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_3__8\ : label is "soft_lutpair35";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_5\ : label is "soft_lutpair34";
  attribute SOFT_HLUTNM of \Using_LWX_SWX_instr.ex_reservation_i_4\ : label is "soft_lutpair38";
  attribute SOFT_HLUTNM of dbg_wakeup_i_i_1 : label is "soft_lutpair33";
  attribute SOFT_HLUTNM of ex_mbar_sleep_i_2 : label is "soft_lutpair38";
  attribute SOFT_HLUTNM of ex_read_imm_reg_i_1 : label is "soft_lutpair37";
  attribute KEEP : string;
  attribute KEEP of ex_valid_jump_reg : label is "yes";
  attribute equivalent_register_removal : string;
  attribute equivalent_register_removal of ex_valid_jump_reg : label is "no";
  attribute SOFT_HLUTNM of mem_Write_DCache_i_1 : label is "soft_lutpair32";
  attribute SOFT_HLUTNM of mem_valid_i_2 : label is "soft_lutpair40";
  attribute SOFT_HLUTNM of sign_16_23_inferred_i_1 : label is "soft_lutpair35";
  attribute SOFT_HLUTNM of wb_exception_i_i_1 : label is "soft_lutpair32";
begin
  D(31 downto 0) <= \^d\(31 downto 0);
  EX_ALU_Sel_Logic <= \^ex_alu_sel_logic\;
  EX_Fwd(0 to 31) <= \^ex_fwd\(0 to 31);
  IFetch(135 downto 0) <= \^ifetch\(135 downto 0);
  Q(1 downto 0) <= \^q\(1 downto 0);
  Sleep_Decode <= \^sleep_decode\;
  Trace_WB_Jump_Hit_reg_0 <= \^trace_wb_jump_hit_reg_0\;
  \Using_FPGA.Native\(1 downto 0) <= \^using_fpga.native\(1 downto 0);
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
  \Using_FPGA.Native_7\(1 downto 0) <= \^using_fpga.native_7\(1 downto 0);
  dbg_state_i <= \^dbg_state_i\;
  ex_Exception_Taken <= \^ex_exception_taken\;
  ex_byte_access <= \^ex_byte_access\;
  ex_doublet_access <= \^ex_doublet_access\;
  ex_move_to_MSR_instr <= \^ex_move_to_msr_instr\;
  ex_reverse_byteorder <= \^ex_reverse_byteorder\;
  ex_use_carry <= \^ex_use_carry\;
  lopt_10 <= lopt_4;
  lopt_11 <= lopt_5;
  lopt_9 <= lopt_3;
  mem_Exception_Taken <= \^mem_exception_taken\;
  mem_databus_access <= \^mem_databus_access\;
  mem_databus_write <= \^mem_databus_write\;
  mem_sel_msr <= \^mem_sel_msr\;
  of_Take_Interrupt <= \^of_take_interrupt\;
  of_gpr_op1_rd_addr(0 to 4) <= \^of_gpr_op1_rd_addr\(0 to 4);
  of_gpr_op3_rd_addr(0 to 4) <= \^of_gpr_op3_rd_addr\(0 to 4);
  of_imm_data(0 to 15) <= \^of_imm_data\(0 to 15);
  reset_bool_for_rst <= \out\(0);
  restore_wb_msr_to_ex <= \^restore_wb_msr_to_ex\;
  use_Reg_Neg_S_reg <= of_PipeRun_for_ce;
  use_Reg_Neg_S_reg_0(0) <= \^use_reg_neg_s_reg_0\(0);
  wb_Halted <= \^wb_halted\;
  wb_byte_access <= \^wb_byte_access\;
  wb_gpr_write_i_reg_0 <= \^wb_gpr_write_i_reg_0\;
  wb_piperun <= \^wb_piperun\;
  wb_sel_spr_shr <= \^wb_sel_spr_shr\;
Dbg_Clean_Stop_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_160,
      Q => dbg_clean_stop,
      R => reset_bool_for_rst
    );
\EX_ALU_Op_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_94,
      Q => \^q\(1),
      R => reset_bool_for_rst
    );
\EX_ALU_Op_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_95,
      Q => \^q\(0),
      R => reset_bool_for_rst
    );
EX_CMP_Op_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_161,
      Q => ex_cmp_op,
      R => reset_bool_for_rst
    );
\EX_Op2[10]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(21),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[10]_i_4_n_0\
    );
\EX_Op2[11]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(20),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[11]_i_4_n_0\
    );
\EX_Op2[12]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(19),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[12]_i_4_n_0\
    );
\EX_Op2[13]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(18),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[13]_i_4_n_0\
    );
\EX_Op2[14]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(17),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[14]_i_4_n_0\
    );
\EX_Op2[15]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(16),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[15]_i_4_n_0\
    );
\EX_Op2[16]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(15),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[16]_i_3_n_0\
    );
\EX_Op2[17]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(14),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[17]_i_3_n_0\
    );
\EX_Op2[18]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(13),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[18]_i_3_n_0\
    );
\EX_Op2[19]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(12),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[19]_i_3_n_0\
    );
\EX_Op2[1]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(30),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[1]_i_6_n_0\
    );
\EX_Op2[20]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(11),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[20]_i_3_n_0\
    );
\EX_Op2[21]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(10),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[21]_i_3_n_0\
    );
\EX_Op2[22]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(9),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[22]_i_3_n_0\
    );
\EX_Op2[23]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(8),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[23]_i_3_n_0\
    );
\EX_Op2[24]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(7),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[24]_i_3_n_0\
    );
\EX_Op2[25]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(6),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[25]_i_3_n_0\
    );
\EX_Op2[26]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(5),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[26]_i_3_n_0\
    );
\EX_Op2[29]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(2),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[29]_i_3_n_0\
    );
\EX_Op2[2]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(29),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[2]_i_4_n_0\
    );
\EX_Op2[30]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(1),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[30]_i_3_n_0\
    );
\EX_Op2[31]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(0),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[31]_i_3_n_0\
    );
\EX_Op2[3]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(28),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[3]_i_4_n_0\
    );
\EX_Op2[4]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(27),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[4]_i_4_n_0\
    );
\EX_Op2[5]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(26),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[5]_i_4_n_0\
    );
\EX_Op2[6]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(25),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[6]_i_4_n_0\
    );
\EX_Op2[7]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(24),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[7]_i_4_n_0\
    );
\EX_Op2[8]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(23),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[8]_i_4_n_0\
    );
\EX_Op2[9]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \interrupt_address_d1_reg[0]\(22),
      I1 => \^of_take_interrupt\,
      O => \EX_Op2[9]_i_4_n_0\
    );
EX_SWAP_BYTE_Instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_143,
      Q => ex_swap_byte_instr,
      R => reset_bool_for_rst
    );
EX_SWAP_Instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_138,
      Q => ex_swap_instr,
      R => reset_bool_for_rst
    );
\EX_Sext_Op_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_154,
      Q => \^using_fpga.native_7\(1),
      R => reset_bool_for_rst
    );
\EX_Sext_Op_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_155,
      Q => \^using_fpga.native_7\(0),
      R => reset_bool_for_rst
    );
\EX_Shift_Op_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(9),
      Q => ex_shift_op(0),
      R => reset_bool_for_rst
    );
\EX_Shift_Op_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(10),
      Q => ex_shift_op(1),
      R => reset_bool_for_rst
    );
EX_Unsigned_Op_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_162,
      Q => ex_unsigned_op,
      R => reset_bool_for_rst
    );
EX_Use_Carry_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_163,
      Q => \^ex_use_carry\,
      R => reset_bool_for_rst
    );
IFetch_INST_0_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000011110001"
    )
        port map (
      I0 => ex_mbar_sleep,
      I1 => ex_mbar_stall_no_sleep,
      I2 => \^dbg_state_i\,
      I3 => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      I4 => Dbg_Disable,
      I5 => reset_bool_for_rst,
      O => if_fetch_without_full_or_jump
    );
IFetch_INST_0_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"08080800"
    )
        port map (
      I0 => ex_mbar_decode,
      I1 => \^using_fpga.native_2\,
      I2 => ex_jump_hold,
      I3 => ex_mbar_stall_no_sleep_1,
      I4 => ex_first_cycle,
      O => ex_mbar_stall_no_sleep
    );
MEM_DataBus_Access_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA_2.ex_is_swx_instr_Inst_n_3\,
      Q => \^mem_databus_access\,
      R => '0'
    );
\MEM_DataBus_Addr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(45),
      Q => \^ifetch\(95),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(35),
      Q => \^ifetch\(85),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(34),
      Q => \^ifetch\(84),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(33),
      Q => \^ifetch\(83),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(32),
      Q => \^ifetch\(82),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(31),
      Q => \^ifetch\(81),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(30),
      Q => \^ifetch\(80),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(29),
      Q => \^ifetch\(79),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(28),
      Q => \^ifetch\(78),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(27),
      Q => \^ifetch\(77),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(26),
      Q => \^ifetch\(76),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(44),
      Q => \^ifetch\(94),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(25),
      Q => \^ifetch\(75),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(24),
      Q => \^ifetch\(74),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(23),
      Q => \^ifetch\(73),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(22),
      Q => \^ifetch\(72),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(21),
      Q => \^ifetch\(71),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(20),
      Q => \^ifetch\(70),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(19),
      Q => \^ifetch\(69),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(18),
      Q => \^ifetch\(68),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(17),
      Q => \^ifetch\(67),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(16),
      Q => \^ifetch\(66),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(43),
      Q => \^ifetch\(93),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[30]\(1),
      Q => \^ifetch\(65),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[30]\(0),
      Q => \^ifetch\(64),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(42),
      Q => \^ifetch\(92),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(41),
      Q => \^ifetch\(91),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(40),
      Q => \^ifetch\(90),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(39),
      Q => \^ifetch\(89),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(38),
      Q => \^ifetch\(88),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(37),
      Q => \^ifetch\(87),
      R => reset_bool_for_rst
    );
\MEM_DataBus_Addr_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \EX_Op2_reg[0]_0\(36),
      Q => \^ifetch\(86),
      R => reset_bool_for_rst
    );
MEM_DataBus_Read_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \^ifetch\(101),
      Q => mem_databus_read,
      R => reset_bool_for_rst
    );
MEM_DataBus_Write_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \^ifetch\(100),
      Q => \^mem_databus_write\,
      R => reset_bool_for_rst
    );
MEM_Sel_MEM_Res_I_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => ex_Sel_SPR_EDR,
      I1 => ex_Sel_SPR_ESR,
      I2 => ex_Sel_SPR_BTR,
      I3 => ex_Sel_SPR_FSR,
      O => MEM_Sel_MEM_Res_I_i_2_n_0
    );
MEM_Sel_MEM_Res_I_reg: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \Using_FPGA_2.ex_is_load_instr_Inst_n_3\,
      Q => MEM_Sel_MEM_Res,
      S => reset_bool_for_rst
    );
M_AXI_DP_ARVALID_i_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0002"
    )
        port map (
      I0 => \^mem_databus_access\,
      I1 => DReady,
      I2 => DWait,
      I3 => active_access_d1,
      O => M_AXI_DP_AWVALID_i1
    );
M_AXI_DP_AWVALID_i_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"01000000"
    )
        port map (
      I0 => active_access_d1,
      I1 => DWait,
      I2 => DReady,
      I3 => \^mem_databus_access\,
      I4 => \^mem_databus_write\,
      O => M_AXI_DP_AWVALID_i
    );
PC_Module_I: entity work.system_microblaze_0_0_PC_Module_gti
     port map (
      CI => if_pc_incr_carry3,
      Clk => Clk,
      D(31 downto 0) => \^d\(31 downto 0),
      E(0) => \Use_MuxCy[3].OF_Piperun_Stage_n_1\,
      \EX_Op2_reg[0]\(31 downto 2) => \EX_Op2_reg[0]_0\(45 downto 16),
      \EX_Op2_reg[0]\(1 downto 0) => \EX_Op2_reg[30]\(1 downto 0),
      \Instr_Addr[0]\(31 downto 0) => \^ifetch\(133 downto 102),
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \^using_fpga.native_0\,
      \Using_FPGA.Native\(31 downto 0) => \Using_FPGA.Native_13\(31 downto 0),
      \Using_FPGA.Native_0\ => of_PipeRun_for_ce,
      \Using_FPGA.Native_1\ => \^using_fpga.native\(0),
      \Using_FPGA.Native_2\ => \^using_fpga.native\(1),
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      if_fetch_in_progress_reg(0) => IF_PC_Write,
      if_pre_buffer_addr(0) => if_pre_buffer_addr(1),
      if_sel_input(0) => if_sel_input(0),
      lopt => \^lopt_3\,
      lopt_1 => \^lopt_4\,
      lopt_2 => \^lopt_5\,
      lopt_3 => lopt_6,
      lopt_4 => \Performace_Debug_Control.dbg_stop_if_delay_i_reg\,
      lopt_5 => lopt_7,
      lopt_6 => lopt_8,
      lopt_7 => if_fetch_for_timing_optimization1,
      \out\(0) => reset_bool_for_rst
    );
\Performace_Debug_Control.dbg_hit[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \^wb_halted\,
      I1 => reset_bool_for_rst,
      I2 => Dbg_Disable,
      O => \Performace_Debug_Control.dbg_hit_reg[15]\
    );
\Performace_Debug_Control.dbg_stop_i_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \^wb_halted\,
      I1 => reset_bool_for_rst,
      I2 => Dbg_Disable,
      O => dbg_stop_i
    );
PreFetch_Buffer_I1: entity work.system_microblaze_0_0_PreFetch_Buffer_gti
     port map (
      Clk => Clk,
      D(4) => \^of_gpr_op3_rd_addr\(0),
      D(3) => \^of_gpr_op3_rd_addr\(1),
      D(2) => \^of_gpr_op3_rd_addr\(2),
      D(1) => \^of_gpr_op3_rd_addr\(3),
      D(0) => \^of_gpr_op3_rd_addr\(4),
      D122_out => D122_out,
      Dbg_Clean_Stop_reg => PreFetch_Buffer_I1_n_160,
      Dbg_Disable => Dbg_Disable,
      E(0) => E(0),
      \EX_ALU_Op_reg[0]\(1) => PreFetch_Buffer_I1_n_94,
      \EX_ALU_Op_reg[0]\(0) => PreFetch_Buffer_I1_n_95,
      \EX_Branch_CMP_Op1_reg[0]\(15 downto 0) => \EX_Branch_CMP_Op1_reg[0]\(15 downto 0),
      \EX_Branch_CMP_Op1_reg[15]\ => of_op1_sel(0),
      \EX_Branch_CMP_Op1_reg[15]_0\ => of_op1_sel(1),
      EX_CMP_Op_reg => PreFetch_Buffer_I1_n_161,
      EX_Fwd(0 to 31) => \^ex_fwd\(0 to 31),
      EX_Is_Div_Instr => EX_Is_Div_Instr,
      \EX_Op1_reg[10]\ => \EX_Op1_reg[10]\,
      \EX_Op1_reg[11]\ => \EX_Op1_reg[11]\,
      \EX_Op1_reg[12]\ => \EX_Op1_reg[12]\,
      \EX_Op1_reg[13]\ => \EX_Op1_reg[13]\,
      \EX_Op1_reg[14]\ => \EX_Op1_reg[14]\,
      \EX_Op1_reg[15]\ => \EX_Op1_reg[15]\,
      \EX_Op1_reg[16]\ => \EX_Op1_reg[16]\,
      \EX_Op1_reg[17]\ => \EX_Op1_reg[17]\,
      \EX_Op1_reg[18]\ => \EX_Op1_reg[18]\,
      \EX_Op1_reg[19]\ => \EX_Op1_reg[19]\,
      \EX_Op1_reg[1]\ => \EX_Op1_reg[1]\,
      \EX_Op1_reg[20]\ => \EX_Op1_reg[20]\,
      \EX_Op1_reg[21]\ => \EX_Op1_reg[21]\,
      \EX_Op1_reg[22]\ => \EX_Op1_reg[22]\,
      \EX_Op1_reg[23]\ => \EX_Op1_reg[23]\,
      \EX_Op1_reg[24]\ => \EX_Op1_reg[24]\,
      \EX_Op1_reg[25]\ => \EX_Op1_reg[25]\,
      \EX_Op1_reg[26]\ => \EX_Op1_reg[26]\,
      \EX_Op1_reg[27]\ => \EX_Op1_reg[27]\,
      \EX_Op1_reg[28]\ => \EX_Op1_reg[28]\,
      \EX_Op1_reg[29]\ => \EX_Op1_reg[29]\,
      \EX_Op1_reg[2]\ => \EX_Op1_reg[2]\,
      \EX_Op1_reg[30]\ => \EX_Op1_reg[30]\,
      \EX_Op1_reg[31]\ => \EX_Op1_reg[31]\,
      \EX_Op1_reg[3]\ => \EX_Op1_reg[3]\,
      \EX_Op1_reg[4]\ => \EX_Op1_reg[4]\,
      \EX_Op1_reg[5]\ => \EX_Op1_reg[5]\,
      \EX_Op1_reg[6]\ => \EX_Op1_reg[6]\,
      \EX_Op1_reg[7]\ => \EX_Op1_reg[7]\,
      \EX_Op1_reg[8]\ => \EX_Op1_reg[8]\,
      \EX_Op1_reg[9]\ => \EX_Op1_reg[9]\,
      \EX_Op2_reg[0]\(31 downto 0) => \EX_Op2_reg[0]\(31 downto 0),
      \EX_Op3_reg[0]\(15 downto 0) => \EX_Op3_reg[0]\(15 downto 0),
      \EX_Op3_reg[15]\ => of_op3_sel(0),
      \EX_Op3_reg[15]_0\ => of_op3_sel(1),
      EX_SWAP_BYTE_Instr_reg => PreFetch_Buffer_I1_n_143,
      EX_SWAP_Instr_reg => PreFetch_Buffer_I1_n_138,
      \EX_Sext_Op_reg[0]\(1) => PreFetch_Buffer_I1_n_154,
      \EX_Sext_Op_reg[0]\(0) => PreFetch_Buffer_I1_n_155,
      EX_Unsigned_Op_reg => PreFetch_Buffer_I1_n_162,
      EX_Use_Carry_reg => PreFetch_Buffer_I1_n_163,
      GPR_Op1(15 downto 0) => GPR_Op1(15 downto 0),
      GPR_Op2(0 to 31) => GPR_Op2(0 to 31),
      GPR_Op3(15 downto 0) => GPR_Op3(15 downto 0),
      I041_out => I041_out,
      I1 => I1,
      I139_out => I139_out,
      IB_Ready => IB_Ready,
      IFetch(0) => \^ifetch\(135),
      IReady => IReady,
      I_AS => \^ifetch\(134),
      LOCKSTEP_Master_Out(0) => LOCKSTEP_Master_Out(1),
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      \Performace_Debug_Control.ex_brki_hit_reg\ => \Performace_Debug_Control.ex_brki_hit_reg\,
      Q(4) => mem_gpr_write_addr(0),
      Q(3) => mem_gpr_write_addr(1),
      Q(2) => mem_gpr_write_addr(2),
      Q(1) => mem_gpr_write_addr(3),
      Q(0) => mem_gpr_write_addr(4),
      \Using_FPGA.Native\ => \^using_fpga.native\(0),
      \Using_FPGA.Native_0\ => \^using_fpga.native\(1),
      \Using_FPGA.Native_1\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_10\(29 downto 0) => \Using_FPGA.Native_15\(29 downto 0),
      \Using_FPGA.Native_11\(2 downto 0) => \Using_FPGA.Native_16\(2 downto 0),
      \Using_FPGA.Native_12\(0) => \Using_FPGA.Native_17\(0),
      \Using_FPGA.Native_13\(31 downto 0) => \^d\(31 downto 0),
      \Using_FPGA.Native_2\ => PreFetch_Buffer_I1_n_141,
      \Using_FPGA.Native_3\ => PreFetch_Buffer_I1_n_146,
      \Using_FPGA.Native_4\ => PreFetch_Buffer_I1_n_147,
      \Using_FPGA.Native_5\ => PreFetch_Buffer_I1_n_165,
      \Using_FPGA.Native_6\ => PreFetch_Buffer_I1_n_170,
      \Using_FPGA.Native_7\ => PreFetch_Buffer_I1_n_171,
      \Using_FPGA.Native_8\(0) => \Using_FPGA.Native_12\(0),
      \Using_FPGA.Native_9\ => of_PipeRun_for_ce,
      WB_Byte_Access_reg(15 downto 0) => \EX_Op2_reg[0]_0\(15 downto 0),
      WB_Doublet_Access_reg => \^ifetch\(9),
      WB_Doublet_Access_reg_0 => \^ifetch\(10),
      WB_Doublet_Access_reg_1 => \^ifetch\(11),
      WB_Doublet_Access_reg_10 => \^ifetch\(20),
      WB_Doublet_Access_reg_11 => \^ifetch\(21),
      WB_Doublet_Access_reg_12 => \^ifetch\(22),
      WB_Doublet_Access_reg_13 => \^ifetch\(23),
      WB_Doublet_Access_reg_14 => \^ifetch\(24),
      WB_Doublet_Access_reg_2 => \^ifetch\(12),
      WB_Doublet_Access_reg_3 => \^ifetch\(13),
      WB_Doublet_Access_reg_4 => \^ifetch\(14),
      WB_Doublet_Access_reg_5 => \^ifetch\(15),
      WB_Doublet_Access_reg_6 => \^ifetch\(16),
      WB_Doublet_Access_reg_7 => \^ifetch\(17),
      WB_Doublet_Access_reg_8 => \^ifetch\(18),
      WB_Doublet_Access_reg_9 => \^ifetch\(19),
      \control_reg_reg[8]\(0) => \control_reg_reg[8]\(0),
      ex_MSR(2 downto 0) => ex_MSR(2 downto 0),
      ex_alu_sel_logic_i_reg => PreFetch_Buffer_I1_n_172,
      ex_atomic_Instruction_Pair0 => ex_atomic_Instruction_Pair0,
      ex_branch_with_delayslot => ex_branch_with_delayslot,
      ex_branch_with_delayslot_reg => PreFetch_Buffer_I1_n_92,
      ex_branch_with_delayslot_reg_0 => \^using_fpga.native_1\,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      ex_enable_alu_i_reg => PreFetch_Buffer_I1_n_96,
      ex_enable_sext_shift_i0 => ex_enable_sext_shift_i0,
      \ex_gpr_write_addr_reg[0]\(4) => \ex_gpr_write_addr_reg_n_0_[0]\,
      \ex_gpr_write_addr_reg[0]\(3) => I2,
      \ex_gpr_write_addr_reg[0]\(2) => I4,
      \ex_gpr_write_addr_reg[0]\(1) => I0,
      \ex_gpr_write_addr_reg[0]\(0) => \ex_gpr_write_addr_reg_n_0_[4]\,
      ex_gpr_write_dbg => ex_gpr_write_dbg,
      ex_gpr_write_dbg_reg => PreFetch_Buffer_I1_n_159,
      ex_gpr_write_reg => PreFetch_Buffer_I1_n_157,
      ex_gpr_write_reg_0 => ex_gpr_write_reg_n_0,
      \ex_instr_reg[11]\(20) => \^of_gpr_op1_rd_addr\(0),
      \ex_instr_reg[11]\(19) => \^of_gpr_op1_rd_addr\(1),
      \ex_instr_reg[11]\(18) => \^of_gpr_op1_rd_addr\(2),
      \ex_instr_reg[11]\(17) => \^of_gpr_op1_rd_addr\(3),
      \ex_instr_reg[11]\(16) => \^of_gpr_op1_rd_addr\(4),
      \ex_instr_reg[11]\(15) => \^of_imm_data\(0),
      \ex_instr_reg[11]\(14) => \^of_imm_data\(1),
      \ex_instr_reg[11]\(13) => \^of_imm_data\(2),
      \ex_instr_reg[11]\(12) => \^of_imm_data\(3),
      \ex_instr_reg[11]\(11) => \^of_imm_data\(4),
      \ex_instr_reg[11]\(10) => \^of_imm_data\(5),
      \ex_instr_reg[11]\(9) => \^of_imm_data\(6),
      \ex_instr_reg[11]\(8) => \^of_imm_data\(7),
      \ex_instr_reg[11]\(7) => \^of_imm_data\(8),
      \ex_instr_reg[11]\(6) => \^of_imm_data\(9),
      \ex_instr_reg[11]\(5) => \^of_imm_data\(10),
      \ex_instr_reg[11]\(4) => \^of_imm_data\(11),
      \ex_instr_reg[11]\(3) => \^of_imm_data\(12),
      \ex_instr_reg[11]\(2) => \^of_imm_data\(13),
      \ex_instr_reg[11]\(1) => \^of_imm_data\(14),
      \ex_instr_reg[11]\(0) => \^of_imm_data\(15),
      ex_is_div_instr_I_reg => PreFetch_Buffer_I1_n_158,
      ex_is_multi_instr2_reg => PreFetch_Buffer_I1_n_145,
      ex_is_multi_or_load_instr => ex_is_multi_or_load_instr,
      ex_is_multi_or_load_instr0 => ex_is_multi_or_load_instr0,
      ex_jump_nodelay_reg => ex_jump_nodelay_reg_n_0,
      ex_jump_q => ex_jump_q,
      ex_load_alu_carry_reg => PreFetch_Buffer_I1_n_164,
      ex_load_shift_carry_reg => PreFetch_Buffer_I1_n_168,
      ex_mbar_decode => ex_mbar_decode,
      ex_mbar_decode_cmb => ex_mbar_decode_cmb,
      ex_mbar_is_sleep => ex_mbar_is_sleep,
      ex_mbar_is_sleep_cmb => ex_mbar_is_sleep_cmb,
      ex_move_to_MSR_instr29_out => ex_move_to_MSR_instr29_out,
      ex_op1_cmp_eq => ex_op1_cmp_eq,
      ex_op1_cmp_eq1 => ex_op1_cmp_eq1,
      ex_op1_cmp_eq_n5_out => ex_op1_cmp_eq_n5_out,
      ex_sel_alu_i0 => ex_sel_alu_i0,
      ex_set_bip => ex_set_bip,
      ex_valid => ex_valid,
      force12_out => force12_out,
      force_Val10_out => force_Val10_out,
      force_Val2_N_reg => PreFetch_Buffer_I1_n_54,
      if_debug_ready_i_reg => if_debug_ready_i_reg,
      if_fetch_for_timing_optimization1 => if_fetch_for_timing_optimization1,
      if_fetch_in_progress => if_fetch_in_progress,
      if_fetch_in_progress_reg => PreFetch_Buffer_I1_n_156,
      if_missed_fetch => if_missed_fetch,
      if_pre_buffer_addr(0) => if_pre_buffer_addr(1),
      \imm_reg_reg[0]\(15 downto 0) => \imm_reg_reg[0]\(15 downto 0),
      \in\(32 downto 0) => \in\(32 downto 0),
      in00 => if_fetch_without_full_or_jump,
      \interrupt_address_d1_reg[0]\(2) => \interrupt_address_d1_reg[0]\(31),
      \interrupt_address_d1_reg[0]\(1 downto 0) => \interrupt_address_d1_reg[0]\(4 downto 3),
      \interrupt_address_d1_reg[10]\ => \EX_Op2[10]_i_4_n_0\,
      \interrupt_address_d1_reg[11]\ => \EX_Op2[11]_i_4_n_0\,
      \interrupt_address_d1_reg[12]\ => \EX_Op2[12]_i_4_n_0\,
      \interrupt_address_d1_reg[13]\ => \EX_Op2[13]_i_4_n_0\,
      \interrupt_address_d1_reg[14]\ => \EX_Op2[14]_i_4_n_0\,
      \interrupt_address_d1_reg[15]\ => \EX_Op2[15]_i_4_n_0\,
      \interrupt_address_d1_reg[16]\ => \EX_Op2[16]_i_3_n_0\,
      \interrupt_address_d1_reg[17]\ => \EX_Op2[17]_i_3_n_0\,
      \interrupt_address_d1_reg[18]\ => \EX_Op2[18]_i_3_n_0\,
      \interrupt_address_d1_reg[19]\ => \EX_Op2[19]_i_3_n_0\,
      \interrupt_address_d1_reg[1]\ => \EX_Op2[1]_i_6_n_0\,
      \interrupt_address_d1_reg[20]\ => \EX_Op2[20]_i_3_n_0\,
      \interrupt_address_d1_reg[21]\ => \EX_Op2[21]_i_3_n_0\,
      \interrupt_address_d1_reg[22]\ => \EX_Op2[22]_i_3_n_0\,
      \interrupt_address_d1_reg[23]\ => \EX_Op2[23]_i_3_n_0\,
      \interrupt_address_d1_reg[24]\ => \EX_Op2[24]_i_3_n_0\,
      \interrupt_address_d1_reg[25]\ => \EX_Op2[25]_i_3_n_0\,
      \interrupt_address_d1_reg[26]\ => \EX_Op2[26]_i_3_n_0\,
      \interrupt_address_d1_reg[29]\ => \EX_Op2[29]_i_3_n_0\,
      \interrupt_address_d1_reg[2]\ => \EX_Op2[2]_i_4_n_0\,
      \interrupt_address_d1_reg[30]\ => \EX_Op2[30]_i_3_n_0\,
      \interrupt_address_d1_reg[31]\ => \EX_Op2[31]_i_3_n_0\,
      \interrupt_address_d1_reg[3]\ => \EX_Op2[3]_i_4_n_0\,
      \interrupt_address_d1_reg[4]\ => \EX_Op2[4]_i_4_n_0\,
      \interrupt_address_d1_reg[5]\ => \EX_Op2[5]_i_4_n_0\,
      \interrupt_address_d1_reg[6]\ => \EX_Op2[6]_i_4_n_0\,
      \interrupt_address_d1_reg[7]\ => \EX_Op2[7]_i_4_n_0\,
      \interrupt_address_d1_reg[8]\ => \EX_Op2[8]_i_4_n_0\,
      \interrupt_address_d1_reg[9]\ => \EX_Op2[9]_i_4_n_0\,
      mem_gpr_write => mem_gpr_write,
      mem_is_multi_or_load_instr => mem_is_multi_or_load_instr,
      mem_jump_taken_reg => PreFetch_Buffer_I1_n_169,
      mem_sel_msr => \^mem_sel_msr\,
      mem_valid_instr => mem_valid_instr,
      of_Sel_SPR_MSR3_out => of_Sel_SPR_MSR3_out,
      of_Take_Interrupt_hold_reg => \^of_take_interrupt\,
      of_instr(5) => of_instr(0),
      of_instr(4) => of_instr(1),
      of_instr(3) => of_instr(2),
      of_instr(2) => of_instr(3),
      of_instr(1) => of_instr(4),
      of_instr(0) => of_instr(5),
      of_op1_sel_spr => of_op1_sel_spr,
      of_pipe_ctrl(2) => of_pipe_ctrl(7),
      of_pipe_ctrl(1) => of_pipe_ctrl(8),
      of_pipe_ctrl(0) => of_pipe_ctrl(9),
      of_predecode(9) => of_predecode(1),
      of_predecode(8) => of_predecode(2),
      of_predecode(7) => of_predecode(3),
      of_predecode(6) => of_predecode(4),
      of_predecode(5) => of_predecode(5),
      of_predecode(4) => of_predecode(6),
      of_predecode(3) => of_predecode(7),
      of_predecode(2) => of_predecode(8),
      of_predecode(1) => of_predecode(9),
      of_predecode(0) => of_predecode(10),
      of_read_ex_write_op2_conflict_part1 => of_read_ex_write_op2_conflict_part1,
      of_read_ex_write_op2_conflict_part2 => of_read_ex_write_op2_conflict_part2,
      of_read_ex_write_op3_conflict_part1 => of_read_ex_write_op3_conflict_part1,
      of_read_ex_write_op3_conflict_part2 => of_read_ex_write_op3_conflict_part2,
      of_read_imm_reg_ii => of_read_imm_reg_ii,
      of_read_imm_reg_ii_reg => ex_read_imm_reg_i_1_n_0,
      of_read_mem_write_op2_conflict_part1 => of_read_mem_write_op2_conflict_part1,
      of_read_mem_write_op2_conflict_part2 => of_read_mem_write_op2_conflict_part2,
      of_valid => of_valid,
      \out\(0) => reset_bool_for_rst,
      p_0_in44_in => if_fetch_without_full_or_jump,
      p_109_in => p_109_in,
      p_112_in => p_112_in,
      p_19_in => p_19_in,
      p_9_in => p_9_in,
      \status_reg_reg[25]\(0) => if_sel_input(0),
      use_Reg_Neg_DI1_out => use_Reg_Neg_DI1_out,
      use_Reg_Neg_S3_out => use_Reg_Neg_S3_out,
      use_Reg_Neg_S_reg => \^use_reg_neg_s_reg_0\(0),
      use_Reg_Neg_S_reg_0 => PreFetch_Buffer_I1_n_167,
      wb_MSR_cmb(0) => wb_MSR_cmb(0),
      wb_exception_i_reg => \^wb_gpr_write_i_reg_0\,
      \wb_exception_kind_i_reg[27]\ => jump_logic_I1_n_12,
      \wb_exception_kind_i_reg[27]_0\ => \^wb_halted\,
      \wb_gpr_write_addr_reg[0]\(4) => wb_new_esr_ess_rx(0),
      \wb_gpr_write_addr_reg[0]\(3) => wb_new_esr_ess_rx(1),
      \wb_gpr_write_addr_reg[0]\(2) => wb_new_esr_ess_rx(2),
      \wb_gpr_write_addr_reg[0]\(1) => wb_new_esr_ess_rx(3),
      \wb_gpr_write_addr_reg[0]\(0) => wb_new_esr_ess_rx(4),
      wb_gpr_write_i => wb_gpr_write_i,
      wb_reset => wb_reset,
      wb_valid_reg => wb_valid_reg_n_0
    );
Sleep_INST_0: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => \^sleep_decode\,
      I1 => Dbg_Disable,
      I2 => sleep_reset_mode_reg,
      O => Sleep
    );
Trace_Exception_Taken_INST_0: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAA2AAAAAAAA"
    )
        port map (
      I0 => \^wb_gpr_write_i_reg_0\,
      I1 => \^ifetch\(3),
      I2 => \^ifetch\(7),
      I3 => \^ifetch\(5),
      I4 => \^ifetch\(4),
      I5 => \^ifetch\(6),
      O => \^ifetch\(8)
    );
Trace_MB_Halted_INST_0_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000100000000000"
    )
        port map (
      I0 => \^ifetch\(7),
      I1 => \^ifetch\(4),
      I2 => \^ifetch\(3),
      I3 => \^wb_gpr_write_i_reg_0\,
      I4 => \^ifetch\(5),
      I5 => \^ifetch\(6),
      O => \^wb_halted\
    );
\Trace_New_Reg_Value[0]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \Using_FPGA.Native_19\(15),
      I1 => \^ifetch\(8),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \Use_DLMB.wb_dlmb_valid_read_data_reg[24]\,
      I5 => \WB_MEM_Result_reg[0]\(15),
      O => \^ifetch\(24)
    );
\Trace_New_Reg_Value[10]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \Using_FPGA.Native_19\(5),
      I1 => \^ifetch\(8),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \Use_DLMB.wb_dlmb_valid_read_data_reg[18]\,
      I5 => \WB_MEM_Result_reg[0]\(5),
      O => \^ifetch\(14)
    );
\Trace_New_Reg_Value[11]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \Using_FPGA.Native_19\(4),
      I1 => \^ifetch\(8),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \Use_DLMB.wb_dlmb_valid_read_data_reg[19]\,
      I5 => \WB_MEM_Result_reg[0]\(4),
      O => \^ifetch\(13)
    );
\Trace_New_Reg_Value[12]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \Using_FPGA.Native_19\(3),
      I1 => \^ifetch\(8),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \Use_DLMB.wb_dlmb_valid_read_data_reg[20]\,
      I5 => \WB_MEM_Result_reg[0]\(3),
      O => \^ifetch\(12)
    );
\Trace_New_Reg_Value[13]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \Using_FPGA.Native_19\(2),
      I1 => \^ifetch\(8),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \Use_DLMB.wb_dlmb_valid_read_data_reg[21]\,
      I5 => \WB_MEM_Result_reg[0]\(2),
      O => \^ifetch\(11)
    );
\Trace_New_Reg_Value[14]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \Using_FPGA.Native_19\(1),
      I1 => \^ifetch\(8),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \Use_DLMB.wb_dlmb_valid_read_data_reg[22]\,
      I5 => \WB_MEM_Result_reg[0]\(1),
      O => \^ifetch\(10)
    );
\Trace_New_Reg_Value[15]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \Using_FPGA.Native_19\(0),
      I1 => \^ifetch\(8),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \Use_DLMB.wb_dlmb_valid_read_data_reg[23]\,
      I5 => \WB_MEM_Result_reg[0]\(0),
      O => \^ifetch\(9)
    );
\Trace_New_Reg_Value[1]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \Using_FPGA.Native_19\(14),
      I1 => \^ifetch\(8),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \Use_DLMB.wb_dlmb_valid_read_data_reg[25]\,
      I5 => \WB_MEM_Result_reg[0]\(14),
      O => \^ifetch\(23)
    );
\Trace_New_Reg_Value[2]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \Using_FPGA.Native_19\(13),
      I1 => \^ifetch\(8),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \Use_DLMB.wb_dlmb_valid_read_data_reg[26]\,
      I5 => \WB_MEM_Result_reg[0]\(13),
      O => \^ifetch\(22)
    );
\Trace_New_Reg_Value[3]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \Using_FPGA.Native_19\(12),
      I1 => \^ifetch\(8),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \Use_DLMB.wb_dlmb_valid_read_data_reg[27]\,
      I5 => \WB_MEM_Result_reg[0]\(12),
      O => \^ifetch\(21)
    );
\Trace_New_Reg_Value[4]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \Using_FPGA.Native_19\(11),
      I1 => \^ifetch\(8),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \Use_DLMB.wb_dlmb_valid_read_data_reg[28]\,
      I5 => \WB_MEM_Result_reg[0]\(11),
      O => \^ifetch\(20)
    );
\Trace_New_Reg_Value[5]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \Using_FPGA.Native_19\(10),
      I1 => \^ifetch\(8),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \Use_DLMB.wb_dlmb_valid_read_data_reg[29]\,
      I5 => \WB_MEM_Result_reg[0]\(10),
      O => \^ifetch\(19)
    );
\Trace_New_Reg_Value[6]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \Using_FPGA.Native_19\(9),
      I1 => \^ifetch\(8),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \Use_DLMB.wb_dlmb_valid_read_data_reg[30]\,
      I5 => \WB_MEM_Result_reg[0]\(9),
      O => \^ifetch\(18)
    );
\Trace_New_Reg_Value[7]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \Using_FPGA.Native_19\(8),
      I1 => \^ifetch\(8),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \Use_DLMB.wb_dlmb_valid_read_data_reg[31]\,
      I5 => \WB_MEM_Result_reg[0]\(8),
      O => \^ifetch\(17)
    );
\Trace_New_Reg_Value[8]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \Using_FPGA.Native_19\(7),
      I1 => \^ifetch\(8),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \Use_DLMB.wb_dlmb_valid_read_data_reg[16]\,
      I5 => \WB_MEM_Result_reg[0]\(7),
      O => \^ifetch\(16)
    );
\Trace_New_Reg_Value[9]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB888B8888"
    )
        port map (
      I0 => \Using_FPGA.Native_19\(6),
      I1 => \^ifetch\(8),
      I2 => wb_doublet_access,
      I3 => \^wb_byte_access\,
      I4 => \Use_DLMB.wb_dlmb_valid_read_data_reg[17]\,
      I5 => \WB_MEM_Result_reg[0]\(6),
      O => \^ifetch\(15)
    );
\Trace_Reg_Addr[0]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => wb_new_esr_ess_rx(0),
      I1 => \^restore_wb_msr_to_ex\,
      O => \^ifetch\(29)
    );
\Trace_Reg_Addr[1]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^restore_wb_msr_to_ex\,
      I1 => wb_new_esr_ess_rx(1),
      O => \^ifetch\(28)
    );
\Trace_Reg_Addr[2]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^restore_wb_msr_to_ex\,
      I1 => wb_new_esr_ess_rx(2),
      O => \^ifetch\(27)
    );
\Trace_Reg_Addr[3]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^restore_wb_msr_to_ex\,
      I1 => wb_new_esr_ess_rx(3),
      O => \^ifetch\(26)
    );
\Trace_Reg_Addr[4]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => wb_new_esr_ess_rx(4),
      I1 => \^restore_wb_msr_to_ex\,
      O => \^ifetch\(25)
    );
Trace_Reg_Write_INST_0: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFF20"
    )
        port map (
      I0 => wb_valid_reg_n_0,
      I1 => \^wb_gpr_write_i_reg_0\,
      I2 => wb_gpr_write_i,
      I3 => wb_reset,
      I4 => \^restore_wb_msr_to_ex\,
      O => \^ifetch\(30)
    );
Trace_Reg_Write_INST_0_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000100000000000"
    )
        port map (
      I0 => \^ifetch\(7),
      I1 => \^ifetch\(3),
      I2 => \^ifetch\(4),
      I3 => \^wb_gpr_write_i_reg_0\,
      I4 => \^ifetch\(5),
      I5 => \^ifetch\(6),
      O => \^restore_wb_msr_to_ex\
    );
Trace_Valid_Instr_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => wb_valid_reg_n_0,
      I1 => \^wb_halted\,
      O => \^ifetch\(31)
    );
Trace_WB_Jump_Hit_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_jump_hit,
      Q => \^ifetch\(0),
      R => reset_bool_for_rst
    );
Trace_WB_Jump_Taken_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_jump_taken,
      Q => \^ifetch\(2),
      R => reset_bool_for_rst
    );
\Use_MuxCy[10].OF_Piperun_Stage\: entity work.system_microblaze_0_0_carry_and
     port map (
      Dbg_Disable => Dbg_Disable,
      \EX_Op1_reg[30]\ => \EX_Op1_reg[30]_1\,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => ex_jump_nodelay_i_2_n_0,
      \Performace_Debug_Control.ex_watchpoint_brk_reg\ => \Performace_Debug_Control.ex_watchpoint_brk_reg\,
      \Performace_Debug_Control.ex_watchpoint_brk_reg_0\ => \Performace_Debug_Control.ex_watchpoint_brk_reg_0\,
      \Using_FPGA.Native\ => \Using_FPGA.Native_11\,
      \Using_FPGA.Native_0\ => PreFetch_Buffer_I1_n_92,
      ex_Instr_Excep_combo => ex_Instr_Excep_combo,
      ex_Instr_Excep_combo_reg => \Use_MuxCy[10].OF_Piperun_Stage_n_6\,
      ex_Take_Intr_or_Exc => ex_Take_Intr_or_Exc,
      ex_Take_Intr_or_Exc_reg => \Use_MuxCy[10].OF_Piperun_Stage_n_1\,
      ex_Take_Intr_or_Exc_reg_0 => \^using_fpga.native_2\,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      ex_div_unsigned => ex_div_unsigned,
      ex_first_cycle_reg => \Use_MuxCy[10].OF_Piperun_Stage_n_4\,
      ex_is_mul_instr_reg => \Use_MuxCy[10].OF_Piperun_Stage_n_2\,
      ex_jump_nodelay_reg => \Use_MuxCy[10].OF_Piperun_Stage_n_9\,
      ex_jump_nodelay_reg_0 => ex_jump_nodelay_reg_n_0,
      ex_set_MSR_IE_instr => ex_set_MSR_IE_instr,
      ex_valid_keep => ex_valid_keep,
      ex_valid_keep_reg => \Use_MuxCy[10].OF_Piperun_Stage_n_3\,
      lopt => lopt_9,
      lopt_1 => lopt_10,
      lopt_2 => lopt_11,
      lopt_3 => lopt_12,
      lopt_4 => lopt_13,
      lopt_5 => lopt_14,
      lopt_6 => lopt_15,
      lopt_7 => lopt_16,
      lopt_8 => lopt_26,
      lopt_9 => lopt_27,
      of_MSR(0) => of_MSR(0),
      of_PipeRun_carry_2 => of_PipeRun_carry_2,
      of_PipeRun_for_ce => of_PipeRun_for_ce,
      of_Take_Interrupt_hold => of_Take_Interrupt_hold,
      of_Take_Interrupt_hold_reg => \Use_MuxCy[10].OF_Piperun_Stage_n_8\,
      of_Take_Interrupt_hold_reg_0 => \^of_take_interrupt\,
      of_next_ex_valid => of_next_ex_valid,
      of_pipe_ctrl(0) => of_pipe_ctrl(10),
      \out\(0) => reset_bool_for_rst,
      wb_exception_i_reg => \^wb_gpr_write_i_reg_0\,
      \wb_exception_kind_i_reg[27]\ => \^restore_wb_msr_to_ex\
    );
\Use_MuxCy[1].OF_Piperun_Stage\: entity work.system_microblaze_0_0_carry_and_25
     port map (
      E(0) => \^trace_wb_jump_hit_reg_0\,
      lopt => lopt_17,
      lopt_1 => jump_logic_I1_n_9,
      lopt_2 => lopt_18,
      lopt_3 => lopt_19,
      lopt_4 => lopt_20,
      of_PipeRun_carry_10 => of_PipeRun_carry_10
    );
\Use_MuxCy[2].OF_Piperun_Stage\: entity work.system_microblaze_0_0_carry_and_26
     port map (
      EX_MBAR_Stall => EX_MBAR_Stall,
      ex_Take_Intr_or_Exc => ex_Take_Intr_or_Exc,
      ex_branch_with_delayslot_reg => jump_logic_I1_n_9,
      ex_first_cycle => ex_first_cycle,
      ex_jump_hold => ex_jump_hold,
      ex_mbar_decode => ex_mbar_decode,
      ex_mbar_sleep => ex_mbar_sleep,
      ex_mbar_stall_no_sleep_1 => ex_mbar_stall_no_sleep_1,
      lopt => lopt_17,
      of_PipeRun_carry_10 => of_PipeRun_carry_10,
      of_PipeRun_carry_9 => of_PipeRun_carry_9
    );
\Use_MuxCy[3].OF_Piperun_Stage\: entity work.system_microblaze_0_0_carry_and_27
     port map (
      Dbg_Disable => Dbg_Disable,
      E(0) => \Use_MuxCy[3].OF_Piperun_Stage_n_1\,
      \EX_Op1_reg[30]\ => \EX_Op1_reg[30]_1\,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      \Performace_Debug_Control.dbg_stop_if_delay_i_reg\ => \^ex_exception_taken\,
      \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\ => \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\,
      \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_0\ => \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_1\,
      \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg\ => \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg\,
      Q(0) => \ex_which_branch_reg_n_0_[10]\,
      \Using_FPGA.Native\ => \^using_fpga.native_1\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_10\,
      \Using_FPGA.Native_1\ => of_PipeRun_for_ce,
      ex_MSR(0) => ex_MSR(0),
      ex_Take_Intr_or_Exc_reg => \^using_fpga.native_2\,
      ex_Write_DCache_decode_cmb => ex_Write_DCache_decode_cmb,
      ex_Write_ICache_i => ex_Write_ICache_i,
      ex_Write_ICache_i_cmb => ex_Write_ICache_i_cmb,
      ex_bt_hit_hold_reg => \Use_MuxCy[3].OF_Piperun_Stage_n_6\,
      ex_gpr_write_dbg => ex_gpr_write_dbg,
      ex_gpr_write_reg => ex_gpr_write_reg_n_0,
      ex_set_MSR_IE_instr => ex_set_MSR_IE_instr,
      ex_write_dcache_instr => ex_write_dcache_instr,
      lopt => lopt_18,
      lopt_1 => lopt_19,
      lopt_2 => lopt_20,
      mem_gpr_write => mem_gpr_write,
      mem_gpr_write_dbg => mem_gpr_write_dbg,
      mem_gpr_write_dbg_reg => \Use_MuxCy[3].OF_Piperun_Stage_n_7\,
      mem_gpr_write_reg => \Use_MuxCy[3].OF_Piperun_Stage_n_5\,
      mem_jump_hit0 => mem_jump_hit0,
      mem_valid_reg => \^mem_exception_taken\,
      of_PipeRun_carry_9 => of_PipeRun_carry_9,
      of_set_MSR_IE_hold_reg => \Use_MuxCy[3].OF_Piperun_Stage_n_8\,
      of_set_MSR_IE_hold_reg_0 => of_set_MSR_IE_hold_reg_n_0,
      \out\(0) => reset_bool_for_rst,
      p_36_out => p_36_out,
      p_82_in => p_82_in,
      wb_exception_i_reg => \^wb_gpr_write_i_reg_0\,
      \wb_exception_kind_i_reg[27]\ => \^wb_halted\,
      \wb_exception_kind_i_reg[27]_0\ => \^restore_wb_msr_to_ex\
    );
\Use_MuxCy[4].OF_Piperun_Stage\: entity work.system_microblaze_0_0_carry_and_28
     port map (
      \Using_FPGA.Native\ => PreFetch_Buffer_I1_n_167,
      ex_branch_with_delayslot_reg => \^using_fpga.native_1\,
      lopt => lopt_21,
      lopt_1 => of_pipe_ctrl(5),
      lopt_2 => lopt_22,
      lopt_3 => of_pipe_ctrl(6),
      lopt_4 => lopt_23,
      lopt_5 => lopt_24,
      lopt_6 => of_pipe_ctrl(7),
      of_PipeRun_carry_7 => of_PipeRun_carry_7
    );
\Use_MuxCy[5].OF_Piperun_Stage\: entity work.system_microblaze_0_0_carry_and_29
     port map (
      lopt => lopt_21,
      of_PipeRun_carry_6 => of_PipeRun_carry_6,
      of_PipeRun_carry_7 => of_PipeRun_carry_7,
      of_pipe_ctrl(0) => of_pipe_ctrl(5)
    );
\Use_MuxCy[6].OF_Piperun_Stage\: entity work.system_microblaze_0_0_carry_and_30
     port map (
      lopt => lopt_22,
      of_PipeRun_carry_5 => of_PipeRun_carry_5,
      of_PipeRun_carry_6 => of_PipeRun_carry_6,
      of_pipe_ctrl(0) => of_pipe_ctrl(6)
    );
\Use_MuxCy[7].OF_Piperun_Stage\: entity work.system_microblaze_0_0_carry_and_31
     port map (
      lopt => lopt_23,
      lopt_1 => lopt_24,
      of_PipeRun_carry_4 => of_PipeRun_carry_4,
      of_PipeRun_carry_5 => of_PipeRun_carry_5,
      of_pipe_ctrl(0) => of_pipe_ctrl(7)
    );
\Use_MuxCy[8].OF_Piperun_Stage\: entity work.system_microblaze_0_0_carry_and_32
     port map (
      lopt => lopt_25,
      lopt_1 => of_pipe_ctrl(9),
      lopt_2 => lopt_26,
      lopt_3 => lopt_27,
      lopt_4 => of_pipe_ctrl(10),
      of_PipeRun_carry_3 => of_PipeRun_carry_3,
      of_PipeRun_carry_4 => of_PipeRun_carry_4,
      of_pipe_ctrl(0) => of_pipe_ctrl(8)
    );
\Use_MuxCy[9].OF_Piperun_Stage\: entity work.system_microblaze_0_0_carry_and_33
     port map (
      lopt => lopt_25,
      of_PipeRun_carry_2 => of_PipeRun_carry_2,
      of_PipeRun_carry_3 => of_PipeRun_carry_3,
      of_pipe_ctrl(0) => of_pipe_ctrl(9)
    );
\Using_FPGA.Gen_Bits[27].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE
     port map (
      Clk => Clk,
      D(0) => mem_exception_kind(27),
      ex_branch_with_delayslot_reg => \^using_fpga.native_1\,
      mem_exception_from_ex => mem_exception_from_ex,
      \out\(0) => reset_bool_for_rst
    );
\Using_FPGA.Gen_Bits[28].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_34
     port map (
      Clk => Clk,
      D(0) => mem_exception_kind(28),
      Dbg_Disable => Dbg_Disable,
      \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\ => \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_1\,
      dbg_stop_if_delay_i => dbg_stop_if_delay_i,
      ex_Interrupt_i => ex_Interrupt_i,
      ex_branch_with_delayslot_reg => \^using_fpga.native_1\,
      ex_valid => ex_valid,
      mem_exception_from_ex => mem_exception_from_ex,
      \out\(0) => reset_bool_for_rst
    );
\Using_FPGA.Gen_Bits[29].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_35
     port map (
      Clk => Clk,
      D(0) => mem_exception_kind(29),
      ex_branch_with_delayslot_reg => \^using_fpga.native_1\,
      mem_exception_from_ex => mem_exception_from_ex,
      \out\(0) => reset_bool_for_rst
    );
\Using_FPGA.Gen_Bits[30].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_36
     port map (
      Clk => Clk,
      D(0) => mem_exception_kind(30),
      Dbg_Disable => Dbg_Disable,
      \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\ => \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_1\,
      dbg_stop_if_delay_i => dbg_stop_if_delay_i,
      ex_Interrupt_i => ex_Interrupt_i,
      ex_branch_with_delayslot_reg => \^using_fpga.native_1\,
      ex_valid => ex_valid,
      mem_exception_from_ex => mem_exception_from_ex,
      \out\(0) => reset_bool_for_rst
    );
\Using_FPGA.Gen_Bits[31].MEM_EX_Result_Inst\: entity work.system_microblaze_0_0_MB_FDRE_37
     port map (
      Clk => Clk,
      D(0) => mem_exception_kind(31),
      \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\ => \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_0\,
      ex_branch_with_delayslot_reg => \^using_fpga.native_1\,
      mem_exception_from_ex => mem_exception_from_ex,
      \out\(0) => reset_bool_for_rst
    );
\Using_FPGA.Native_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1000"
    )
        port map (
      I0 => \^ex_alu_sel_logic\,
      I1 => \^ex_use_carry\,
      I2 => \^q\(0),
      I3 => \^q\(1),
      O => DI
    );
\Using_FPGA.Native_i_11\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => ex_gpr_write_reg_n_0,
      I1 => ex_valid,
      O => p_112_in
    );
\Using_FPGA.Native_i_13\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => mem_valid_instr,
      I1 => mem_gpr_write,
      O => p_109_in
    );
\Using_FPGA.Native_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AEAA"
    )
        port map (
      I0 => wb_reset,
      I1 => wb_gpr_write_i,
      I2 => \^wb_gpr_write_i_reg_0\,
      I3 => wb_valid_reg_n_0,
      O => p_19_in
    );
\Using_FPGA.Native_i_1__133\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[30]\(0),
      I1 => \EX_Op1_reg[7]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(31)
    );
\Using_FPGA.Native_i_1__134\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[30]\(1),
      I1 => \EX_Op1_reg[6]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O31_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(30)
    );
\Using_FPGA.Native_i_1__135\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(16),
      I1 => \EX_Op1_reg[5]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O30_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(29)
    );
\Using_FPGA.Native_i_1__136\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(17),
      I1 => \EX_Op1_reg[4]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O29_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(28)
    );
\Using_FPGA.Native_i_1__137\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(18),
      I1 => \EX_Op1_reg[3]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O28_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(27)
    );
\Using_FPGA.Native_i_1__138\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(19),
      I1 => \EX_Op1_reg[2]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O27_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(26)
    );
\Using_FPGA.Native_i_1__139\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(20),
      I1 => \EX_Op1_reg[1]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O26_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(25)
    );
\Using_FPGA.Native_i_1__140\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(21),
      I1 => \EX_Op1_reg[0]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O24_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(24)
    );
\Using_FPGA.Native_i_1__141\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(22),
      I1 => \EX_Op1_reg[15]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O23_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(23)
    );
\Using_FPGA.Native_i_1__142\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(23),
      I1 => \EX_Op1_reg[14]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O22_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(22)
    );
\Using_FPGA.Native_i_1__143\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(24),
      I1 => \EX_Op1_reg[13]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O21_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(21)
    );
\Using_FPGA.Native_i_1__144\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(25),
      I1 => \EX_Op1_reg[12]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O20_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(20)
    );
\Using_FPGA.Native_i_1__145\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(26),
      I1 => \EX_Op1_reg[11]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O19_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(19)
    );
\Using_FPGA.Native_i_1__146\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(27),
      I1 => \EX_Op1_reg[10]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O18_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(18)
    );
\Using_FPGA.Native_i_1__147\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(28),
      I1 => \EX_Op1_reg[9]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O17_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(17)
    );
\Using_FPGA.Native_i_1__148\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(29),
      I1 => \EX_Op1_reg[8]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O15_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(16)
    );
\Using_FPGA.Native_i_1__149\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(30),
      I1 => \EX_Op1_reg[23]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O14_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(15)
    );
\Using_FPGA.Native_i_1__150\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(31),
      I1 => \EX_Op1_reg[22]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O13_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(14)
    );
\Using_FPGA.Native_i_1__151\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(32),
      I1 => \EX_Op1_reg[21]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O12_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(13)
    );
\Using_FPGA.Native_i_1__152\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(33),
      I1 => \EX_Op1_reg[20]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O11_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(12)
    );
\Using_FPGA.Native_i_1__153\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(34),
      I1 => \EX_Op1_reg[19]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O10_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(11)
    );
\Using_FPGA.Native_i_1__154\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(35),
      I1 => \EX_Op1_reg[18]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O9_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(10)
    );
\Using_FPGA.Native_i_1__155\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(36),
      I1 => \EX_Op1_reg[17]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O8_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(9)
    );
\Using_FPGA.Native_i_1__156\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(37),
      I1 => \EX_Op1_reg[16]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O7_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(8)
    );
\Using_FPGA.Native_i_1__157\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(38),
      I1 => \EX_Op1_reg[31]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O6_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(7)
    );
\Using_FPGA.Native_i_1__158\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(39),
      I1 => \EX_Op1_reg[30]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O5_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(6)
    );
\Using_FPGA.Native_i_1__159\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(40),
      I1 => \EX_Op1_reg[29]_1\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O4_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(5)
    );
\Using_FPGA.Native_i_1__160\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(41),
      I1 => \EX_Op1_reg[28]_1\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O3_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(4)
    );
\Using_FPGA.Native_i_1__161\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(42),
      I1 => \EX_Op1_reg[27]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O2_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(3)
    );
\Using_FPGA.Native_i_1__162\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(43),
      I1 => \EX_Op1_reg[26]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O1_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(2)
    );
\Using_FPGA.Native_i_1__163\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACFC0"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(44),
      I1 => \EX_Op1_reg[25]_0\,
      I2 => ex_swap_instr,
      I3 => \Data_Flow_I/Shift_Logic_Module_I/O0_out\,
      I4 => ex_sel_alu,
      O => \^ex_fwd\(1)
    );
\Using_FPGA.Native_i_1__164\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => EX_Is_Div_Instr,
      I1 => reset_bool_for_rst,
      I2 => ex_div_unsigned,
      O => R
    );
\Using_FPGA.Native_i_1__177\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"51"
    )
        port map (
      I0 => \^wb_halted\,
      I1 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I2 => Dbg_Disable,
      O => \Using_FPGA.Native_9\
    );
\Using_FPGA.Native_i_1__80\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^ifetch\(6),
      O => \Using_FPGA.Native_6\
    );
\Using_FPGA.Native_i_2__84\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \EX_Op2_reg[0]_0\(45),
      I1 => \Using_FPGA.Native_i_3__33_n_0\,
      I2 => ex_sel_alu,
      O => \^ex_fwd\(0)
    );
\Using_FPGA.Native_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8C808080"
    )
        port map (
      I0 => ex_alu_carry,
      I1 => \^using_fpga.native_2\,
      I2 => ex_load_alu_carry_reg_n_0,
      I3 => ex_load_shift_carry,
      I4 => \EX_Op1_reg[0]\(0),
      O => \Using_FPGA.Native_i_3_n_0\
    );
\Using_FPGA.Native_i_3__10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAA0A8080A00A808"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[24]_0\,
      I2 => \^using_fpga.native_7\(0),
      I3 => \EX_Op1_reg[0]\(8),
      I4 => \^using_fpga.native_7\(1),
      I5 => \EX_Op1_reg[0]\(9),
      O => \Data_Flow_I/Shift_Logic_Module_I/O23_out\
    );
\Using_FPGA.Native_i_3__11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAA0A8080A00A808"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[24]_0\,
      I2 => \^using_fpga.native_7\(0),
      I3 => \EX_Op1_reg[0]\(9),
      I4 => \^using_fpga.native_7\(1),
      I5 => \EX_Op1_reg[0]\(10),
      O => \Data_Flow_I/Shift_Logic_Module_I/O22_out\
    );
\Using_FPGA.Native_i_3__12\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAA0A8080A00A808"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[24]_0\,
      I2 => \^using_fpga.native_7\(0),
      I3 => \EX_Op1_reg[0]\(10),
      I4 => \^using_fpga.native_7\(1),
      I5 => \EX_Op1_reg[0]\(11),
      O => \Data_Flow_I/Shift_Logic_Module_I/O21_out\
    );
\Using_FPGA.Native_i_3__13\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAA0A8080A00A808"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[24]_0\,
      I2 => \^using_fpga.native_7\(0),
      I3 => \EX_Op1_reg[0]\(11),
      I4 => \^using_fpga.native_7\(1),
      I5 => \EX_Op1_reg[0]\(12),
      O => \Data_Flow_I/Shift_Logic_Module_I/O20_out\
    );
\Using_FPGA.Native_i_3__14\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAA0A8080A00A808"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[24]_0\,
      I2 => \^using_fpga.native_7\(0),
      I3 => \EX_Op1_reg[0]\(12),
      I4 => \^using_fpga.native_7\(1),
      I5 => \EX_Op1_reg[0]\(13),
      O => \Data_Flow_I/Shift_Logic_Module_I/O19_out\
    );
\Using_FPGA.Native_i_3__15\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAA0A8080A00A808"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[24]_0\,
      I2 => \^using_fpga.native_7\(0),
      I3 => \EX_Op1_reg[0]\(13),
      I4 => \^using_fpga.native_7\(1),
      I5 => \EX_Op1_reg[0]\(14),
      O => \Data_Flow_I/Shift_Logic_Module_I/O18_out\
    );
\Using_FPGA.Native_i_3__16\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAA0A8080A00A808"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[24]_0\,
      I2 => \^using_fpga.native_7\(0),
      I3 => \EX_Op1_reg[0]\(14),
      I4 => \^using_fpga.native_7\(1),
      I5 => \EX_Op1_reg[0]\(15),
      O => \Data_Flow_I/Shift_Logic_Module_I/O17_out\
    );
\Using_FPGA.Native_i_3__17\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAA0A8080A00A808"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[24]_0\,
      I2 => \^using_fpga.native_7\(0),
      I3 => \EX_Op1_reg[0]\(15),
      I4 => \^using_fpga.native_7\(1),
      I5 => \EX_Op1_reg[0]\(16),
      O => \Data_Flow_I/Shift_Logic_Module_I/O15_out\
    );
\Using_FPGA.Native_i_3__18\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8A8A8080808A808"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[24]_1\,
      I2 => \^using_fpga.native_7\(1),
      I3 => \EX_Op1_reg[0]\(16),
      I4 => \^using_fpga.native_7\(0),
      I5 => \EX_Op1_reg[0]\(17),
      O => \Data_Flow_I/Shift_Logic_Module_I/O14_out\
    );
\Using_FPGA.Native_i_3__19\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8A8A8080808A808"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[24]_1\,
      I2 => \^using_fpga.native_7\(1),
      I3 => \EX_Op1_reg[0]\(17),
      I4 => \^using_fpga.native_7\(0),
      I5 => \EX_Op1_reg[0]\(18),
      O => \Data_Flow_I/Shift_Logic_Module_I/O13_out\
    );
\Using_FPGA.Native_i_3__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A8880888"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[0]\(0),
      I2 => \^using_fpga.native_7\(0),
      I3 => \^using_fpga.native_7\(1),
      I4 => \EX_Op1_reg[0]\(1),
      O => \Data_Flow_I/Shift_Logic_Module_I/O\
    );
\Using_FPGA.Native_i_3__20\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8A8A8080808A808"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[24]_1\,
      I2 => \^using_fpga.native_7\(1),
      I3 => \EX_Op1_reg[0]\(18),
      I4 => \^using_fpga.native_7\(0),
      I5 => \EX_Op1_reg[0]\(19),
      O => \Data_Flow_I/Shift_Logic_Module_I/O12_out\
    );
\Using_FPGA.Native_i_3__21\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8A8A8080808A808"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[24]_1\,
      I2 => \^using_fpga.native_7\(1),
      I3 => \EX_Op1_reg[0]\(19),
      I4 => \^using_fpga.native_7\(0),
      I5 => \EX_Op1_reg[0]\(20),
      O => \Data_Flow_I/Shift_Logic_Module_I/O11_out\
    );
\Using_FPGA.Native_i_3__22\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8A8A8080808A808"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[24]_1\,
      I2 => \^using_fpga.native_7\(1),
      I3 => \EX_Op1_reg[0]\(20),
      I4 => \^using_fpga.native_7\(0),
      I5 => \EX_Op1_reg[0]\(21),
      O => \Data_Flow_I/Shift_Logic_Module_I/O10_out\
    );
\Using_FPGA.Native_i_3__23\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8A8A8080808A808"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[24]_1\,
      I2 => \^using_fpga.native_7\(1),
      I3 => \EX_Op1_reg[0]\(21),
      I4 => \^using_fpga.native_7\(0),
      I5 => \EX_Op1_reg[0]\(22),
      O => \Data_Flow_I/Shift_Logic_Module_I/O9_out\
    );
\Using_FPGA.Native_i_3__24\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8A8A8080808A808"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[24]_1\,
      I2 => \^using_fpga.native_7\(1),
      I3 => \EX_Op1_reg[0]\(22),
      I4 => \^using_fpga.native_7\(0),
      I5 => \EX_Op1_reg[0]\(23),
      O => \Data_Flow_I/Shift_Logic_Module_I/O8_out\
    );
\Using_FPGA.Native_i_3__25\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8A8A8080808A808"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[24]_1\,
      I2 => \^using_fpga.native_7\(1),
      I3 => \EX_Op1_reg[0]\(23),
      I4 => \^using_fpga.native_7\(0),
      I5 => \EX_Op1_reg[0]\(24),
      O => \Data_Flow_I/Shift_Logic_Module_I/O7_out\
    );
\Using_FPGA.Native_i_3__26\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8A8A8080808A808"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[24]_1\,
      I2 => \^using_fpga.native_7\(1),
      I3 => \EX_Op1_reg[0]\(24),
      I4 => \^using_fpga.native_7\(0),
      I5 => \EX_Op1_reg[0]\(25),
      O => \Data_Flow_I/Shift_Logic_Module_I/O6_out\
    );
\Using_FPGA.Native_i_3__27\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8A8A8080808A808"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[24]_1\,
      I2 => \^using_fpga.native_7\(1),
      I3 => \EX_Op1_reg[0]\(25),
      I4 => \^using_fpga.native_7\(0),
      I5 => \EX_Op1_reg[0]\(26),
      O => \Data_Flow_I/Shift_Logic_Module_I/O5_out\
    );
\Using_FPGA.Native_i_3__28\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8A8A8080808A808"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[24]_1\,
      I2 => \^using_fpga.native_7\(1),
      I3 => \EX_Op1_reg[0]\(26),
      I4 => \^using_fpga.native_7\(0),
      I5 => \EX_Op1_reg[0]\(27),
      O => \Data_Flow_I/Shift_Logic_Module_I/O4_out\
    );
\Using_FPGA.Native_i_3__29\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8A8A8080808A808"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[24]_1\,
      I2 => \^using_fpga.native_7\(1),
      I3 => \EX_Op1_reg[0]\(27),
      I4 => \^using_fpga.native_7\(0),
      I5 => \EX_Op1_reg[0]\(28),
      O => \Data_Flow_I/Shift_Logic_Module_I/O3_out\
    );
\Using_FPGA.Native_i_3__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A8880888"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[0]\(1),
      I2 => \^using_fpga.native_7\(0),
      I3 => \^using_fpga.native_7\(1),
      I4 => \EX_Op1_reg[0]\(2),
      O => \Data_Flow_I/Shift_Logic_Module_I/O31_out\
    );
\Using_FPGA.Native_i_3__30\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8A8A8080808A808"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[24]_1\,
      I2 => \^using_fpga.native_7\(1),
      I3 => \EX_Op1_reg[0]\(28),
      I4 => \^using_fpga.native_7\(0),
      I5 => \EX_Op1_reg[0]\(29),
      O => \Data_Flow_I/Shift_Logic_Module_I/O2_out\
    );
\Using_FPGA.Native_i_3__31\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8A8A8080808A808"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[24]_1\,
      I2 => \^using_fpga.native_7\(1),
      I3 => \EX_Op1_reg[0]\(29),
      I4 => \^using_fpga.native_7\(0),
      I5 => \EX_Op1_reg[0]\(30),
      O => \Data_Flow_I/Shift_Logic_Module_I/O1_out\
    );
\Using_FPGA.Native_i_3__32\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8A8A8080808A808"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[24]_1\,
      I2 => \^using_fpga.native_7\(1),
      I3 => \EX_Op1_reg[0]\(30),
      I4 => \^using_fpga.native_7\(0),
      I5 => \EX_Op1_reg[0]\(31),
      O => \Data_Flow_I/Shift_Logic_Module_I/O0_out\
    );
\Using_FPGA.Native_i_3__33\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \EX_Op1_reg[24]_2\,
      I1 => ex_swap_instr,
      I2 => ex_Enable_Sext_Shift,
      I3 => \EX_Op1_reg[24]_1\,
      I4 => \^using_fpga.native_7\(1),
      I5 => \Using_FPGA.Native_i_5__1_n_0\,
      O => \Using_FPGA.Native_i_3__33_n_0\
    );
\Using_FPGA.Native_i_3__4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A8880888"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[0]\(2),
      I2 => \^using_fpga.native_7\(0),
      I3 => \^using_fpga.native_7\(1),
      I4 => \EX_Op1_reg[0]\(3),
      O => \Data_Flow_I/Shift_Logic_Module_I/O30_out\
    );
\Using_FPGA.Native_i_3__5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A8880888"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[0]\(3),
      I2 => \^using_fpga.native_7\(0),
      I3 => \^using_fpga.native_7\(1),
      I4 => \EX_Op1_reg[0]\(4),
      O => \Data_Flow_I/Shift_Logic_Module_I/O29_out\
    );
\Using_FPGA.Native_i_3__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A8880888"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[0]\(4),
      I2 => \^using_fpga.native_7\(0),
      I3 => \^using_fpga.native_7\(1),
      I4 => \EX_Op1_reg[0]\(5),
      O => \Data_Flow_I/Shift_Logic_Module_I/O28_out\
    );
\Using_FPGA.Native_i_3__7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A8880888"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[0]\(5),
      I2 => \^using_fpga.native_7\(0),
      I3 => \^using_fpga.native_7\(1),
      I4 => \EX_Op1_reg[0]\(6),
      O => \Data_Flow_I/Shift_Logic_Module_I/O27_out\
    );
\Using_FPGA.Native_i_3__8\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A8880888"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[0]\(6),
      I2 => \^using_fpga.native_7\(0),
      I3 => \^using_fpga.native_7\(1),
      I4 => \EX_Op1_reg[0]\(7),
      O => \Data_Flow_I/Shift_Logic_Module_I/O26_out\
    );
\Using_FPGA.Native_i_3__9\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A8880888"
    )
        port map (
      I0 => ex_Enable_Sext_Shift,
      I1 => \EX_Op1_reg[0]\(7),
      I2 => \^using_fpga.native_7\(0),
      I3 => \^using_fpga.native_7\(1),
      I4 => \EX_Op1_reg[0]\(8),
      O => \Data_Flow_I/Shift_Logic_Module_I/O24_out\
    );
\Using_FPGA.Native_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"1F"
    )
        port map (
      I0 => ex_load_shift_carry,
      I1 => ex_load_alu_carry_reg_n_0,
      I2 => \^using_fpga.native_2\,
      O => \Data_Flow_I/msr_reg_i/p_20_in\
    );
\Using_FPGA.Native_i_5__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0DFF0800"
    )
        port map (
      I0 => ex_shift_op(1),
      I1 => ex_MSR(1),
      I2 => ex_shift_op(0),
      I3 => \^using_fpga.native_7\(0),
      I4 => \EX_Op1_reg[0]\(31),
      O => \Using_FPGA.Native_i_5__1_n_0\
    );
\Using_FPGA_2.ex_byte_access_i_Inst\: entity work.system_microblaze_0_0_MB_FDRE_38
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => of_PipeRun_for_ce,
      \Using_FPGA.Native_1\ => PreFetch_Buffer_I1_n_146,
      mem_byte_access_reg => \^ex_byte_access\,
      \out\(0) => reset_bool_for_rst
    );
\Using_FPGA_2.ex_doublet_access_i_Inst\: entity work.system_microblaze_0_0_MB_FDRE_39
     port map (
      \Byte_Enable[0]\(3 downto 0) => \^ifetch\(99 downto 96),
      Clk => Clk,
      \EX_Op1_reg[31]\(0) => \EX_Op1_reg[0]\(0),
      \EX_Op2_reg[31]\(0) => \EX_Op2_reg[31]\(0),
      \Using_FPGA.Native_0\ => of_PipeRun_for_ce,
      \Using_FPGA.Native_1\ => PreFetch_Buffer_I1_n_147,
      \Using_FPGA.Native_2\ => \^ex_reverse_byteorder\,
      \Using_FPGA.Native_3\ => \^ex_byte_access\,
      \Using_FPGA.Native_4\(0) => \Using_FPGA.Native_18\(0),
      mem_doublet_access_reg => \^ex_doublet_access\,
      \out\(0) => reset_bool_for_rst
    );
\Using_FPGA_2.ex_is_load_instr_Inst\: entity work.system_microblaze_0_0_MB_FDRE_40
     port map (
      Clk => Clk,
      MEM_Sel_MEM_Res_I_reg => \Using_FPGA_2.ex_is_load_instr_Inst_n_3\,
      \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\ => \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_0\,
      Read_Strobe(1 downto 0) => \^ifetch\(101 downto 100),
      \Using_FPGA.Native_0\ => of_PipeRun_for_ce,
      \Using_FPGA.Native_1\ => PreFetch_Buffer_I1_n_170,
      ex_Interrupt_i => ex_Interrupt_i,
      ex_Sel_SPR_EAR => ex_Sel_SPR_EAR,
      ex_Sel_SPR_EDR_reg => MEM_Sel_MEM_Res_I_i_2_n_0,
      ex_Sel_SPR_PVR => ex_Sel_SPR_PVR,
      ex_Sel_SPR_SHR => ex_Sel_SPR_SHR,
      ex_Sel_SPR_SLR => ex_Sel_SPR_SLR,
      ex_Take_Intr_or_Exc => ex_Take_Intr_or_Exc,
      ex_div_unsigned => ex_div_unsigned,
      ex_is_multi_instr2 => ex_is_multi_instr2,
      ex_is_swx_instr_s => ex_is_swx_instr_s,
      ex_load_store_instr_s => ex_load_store_instr_s,
      ex_reservation => ex_reservation,
      ex_valid => ex_valid,
      ex_valid_reg => Write_Strobe_INST_0_i_1_n_0,
      mem_is_multi_or_load_instr0 => mem_is_multi_or_load_instr0,
      \out\(0) => reset_bool_for_rst
    );
\Using_FPGA_2.ex_is_lwx_instr_Inst\: entity work.system_microblaze_0_0_MB_FDRE_41
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => of_PipeRun_for_ce,
      \Using_FPGA.Native_1\ => PreFetch_Buffer_I1_n_141,
      \Using_FPGA.Native_2\ => \Using_FPGA_2.ex_load_store_instr_Inst_n_3\,
      \Using_LWX_SWX_instr.ex_reservation_reg\ => \Using_FPGA_2.ex_is_lwx_instr_Inst_n_1\,
      ex_MSR_Set_SW_BIP => ex_MSR_Set_SW_BIP,
      ex_is_lwx_instr_s => ex_is_lwx_instr_s,
      ex_load_store_instr_s => ex_load_store_instr_s,
      ex_reservation => ex_reservation,
      ex_valid_reg => Write_Strobe_INST_0_i_1_n_0,
      mem_exception_from_ex => mem_exception_from_ex,
      mem_valid_instr => mem_valid_instr,
      \out\(0) => reset_bool_for_rst,
      wb_exception_i_reg => \^wb_gpr_write_i_reg_0\,
      \wb_exception_kind_i_reg[27]\ => \^wb_halted\
    );
\Using_FPGA_2.ex_is_swx_instr_Inst\: entity work.system_microblaze_0_0_MB_FDRE_42
     port map (
      Clk => Clk,
      D122_out => D122_out,
      E(0) => \^trace_wb_jump_hit_reg_0\,
      \EX_Op1_reg[29]\ => \EX_Op1_reg[29]_0\,
      MEM_DataBus_Access_reg => \Using_FPGA_2.ex_is_swx_instr_Inst_n_3\,
      MEM_DataBus_Access_reg_0 => \^mem_databus_access\,
      SRI => SRI,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_1\ => of_PipeRun_for_ce,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_17\(0),
      ex_MSR(0) => ex_MSR(1),
      ex_MSR_Load_LWX_SWX_C => ex_MSR_Load_LWX_SWX_C,
      ex_branch_with_delayslot_reg => \^using_fpga.native_1\,
      ex_is_swx_instr_s => ex_is_swx_instr_s,
      ex_load_alu_carry_reg => \Using_FPGA.Native_i_3_n_0\,
      ex_reservation => ex_reservation,
      \out\(0) => reset_bool_for_rst,
      p_126_in => p_126_in,
      p_20_in => \Data_Flow_I/msr_reg_i/p_20_in\,
      \wb_exception_kind_i_reg[27]\ => \^restore_wb_msr_to_ex\
    );
\Using_FPGA_2.ex_load_store_instr_Inst\: entity work.system_microblaze_0_0_MB_FDRE_43
     port map (
      Clk => Clk,
      \Performace_Debug_Control.dbg_stop_if_delay_i_reg\ => \^ex_exception_taken\,
      \Using_FPGA.Native_0\ => of_PipeRun_for_ce,
      \Using_FPGA.Native_1\ => PreFetch_Buffer_I1_n_165,
      \Using_LWX_SWX_instr.ex_reservation_reg\ => \Using_FPGA_2.ex_load_store_instr_Inst_n_3\,
      ex_MSR_Load_LWX_SWX_C => ex_MSR_Load_LWX_SWX_C,
      ex_Take_Intr_or_Exc => ex_Take_Intr_or_Exc,
      ex_branch_with_delayslot_reg => \^using_fpga.native_1\,
      ex_is_lwx_instr_s => ex_is_lwx_instr_s,
      ex_is_swx_instr_s => ex_is_swx_instr_s,
      ex_load_store_instr_s => ex_load_store_instr_s,
      ex_reservation => ex_reservation,
      ex_valid_reg => Write_Strobe_INST_0_i_1_n_0,
      mem_exception_from_ex => mem_exception_from_ex,
      mem_load_store_access0 => mem_load_store_access0,
      mem_valid_instr => mem_valid_instr,
      \out\(0) => reset_bool_for_rst,
      p_126_in => p_126_in,
      wb_exception_i_reg => \^wb_gpr_write_i_reg_0\
    );
\Using_FPGA_2.ex_reverse_mem_access_inst\: entity work.system_microblaze_0_0_MB_FDRE_44
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => of_PipeRun_for_ce,
      \Using_FPGA.Native_1\ => PreFetch_Buffer_I1_n_171,
      ex_reverse_byteorder => \^ex_reverse_byteorder\,
      \out\(0) => reset_bool_for_rst
    );
\Using_FPGA_3.ex_clear_MSR_BIP_instr_Inst\: entity work.system_microblaze_0_0_MB_FDRE_45
     port map (
      Clk => Clk,
      \EX_Op1_reg[28]\ => \EX_Op1_reg[28]_0\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_2\ => of_PipeRun_for_ce,
      ex_MSR(0) => ex_MSR(2),
      ex_MSR_Set_SW_BIP => ex_MSR_Set_SW_BIP,
      ex_Take_Intr_or_Exc_reg => \^using_fpga.native_2\,
      ex_branch_with_delayslot_reg => \^using_fpga.native_1\,
      ex_set_bip_reg => ex_set_bip_reg_n_0,
      \ex_which_branch_reg[9]\ => \Using_FPGA_3.of_clear_MSR_BIP_hold_Inst_n_1\,
      of_MSR(0) => of_MSR(1),
      \out\(0) => reset_bool_for_rst,
      wb_MSR_cmb(0) => wb_MSR_cmb(0),
      \wb_exception_kind_i_reg[27]\ => \^restore_wb_msr_to_ex\
    );
\Using_FPGA_3.of_clear_MSR_BIP_hold_Inst\: entity work.system_microblaze_0_0_MB_FDR
     port map (
      Clk => Clk,
      Q(5) => ex_opcode(0),
      Q(4) => ex_opcode(1),
      Q(3) => ex_opcode(2),
      Q(2) => ex_opcode(3),
      Q(1) => ex_opcode(4),
      Q(0) => ex_opcode(5),
      \Using_FPGA.Native_0\ => \Using_FPGA_3.of_clear_MSR_BIP_hold_Inst_n_1\,
      \Using_FPGA.Native_1\ => of_PipeRun_for_ce,
      ex_Take_Intr_or_Exc_reg => \^using_fpga.native_2\,
      ex_branch_with_delayslot_reg => \^using_fpga.native_1\,
      \ex_which_branch_reg[9]\(0) => p_0_in81_in,
      \out\(0) => reset_bool_for_rst,
      p_82_in => p_82_in
    );
\Using_FPGA_4.of_read_ex_write_op1_conflict_INST1\: entity work.\system_microblaze_0_0_MB_LUT6__parameterized10\
     port map (
      Q(2) => \ex_gpr_write_addr_reg_n_0_[0]\,
      Q(1) => I2,
      Q(0) => I4,
      ex_is_multi_or_load_instr => ex_is_multi_or_load_instr,
      of_pipe_ctrl(0) => of_pipe_ctrl(5),
      of_predecode(2) => of_predecode(1),
      of_predecode(1) => of_predecode(2),
      of_predecode(0) => of_predecode(3),
      of_read_ex_write_op1_conflict_part2 => of_read_ex_write_op1_conflict_part2
    );
\Using_FPGA_4.of_read_ex_write_op1_conflict_INST2\: entity work.\system_microblaze_0_0_MB_LUT6__parameterized12\
     port map (
      Q(1) => I0,
      Q(0) => \ex_gpr_write_addr_reg_n_0_[4]\,
      ex_gpr_write_reg => ex_gpr_write_reg_n_0,
      ex_valid => ex_valid,
      of_predecode(1) => of_predecode(4),
      of_predecode(0) => of_predecode(5),
      of_read_ex_write_op1_conflict_part2 => of_read_ex_write_op1_conflict_part2
    );
\Using_FPGA_4.of_read_ex_write_op2_conflict_INST1\: entity work.\system_microblaze_0_0_MB_LUT6__parameterized18\
     port map (
      Q(2) => \ex_gpr_write_addr_reg_n_0_[0]\,
      Q(1) => I2,
      Q(0) => I4,
      of_predecode(2) => of_predecode(6),
      of_predecode(1) => of_predecode(7),
      of_predecode(0) => of_predecode(8),
      of_read_ex_write_op2_conflict_part1 => of_read_ex_write_op2_conflict_part1
    );
\Using_FPGA_4.of_read_ex_write_op2_conflict_INST2\: entity work.\system_microblaze_0_0_MB_LUT6__parameterized20\
     port map (
      Q(1) => I0,
      Q(0) => \ex_gpr_write_addr_reg_n_0_[4]\,
      ex_gpr_write_reg => ex_gpr_write_reg_n_0,
      ex_valid => ex_valid,
      of_predecode(1) => of_predecode(9),
      of_predecode(0) => of_predecode(10),
      of_read_ex_write_op2_conflict_part2 => of_read_ex_write_op2_conflict_part2
    );
\Using_FPGA_4.of_read_ex_write_op3_conflict_INST1\: entity work.\system_microblaze_0_0_MB_LUT6__parameterized26\
     port map (
      D(2) => \^of_gpr_op3_rd_addr\(0),
      D(1) => \^of_gpr_op3_rd_addr\(1),
      D(0) => \^of_gpr_op3_rd_addr\(2),
      Q(2) => \ex_gpr_write_addr_reg_n_0_[0]\,
      Q(1) => I2,
      Q(0) => I4,
      of_read_ex_write_op3_conflict_part1 => of_read_ex_write_op3_conflict_part1
    );
\Using_FPGA_4.of_read_ex_write_op3_conflict_INST2\: entity work.\system_microblaze_0_0_MB_LUT6__parameterized28\
     port map (
      D(1) => \^of_gpr_op3_rd_addr\(3),
      D(0) => \^of_gpr_op3_rd_addr\(4),
      Q(1) => I0,
      Q(0) => \ex_gpr_write_addr_reg_n_0_[4]\,
      ex_gpr_write_reg => ex_gpr_write_reg_n_0,
      ex_valid => ex_valid,
      of_read_ex_write_op3_conflict_part2 => of_read_ex_write_op3_conflict_part2
    );
\Using_FPGA_4.of_read_mem_write_op1_conflict_INST1\: entity work.\system_microblaze_0_0_MB_LUT6__parameterized14\
     port map (
      Q(2) => mem_gpr_write_addr(0),
      Q(1) => mem_gpr_write_addr(1),
      Q(0) => mem_gpr_write_addr(2),
      of_predecode(2) => of_predecode(1),
      of_predecode(1) => of_predecode(2),
      of_predecode(0) => of_predecode(3),
      of_read_mem_write_op1_conflict_part1 => of_read_mem_write_op1_conflict_part1
    );
\Using_FPGA_4.of_read_mem_write_op1_conflict_INST2\: entity work.\system_microblaze_0_0_MB_LUT6__parameterized16\
     port map (
      Q(1) => mem_gpr_write_addr(3),
      Q(0) => mem_gpr_write_addr(4),
      mem_gpr_write => mem_gpr_write,
      mem_is_multi_or_load_instr => mem_is_multi_or_load_instr,
      mem_valid_instr => mem_valid_instr,
      of_pipe_ctrl(0) => of_pipe_ctrl(6),
      of_predecode(1) => of_predecode(4),
      of_predecode(0) => of_predecode(5),
      of_read_mem_write_op1_conflict_part1 => of_read_mem_write_op1_conflict_part1
    );
\Using_FPGA_4.of_read_mem_write_op2_conflict_INST1\: entity work.\system_microblaze_0_0_MB_LUT6__parameterized22\
     port map (
      Q(2) => mem_gpr_write_addr(0),
      Q(1) => mem_gpr_write_addr(1),
      Q(0) => mem_gpr_write_addr(2),
      of_predecode(2) => of_predecode(6),
      of_predecode(1) => of_predecode(7),
      of_predecode(0) => of_predecode(8),
      of_read_mem_write_op2_conflict_part1 => of_read_mem_write_op2_conflict_part1
    );
\Using_FPGA_4.of_read_mem_write_op2_conflict_INST2\: entity work.\system_microblaze_0_0_MB_LUT6__parameterized24\
     port map (
      Q(1) => mem_gpr_write_addr(3),
      Q(0) => mem_gpr_write_addr(4),
      mem_gpr_write => mem_gpr_write,
      mem_valid_instr => mem_valid_instr,
      of_predecode(1) => of_predecode(9),
      of_predecode(0) => of_predecode(10),
      of_read_mem_write_op2_conflict_part2 => of_read_mem_write_op2_conflict_part2
    );
\Using_FPGA_4.of_read_mem_write_op3_conflict_INST1\: entity work.\system_microblaze_0_0_MB_LUT6__parameterized30\
     port map (
      D(2) => \^of_gpr_op3_rd_addr\(0),
      D(1) => \^of_gpr_op3_rd_addr\(1),
      D(0) => \^of_gpr_op3_rd_addr\(2),
      Q(2) => mem_gpr_write_addr(0),
      Q(1) => mem_gpr_write_addr(1),
      Q(0) => mem_gpr_write_addr(2),
      \Using_FPGA.Native_0\(0) => \^use_reg_neg_s_reg_0\(0),
      mem_is_multi_or_load_instr => mem_is_multi_or_load_instr,
      of_pipe_ctrl(0) => of_pipe_ctrl(10),
      of_read_mem_write_op3_conflict_part2 => of_read_mem_write_op3_conflict_part2
    );
\Using_FPGA_4.of_read_mem_write_op3_conflict_INST2\: entity work.\system_microblaze_0_0_MB_LUT6__parameterized32\
     port map (
      D(1) => \^of_gpr_op3_rd_addr\(3),
      D(0) => \^of_gpr_op3_rd_addr\(4),
      Q(1) => mem_gpr_write_addr(3),
      Q(0) => mem_gpr_write_addr(4),
      mem_gpr_write => mem_gpr_write,
      mem_valid_instr => mem_valid_instr,
      of_read_mem_write_op3_conflict_part2 => of_read_mem_write_op3_conflict_part2
    );
\Using_Fast_Interrupt.Interrupt_Ack[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000EA"
    )
        port map (
      I0 => wb_ie_rising,
      I1 => wb_valid_reg_n_0,
      I2 => wb_rtid_instr,
      I3 => reset_bool_for_rst,
      I4 => \^restore_wb_msr_to_ex\,
      O => \Using_Fast_Interrupt.Interrupt_Ack[0]_i_1_n_0\
    );
\Using_Fast_Interrupt.Interrupt_Ack[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BFAA"
    )
        port map (
      I0 => \^restore_wb_msr_to_ex\,
      I1 => wb_valid_reg_n_0,
      I2 => wb_rtid_instr,
      I3 => wb_ie_rising,
      O => \Using_Fast_Interrupt.Interrupt_Ack[1]_i_1_n_0\
    );
\Using_Fast_Interrupt.Interrupt_Ack_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_Fast_Interrupt.Interrupt_Ack[0]_i_1_n_0\,
      Q => Interrupt_Ack(0),
      R => '0'
    );
\Using_Fast_Interrupt.Interrupt_Ack_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_Fast_Interrupt.Interrupt_Ack[1]_i_1_n_0\,
      Q => Interrupt_Ack(1),
      R => reset_bool_for_rst
    );
\Using_Fast_Interrupt.mem_rtid_instr_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \ex_which_branch_reg_n_0_[10]\,
      I1 => p_82_in,
      O => of_set_MSR_IE
    );
\Using_Fast_Interrupt.mem_rtid_instr_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => of_set_MSR_IE,
      Q => mem_rtid_instr,
      R => '0'
    );
\Using_Fast_Interrupt.wb_ie_rising_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => \Using_FPGA.Native_14\,
      Q => wb_ie_rising,
      R => '0'
    );
\Using_Fast_Interrupt.wb_rtid_instr_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_rtid_instr,
      Q => wb_rtid_instr,
      R => '0'
    );
\Using_LWX_SWX_instr.ex_reservation_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => ex_set_bip_reg_n_0,
      O => ex_MSR_Set_SW_BIP
    );
\Using_LWX_SWX_instr.ex_reservation_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA_2.ex_is_lwx_instr_Inst_n_1\,
      Q => ex_reservation,
      R => '0'
    );
\Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1\: entity work.system_microblaze_0_0_carry_and_46
     port map (
      \Performace_Debug_Control.dbg_stop_if_delay_i_reg\ => \Performace_Debug_Control.dbg_stop_if_delay_i_reg\,
      if_pc_incr_carry0 => if_pc_incr_carry0,
      if_pc_incr_carry1 => if_pc_incr_carry1,
      lopt => lopt_6
    );
WB_Byte_Access_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_byte_access,
      Q => \^wb_byte_access\,
      R => reset_bool_for_rst
    );
WB_DelaySlot_Instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_delayslot_instr,
      Q => \^ifetch\(1),
      R => reset_bool_for_rst
    );
WB_Doublet_Access_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_doublet_access,
      Q => wb_doublet_access,
      R => reset_bool_for_rst
    );
WB_PC_Valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_valid_instr,
      Q => wb_pc_valid,
      R => reset_bool_for_rst
    );
WB_Read_Imm_Reg_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_read_imm_reg_1,
      Q => wb_read_imm_reg_1,
      R => reset_bool_for_rst
    );
WB_Read_Imm_Reg_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_read_imm_reg,
      Q => wb_read_imm_reg,
      R => reset_bool_for_rst
    );
Write_Strobe_INST_0_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000A8AA"
    )
        port map (
      I0 => ex_valid,
      I1 => dbg_stop_if_delay_i,
      I2 => Dbg_Disable,
      I3 => \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_1\,
      I4 => ex_Take_Intr_or_Exc,
      I5 => ex_Interrupt_i,
      O => Write_Strobe_INST_0_i_1_n_0
    );
active_wakeup_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A8"
    )
        port map (
      I0 => \^sleep_decode\,
      I1 => Wakeup(0),
      I2 => Wakeup(1),
      O => active_wakeup0
    );
active_wakeup_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => active_wakeup0,
      Q => active_wakeup,
      R => reset_bool_for_rst
    );
dbg_wakeup_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAACCCF"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Dbg_Disable,
      I2 => \^sleep_decode\,
      I3 => sleep_reset_mode_reg,
      I4 => Scan_Reset_Sel,
      O => no_sleeping
    );
ex_Instr_Excep_combo_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_MuxCy[10].OF_Piperun_Stage_n_6\,
      Q => ex_Instr_Excep_combo,
      R => '0'
    );
ex_Interrupt_Brk_combo_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"4C4C4C0C"
    )
        port map (
      I0 => ex_atomic_Instruction_Pair,
      I1 => \control_reg_reg[3]\,
      I2 => ex_valid_keep,
      I3 => ex_Take_Intr_or_Exc,
      I4 => ex_Interrupt_Brk_combo_i_3_n_0,
      O => of_Interrupt
    );
ex_Interrupt_Brk_combo_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAEAAAEAAAEFFFF"
    )
        port map (
      I0 => ex_Interrupt_i,
      I1 => \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_1\,
      I2 => Dbg_Disable,
      I3 => dbg_stop_if_delay_i,
      I4 => \^ex_move_to_msr_instr\,
      I5 => \^wb_sel_spr_shr\,
      O => ex_Interrupt_Brk_combo_i_3_n_0
    );
ex_Interrupt_Brk_combo_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_Interrupt,
      Q => ex_Interrupt_i,
      R => reset_bool_for_rst
    );
ex_MSR_set_decode_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^wb_sel_spr_shr\,
      Q => \^wb_sel_spr_shr\,
      R => reset_bool_for_rst
    );
ex_Sel_SPR_BTR_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_Sel_SPR_BTR,
      Q => ex_Sel_SPR_BTR,
      R => reset_bool_for_rst
    );
ex_Sel_SPR_EAR_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_Sel_SPR_EAR,
      Q => ex_Sel_SPR_EAR,
      R => reset_bool_for_rst
    );
ex_Sel_SPR_EDR_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_Sel_SPR_EDR,
      Q => ex_Sel_SPR_EDR,
      R => reset_bool_for_rst
    );
ex_Sel_SPR_ESR_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_Sel_SPR_ESR,
      Q => ex_Sel_SPR_ESR,
      R => reset_bool_for_rst
    );
ex_Sel_SPR_FSR_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_Sel_SPR_FSR,
      Q => ex_Sel_SPR_FSR,
      R => reset_bool_for_rst
    );
ex_Sel_SPR_PVR_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_Sel_SPR_PVR,
      Q => ex_Sel_SPR_PVR,
      R => reset_bool_for_rst
    );
ex_Sel_SPR_SHR_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_Sel_SPR_SHR,
      Q => ex_Sel_SPR_SHR,
      R => reset_bool_for_rst
    );
ex_Sel_SPR_SLR_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_Sel_SPR_SLR,
      Q => ex_Sel_SPR_SLR,
      R => reset_bool_for_rst
    );
ex_Take_Intr_or_Exc_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_MuxCy[10].OF_Piperun_Stage_n_1\,
      Q => ex_Take_Intr_or_Exc,
      R => '0'
    );
ex_Write_DCache_decode_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_Write_DCache_decode_cmb,
      Q => ex_write_dcache_instr,
      R => reset_bool_for_rst
    );
ex_Write_ICache_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_Write_ICache_i_cmb,
      Q => ex_Write_ICache_i,
      R => reset_bool_for_rst
    );
ex_alu_sel_logic_i_reg: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_172,
      Q => \^ex_alu_sel_logic\,
      S => reset_bool_for_rst
    );
ex_atomic_Instruction_Pair_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_atomic_Instruction_Pair0,
      Q => ex_atomic_Instruction_Pair,
      R => reset_bool_for_rst
    );
ex_branch_with_delayslot_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_92,
      Q => ex_branch_with_delayslot,
      R => reset_bool_for_rst
    );
ex_bt_hit_hold_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_MuxCy[3].OF_Piperun_Stage_n_6\,
      Q => mem_jump_hit0,
      R => '0'
    );
ex_delayslot_Instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_delayslot_Instr0,
      Q => ex_delayslot_Instr,
      R => reset_bool_for_rst
    );
ex_enable_alu_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_96,
      Q => EX_Enable_ALU,
      R => reset_bool_for_rst
    );
ex_enable_sext_shift_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_enable_sext_shift_i0,
      Q => ex_Enable_Sext_Shift,
      R => reset_bool_for_rst
    );
ex_first_cycle_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_MuxCy[10].OF_Piperun_Stage_n_4\,
      Q => ex_first_cycle,
      R => '0'
    );
\ex_gpr_write_addr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op3_rd_addr\(0),
      Q => \ex_gpr_write_addr_reg_n_0_[0]\,
      R => reset_bool_for_rst
    );
\ex_gpr_write_addr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op3_rd_addr\(1),
      Q => I2,
      R => reset_bool_for_rst
    );
\ex_gpr_write_addr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op3_rd_addr\(2),
      Q => I4,
      R => reset_bool_for_rst
    );
\ex_gpr_write_addr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op3_rd_addr\(3),
      Q => I0,
      R => reset_bool_for_rst
    );
\ex_gpr_write_addr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op3_rd_addr\(4),
      Q => \ex_gpr_write_addr_reg_n_0_[4]\,
      R => reset_bool_for_rst
    );
ex_gpr_write_dbg_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I1_n_159,
      Q => ex_gpr_write_dbg,
      R => '0'
    );
ex_gpr_write_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I1_n_157,
      Q => ex_gpr_write_reg_n_0,
      R => '0'
    );
\ex_instr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr(0),
      Q => ex_instr(0),
      R => '0'
    );
\ex_instr_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op3_rd_addr\(4),
      Q => ex_instr(10),
      R => '0'
    );
\ex_instr_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op1_rd_addr\(0),
      Q => ex_instr(11),
      R => '0'
    );
\ex_instr_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op1_rd_addr\(1),
      Q => ex_instr(12),
      R => '0'
    );
\ex_instr_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op1_rd_addr\(2),
      Q => ex_instr(13),
      R => '0'
    );
\ex_instr_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op1_rd_addr\(3),
      Q => ex_instr(14),
      R => '0'
    );
\ex_instr_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op1_rd_addr\(4),
      Q => ex_instr(15),
      R => '0'
    );
\ex_instr_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(0),
      Q => ex_instr(16),
      R => '0'
    );
\ex_instr_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(1),
      Q => ex_instr(17),
      R => '0'
    );
\ex_instr_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(2),
      Q => ex_instr(18),
      R => '0'
    );
\ex_instr_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(3),
      Q => ex_instr(19),
      R => '0'
    );
\ex_instr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr(1),
      Q => ex_instr(1),
      R => '0'
    );
\ex_instr_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(4),
      Q => ex_instr(20),
      R => '0'
    );
\ex_instr_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(5),
      Q => ex_instr(21),
      R => '0'
    );
\ex_instr_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(6),
      Q => ex_instr(22),
      R => '0'
    );
\ex_instr_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(7),
      Q => ex_instr(23),
      R => '0'
    );
\ex_instr_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(8),
      Q => ex_instr(24),
      R => '0'
    );
\ex_instr_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(9),
      Q => ex_instr(25),
      R => '0'
    );
\ex_instr_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(10),
      Q => ex_instr(26),
      R => '0'
    );
\ex_instr_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(11),
      Q => \ex_instr_reg_n_0_[27]\,
      R => '0'
    );
\ex_instr_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(12),
      Q => ex_instr(28),
      R => '0'
    );
\ex_instr_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(13),
      Q => ex_instr(29),
      R => '0'
    );
\ex_instr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr(2),
      Q => ex_instr(2),
      R => '0'
    );
\ex_instr_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(14),
      Q => \ex_instr_reg_n_0_[30]\,
      R => '0'
    );
\ex_instr_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_imm_data\(15),
      Q => ex_instr(31),
      R => '0'
    );
\ex_instr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr(3),
      Q => ex_instr(3),
      R => '0'
    );
\ex_instr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr(4),
      Q => ex_instr(4),
      R => '0'
    );
\ex_instr_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr(5),
      Q => ex_instr(5),
      R => '0'
    );
\ex_instr_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op3_rd_addr\(0),
      Q => ex_instr(6),
      R => '0'
    );
\ex_instr_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op3_rd_addr\(1),
      Q => ex_instr(7),
      R => '0'
    );
\ex_instr_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op3_rd_addr\(2),
      Q => ex_instr(8),
      R => '0'
    );
\ex_instr_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op3_rd_addr\(3),
      Q => ex_instr(9),
      R => '0'
    );
ex_is_div_instr_I_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I1_n_158,
      Q => EX_Is_Div_Instr,
      R => '0'
    );
ex_is_mul_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_MuxCy[10].OF_Piperun_Stage_n_2\,
      Q => ex_div_unsigned,
      R => '0'
    );
ex_is_multi_instr2_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_145,
      Q => ex_is_multi_instr2,
      R => reset_bool_for_rst
    );
ex_is_multi_or_load_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_is_multi_or_load_instr0,
      Q => ex_is_multi_or_load_instr,
      R => reset_bool_for_rst
    );
ex_jump_hold_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => jump_logic_I1_n_13,
      Q => ex_jump_hold,
      R => '0'
    );
ex_jump_nodelay_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAFFAA0200000000"
    )
        port map (
      I0 => IReady,
      I1 => \^wb_halted\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => Dbg_Disable,
      I4 => if_debug_ready_i_reg,
      I5 => if_missed_fetch,
      O => ex_jump_nodelay_i_2_n_0
    );
ex_jump_nodelay_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_MuxCy[10].OF_Piperun_Stage_n_9\,
      Q => ex_jump_nodelay_reg_n_0,
      R => '0'
    );
ex_load_alu_carry_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_164,
      Q => ex_load_alu_carry_reg_n_0,
      R => reset_bool_for_rst
    );
ex_load_shift_carry_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PreFetch_Buffer_I1_n_168,
      Q => ex_load_shift_carry,
      R => reset_bool_for_rst
    );
ex_mbar_decode_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_mbar_decode_cmb,
      Q => ex_mbar_decode,
      R => reset_bool_for_rst
    );
ex_mbar_is_sleep_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_mbar_is_sleep_cmb,
      Q => ex_mbar_is_sleep,
      R => reset_bool_for_rst
    );
ex_mbar_sleep_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"000E"
    )
        port map (
      I0 => ex_mbar_sleep,
      I1 => ex_mbar_sleep0,
      I2 => active_wakeup,
      I3 => reset_bool_for_rst,
      O => ex_mbar_sleep_i_1_n_0
    );
ex_mbar_sleep_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8000"
    )
        port map (
      I0 => ex_first_cycle,
      I1 => ex_mbar_is_sleep,
      I2 => \^using_fpga.native_2\,
      I3 => ex_mbar_decode,
      O => ex_mbar_sleep0
    );
ex_mbar_sleep_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_mbar_sleep_i_1_n_0,
      Q => ex_mbar_sleep,
      R => '0'
    );
ex_mbar_stall_no_sleep_1_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \ex_gpr_write_addr_reg_n_0_[4]\,
      I1 => if_fetch_in_progress,
      I2 => I0,
      I3 => mem_valid_instr,
      O => ex_mbar_stall_no_sleep_10
    );
ex_mbar_stall_no_sleep_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_mbar_stall_no_sleep_10,
      Q => ex_mbar_stall_no_sleep_1,
      R => reset_bool_for_rst
    );
ex_mfsmsr_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_Sel_SPR_MSR3_out,
      Q => ex_mfsmsr_i,
      R => reset_bool_for_rst
    );
ex_move_to_MSR_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_move_to_MSR_instr29_out,
      Q => \^ex_move_to_msr_instr\,
      R => reset_bool_for_rst
    );
\ex_opcode_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr(0),
      Q => ex_opcode(0),
      R => reset_bool_for_rst
    );
\ex_opcode_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr(1),
      Q => ex_opcode(1),
      R => reset_bool_for_rst
    );
\ex_opcode_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr(2),
      Q => ex_opcode(2),
      R => reset_bool_for_rst
    );
\ex_opcode_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr(3),
      Q => ex_opcode(3),
      R => reset_bool_for_rst
    );
\ex_opcode_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr(4),
      Q => ex_opcode(4),
      R => reset_bool_for_rst
    );
\ex_opcode_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr(5),
      Q => ex_opcode(5),
      R => reset_bool_for_rst
    );
ex_read_imm_reg_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_read_imm_reg,
      Q => ex_read_imm_reg_1,
      R => reset_bool_for_rst
    );
ex_read_imm_reg_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA02"
    )
        port map (
      I0 => of_read_imm_reg_ii,
      I1 => \^wb_halted\,
      I2 => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      I3 => Dbg_Disable,
      O => ex_read_imm_reg_i_1_n_0
    );
ex_read_imm_reg_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_read_imm_reg_i_1_n_0,
      Q => ex_read_imm_reg,
      R => reset_bool_for_rst
    );
ex_sel_alu_i_reg: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_sel_alu_i0,
      Q => ex_sel_alu,
      S => reset_bool_for_rst
    );
ex_set_MSR_IE_instr_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => \ex_which_branch_reg_n_0_[10]\,
      I1 => p_82_in,
      I2 => of_set_MSR_IE_hold_reg_n_0,
      O => of_set_MSR_IE_hold0
    );
ex_set_MSR_IE_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_set_MSR_IE_hold0,
      Q => ex_set_MSR_IE_instr,
      R => reset_bool_for_rst
    );
ex_set_bip_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_set_bip,
      Q => ex_set_bip_reg_n_0,
      R => reset_bool_for_rst
    );
ex_sleep_i_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"000E"
    )
        port map (
      I0 => \^sleep_decode\,
      I1 => ex_sleep_i_i_2_n_0,
      I2 => reset_bool_for_rst,
      I3 => active_wakeup,
      O => ex_sleep_i_i_1_n_0
    );
ex_sleep_i_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AA02AAAAAAAAAAAA"
    )
        port map (
      I0 => ex_mbar_sleep,
      I1 => ex_first_cycle,
      I2 => ex_mbar_stall_no_sleep_1,
      I3 => ex_jump_hold,
      I4 => \^using_fpga.native_2\,
      I5 => ex_mbar_decode,
      O => ex_sleep_i_i_2_n_0
    );
ex_sleep_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_sleep_i_i_1_n_0,
      Q => \^sleep_decode\,
      R => '0'
    );
ex_valid_jump_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => jump_logic_I1_n_10,
      Q => ex_valid_jump,
      R => '0'
    );
ex_valid_keep_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_MuxCy[10].OF_Piperun_Stage_n_3\,
      Q => ex_valid_keep,
      R => '0'
    );
ex_valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => jump_logic_I1_n_11,
      Q => ex_valid,
      R => '0'
    );
\ex_which_branch_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op3_rd_addr\(4),
      Q => \ex_which_branch_reg_n_0_[10]\,
      R => reset_bool_for_rst
    );
\ex_which_branch_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^of_gpr_op3_rd_addr\(3),
      Q => p_0_in81_in,
      R => reset_bool_for_rst
    );
exception_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000BA8A"
    )
        port map (
      I0 => executing_reg_0(0),
      I1 => \^wb_halted\,
      I2 => wb_valid_reg_n_0,
      I3 => \^ifetch\(8),
      I4 => Rst18_out,
      I5 => executing0,
      O => exception_reg
    );
executing_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FBF0"
    )
        port map (
      I0 => \^wb_halted\,
      I1 => wb_valid_reg_n_0,
      I2 => executing0,
      I3 => executing_reg_0(1),
      O => executing_reg
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => of_Sel_SPR_FSR
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => of_Sel_SPR_PVR
    );
i_10: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => of_PVR_Select(2)
    );
i_11: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => of_PVR_Select(3)
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => of_Sel_SPR_EAR
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => of_Sel_SPR_SLR
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => of_Sel_SPR_SHR
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => of_Sel_SPR_ESR
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => of_Sel_SPR_EDR
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => of_Sel_SPR_BTR
    );
i_8: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => of_PVR_Select(0)
    );
i_9: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => of_PVR_Select(1)
    );
if_fetch_in_progress_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PreFetch_Buffer_I1_n_156,
      Q => if_fetch_in_progress,
      R => '0'
    );
if_missed_fetch_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => jump_logic_I1_n_7,
      Q => if_missed_fetch,
      R => '0'
    );
if_pc_incr_carry_and_0: entity work.system_microblaze_0_0_carry_and_47
     port map (
      if_missed_fetch => if_missed_fetch,
      if_pc_incr_carry0 => if_pc_incr_carry0,
      lopt => \^lopt_3\,
      lopt_1 => \^lopt_4\,
      lopt_2 => \^lopt_5\
    );
if_pc_incr_carry_and_3: entity work.system_microblaze_0_0_carry_and_48
     port map (
      if_fetch_for_timing_optimization1 => if_fetch_for_timing_optimization1,
      if_pc_incr_carry1 => if_pc_incr_carry1,
      if_pc_incr_carry3 => if_pc_incr_carry3,
      lopt => lopt_7,
      lopt_1 => lopt_8
    );
jump_logic_I1: entity work.system_microblaze_0_0_jump_logic
     port map (
      Clk => Clk,
      Dbg_Disable => Dbg_Disable,
      \EX_Branch_CMP_Op1_reg[0]\(0) => \EX_Branch_CMP_Op1_reg[0]_0\(0),
      EX_MBAR_Stall => EX_MBAR_Stall,
      EX_Valid => ex_valid_jump,
      IB_Ready => IB_Ready,
      LOCKSTEP_Master_Out(1 downto 0) => LOCKSTEP_Master_Out(1 downto 0),
      \Performace_Debug_Control.dbg_stop_if_delay_i_reg\ => \^ex_exception_taken\,
      \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\ => \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_1\,
      \Using_FPGA.Native\ => jump_logic_I1_n_9,
      \Using_FPGA.Native_0\ => jump_logic_I1_n_12,
      \Using_FPGA.Native_1\ => of_PipeRun_for_ce,
      \Using_FPGA.Native_2\ => PreFetch_Buffer_I1_n_54,
      dbg_stop_if_delay_i => dbg_stop_if_delay_i,
      ex_Instr_Excep_combo => ex_Instr_Excep_combo,
      ex_Interrupt_i => ex_Interrupt_i,
      ex_Take_Intr_or_Exc => ex_Take_Intr_or_Exc,
      ex_branch_with_delayslot => ex_branch_with_delayslot,
      ex_branch_with_delayslot_reg => PreFetch_Buffer_I1_n_169,
      ex_branch_with_delayslot_reg_0 => \^using_fpga.native_1\,
      ex_delayslot_Instr0 => ex_delayslot_Instr0,
      ex_delayslot_Instr2 => ex_delayslot_Instr2,
      ex_first_cycle => ex_first_cycle,
      ex_jump_hold => ex_jump_hold,
      ex_jump_hold_reg => jump_logic_I1_n_13,
      ex_jump_nodelay_reg => ex_jump_nodelay_reg_n_0,
      ex_jump_q => ex_jump_q,
      ex_mbar_decode => ex_mbar_decode,
      ex_mbar_sleep => ex_mbar_sleep,
      ex_mbar_stall_no_sleep_1 => ex_mbar_stall_no_sleep_1,
      ex_op1_cmp_eq => ex_op1_cmp_eq,
      ex_op1_cmp_eq1 => ex_op1_cmp_eq1,
      ex_op1_cmp_eq_n5_out => ex_op1_cmp_eq_n5_out,
      ex_op1_cmp_equal => ex_op1_cmp_equal,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      ex_op1_zero => ex_op1_zero,
      \^ex_valid\ => ex_valid,
      ex_valid_jump_reg => jump_logic_I1_n_10,
      ex_valid_jump_reg_0 => ex_valid_jump,
      ex_valid_reg => jump_logic_I1_n_11,
      force12_out => force12_out,
      force_Val10_out => force_Val10_out,
      if_fetch_in_progress_reg(0) => \^ifetch\(134),
      if_missed_fetch => if_missed_fetch,
      if_missed_fetch_reg => jump_logic_I1_n_7,
      \if_pc_reg[0]\(0) => IF_PC_Write,
      keep_jump_taken_with_ds => keep_jump_taken_with_ds,
      keep_jump_taken_with_ds_reg => jump_logic_I1_n_14,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      mem_exception_from_ex => mem_exception_from_ex,
      mem_jump_taken0 => mem_jump_taken0,
      mem_valid_instr => mem_valid_instr,
      mem_valid_reg => \^mem_exception_taken\,
      of_Take_Interrupt_hold_reg => \^of_take_interrupt\,
      of_next_ex_valid => of_next_ex_valid,
      of_read_imm_reg_ii => of_read_imm_reg_ii,
      of_read_imm_reg_ii_reg => jump_logic_I1_n_8,
      of_valid => of_valid,
      \out\(0) => reset_bool_for_rst,
      p_9_in => p_9_in,
      use_Reg_Neg_DI1_out => use_Reg_Neg_DI1_out,
      use_Reg_Neg_S3_out => use_Reg_Neg_S3_out,
      wb_exception_i_reg => \^wb_gpr_write_i_reg_0\,
      \wb_exception_kind_i_reg[27]\ => \^wb_halted\
    );
keep_jump_taken_with_ds_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => jump_logic_I1_n_14,
      Q => keep_jump_taken_with_ds,
      R => '0'
    );
mb_halted_1_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^wb_halted\,
      I1 => \Performace_Debug_Control.dbg_state_nohalt_reg\,
      O => \^dbg_state_i\
    );
mem_PipeRun_carry_and: entity work.system_microblaze_0_0_carry_and_49
     port map (
      E(0) => \^trace_wb_jump_hit_reg_0\,
      ex_branch_with_delayslot_reg => \^using_fpga.native_1\,
      ex_valid_reg => mem_valid_i_2_n_0,
      flush_pipe => flush_pipe,
      lopt => lopt_14,
      lopt_1 => lopt_15,
      lopt_2 => lopt_16,
      mem_exception_from_ex => mem_exception_from_ex,
      mem_gpr_write => mem_gpr_write,
      mem_gpr_write_dbg => mem_gpr_write_dbg,
      mem_valid_instr => mem_valid_instr,
      mem_valid_reg => mem_PipeRun_carry_and_n_3,
      mem_wait_on_ready_N => mem_wait_on_ready_N,
      \out\(0) => reset_bool_for_rst,
      wb_exception_i_reg => \^wb_gpr_write_i_reg_0\,
      wb_gpr_write_dbg0 => wb_gpr_write_dbg0,
      wb_gpr_write_i0 => wb_gpr_write_i0,
      wb_piperun => \^wb_piperun\,
      wb_valid_reg => mem_PipeRun_carry_and_n_4,
      wb_valid_reg_0 => wb_valid_reg_n_0
    );
mem_Write_DCache_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"07000000"
    )
        port map (
      I0 => mem_valid_instr,
      I1 => mem_exception_from_ex,
      I2 => \^wb_gpr_write_i_reg_0\,
      I3 => \^using_fpga.native_2\,
      I4 => ex_write_dcache_instr,
      O => mem_Write_DCache_i_1_n_0
    );
mem_Write_DCache_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => mem_Write_DCache_i_1_n_0,
      Q => mem_Write_DCache,
      R => reset_bool_for_rst
    );
mem_byte_access_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \^ex_byte_access\,
      Q => mem_byte_access,
      R => reset_bool_for_rst
    );
mem_delayslot_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_delayslot_Instr,
      Q => mem_delayslot_instr,
      R => reset_bool_for_rst
    );
mem_doublet_access_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \^ex_doublet_access\,
      Q => mem_doublet_access,
      R => reset_bool_for_rst
    );
mem_exception_from_ex_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF001000000000"
    )
        port map (
      I0 => dbg_stop_if_delay_i,
      I1 => Dbg_Disable,
      I2 => \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_1\,
      I3 => ex_Take_Intr_or_Exc,
      I4 => ex_Interrupt_i,
      I5 => ex_valid,
      O => \^ex_exception_taken\
    );
mem_exception_from_ex_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \^ex_exception_taken\,
      Q => mem_exception_from_ex,
      R => reset_bool_for_rst
    );
\mem_gpr_write_addr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_gpr_write_addr_reg_n_0_[0]\,
      Q => mem_gpr_write_addr(0),
      R => reset_bool_for_rst
    );
\mem_gpr_write_addr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => I2,
      Q => mem_gpr_write_addr(1),
      R => reset_bool_for_rst
    );
\mem_gpr_write_addr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => I4,
      Q => mem_gpr_write_addr(2),
      R => reset_bool_for_rst
    );
\mem_gpr_write_addr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => I0,
      Q => mem_gpr_write_addr(3),
      R => reset_bool_for_rst
    );
\mem_gpr_write_addr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_gpr_write_addr_reg_n_0_[4]\,
      Q => mem_gpr_write_addr(4),
      R => reset_bool_for_rst
    );
mem_gpr_write_dbg_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_MuxCy[3].OF_Piperun_Stage_n_7\,
      Q => mem_gpr_write_dbg,
      R => flush_pipe
    );
mem_gpr_write_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_MuxCy[3].OF_Piperun_Stage_n_5\,
      Q => mem_gpr_write,
      R => '0'
    );
\mem_instr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(0),
      Q => mem_instr(0),
      R => '0'
    );
\mem_instr_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(10),
      Q => mem_instr(10),
      R => '0'
    );
\mem_instr_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(11),
      Q => mem_instr(11),
      R => '0'
    );
\mem_instr_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(12),
      Q => mem_instr(12),
      R => '0'
    );
\mem_instr_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(13),
      Q => mem_instr(13),
      R => '0'
    );
\mem_instr_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(14),
      Q => mem_instr(14),
      R => '0'
    );
\mem_instr_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(15),
      Q => mem_instr(15),
      R => '0'
    );
\mem_instr_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(16),
      Q => mem_instr(16),
      R => '0'
    );
\mem_instr_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(17),
      Q => mem_instr(17),
      R => '0'
    );
\mem_instr_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(18),
      Q => mem_instr(18),
      R => '0'
    );
\mem_instr_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(19),
      Q => mem_instr(19),
      R => '0'
    );
\mem_instr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(1),
      Q => mem_instr(1),
      R => '0'
    );
\mem_instr_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(20),
      Q => mem_instr(20),
      R => '0'
    );
\mem_instr_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(21),
      Q => mem_instr(21),
      R => '0'
    );
\mem_instr_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(22),
      Q => mem_instr(22),
      R => '0'
    );
\mem_instr_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(23),
      Q => mem_instr(23),
      R => '0'
    );
\mem_instr_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(24),
      Q => mem_instr(24),
      R => '0'
    );
\mem_instr_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(25),
      Q => mem_instr(25),
      R => '0'
    );
\mem_instr_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(26),
      Q => mem_instr(26),
      R => '0'
    );
\mem_instr_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[27]\,
      Q => mem_instr(27),
      R => '0'
    );
\mem_instr_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(28),
      Q => mem_instr(28),
      R => '0'
    );
\mem_instr_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(29),
      Q => mem_instr(29),
      R => '0'
    );
\mem_instr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(2),
      Q => mem_instr(2),
      R => '0'
    );
\mem_instr_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => \ex_instr_reg_n_0_[30]\,
      Q => mem_instr(30),
      R => '0'
    );
\mem_instr_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(31),
      Q => mem_instr(31),
      R => '0'
    );
\mem_instr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(3),
      Q => mem_instr(3),
      R => '0'
    );
\mem_instr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(4),
      Q => mem_instr(4),
      R => '0'
    );
\mem_instr_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(5),
      Q => mem_instr(5),
      R => '0'
    );
\mem_instr_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(6),
      Q => mem_instr(6),
      R => '0'
    );
\mem_instr_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(7),
      Q => mem_instr(7),
      R => '0'
    );
\mem_instr_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(8),
      Q => mem_instr(8),
      R => '0'
    );
\mem_instr_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_instr(9),
      Q => mem_instr(9),
      R => '0'
    );
mem_is_msr_instr_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => \^using_fpga.native_2\,
      I1 => \^wb_sel_spr_shr\,
      I2 => ex_mfsmsr_i,
      O => mem_is_msr_instr0
    );
mem_is_msr_instr_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0404040404040004"
    )
        port map (
      I0 => ex_Take_Intr_or_Exc,
      I1 => ex_valid,
      I2 => ex_Interrupt_i,
      I3 => \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_1\,
      I4 => Dbg_Disable,
      I5 => dbg_stop_if_delay_i,
      O => \^using_fpga.native_2\
    );
mem_is_msr_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => mem_is_msr_instr0,
      Q => \^mem_sel_msr\,
      R => reset_bool_for_rst
    );
mem_is_multi_or_load_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => mem_is_multi_or_load_instr0,
      Q => mem_is_multi_or_load_instr,
      R => reset_bool_for_rst
    );
mem_jump_hit_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => mem_jump_hit0,
      Q => mem_jump_hit,
      R => reset_bool_for_rst
    );
mem_jump_taken_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => mem_jump_taken0,
      Q => mem_jump_taken,
      R => reset_bool_for_rst
    );
mem_load_store_access_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => mem_load_store_access0,
      Q => mem_load_store_access,
      R => reset_bool_for_rst
    );
mem_read_imm_reg_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_read_imm_reg_1,
      Q => mem_read_imm_reg_1,
      R => reset_bool_for_rst
    );
mem_read_imm_reg_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^using_fpga.native_1\,
      D => ex_read_imm_reg,
      Q => mem_read_imm_reg,
      R => reset_bool_for_rst
    );
mem_valid_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => ex_valid,
      I1 => ex_Take_Intr_or_Exc,
      O => mem_valid_i_2_n_0
    );
mem_valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_PipeRun_carry_and_n_3,
      Q => mem_valid_instr,
      R => '0'
    );
mem_wait_on_ready_N_carry_or: entity work.system_microblaze_0_0_carry_or_50
     port map (
      lopt => lopt_12,
      lopt_1 => lopt_13,
      mem_Write_DCache => mem_Write_DCache,
      mem_databus_ready => mem_databus_ready,
      mem_load_store_access => mem_load_store_access,
      mem_valid_instr => mem_valid_instr,
      mem_wait_on_ready_N => mem_wait_on_ready_N
    );
of_Take_Interrupt_hold_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => of_Take_Interrupt_hold,
      I1 => \^restore_wb_msr_to_ex\,
      O => \^of_take_interrupt\
    );
of_Take_Interrupt_hold_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_MuxCy[10].OF_Piperun_Stage_n_8\,
      Q => of_Take_Interrupt_hold,
      R => '0'
    );
of_read_imm_reg_ii_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => jump_logic_I1_n_8,
      Q => of_read_imm_reg_ii,
      R => '0'
    );
of_set_MSR_IE_hold_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_MuxCy[3].OF_Piperun_Stage_n_8\,
      Q => of_set_MSR_IE_hold_reg_n_0,
      R => '0'
    );
sign_16_23_inferred_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => \EX_Op1_reg[0]\(7),
      I1 => \^using_fpga.native_7\(0),
      I2 => \^using_fpga.native_7\(1),
      O => \Using_FPGA.Native_8\
    );
wb_PipeRun_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_wb_jump_hit_reg_0\,
      Q => \^wb_piperun\,
      R => reset_bool_for_rst
    );
wb_exception_i_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => mem_valid_instr,
      I1 => mem_exception_from_ex,
      O => \^mem_exception_taken\
    );
wb_exception_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => \^mem_exception_taken\,
      Q => \^wb_gpr_write_i_reg_0\,
      R => reset_bool_for_rst
    );
\wb_exception_kind_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_exception_kind(27),
      Q => \^ifetch\(7),
      R => reset_bool_for_rst
    );
\wb_exception_kind_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_exception_kind(28),
      Q => \^ifetch\(6),
      R => reset_bool_for_rst
    );
\wb_exception_kind_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_exception_kind(29),
      Q => \^ifetch\(5),
      R => reset_bool_for_rst
    );
\wb_exception_kind_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_exception_kind(30),
      Q => \^ifetch\(4),
      R => reset_bool_for_rst
    );
\wb_exception_kind_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_exception_kind(31),
      Q => \^ifetch\(3),
      R => reset_bool_for_rst
    );
\wb_gpr_write_addr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_gpr_write_addr(0),
      Q => wb_new_esr_ess_rx(0),
      R => reset_bool_for_rst
    );
\wb_gpr_write_addr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_gpr_write_addr(1),
      Q => wb_new_esr_ess_rx(1),
      R => reset_bool_for_rst
    );
\wb_gpr_write_addr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_gpr_write_addr(2),
      Q => wb_new_esr_ess_rx(2),
      R => reset_bool_for_rst
    );
\wb_gpr_write_addr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_gpr_write_addr(3),
      Q => wb_new_esr_ess_rx(3),
      R => reset_bool_for_rst
    );
\wb_gpr_write_addr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_gpr_write_addr(4),
      Q => wb_new_esr_ess_rx(4),
      R => reset_bool_for_rst
    );
wb_gpr_write_dbg_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_gpr_write_dbg0,
      Q => wb_gpr_wr_dbg,
      R => '0'
    );
wb_gpr_write_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_gpr_write_i0,
      Q => wb_gpr_write_i,
      R => '0'
    );
\wb_instr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(0),
      Q => \^ifetch\(63),
      R => '0'
    );
\wb_instr_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(10),
      Q => \^ifetch\(53),
      R => '0'
    );
\wb_instr_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(11),
      Q => \^ifetch\(52),
      R => '0'
    );
\wb_instr_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(12),
      Q => \^ifetch\(51),
      R => '0'
    );
\wb_instr_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(13),
      Q => \^ifetch\(50),
      R => '0'
    );
\wb_instr_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(14),
      Q => \^ifetch\(49),
      R => '0'
    );
\wb_instr_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(15),
      Q => \^ifetch\(48),
      R => '0'
    );
\wb_instr_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(16),
      Q => \^ifetch\(47),
      R => '0'
    );
\wb_instr_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(17),
      Q => \^ifetch\(46),
      R => '0'
    );
\wb_instr_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(18),
      Q => \^ifetch\(45),
      R => '0'
    );
\wb_instr_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(19),
      Q => \^ifetch\(44),
      R => '0'
    );
\wb_instr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(1),
      Q => \^ifetch\(62),
      R => '0'
    );
\wb_instr_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(20),
      Q => \^ifetch\(43),
      R => '0'
    );
\wb_instr_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(21),
      Q => \^ifetch\(42),
      R => '0'
    );
\wb_instr_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(22),
      Q => \^ifetch\(41),
      R => '0'
    );
\wb_instr_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(23),
      Q => \^ifetch\(40),
      R => '0'
    );
\wb_instr_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(24),
      Q => \^ifetch\(39),
      R => '0'
    );
\wb_instr_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(25),
      Q => \^ifetch\(38),
      R => '0'
    );
\wb_instr_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(26),
      Q => \^ifetch\(37),
      R => '0'
    );
\wb_instr_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(27),
      Q => \^ifetch\(36),
      R => '0'
    );
\wb_instr_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(28),
      Q => \^ifetch\(35),
      R => '0'
    );
\wb_instr_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(29),
      Q => \^ifetch\(34),
      R => '0'
    );
\wb_instr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(2),
      Q => \^ifetch\(61),
      R => '0'
    );
\wb_instr_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(30),
      Q => \^ifetch\(33),
      R => '0'
    );
\wb_instr_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(31),
      Q => \^ifetch\(32),
      R => '0'
    );
\wb_instr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(3),
      Q => \^ifetch\(60),
      R => '0'
    );
\wb_instr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(4),
      Q => \^ifetch\(59),
      R => '0'
    );
\wb_instr_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(5),
      Q => \^ifetch\(58),
      R => '0'
    );
\wb_instr_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(6),
      Q => \^ifetch\(57),
      R => '0'
    );
\wb_instr_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(7),
      Q => \^ifetch\(56),
      R => '0'
    );
\wb_instr_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(8),
      Q => \^ifetch\(55),
      R => '0'
    );
\wb_instr_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg_0\,
      D => mem_instr(9),
      Q => \^ifetch\(54),
      R => '0'
    );
wb_reset_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => reset_bool_for_rst,
      Q => wb_reset,
      R => '0'
    );
wb_valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => mem_PipeRun_carry_and_n_4,
      Q => wb_valid_reg_n_0,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_instr_mux is
  port (
    I041_out : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 32 downto 0 );
    I139_out : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 32 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_instr_mux : entity is "instr_mux";
end system_microblaze_0_0_instr_mux;

architecture STRUCTURE of system_microblaze_0_0_instr_mux is
begin
\Mux_LD.LD_inst\: entity work.system_microblaze_0_0_mux_bus
     port map (
      I041_out => I041_out,
      I139_out => I139_out,
      Instr(0 to 31) => Instr(0 to 31),
      LOCKSTEP_Master_Out(32 downto 0) => LOCKSTEP_Master_Out(32 downto 0),
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native\(0),
      \Using_FPGA.Native_0\(1 downto 0) => \Using_FPGA.Native_0\(1 downto 0),
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(0),
      Y(0) => \in\(32),
      Y(1) => \in\(31),
      Y(2) => \in\(30),
      Y(3) => \in\(29),
      Y(4) => \in\(28),
      Y(5) => \in\(27),
      Y(6) => \in\(26),
      Y(7) => \in\(25),
      Y(8) => \in\(24),
      Y(9) => \in\(23),
      Y(10) => \in\(22),
      Y(11) => \in\(9),
      Y(12) => \in\(8),
      Y(13) => \in\(7),
      Y(14) => \in\(6),
      Y(15) => \in\(5),
      Y(16) => \in\(4),
      Y(17) => \in\(3),
      Y(18) => \in\(2),
      Y(19) => \in\(1),
      Y(20) => \in\(0),
      Y(21) => \in\(21),
      Y(22) => \in\(20),
      Y(23) => \in\(19),
      Y(24) => \in\(18),
      Y(25) => \in\(17),
      Y(26) => \in\(16),
      Y(27) => \in\(15),
      Y(28) => \in\(14),
      Y(29) => \in\(13),
      Y(30) => \in\(12),
      Y(31) => \in\(11),
      \in\(0) => \in\(10)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_Data_Flow_gti is
  port (
    Q : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    ex_op1_zero : out STD_LOGIC;
    \WB_MEM_Result_reg[0]\ : out STD_LOGIC_VECTOR ( 29 downto 0 );
    wb_MSR_cmb : out STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_MEM_Result_reg[29]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_MSR : out STD_LOGIC_VECTOR ( 2 downto 0 );
    of_MSR : out STD_LOGIC_VECTOR ( 1 downto 0 );
    DI : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3738]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3737]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3736]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3735]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3734]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3733]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3732]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3731]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3730]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3729]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3728]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3727]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3726]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3725]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3724]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3723]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3722]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3721]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3720]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3719]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3718]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3717]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3716]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3715]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3714]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3713]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3712]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3711]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3710]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3709]\ : out STD_LOGIC;
    \Data_Addr[0]\ : out STD_LOGIC_VECTOR ( 119 downto 0 );
    \LOCKSTEP_Out_reg[3769]\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    wb_read_msb_doublet_sel : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    GPR_Op3 : out STD_LOGIC_VECTOR ( 15 downto 0 );
    \WB_MEM_Result_reg[0]_0\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    GPR_Op1 : out STD_LOGIC_VECTOR ( 15 downto 0 );
    \mem_byte_selects_reg[0]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \data_rd_reg_reg[31]\ : out STD_LOGIC;
    \data_rd_reg_reg[30]\ : out STD_LOGIC;
    \data_rd_reg_reg[29]\ : out STD_LOGIC;
    \data_rd_reg_reg[28]\ : out STD_LOGIC;
    \data_rd_reg_reg[27]\ : out STD_LOGIC;
    \data_rd_reg_reg[26]\ : out STD_LOGIC;
    \data_rd_reg_reg[25]\ : out STD_LOGIC;
    \data_rd_reg_reg[24]\ : out STD_LOGIC;
    \data_rd_reg_reg[23]\ : out STD_LOGIC;
    \data_rd_reg_reg[22]\ : out STD_LOGIC;
    \data_rd_reg_reg[21]\ : out STD_LOGIC;
    \data_rd_reg_reg[20]\ : out STD_LOGIC;
    \data_rd_reg_reg[19]\ : out STD_LOGIC;
    \data_rd_reg_reg[18]\ : out STD_LOGIC;
    \data_rd_reg_reg[17]\ : out STD_LOGIC;
    \data_rd_reg_reg[16]\ : out STD_LOGIC;
    \LOCKSTEP_Out_reg[3769]_0\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    \Using_FPGA.Native_9\ : out STD_LOGIC;
    \Using_FPGA.Native_10\ : out STD_LOGIC;
    \Using_FPGA.Native_11\ : out STD_LOGIC;
    \Using_FPGA.Native_12\ : out STD_LOGIC;
    \Using_FPGA.Native_13\ : out STD_LOGIC;
    \Using_FPGA.Native_14\ : out STD_LOGIC;
    \Using_FPGA.Native_15\ : out STD_LOGIC;
    \Using_FPGA.Native_16\ : out STD_LOGIC;
    \Using_FPGA.Native_17\ : out STD_LOGIC;
    \Using_FPGA.Native_18\ : out STD_LOGIC;
    \Using_FPGA.Native_19\ : out STD_LOGIC;
    \Using_FPGA.Native_20\ : out STD_LOGIC;
    \Using_FPGA.Native_21\ : out STD_LOGIC;
    \Using_FPGA.Native_22\ : out STD_LOGIC;
    \Using_FPGA.Native_23\ : out STD_LOGIC;
    \Using_FPGA.Native_24\ : out STD_LOGIC;
    \Using_FPGA.Native_25\ : out STD_LOGIC;
    \Using_FPGA.Native_26\ : out STD_LOGIC;
    \Using_FPGA.Native_27\ : out STD_LOGIC;
    \Using_FPGA.Native_28\ : out STD_LOGIC;
    \Using_FPGA.Native_29\ : out STD_LOGIC;
    \Using_FPGA.Native_30\ : out STD_LOGIC;
    \Using_FPGA.Native_31\ : out STD_LOGIC;
    \Using_FPGA.Native_32\ : out STD_LOGIC;
    \Using_FPGA.Native_33\ : out STD_LOGIC;
    \Using_FPGA.Native_34\ : out STD_LOGIC;
    \Using_FPGA.Native_35\ : out STD_LOGIC;
    \Using_FPGA.Native_36\ : out STD_LOGIC;
    ex_Interrupt_Brk_combo_reg : out STD_LOGIC;
    \Using_Fast_Interrupt.wb_ie_rising_reg\ : out STD_LOGIC;
    \Using_FPGA.Native_37\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 0 to 31 );
    LO : out STD_LOGIC;
    \EX_Op2_reg[0]\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    \LOCKSTEP_Out_reg[3792]\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \LOCKSTEP_Out_reg[3800]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \MEM_DataBus_Addr_reg[30]\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    of_op1_sel_spr : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 15 downto 0 );
    I1 : in STD_LOGIC;
    \Using_FPGA.Native_38\ : in STD_LOGIC;
    \Using_FPGA.Native_39\ : in STD_LOGIC;
    \Using_FPGA.Native_40\ : in STD_LOGIC;
    \Using_FPGA.Native_41\ : in STD_LOGIC;
    \Using_FPGA.Native_42\ : in STD_LOGIC;
    \Using_FPGA.Native_43\ : in STD_LOGIC;
    \Using_FPGA.Native_44\ : in STD_LOGIC;
    \Using_FPGA.Native_45\ : in STD_LOGIC;
    \Using_FPGA.Native_46\ : in STD_LOGIC;
    \Using_FPGA.Native_47\ : in STD_LOGIC;
    \Using_FPGA.Native_48\ : in STD_LOGIC;
    \Using_FPGA.Native_49\ : in STD_LOGIC;
    \Using_FPGA.Native_50\ : in STD_LOGIC;
    \Using_FPGA.Native_51\ : in STD_LOGIC;
    \Using_FPGA.Native_52\ : in STD_LOGIC;
    \Using_FPGA.Native_53\ : in STD_LOGIC;
    \Using_FPGA.Native_54\ : in STD_LOGIC;
    \Using_FPGA.Native_55\ : in STD_LOGIC;
    \Using_FPGA.Native_56\ : in STD_LOGIC;
    \Using_FPGA.Native_57\ : in STD_LOGIC;
    \Using_FPGA.Native_58\ : in STD_LOGIC;
    \Using_FPGA.Native_59\ : in STD_LOGIC;
    \Using_FPGA.Native_60\ : in STD_LOGIC;
    \Using_FPGA.Native_61\ : in STD_LOGIC;
    \Using_FPGA.Native_62\ : in STD_LOGIC;
    \Using_FPGA.Native_63\ : in STD_LOGIC;
    \Using_FPGA.Native_64\ : in STD_LOGIC;
    \Using_FPGA.Native_65\ : in STD_LOGIC;
    \Using_FPGA.Native_66\ : in STD_LOGIC;
    \Using_FPGA.Native_67\ : in STD_LOGIC;
    \Using_FPGA.Native_68\ : in STD_LOGIC;
    ex_use_carry : in STD_LOGIC;
    DI_0 : in STD_LOGIC;
    ex_unsigned_op : in STD_LOGIC;
    \EX_ALU_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    EX_ALU_Sel_Logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    \EX_Op1_reg[24]\ : in STD_LOGIC;
    ex_op1_cmp_equal : in STD_LOGIC;
    ex_op1_cmp_equal_n : in STD_LOGIC;
    R : in STD_LOGIC;
    ex_branch_with_delayslot_reg : in STD_LOGIC;
    EX_Fwd : in STD_LOGIC_VECTOR ( 0 to 31 );
    Clk : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_69\ : in STD_LOGIC;
    \Using_FPGA.Native_70\ : in STD_LOGIC;
    \Using_FPGA.Native_71\ : in STD_LOGIC;
    ex_set_MSR_IE_instr_reg : in STD_LOGIC;
    ex_set_MSR_IE_instr_reg_0 : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \mem_pc_i_reg[0]\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \Performace_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    mem_valid_reg : in STD_LOGIC;
    \wb_exception_kind_i_reg[28]_0\ : in STD_LOGIC;
    mem_daxi_exclusive_failed : in STD_LOGIC;
    ex_reverse_byteorder : in STD_LOGIC;
    ex_doublet_access : in STD_LOGIC;
    ex_byte_access : in STD_LOGIC;
    ex_Take_Intr_or_Exc_reg : in STD_LOGIC;
    wb_sel_spr_shr : in STD_LOGIC;
    ex_move_to_MSR_instr : in STD_LOGIC;
    WB_Doublet_Access_reg : in STD_LOGIC_VECTOR ( 15 downto 0 );
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    of_op1_sel : in STD_LOGIC_VECTOR ( 0 to 1 );
    restore_wb_msr_to_ex : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ : in STD_LOGIC;
    read_register_MSR_1_reg : in STD_LOGIC;
    wb_exception_i_reg : in STD_LOGIC;
    wb_byte_access : in STD_LOGIC;
    \wb_read_lsb_1_sel_reg[0]\ : in STD_LOGIC;
    \wb_read_lsb_1_sel_reg[0]_0\ : in STD_LOGIC;
    \wb_read_lsb_1_sel_reg[0]_1\ : in STD_LOGIC;
    \wb_read_lsb_1_sel_reg[0]_2\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[17]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[25]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[19]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[27]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[21]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[29]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[23]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[31]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[22]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[30]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[20]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[28]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[18]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[26]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[16]\ : in STD_LOGIC;
    \Use_DLMB.wb_dlmb_valid_read_data_reg[24]\ : in STD_LOGIC;
    \wb_read_lsb_1_sel_reg[0]_3\ : in STD_LOGIC;
    \wb_read_lsb_1_sel_reg[0]_4\ : in STD_LOGIC;
    \wb_read_lsb_1_sel_reg[0]_5\ : in STD_LOGIC;
    \wb_read_lsb_1_sel_reg[0]_6\ : in STD_LOGIC;
    ex_cmp_op : in STD_LOGIC;
    ex_swap_byte_instr : in STD_LOGIC;
    mem_sel_msr : in STD_LOGIC;
    \control_reg_reg[3]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Disable : in STD_LOGIC;
    Interrupt : in STD_LOGIC;
    of_Take_Interrupt : in STD_LOGIC;
    \EX_Sext_Op_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    WB_GPR_Wr : in STD_LOGIC;
    WB_Doublet_Access_reg_0 : in STD_LOGIC;
    WB_Doublet_Access_reg_1 : in STD_LOGIC;
    of_gpr_op1_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    of_imm_data : in STD_LOGIC_VECTOR ( 0 to 15 );
    of_gpr_op3_rd_addr : in STD_LOGIC_VECTOR ( 0 to 4 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 );
    WB_Doublet_Access_reg_2 : in STD_LOGIC;
    WB_Doublet_Access_reg_3 : in STD_LOGIC;
    WB_Doublet_Access_reg_4 : in STD_LOGIC;
    WB_Doublet_Access_reg_5 : in STD_LOGIC;
    WB_Doublet_Access_reg_6 : in STD_LOGIC;
    WB_Doublet_Access_reg_7 : in STD_LOGIC;
    WB_Doublet_Access_reg_8 : in STD_LOGIC;
    WB_Doublet_Access_reg_9 : in STD_LOGIC;
    WB_Doublet_Access_reg_10 : in STD_LOGIC;
    WB_Doublet_Access_reg_11 : in STD_LOGIC;
    WB_Doublet_Access_reg_12 : in STD_LOGIC;
    WB_Doublet_Access_reg_13 : in STD_LOGIC;
    WB_Doublet_Access_reg_14 : in STD_LOGIC;
    WB_Doublet_Access_reg_15 : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_72\ : in STD_LOGIC;
    \interrupt_address_d1_reg[0]\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \Using_FPGA.Native_73\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_piperun : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_Data_Flow_gti : entity is "Data_Flow_gti";
end system_microblaze_0_0_Data_Flow_gti;

architecture STRUCTURE of system_microblaze_0_0_Data_Flow_gti is
  signal \ALL_Bits[0].ALU_Bit_I1/S\ : STD_LOGIC;
  signal Byte_Doublet_Handle_gti_I_n_40 : STD_LOGIC;
  signal \^data_addr[0]\ : STD_LOGIC_VECTOR ( 119 downto 0 );
  signal MEM_Fwd : STD_LOGIC_VECTOR ( 28 to 28 );
  signal Operand_Select_I_n_136 : STD_LOGIC;
  signal Operand_Select_I_n_137 : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^using_fpga.native\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \^wb_mem_result_reg[0]\ : STD_LOGIC_VECTOR ( 29 downto 0 );
  signal \^wb_mem_result_reg[0]_0\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \Zero_Detecting[0].nibble_Zero_reg\ : STD_LOGIC;
  signal \Zero_Detecting[1].nibble_Zero_reg\ : STD_LOGIC;
  signal \Zero_Detecting[2].nibble_Zero_reg\ : STD_LOGIC;
  signal \Zero_Detecting[3].nibble_Zero_reg\ : STD_LOGIC;
  signal \Zero_Detecting[4].nibble_Zero_reg\ : STD_LOGIC;
  signal \Zero_Detecting[5].nibble_Zero_reg\ : STD_LOGIC;
  signal \^ex_msr\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal ex_alu_carryin : STD_LOGIC;
  signal ex_byte_selects : STD_LOGIC_VECTOR ( 1 to 1 );
  signal ex_op2 : STD_LOGIC_VECTOR ( 0 to 30 );
  signal ex_pre_alu_carry : STD_LOGIC;
  signal exception_registers_I1_n_80 : STD_LOGIC;
  signal exception_registers_I1_n_81 : STD_LOGIC;
  signal exception_registers_I1_n_82 : STD_LOGIC;
  signal exception_registers_I1_n_83 : STD_LOGIC;
  signal exception_registers_I1_n_84 : STD_LOGIC;
  signal exception_registers_I1_n_85 : STD_LOGIC;
  signal exception_registers_I1_n_86 : STD_LOGIC;
  signal exception_registers_I1_n_87 : STD_LOGIC;
  signal exception_registers_I1_n_88 : STD_LOGIC;
  signal exception_registers_I1_n_89 : STD_LOGIC;
  signal exception_registers_I1_n_90 : STD_LOGIC;
  signal exception_registers_I1_n_91 : STD_LOGIC;
  signal exception_registers_I1_n_92 : STD_LOGIC;
  signal exception_registers_I1_n_93 : STD_LOGIC;
  signal exception_registers_I1_n_94 : STD_LOGIC;
  signal exception_registers_I1_n_95 : STD_LOGIC;
  signal \^gpr_op1\ : STD_LOGIC_VECTOR ( 16 to 31 );
  signal \^gpr_op3\ : STD_LOGIC_VECTOR ( 16 to 31 );
  signal \^lopt\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal \^mem_byte_selects_reg[0]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal mem_ex_result : STD_LOGIC_VECTOR ( 29 to 30 );
  signal muxcy_di : STD_LOGIC;
  signal muxcy_sel : STD_LOGIC;
  signal of_op3 : STD_LOGIC_VECTOR ( 16 to 31 );
  signal wb_mem_result : STD_LOGIC_VECTOR ( 16 to 31 );
begin
  \Data_Addr[0]\(119 downto 0) <= \^data_addr[0]\(119 downto 0);
  Q(0) <= \^q\(0);
  \Using_FPGA.Native\(31 downto 0) <= \^using_fpga.native\(31 downto 0);
  \WB_MEM_Result_reg[0]\(29 downto 0) <= \^wb_mem_result_reg[0]\(29 downto 0);
  \WB_MEM_Result_reg[0]_0\(2 downto 0) <= \^wb_mem_result_reg[0]_0\(2 downto 0);
  ex_MSR(2 downto 0) <= \^ex_msr\(2 downto 0);
  lopt <= \^lopt_2\;
  lopt_3 <= lopt_1;
  lopt_4 <= lopt_2;
  \mem_byte_selects_reg[0]\(0) <= \^mem_byte_selects_reg[0]\(0);
ALU_I: entity work.system_microblaze_0_0_ALU
     port map (
      DI_0 => DI_0,
      \Data_Addr[0]\(29 downto 0) => \^data_addr[0]\(119 downto 90),
      \EX_ALU_Op_reg[0]\(1 downto 0) => \EX_ALU_Op_reg[0]\(1 downto 0),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_CMP_Op_reg => Operand_Select_I_n_136,
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op1_reg[0]\(31 downto 0) => \^using_fpga.native\(31 downto 0),
      LO => LO,
      \MEM_DataBus_Addr_reg[30]\(1 downto 0) => \MEM_DataBus_Addr_reg[30]\(1 downto 0),
      Q(31) => ex_op2(0),
      Q(30) => ex_op2(1),
      Q(29) => ex_op2(2),
      Q(28) => ex_op2(3),
      Q(27) => ex_op2(4),
      Q(26) => ex_op2(5),
      Q(25) => ex_op2(6),
      Q(24) => ex_op2(7),
      Q(23) => ex_op2(8),
      Q(22) => ex_op2(9),
      Q(21) => ex_op2(10),
      Q(20) => ex_op2(11),
      Q(19) => ex_op2(12),
      Q(18) => ex_op2(13),
      Q(17) => ex_op2(14),
      Q(16) => ex_op2(15),
      Q(15) => ex_op2(16),
      Q(14) => ex_op2(17),
      Q(13) => ex_op2(18),
      Q(12) => ex_op2(19),
      Q(11) => ex_op2(20),
      Q(10) => ex_op2(21),
      Q(9) => ex_op2(22),
      Q(8) => ex_op2(23),
      Q(7) => ex_op2(24),
      Q(6) => ex_op2(25),
      Q(5) => ex_op2(26),
      Q(4) => ex_op2(27),
      Q(3) => ex_op2(28),
      Q(2) => ex_op2(29),
      Q(1) => ex_op2(30),
      Q(0) => \^q\(0),
      S => \ALL_Bits[0].ALU_Bit_I1/S\,
      ex_alu_carryin => ex_alu_carryin,
      ex_unsigned_op => ex_unsigned_op,
      ex_use_carry => ex_use_carry,
      lopt => \^ex_msr\(1),
      lopt_1 => muxcy_di,
      lopt_2 => muxcy_sel,
      lopt_3 => \^lopt\,
      lopt_4 => \^lopt_1\
    );
Byte_Doublet_Handle_gti_I: entity work.system_microblaze_0_0_Byte_Doublet_Handle_gti
     port map (
      Clk => Clk,
      D(1) => \^mem_byte_selects_reg[0]\(0),
      D(0) => ex_byte_selects(1),
      \EX_Op3_reg[24]\(31 downto 0) => \^data_addr[0]\(87 downto 56),
      \LOCKSTEP_Out_reg[3792]\(1 downto 0) => \LOCKSTEP_Out_reg[3792]\(1 downto 0),
      \M_AXI_DP_WDATA[31]\(35 downto 0) => \^data_addr[0]\(55 downto 20),
      Q(1) => \LOCKSTEP_Out_reg[3800]\(0),
      Q(0) => Byte_Doublet_Handle_gti_I_n_40,
      \Using_FPGA.Native\(3 downto 0) => \Using_FPGA.Native_73\(3 downto 0),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg,
      ex_byte_access => ex_byte_access,
      ex_doublet_access => ex_doublet_access,
      ex_reverse_byteorder => ex_reverse_byteorder,
      mem_valid_reg => mem_valid_reg,
      \out\(0) => \out\(0),
      wb_read_msb_doublet_sel => wb_read_msb_doublet_sel
    );
Data_Flow_Logic_I: entity work.system_microblaze_0_0_Data_Flow_Logic
     port map (
      Clk => Clk,
      D(3) => \^wb_mem_result_reg[0]_0\(2),
      D(2) => MEM_Fwd(28),
      D(1 downto 0) => \^wb_mem_result_reg[0]_0\(1 downto 0),
      EX_Fwd(0 to 31) => EX_Fwd(0 to 31),
      Q(31 downto 16) => \LOCKSTEP_Out_reg[3769]_0\(15 downto 0),
      Q(15) => wb_mem_result(16),
      Q(14) => wb_mem_result(17),
      Q(13) => wb_mem_result(18),
      Q(12) => wb_mem_result(19),
      Q(11) => wb_mem_result(20),
      Q(10) => wb_mem_result(21),
      Q(9) => wb_mem_result(22),
      Q(8) => wb_mem_result(23),
      Q(7) => wb_mem_result(24),
      Q(6) => wb_mem_result(25),
      Q(5) => wb_mem_result(26),
      Q(4) => wb_mem_result(27),
      Q(3) => wb_mem_result(28),
      Q(2) => wb_mem_result(29),
      Q(1) => wb_mem_result(30),
      Q(0) => wb_mem_result(31),
      R => R,
      SR(0) => SR(0),
      \WB_MEM_Result_reg[0]_0\(29 downto 0) => \^wb_mem_result_reg[0]\(29 downto 0),
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg,
      mem_ex_result(1) => mem_ex_result(29),
      mem_ex_result(0) => mem_ex_result(30),
      mem_valid_reg => mem_valid_reg
    );
Operand_Select_I: entity work.system_microblaze_0_0_Operand_Select_gti
     port map (
      Clk => Clk,
      D(31 downto 16) => D(15 downto 0),
      D(15) => exception_registers_I1_n_80,
      D(14) => exception_registers_I1_n_81,
      D(13) => exception_registers_I1_n_82,
      D(12) => exception_registers_I1_n_83,
      D(11) => exception_registers_I1_n_84,
      D(10) => exception_registers_I1_n_85,
      D(9) => exception_registers_I1_n_86,
      D(8) => exception_registers_I1_n_87,
      D(7) => exception_registers_I1_n_88,
      D(6) => exception_registers_I1_n_89,
      D(5) => exception_registers_I1_n_90,
      D(4) => exception_registers_I1_n_91,
      D(3) => exception_registers_I1_n_92,
      D(2) => exception_registers_I1_n_93,
      D(1) => exception_registers_I1_n_94,
      D(0) => exception_registers_I1_n_95,
      \Data_Addr[30]\(33 downto 0) => \^data_addr[0]\(89 downto 56),
      E(0) => E(0),
      \EX_Op2_reg[0]_0\(15 downto 0) => \EX_Op2_reg[0]\(15 downto 0),
      \EX_Sext_Op_reg[0]\(1 downto 0) => \EX_Sext_Op_reg[0]\(1 downto 0),
      I1 => I1,
      \MEM_DataBus_Addr_reg[0]\(31) => ex_op2(0),
      \MEM_DataBus_Addr_reg[0]\(30) => ex_op2(1),
      \MEM_DataBus_Addr_reg[0]\(29) => ex_op2(2),
      \MEM_DataBus_Addr_reg[0]\(28) => ex_op2(3),
      \MEM_DataBus_Addr_reg[0]\(27) => ex_op2(4),
      \MEM_DataBus_Addr_reg[0]\(26) => ex_op2(5),
      \MEM_DataBus_Addr_reg[0]\(25) => ex_op2(6),
      \MEM_DataBus_Addr_reg[0]\(24) => ex_op2(7),
      \MEM_DataBus_Addr_reg[0]\(23) => ex_op2(8),
      \MEM_DataBus_Addr_reg[0]\(22) => ex_op2(9),
      \MEM_DataBus_Addr_reg[0]\(21) => ex_op2(10),
      \MEM_DataBus_Addr_reg[0]\(20) => ex_op2(11),
      \MEM_DataBus_Addr_reg[0]\(19) => ex_op2(12),
      \MEM_DataBus_Addr_reg[0]\(18) => ex_op2(13),
      \MEM_DataBus_Addr_reg[0]\(17) => ex_op2(14),
      \MEM_DataBus_Addr_reg[0]\(16) => ex_op2(15),
      \MEM_DataBus_Addr_reg[0]\(15) => ex_op2(16),
      \MEM_DataBus_Addr_reg[0]\(14) => ex_op2(17),
      \MEM_DataBus_Addr_reg[0]\(13) => ex_op2(18),
      \MEM_DataBus_Addr_reg[0]\(12) => ex_op2(19),
      \MEM_DataBus_Addr_reg[0]\(11) => ex_op2(20),
      \MEM_DataBus_Addr_reg[0]\(10) => ex_op2(21),
      \MEM_DataBus_Addr_reg[0]\(9) => ex_op2(22),
      \MEM_DataBus_Addr_reg[0]\(8) => ex_op2(23),
      \MEM_DataBus_Addr_reg[0]\(7) => ex_op2(24),
      \MEM_DataBus_Addr_reg[0]\(6) => ex_op2(25),
      \MEM_DataBus_Addr_reg[0]\(5) => ex_op2(26),
      \MEM_DataBus_Addr_reg[0]\(4) => ex_op2(27),
      \MEM_DataBus_Addr_reg[0]\(3) => ex_op2(28),
      \MEM_DataBus_Addr_reg[0]\(2) => ex_op2(29),
      \MEM_DataBus_Addr_reg[0]\(1) => ex_op2(30),
      \MEM_DataBus_Addr_reg[0]\(0) => \^q\(0),
      \MEM_DataBus_Addr_reg[0]_0\ => Operand_Select_I_n_136,
      Q(31 downto 0) => \^using_fpga.native\(31 downto 0),
      S => \ALL_Bits[0].ALU_Bit_I1/S\,
      \Using_FPGA.Native\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_10\ => \Using_FPGA.Native_13\,
      \Using_FPGA.Native_11\ => \Using_FPGA.Native_14\,
      \Using_FPGA.Native_12\ => \Using_FPGA.Native_15\,
      \Using_FPGA.Native_13\ => \Using_FPGA.Native_16\,
      \Using_FPGA.Native_14\ => \Using_FPGA.Native_17\,
      \Using_FPGA.Native_15\ => \Using_FPGA.Native_18\,
      \Using_FPGA.Native_16\ => \Using_FPGA.Native_19\,
      \Using_FPGA.Native_17\ => \Using_FPGA.Native_20\,
      \Using_FPGA.Native_18\ => \Using_FPGA.Native_21\,
      \Using_FPGA.Native_19\ => \Using_FPGA.Native_22\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_20\ => \Using_FPGA.Native_23\,
      \Using_FPGA.Native_21\ => \Using_FPGA.Native_24\,
      \Using_FPGA.Native_22\ => \Using_FPGA.Native_25\,
      \Using_FPGA.Native_23\ => \Using_FPGA.Native_26\,
      \Using_FPGA.Native_24\ => \Using_FPGA.Native_27\,
      \Using_FPGA.Native_25\ => \Using_FPGA.Native_28\,
      \Using_FPGA.Native_26\ => \Using_FPGA.Native_29\,
      \Using_FPGA.Native_27\ => \Using_FPGA.Native_30\,
      \Using_FPGA.Native_28\ => \Using_FPGA.Native_31\,
      \Using_FPGA.Native_29\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_30\ => \Using_FPGA.Native_33\,
      \Using_FPGA.Native_31\ => \Using_FPGA.Native_34\,
      \Using_FPGA.Native_32\ => \Using_FPGA.Native_35\,
      \Using_FPGA.Native_33\ => \Using_FPGA.Native_36\,
      \Using_FPGA.Native_34\ => Operand_Select_I_n_137,
      \Using_FPGA.Native_35\(0) => \Using_FPGA.Native_37\(0),
      \Using_FPGA.Native_36\ => \Using_FPGA.Native_38\,
      \Using_FPGA.Native_37\ => \Using_FPGA.Native_39\,
      \Using_FPGA.Native_38\ => \Using_FPGA.Native_40\,
      \Using_FPGA.Native_39\ => \Using_FPGA.Native_41\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_7\,
      \Using_FPGA.Native_40\ => \Using_FPGA.Native_42\,
      \Using_FPGA.Native_41\ => \Using_FPGA.Native_43\,
      \Using_FPGA.Native_42\ => \Using_FPGA.Native_44\,
      \Using_FPGA.Native_43\ => \Using_FPGA.Native_45\,
      \Using_FPGA.Native_44\ => \Using_FPGA.Native_46\,
      \Using_FPGA.Native_45\ => \Using_FPGA.Native_47\,
      \Using_FPGA.Native_46\ => \Using_FPGA.Native_48\,
      \Using_FPGA.Native_47\ => \Using_FPGA.Native_49\,
      \Using_FPGA.Native_48\ => \Using_FPGA.Native_50\,
      \Using_FPGA.Native_49\ => \Using_FPGA.Native_51\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_8\,
      \Using_FPGA.Native_50\ => \Using_FPGA.Native_52\,
      \Using_FPGA.Native_51\ => \Using_FPGA.Native_53\,
      \Using_FPGA.Native_52\ => \Using_FPGA.Native_54\,
      \Using_FPGA.Native_53\ => \Using_FPGA.Native_55\,
      \Using_FPGA.Native_54\ => \Using_FPGA.Native_56\,
      \Using_FPGA.Native_55\ => \Using_FPGA.Native_57\,
      \Using_FPGA.Native_56\ => \Using_FPGA.Native_58\,
      \Using_FPGA.Native_57\ => \Using_FPGA.Native_59\,
      \Using_FPGA.Native_58\ => \Using_FPGA.Native_60\,
      \Using_FPGA.Native_59\ => \Using_FPGA.Native_61\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_9\,
      \Using_FPGA.Native_60\ => \Using_FPGA.Native_62\,
      \Using_FPGA.Native_61\ => \Using_FPGA.Native_63\,
      \Using_FPGA.Native_62\ => \Using_FPGA.Native_64\,
      \Using_FPGA.Native_63\ => \Using_FPGA.Native_65\,
      \Using_FPGA.Native_64\ => \Using_FPGA.Native_66\,
      \Using_FPGA.Native_65\ => \Using_FPGA.Native_67\,
      \Using_FPGA.Native_66\ => \Using_FPGA.Native_68\,
      \Using_FPGA.Native_67\ => \Using_FPGA.Native_72\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_10\,
      \Using_FPGA.Native_8\ => \Using_FPGA.Native_11\,
      \Using_FPGA.Native_9\ => \Using_FPGA.Native_12\,
      WB_Doublet_Access_reg(31 downto 16) => WB_Doublet_Access_reg(15 downto 0),
      WB_Doublet_Access_reg(15) => of_op3(16),
      WB_Doublet_Access_reg(14) => of_op3(17),
      WB_Doublet_Access_reg(13) => of_op3(18),
      WB_Doublet_Access_reg(12) => of_op3(19),
      WB_Doublet_Access_reg(11) => of_op3(20),
      WB_Doublet_Access_reg(10) => of_op3(21),
      WB_Doublet_Access_reg(9) => of_op3(22),
      WB_Doublet_Access_reg(8) => of_op3(23),
      WB_Doublet_Access_reg(7) => of_op3(24),
      WB_Doublet_Access_reg(6) => of_op3(25),
      WB_Doublet_Access_reg(5) => of_op3(26),
      WB_Doublet_Access_reg(4) => of_op3(27),
      WB_Doublet_Access_reg(3) => of_op3(28),
      WB_Doublet_Access_reg(2) => of_op3(29),
      WB_Doublet_Access_reg(1) => of_op3(30),
      WB_Doublet_Access_reg(0) => of_op3(31),
      \Zero_Detecting[0].nibble_Zero_reg\ => \Zero_Detecting[0].nibble_Zero_reg\,
      \Zero_Detecting[1].nibble_Zero_reg\ => \Zero_Detecting[1].nibble_Zero_reg\,
      \Zero_Detecting[2].nibble_Zero_reg\ => \Zero_Detecting[2].nibble_Zero_reg\,
      \Zero_Detecting[3].nibble_Zero_reg\ => \Zero_Detecting[3].nibble_Zero_reg\,
      \Zero_Detecting[4].nibble_Zero_reg\ => \Zero_Detecting[4].nibble_Zero_reg\,
      \Zero_Detecting[5].nibble_Zero_reg\ => \Zero_Detecting[5].nibble_Zero_reg\,
      ex_MSR(2 downto 0) => \^ex_msr\(2 downto 0),
      ex_Take_Intr_or_Exc_reg => ex_Take_Intr_or_Exc_reg,
      ex_byte_access => ex_byte_access,
      ex_cmp_op => ex_cmp_op,
      ex_doublet_access => ex_doublet_access,
      ex_move_to_MSR_instr => ex_move_to_MSR_instr,
      ex_reverse_byteorder => ex_reverse_byteorder,
      ex_swap_byte_instr => ex_swap_byte_instr,
      \interrupt_address_d1_reg[0]\(31 downto 0) => \interrupt_address_d1_reg[0]\(31 downto 0),
      \mem_byte_selects_reg[0]\(1) => \^mem_byte_selects_reg[0]\(0),
      \mem_byte_selects_reg[0]\(0) => ex_byte_selects(1),
      of_imm_data(0 to 15) => of_imm_data(0 to 15),
      of_op1_sel_spr => of_op1_sel_spr,
      \out\(0) => \out\(0),
      wb_sel_spr_shr => wb_sel_spr_shr
    );
Register_File_I: entity work.system_microblaze_0_0_Register_File_gti
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      DID(1) => WB_Doublet_Access_reg_0,
      DID(0) => WB_Doublet_Access_reg_1,
      GPR_Op1(0) => GPR_Op1(15),
      GPR_Op1(1) => GPR_Op1(14),
      GPR_Op1(2) => GPR_Op1(13),
      GPR_Op1(3) => GPR_Op1(12),
      GPR_Op1(4) => GPR_Op1(11),
      GPR_Op1(5) => GPR_Op1(10),
      GPR_Op1(6) => GPR_Op1(9),
      GPR_Op1(7) => GPR_Op1(8),
      GPR_Op1(8) => GPR_Op1(7),
      GPR_Op1(9) => GPR_Op1(6),
      GPR_Op1(10) => GPR_Op1(5),
      GPR_Op1(11) => GPR_Op1(4),
      GPR_Op1(12) => GPR_Op1(3),
      GPR_Op1(13) => GPR_Op1(2),
      GPR_Op1(14) => GPR_Op1(1),
      GPR_Op1(15) => GPR_Op1(0),
      GPR_Op1(16 to 31) => \^gpr_op1\(16 to 31),
      GPR_Op2(0 to 31) => GPR_Op2(0 to 31),
      GPR_Op3(0) => GPR_Op3(15),
      GPR_Op3(1) => GPR_Op3(14),
      GPR_Op3(2) => GPR_Op3(13),
      GPR_Op3(3) => GPR_Op3(12),
      GPR_Op3(4) => GPR_Op3(11),
      GPR_Op3(5) => GPR_Op3(10),
      GPR_Op3(6) => GPR_Op3(9),
      GPR_Op3(7) => GPR_Op3(8),
      GPR_Op3(8) => GPR_Op3(7),
      GPR_Op3(9) => GPR_Op3(6),
      GPR_Op3(10) => GPR_Op3(5),
      GPR_Op3(11) => GPR_Op3(4),
      GPR_Op3(12) => GPR_Op3(3),
      GPR_Op3(13) => GPR_Op3(2),
      GPR_Op3(14) => GPR_Op3(1),
      GPR_Op3(15) => GPR_Op3(0),
      GPR_Op3(16 to 31) => \^gpr_op3\(16 to 31),
      WB_Byte_Access_reg(1 downto 0) => \^data_addr[0]\(15 downto 14),
      WB_Byte_Access_reg_0(1 downto 0) => \^data_addr[0]\(13 downto 12),
      WB_Byte_Access_reg_1(1 downto 0) => \^data_addr[0]\(11 downto 10),
      WB_Byte_Access_reg_2(1 downto 0) => \^data_addr[0]\(9 downto 8),
      WB_Doublet_Access_reg(1) => WB_Doublet_Access_reg_2,
      WB_Doublet_Access_reg(0) => WB_Doublet_Access_reg_3,
      WB_Doublet_Access_reg_0(1) => WB_Doublet_Access_reg_4,
      WB_Doublet_Access_reg_0(0) => WB_Doublet_Access_reg_5,
      WB_Doublet_Access_reg_1(1) => WB_Doublet_Access_reg_6,
      WB_Doublet_Access_reg_1(0) => WB_Doublet_Access_reg_7,
      WB_Doublet_Access_reg_2(1) => WB_Doublet_Access_reg_8,
      WB_Doublet_Access_reg_2(0) => WB_Doublet_Access_reg_9,
      WB_Doublet_Access_reg_3(1) => WB_Doublet_Access_reg_10,
      WB_Doublet_Access_reg_3(0) => WB_Doublet_Access_reg_11,
      WB_Doublet_Access_reg_4(1) => WB_Doublet_Access_reg_12,
      WB_Doublet_Access_reg_4(0) => WB_Doublet_Access_reg_13,
      WB_Doublet_Access_reg_5(1) => WB_Doublet_Access_reg_14,
      WB_Doublet_Access_reg_5(0) => WB_Doublet_Access_reg_15,
      WB_GPR_Wr => WB_GPR_Wr,
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(4) => of_imm_data(0),
      of_imm_data(3) => of_imm_data(1),
      of_imm_data(2) => of_imm_data(2),
      of_imm_data(1) => of_imm_data(3),
      of_imm_data(0) => of_imm_data(4),
      \wb_read_lsb_sel_reg[1]\(1 downto 0) => \^data_addr[0]\(7 downto 6),
      \wb_read_lsb_sel_reg[1]_0\(1 downto 0) => \^data_addr[0]\(5 downto 4),
      \wb_read_lsb_sel_reg[1]_1\(1 downto 0) => \^data_addr[0]\(3 downto 2),
      \wb_read_lsb_sel_reg[1]_2\(1 downto 0) => \^data_addr[0]\(1 downto 0)
    );
Shift_Logic_Module_I: entity work.system_microblaze_0_0_Shift_Logic_Module_gti
     port map (
      \EX_Op1_reg[24]\ => \EX_Op1_reg[24]\,
      \EX_Op1_reg[24]_0\ => Operand_Select_I_n_137,
      \Using_FPGA.Native\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\
    );
\Using_DAXI_ALU_Carry.Direct_MUXCY_I\: entity work.system_microblaze_0_0_MB_MUXCY_259
     port map (
      ex_MSR(0) => \^ex_msr\(1),
      ex_pre_alu_carry => ex_pre_alu_carry,
      muxcy_di => muxcy_di,
      muxcy_sel => muxcy_sel
    );
\Using_DAXI_ALU_Carry.Post_MUXCY_I\: entity work.system_microblaze_0_0_MB_MUXCY_260
     port map (
      ex_alu_carryin => ex_alu_carryin,
      ex_pre_alu_carry => ex_pre_alu_carry,
      lopt => \^lopt\,
      lopt_1 => \^lopt_1\
    );
\Using_DAXI_ALU_Carry.direct_lut_INST\: entity work.\system_microblaze_0_0_MB_LUT6_2__parameterized1\
     port map (
      mem_daxi_exclusive_failed => mem_daxi_exclusive_failed,
      muxcy_di => muxcy_di,
      muxcy_sel => muxcy_sel
    );
Zero_Detect_I: entity work.system_microblaze_0_0_Zero_Detect_gti
     port map (
      \Zero_Detecting[0].nibble_Zero_reg\ => \Zero_Detecting[0].nibble_Zero_reg\,
      \Zero_Detecting[1].nibble_Zero_reg\ => \Zero_Detecting[1].nibble_Zero_reg\,
      \Zero_Detecting[2].nibble_Zero_reg\ => \Zero_Detecting[2].nibble_Zero_reg\,
      \Zero_Detecting[3].nibble_Zero_reg\ => \Zero_Detecting[3].nibble_Zero_reg\,
      \Zero_Detecting[4].nibble_Zero_reg\ => \Zero_Detecting[4].nibble_Zero_reg\,
      \Zero_Detecting[5].nibble_Zero_reg\ => \Zero_Detecting[5].nibble_Zero_reg\,
      ex_op1_cmp_equal => ex_op1_cmp_equal,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      ex_op1_zero => ex_op1_zero,
      lopt => \^lopt_2\,
      lopt_1 => lopt_3,
      lopt_2 => lopt_4
    );
exception_registers_I1: entity work.system_microblaze_0_0_exception_registers_gti
     port map (
      Clk => Clk,
      D(2) => MEM_Fwd(28),
      D(1 downto 0) => \^wb_mem_result_reg[0]_0\(1 downto 0),
      DI => DI,
      \EX_Branch_CMP_Op1_reg[16]\(15) => exception_registers_I1_n_80,
      \EX_Branch_CMP_Op1_reg[16]\(14) => exception_registers_I1_n_81,
      \EX_Branch_CMP_Op1_reg[16]\(13) => exception_registers_I1_n_82,
      \EX_Branch_CMP_Op1_reg[16]\(12) => exception_registers_I1_n_83,
      \EX_Branch_CMP_Op1_reg[16]\(11) => exception_registers_I1_n_84,
      \EX_Branch_CMP_Op1_reg[16]\(10) => exception_registers_I1_n_85,
      \EX_Branch_CMP_Op1_reg[16]\(9) => exception_registers_I1_n_86,
      \EX_Branch_CMP_Op1_reg[16]\(8) => exception_registers_I1_n_87,
      \EX_Branch_CMP_Op1_reg[16]\(7) => exception_registers_I1_n_88,
      \EX_Branch_CMP_Op1_reg[16]\(6) => exception_registers_I1_n_89,
      \EX_Branch_CMP_Op1_reg[16]\(5) => exception_registers_I1_n_90,
      \EX_Branch_CMP_Op1_reg[16]\(4) => exception_registers_I1_n_91,
      \EX_Branch_CMP_Op1_reg[16]\(3) => exception_registers_I1_n_92,
      \EX_Branch_CMP_Op1_reg[16]\(2) => exception_registers_I1_n_93,
      \EX_Branch_CMP_Op1_reg[16]\(1) => exception_registers_I1_n_94,
      \EX_Branch_CMP_Op1_reg[16]\(0) => exception_registers_I1_n_95,
      EX_Fwd(15) => EX_Fwd(16),
      EX_Fwd(14) => EX_Fwd(17),
      EX_Fwd(13) => EX_Fwd(18),
      EX_Fwd(12) => EX_Fwd(19),
      EX_Fwd(11) => EX_Fwd(20),
      EX_Fwd(10) => EX_Fwd(21),
      EX_Fwd(9) => EX_Fwd(22),
      EX_Fwd(8) => EX_Fwd(23),
      EX_Fwd(7) => EX_Fwd(24),
      EX_Fwd(6) => EX_Fwd(25),
      EX_Fwd(5) => EX_Fwd(26),
      EX_Fwd(4) => EX_Fwd(27),
      EX_Fwd(3) => EX_Fwd(28),
      EX_Fwd(2) => EX_Fwd(29),
      EX_Fwd(1) => EX_Fwd(30),
      EX_Fwd(0) => EX_Fwd(31),
      \EX_Op3_reg[16]\(15) => of_op3(16),
      \EX_Op3_reg[16]\(14) => of_op3(17),
      \EX_Op3_reg[16]\(13) => of_op3(18),
      \EX_Op3_reg[16]\(12) => of_op3(19),
      \EX_Op3_reg[16]\(11) => of_op3(20),
      \EX_Op3_reg[16]\(10) => of_op3(21),
      \EX_Op3_reg[16]\(9) => of_op3(22),
      \EX_Op3_reg[16]\(8) => of_op3(23),
      \EX_Op3_reg[16]\(7) => of_op3(24),
      \EX_Op3_reg[16]\(6) => of_op3(25),
      \EX_Op3_reg[16]\(5) => of_op3(26),
      \EX_Op3_reg[16]\(4) => of_op3(27),
      \EX_Op3_reg[16]\(3) => of_op3(28),
      \EX_Op3_reg[16]\(2) => of_op3(29),
      \EX_Op3_reg[16]\(1) => of_op3(30),
      \EX_Op3_reg[16]\(0) => of_op3(31),
      GPR_Op1(15) => \^gpr_op1\(16),
      GPR_Op1(14) => \^gpr_op1\(17),
      GPR_Op1(13) => \^gpr_op1\(18),
      GPR_Op1(12) => \^gpr_op1\(19),
      GPR_Op1(11) => \^gpr_op1\(20),
      GPR_Op1(10) => \^gpr_op1\(21),
      GPR_Op1(9) => \^gpr_op1\(22),
      GPR_Op1(8) => \^gpr_op1\(23),
      GPR_Op1(7) => \^gpr_op1\(24),
      GPR_Op1(6) => \^gpr_op1\(25),
      GPR_Op1(5) => \^gpr_op1\(26),
      GPR_Op1(4) => \^gpr_op1\(27),
      GPR_Op1(3) => \^gpr_op1\(28),
      GPR_Op1(2) => \^gpr_op1\(29),
      GPR_Op1(1) => \^gpr_op1\(30),
      GPR_Op1(0) => \^gpr_op1\(31),
      GPR_Op3(15) => \^gpr_op3\(16),
      GPR_Op3(14) => \^gpr_op3\(17),
      GPR_Op3(13) => \^gpr_op3\(18),
      GPR_Op3(12) => \^gpr_op3\(19),
      GPR_Op3(11) => \^gpr_op3\(20),
      GPR_Op3(10) => \^gpr_op3\(21),
      GPR_Op3(9) => \^gpr_op3\(22),
      GPR_Op3(8) => \^gpr_op3\(23),
      GPR_Op3(7) => \^gpr_op3\(24),
      GPR_Op3(6) => \^gpr_op3\(25),
      GPR_Op3(5) => \^gpr_op3\(26),
      GPR_Op3(4) => \^gpr_op3\(27),
      GPR_Op3(3) => \^gpr_op3\(28),
      GPR_Op3(2) => \^gpr_op3\(29),
      GPR_Op3(1) => \^gpr_op3\(30),
      GPR_Op3(0) => \^gpr_op3\(31),
      \LOCKSTEP_Out_reg[3708]\(16) => \^data_addr[0]\(19),
      \LOCKSTEP_Out_reg[3708]\(15 downto 0) => \^data_addr[0]\(15 downto 0),
      \LOCKSTEP_Out_reg[3709]\ => \LOCKSTEP_Out_reg[3709]\,
      \LOCKSTEP_Out_reg[3710]\ => \LOCKSTEP_Out_reg[3710]\,
      \LOCKSTEP_Out_reg[3711]\ => \LOCKSTEP_Out_reg[3711]\,
      \LOCKSTEP_Out_reg[3712]\ => \LOCKSTEP_Out_reg[3712]\,
      \LOCKSTEP_Out_reg[3713]\ => \LOCKSTEP_Out_reg[3713]\,
      \LOCKSTEP_Out_reg[3714]\ => \LOCKSTEP_Out_reg[3714]\,
      \LOCKSTEP_Out_reg[3715]\ => \LOCKSTEP_Out_reg[3715]\,
      \LOCKSTEP_Out_reg[3716]\ => \LOCKSTEP_Out_reg[3716]\,
      \LOCKSTEP_Out_reg[3717]\ => \LOCKSTEP_Out_reg[3717]\,
      \LOCKSTEP_Out_reg[3718]\ => \LOCKSTEP_Out_reg[3718]\,
      \LOCKSTEP_Out_reg[3719]\ => \LOCKSTEP_Out_reg[3719]\,
      \LOCKSTEP_Out_reg[3720]\ => \LOCKSTEP_Out_reg[3720]\,
      \LOCKSTEP_Out_reg[3721]\ => \LOCKSTEP_Out_reg[3721]\,
      \LOCKSTEP_Out_reg[3722]\ => \LOCKSTEP_Out_reg[3722]\,
      \LOCKSTEP_Out_reg[3723]\ => \LOCKSTEP_Out_reg[3723]\,
      \LOCKSTEP_Out_reg[3724]\ => \LOCKSTEP_Out_reg[3724]\,
      \LOCKSTEP_Out_reg[3725]\ => \LOCKSTEP_Out_reg[3725]\,
      \LOCKSTEP_Out_reg[3726]\ => \LOCKSTEP_Out_reg[3726]\,
      \LOCKSTEP_Out_reg[3727]\ => \LOCKSTEP_Out_reg[3727]\,
      \LOCKSTEP_Out_reg[3728]\ => \LOCKSTEP_Out_reg[3728]\,
      \LOCKSTEP_Out_reg[3729]\ => \LOCKSTEP_Out_reg[3729]\,
      \LOCKSTEP_Out_reg[3730]\ => \LOCKSTEP_Out_reg[3730]\,
      \LOCKSTEP_Out_reg[3731]\ => \LOCKSTEP_Out_reg[3731]\,
      \LOCKSTEP_Out_reg[3732]\ => \LOCKSTEP_Out_reg[3732]\,
      \LOCKSTEP_Out_reg[3733]\ => \LOCKSTEP_Out_reg[3733]\,
      \LOCKSTEP_Out_reg[3734]\ => \LOCKSTEP_Out_reg[3734]\,
      \LOCKSTEP_Out_reg[3735]\ => \LOCKSTEP_Out_reg[3735]\,
      \LOCKSTEP_Out_reg[3736]\ => \LOCKSTEP_Out_reg[3736]\,
      \LOCKSTEP_Out_reg[3737]\ => \LOCKSTEP_Out_reg[3737]\,
      \LOCKSTEP_Out_reg[3738]\ => \LOCKSTEP_Out_reg[3738]\,
      \LOCKSTEP_Out_reg[3769]\(15 downto 0) => \LOCKSTEP_Out_reg[3769]\(15 downto 0),
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Performace_Debug_Control.dbg_freeze_nohalt_reg\,
      \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ => \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\,
      Q(15) => wb_mem_result(16),
      Q(14) => wb_mem_result(17),
      Q(13) => wb_mem_result(18),
      Q(12) => wb_mem_result(19),
      Q(11) => wb_mem_result(20),
      Q(10) => wb_mem_result(21),
      Q(9) => wb_mem_result(22),
      Q(8) => wb_mem_result(23),
      Q(7) => wb_mem_result(24),
      Q(6) => wb_mem_result(25),
      Q(5) => wb_mem_result(26),
      Q(4) => wb_mem_result(27),
      Q(3) => wb_mem_result(28),
      Q(2) => wb_mem_result(29),
      Q(1) => wb_mem_result(30),
      Q(0) => wb_mem_result(31),
      \Use_DLMB.wb_dlmb_valid_read_data_reg[16]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[16]\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[17]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[17]\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[18]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[18]\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[19]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[19]\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[20]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[20]\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[21]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[21]\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[22]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[22]\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[23]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[23]\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[24]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[24]\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[25]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[25]\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[26]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[26]\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[27]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[27]\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[28]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[28]\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[29]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[29]\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[30]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[30]\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[31]\ => \Use_DLMB.wb_dlmb_valid_read_data_reg[31]\,
      \Using_FPGA.Native\(12 downto 1) => \^wb_mem_result_reg[0]\(13 downto 2),
      \Using_FPGA.Native\(0) => \^wb_mem_result_reg[0]\(0),
      \data_rd_reg_reg[16]\ => \data_rd_reg_reg[16]\,
      \data_rd_reg_reg[17]\ => \data_rd_reg_reg[17]\,
      \data_rd_reg_reg[18]\ => \data_rd_reg_reg[18]\,
      \data_rd_reg_reg[19]\ => \data_rd_reg_reg[19]\,
      \data_rd_reg_reg[20]\ => \data_rd_reg_reg[20]\,
      \data_rd_reg_reg[21]\ => \data_rd_reg_reg[21]\,
      \data_rd_reg_reg[22]\ => \data_rd_reg_reg[22]\,
      \data_rd_reg_reg[23]\ => \data_rd_reg_reg[23]\,
      \data_rd_reg_reg[24]\ => \data_rd_reg_reg[24]\,
      \data_rd_reg_reg[25]\ => \data_rd_reg_reg[25]\,
      \data_rd_reg_reg[26]\ => \data_rd_reg_reg[26]\,
      \data_rd_reg_reg[27]\ => \data_rd_reg_reg[27]\,
      \data_rd_reg_reg[28]\ => \data_rd_reg_reg[28]\,
      \data_rd_reg_reg[29]\ => \data_rd_reg_reg[29]\,
      \data_rd_reg_reg[30]\ => \data_rd_reg_reg[30]\,
      \data_rd_reg_reg[31]\ => \data_rd_reg_reg[31]\,
      \mem_pc_i_reg[0]\(31 downto 0) => \mem_pc_i_reg[0]\(31 downto 0),
      mem_valid_reg => mem_valid_reg,
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1),
      read_register_MSR_1_reg => read_register_MSR_1_reg,
      \wb_MSR_i_reg[28]\(1 downto 0) => \^data_addr[0]\(18 downto 17),
      \wb_MSR_i_reg[30]\ => \^data_addr[0]\(16),
      wb_byte_access => wb_byte_access,
      wb_exception_i_reg => wb_exception_i_reg,
      \wb_exception_kind_i_reg[28]\(0) => \wb_exception_kind_i_reg[28]\(0),
      \wb_exception_kind_i_reg[28]_0\ => \wb_exception_kind_i_reg[28]_0\,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      \wb_read_lsb_1_sel_reg[0]\ => \wb_read_lsb_1_sel_reg[0]\,
      \wb_read_lsb_1_sel_reg[0]_0\ => \wb_read_lsb_1_sel_reg[0]_0\,
      \wb_read_lsb_1_sel_reg[0]_1\ => \wb_read_lsb_1_sel_reg[0]_1\,
      \wb_read_lsb_1_sel_reg[0]_2\ => \wb_read_lsb_1_sel_reg[0]_2\,
      \wb_read_lsb_1_sel_reg[0]_3\ => \wb_read_lsb_1_sel_reg[0]_3\,
      \wb_read_lsb_1_sel_reg[0]_4\ => \wb_read_lsb_1_sel_reg[0]_4\,
      \wb_read_lsb_1_sel_reg[0]_5\ => \wb_read_lsb_1_sel_reg[0]_5\,
      \wb_read_lsb_1_sel_reg[0]_6\ => \wb_read_lsb_1_sel_reg[0]_6\,
      \wb_read_lsb_sel_reg[1]\(0) => Byte_Doublet_Handle_gti_I_n_40
    );
msr_reg_i: entity work.system_microblaze_0_0_msr_reg_gti
     port map (
      Clk => Clk,
      D(3) => \^wb_mem_result_reg[0]_0\(2),
      D(2) => MEM_Fwd(28),
      D(1 downto 0) => \^wb_mem_result_reg[0]_0\(1 downto 0),
      Dbg_Disable => Dbg_Disable,
      Interrupt => Interrupt,
      \LOCKSTEP_Out_reg[3757]\(1 downto 0) => \^data_addr[0]\(18 downto 17),
      \LOCKSTEP_Out_reg[3759]\ => \^data_addr[0]\(16),
      \Using_FPGA.Native\ => \Using_FPGA.Native_69\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_70\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_71\,
      \Using_FPGA.Native_2\(1) => \^wb_mem_result_reg[0]\(29),
      \Using_FPGA.Native_2\(0) => \^wb_mem_result_reg[0]\(1),
      \Using_Fast_Interrupt.wb_ie_rising_reg\ => \Using_Fast_Interrupt.wb_ie_rising_reg\,
      \WB_MEM_Result_reg[28]\ => wb_MSR_cmb(0),
      \WB_MEM_Result_reg[29]\ => \WB_MEM_Result_reg[29]\(0),
      \control_reg_reg[3]\(0) => \control_reg_reg[3]\(0),
      ex_Interrupt_Brk_combo_reg => ex_Interrupt_Brk_combo_reg,
      ex_MSR(2 downto 0) => \^ex_msr\(2 downto 0),
      ex_set_MSR_IE_instr_reg => ex_set_MSR_IE_instr_reg,
      ex_set_MSR_IE_instr_reg_0 => ex_set_MSR_IE_instr_reg_0,
      mem_ex_result(1) => mem_ex_result(29),
      mem_ex_result(0) => mem_ex_result(30),
      mem_sel_msr => mem_sel_msr,
      mem_valid_reg => mem_valid_reg,
      of_MSR(1 downto 0) => of_MSR(1 downto 0),
      of_Take_Interrupt => of_Take_Interrupt,
      \out\(0) => \out\(0),
      restore_wb_msr_to_ex => restore_wb_msr_to_ex,
      wb_piperun => wb_piperun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MicroBlaze_GTi is
  port (
    use_Reg_Neg_S_reg : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    Trace_WB_Jump_Hit_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    wb_exception : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 362 downto 0 );
    MEM_Sel_MEM_Res : out STD_LOGIC;
    saved_reset_mode_dbg_halt : out STD_LOGIC;
    Sleep : out STD_LOGIC;
    Dbg_TDO : out STD_LOGIC;
    LOCKSTEP_Master_Out : out STD_LOGIC_VECTOR ( 41 downto 0 );
    Interrupt_Ack : out STD_LOGIC_VECTOR ( 0 to 1 );
    Dbg_Trig_In : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Trig_Ack_Out : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Rst18_out : in STD_LOGIC;
    Dbg_Update : in STD_LOGIC;
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Stop : in STD_LOGIC;
    Dbg_Capture : in STD_LOGIC;
    flush_pipe : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[2]\ : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC;
    DWait : in STD_LOGIC;
    DReady : in STD_LOGIC;
    M_AXI_DP_BVALID : in STD_LOGIC;
    M_AXI_DP_RVALID : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Reset_Mode : in STD_LOGIC_VECTOR ( 0 to 1 );
    IReady : in STD_LOGIC;
    \Dbg_Reg_En_2__s_port_]\ : in STD_LOGIC;
    \Dbg_Reg_En[2]_0\ : in STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    Wakeup : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Dbg_Reg_En[2]_1\ : in STD_LOGIC;
    Interrupt : in STD_LOGIC;
    Dbg_Shift : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    Dbg_TDI : in STD_LOGIC;
    M_AXI_DP_AWREADY : in STD_LOGIC;
    M_AXI_DP_WREADY : in STD_LOGIC;
    M_AXI_DP_ARREADY : in STD_LOGIC;
    M_AXI_DP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    \Synchronize.use_sync_reset.sync_reg[2]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 31 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MicroBlaze_GTi : entity is "MicroBlaze_GTi";
end system_microblaze_0_0_MicroBlaze_GTi;

architecture STRUCTURE of system_microblaze_0_0_MicroBlaze_GTi is
  signal \ALU_I/DI\ : STD_LOGIC;
  signal \Byte_Doublet_Handle_gti_I/ex_byte_selects\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \Byte_Doublet_Handle_gti_I/ex_reverse_byteorder\ : STD_LOGIC;
  signal \^d\ : STD_LOGIC_VECTOR ( 362 downto 0 );
  signal Data_Flow_I_n_241 : STD_LOGIC;
  signal Data_Flow_I_n_242 : STD_LOGIC;
  signal Data_Flow_I_n_243 : STD_LOGIC;
  signal Data_Flow_I_n_280 : STD_LOGIC;
  signal Data_Flow_I_n_281 : STD_LOGIC;
  signal Data_Flow_I_n_282 : STD_LOGIC;
  signal Data_Flow_I_n_283 : STD_LOGIC;
  signal Data_Flow_I_n_284 : STD_LOGIC;
  signal Data_Flow_I_n_285 : STD_LOGIC;
  signal Data_Flow_I_n_286 : STD_LOGIC;
  signal Data_Flow_I_n_287 : STD_LOGIC;
  signal Data_Flow_I_n_288 : STD_LOGIC;
  signal Data_Flow_I_n_289 : STD_LOGIC;
  signal Data_Flow_I_n_290 : STD_LOGIC;
  signal Data_Flow_I_n_291 : STD_LOGIC;
  signal Data_Flow_I_n_292 : STD_LOGIC;
  signal Data_Flow_I_n_293 : STD_LOGIC;
  signal Data_Flow_I_n_294 : STD_LOGIC;
  signal Data_Flow_I_n_295 : STD_LOGIC;
  signal Data_Flow_I_n_312 : STD_LOGIC;
  signal Data_Flow_I_n_313 : STD_LOGIC;
  signal Data_Flow_I_n_314 : STD_LOGIC;
  signal Data_Flow_I_n_315 : STD_LOGIC;
  signal Data_Flow_I_n_316 : STD_LOGIC;
  signal Data_Flow_I_n_317 : STD_LOGIC;
  signal Data_Flow_I_n_318 : STD_LOGIC;
  signal Data_Flow_I_n_319 : STD_LOGIC;
  signal Data_Flow_I_n_320 : STD_LOGIC;
  signal Data_Flow_I_n_321 : STD_LOGIC;
  signal Data_Flow_I_n_322 : STD_LOGIC;
  signal Data_Flow_I_n_323 : STD_LOGIC;
  signal Data_Flow_I_n_324 : STD_LOGIC;
  signal Data_Flow_I_n_325 : STD_LOGIC;
  signal Data_Flow_I_n_326 : STD_LOGIC;
  signal Data_Flow_I_n_327 : STD_LOGIC;
  signal Data_Flow_I_n_328 : STD_LOGIC;
  signal Data_Flow_I_n_329 : STD_LOGIC;
  signal Data_Flow_I_n_33 : STD_LOGIC;
  signal Data_Flow_I_n_330 : STD_LOGIC;
  signal Data_Flow_I_n_331 : STD_LOGIC;
  signal Data_Flow_I_n_332 : STD_LOGIC;
  signal Data_Flow_I_n_333 : STD_LOGIC;
  signal Data_Flow_I_n_334 : STD_LOGIC;
  signal Data_Flow_I_n_335 : STD_LOGIC;
  signal Data_Flow_I_n_336 : STD_LOGIC;
  signal Data_Flow_I_n_337 : STD_LOGIC;
  signal Data_Flow_I_n_338 : STD_LOGIC;
  signal Data_Flow_I_n_339 : STD_LOGIC;
  signal Data_Flow_I_n_34 : STD_LOGIC;
  signal Data_Flow_I_n_340 : STD_LOGIC;
  signal Data_Flow_I_n_341 : STD_LOGIC;
  signal Data_Flow_I_n_342 : STD_LOGIC;
  signal Data_Flow_I_n_343 : STD_LOGIC;
  signal Data_Flow_I_n_344 : STD_LOGIC;
  signal Data_Flow_I_n_345 : STD_LOGIC;
  signal Data_Flow_I_n_396 : STD_LOGIC;
  signal Data_Flow_I_n_397 : STD_LOGIC;
  signal Data_Flow_I_n_398 : STD_LOGIC;
  signal \Data_Flow_Logic_I/R\ : STD_LOGIC;
  signal \Dbg_Reg_En_2__s_net_1\ : STD_LOGIC;
  signal Decode_I_n_300 : STD_LOGIC;
  signal Decode_I_n_301 : STD_LOGIC;
  signal Decode_I_n_304 : STD_LOGIC;
  signal Decode_I_n_305 : STD_LOGIC;
  signal Decode_I_n_326 : STD_LOGIC;
  signal Decode_I_n_327 : STD_LOGIC;
  signal Decode_I_n_328 : STD_LOGIC;
  signal Decode_I_n_329 : STD_LOGIC;
  signal Decode_I_n_330 : STD_LOGIC;
  signal Decode_I_n_331 : STD_LOGIC;
  signal Decode_I_n_332 : STD_LOGIC;
  signal Decode_I_n_333 : STD_LOGIC;
  signal Decode_I_n_334 : STD_LOGIC;
  signal Decode_I_n_335 : STD_LOGIC;
  signal Decode_I_n_336 : STD_LOGIC;
  signal Decode_I_n_337 : STD_LOGIC;
  signal Decode_I_n_338 : STD_LOGIC;
  signal Decode_I_n_339 : STD_LOGIC;
  signal Decode_I_n_340 : STD_LOGIC;
  signal Decode_I_n_343 : STD_LOGIC;
  signal Decode_I_n_345 : STD_LOGIC;
  signal Decode_I_n_35 : STD_LOGIC;
  signal Decode_I_n_353 : STD_LOGIC;
  signal Decode_I_n_355 : STD_LOGIC;
  signal Decode_I_n_356 : STD_LOGIC;
  signal Decode_I_n_357 : STD_LOGIC;
  signal Decode_I_n_358 : STD_LOGIC;
  signal Decode_I_n_359 : STD_LOGIC;
  signal Decode_I_n_360 : STD_LOGIC;
  signal Decode_I_n_361 : STD_LOGIC;
  signal Decode_I_n_363 : STD_LOGIC;
  signal Decode_I_n_364 : STD_LOGIC;
  signal Decode_I_n_365 : STD_LOGIC;
  signal Decode_I_n_366 : STD_LOGIC;
  signal Decode_I_n_367 : STD_LOGIC;
  signal Decode_I_n_368 : STD_LOGIC;
  signal Decode_I_n_369 : STD_LOGIC;
  signal Decode_I_n_370 : STD_LOGIC;
  signal Decode_I_n_371 : STD_LOGIC;
  signal Decode_I_n_372 : STD_LOGIC;
  signal Decode_I_n_373 : STD_LOGIC;
  signal Decode_I_n_374 : STD_LOGIC;
  signal Decode_I_n_375 : STD_LOGIC;
  signal Decode_I_n_376 : STD_LOGIC;
  signal Decode_I_n_377 : STD_LOGIC;
  signal Decode_I_n_378 : STD_LOGIC;
  signal Decode_I_n_379 : STD_LOGIC;
  signal Decode_I_n_380 : STD_LOGIC;
  signal Decode_I_n_381 : STD_LOGIC;
  signal Decode_I_n_382 : STD_LOGIC;
  signal Decode_I_n_383 : STD_LOGIC;
  signal Decode_I_n_384 : STD_LOGIC;
  signal Decode_I_n_385 : STD_LOGIC;
  signal Decode_I_n_386 : STD_LOGIC;
  signal Decode_I_n_387 : STD_LOGIC;
  signal Decode_I_n_388 : STD_LOGIC;
  signal Decode_I_n_389 : STD_LOGIC;
  signal Decode_I_n_390 : STD_LOGIC;
  signal Decode_I_n_391 : STD_LOGIC;
  signal Decode_I_n_392 : STD_LOGIC;
  signal Decode_I_n_393 : STD_LOGIC;
  signal Decode_I_n_394 : STD_LOGIC;
  signal \^e\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal EX_ALU_Sel_Logic : STD_LOGIC;
  signal EX_Enable_ALU : STD_LOGIC;
  signal EX_Fwd : STD_LOGIC_VECTOR ( 0 to 31 );
  signal IB_Ready : STD_LOGIC;
  signal \^lockstep_master_out\ : STD_LOGIC_VECTOR ( 41 downto 0 );
  signal MEM_Fwd : STD_LOGIC_VECTOR ( 0 to 30 );
  signal MEM_PC : STD_LOGIC_VECTOR ( 0 to 31 );
  signal M_AXI_DP_AWVALID_i : STD_LOGIC;
  signal M_AXI_DP_AWVALID_i1 : STD_LOGIC;
  signal \Operand_Select_I/I0\ : STD_LOGIC;
  signal \Operand_Select_I/I1\ : STD_LOGIC;
  signal \PreFetch_Buffer_I1/I041_out\ : STD_LOGIC;
  signal \PreFetch_Buffer_I1/I139_out\ : STD_LOGIC;
  signal \PreFetch_Buffer_I1/if_predecode\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \PreFetch_Buffer_I1/p_1_in49_in\ : STD_LOGIC;
  signal SRI : STD_LOGIC;
  signal Sleep_Decode : STD_LOGIC;
  signal \^trace_wb_jump_hit_reg\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \Use_DBUS.DAXI_Interface_I1_n_10\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_11\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_12\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_13\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_14\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_15\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_16\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_17\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_18\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_19\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_2\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_20\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_21\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_22\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_23\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_24\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_25\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_26\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_27\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_28\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_29\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_3\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_30\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_31\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_32\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_33\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_34\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_35\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_36\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_37\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_38\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_39\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_4\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_40\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_41\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_42\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_5\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_6\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_7\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_8\ : STD_LOGIC;
  signal \Use_DBUS.DAXI_Interface_I1_n_9\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_0\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_10\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_11\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_13\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_15\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_2\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_3\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_5\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_6\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_61\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_62\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_63\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_7\ : STD_LOGIC;
  signal active_access_d1 : STD_LOGIC;
  signal dbg_clean_stop : STD_LOGIC;
  signal dbg_state_i : STD_LOGIC;
  signal dbg_stop_i : STD_LOGIC;
  signal dbg_stop_if_delay_i : STD_LOGIC;
  signal ex_Exception_Taken : STD_LOGIC;
  signal ex_MSR : STD_LOGIC_VECTOR ( 28 to 30 );
  signal ex_alu_carry : STD_LOGIC;
  signal ex_alu_op : STD_LOGIC_VECTOR ( 0 to 1 );
  signal ex_byte_access : STD_LOGIC;
  signal ex_cmp_op : STD_LOGIC;
  signal ex_databus_addr_mmu : STD_LOGIC_VECTOR ( 30 to 31 );
  signal ex_doublet_access : STD_LOGIC;
  signal ex_move_to_MSR_instr : STD_LOGIC;
  signal ex_op1_cmp_equal : STD_LOGIC;
  signal ex_op1_cmp_equal_n : STD_LOGIC;
  signal ex_op1_i : STD_LOGIC_VECTOR ( 0 to 31 );
  signal ex_op1_neg : STD_LOGIC;
  signal ex_op1_zero : STD_LOGIC;
  signal ex_op2 : STD_LOGIC_VECTOR ( 31 to 31 );
  signal ex_sext_op : STD_LOGIC_VECTOR ( 0 to 1 );
  signal ex_swap_byte_instr : STD_LOGIC;
  signal ex_unsigned_op : STD_LOGIC;
  signal ex_use_carry : STD_LOGIC;
  signal executing0 : STD_LOGIC;
  signal gpr_op1 : STD_LOGIC_VECTOR ( 0 to 15 );
  signal gpr_op2 : STD_LOGIC_VECTOR ( 0 to 31 );
  signal gpr_op3 : STD_LOGIC_VECTOR ( 0 to 15 );
  signal ib_data : STD_LOGIC_VECTOR ( 0 to 31 );
  signal if_sel_input : STD_LOGIC_VECTOR ( 3 to 4 );
  signal imm_reg : STD_LOGIC_VECTOR ( 0 to 15 );
  signal instr_rd_reg : STD_LOGIC_VECTOR ( 0 to 1 );
  signal interrupt_address_d1 : STD_LOGIC_VECTOR ( 0 to 31 );
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal mem_Exception_Taken : STD_LOGIC;
  signal mem_MSR : STD_LOGIC_VECTOR ( 29 to 29 );
  signal mem_databus_access : STD_LOGIC;
  signal mem_databus_read : STD_LOGIC;
  signal mem_databus_ready : STD_LOGIC;
  signal mem_databus_write : STD_LOGIC;
  signal mem_daxi_exclusive_failed : STD_LOGIC;
  signal mem_ex_result : STD_LOGIC_VECTOR ( 0 to 31 );
  signal mem_sel_msr : STD_LOGIC;
  signal \msr_reg_i/restore_wb_msr_to_ex\ : STD_LOGIC;
  signal \msr_reg_i/wb_MSR_cmb\ : STD_LOGIC_VECTOR ( 28 to 28 );
  signal no_sleeping : STD_LOGIC;
  signal of_MSR : STD_LOGIC_VECTOR ( 28 to 30 );
  signal of_Take_Interrupt : STD_LOGIC;
  signal of_gpr_op1_rd_addr : STD_LOGIC_VECTOR ( 0 to 4 );
  signal of_gpr_op3_rd_addr : STD_LOGIC_VECTOR ( 0 to 4 );
  signal of_imm_data : STD_LOGIC_VECTOR ( 0 to 15 );
  signal of_op1_sel : STD_LOGIC_VECTOR ( 0 to 1 );
  signal of_op1_sel_spr : STD_LOGIC;
  signal of_op2 : STD_LOGIC_VECTOR ( 0 to 31 );
  signal of_op3 : STD_LOGIC_VECTOR ( 0 to 15 );
  signal of_op3_sel : STD_LOGIC_VECTOR ( 0 to 1 );
  signal of_pc : STD_LOGIC_VECTOR ( 0 to 31 );
  signal of_predecode : STD_LOGIC_VECTOR ( 0 to 0 );
  signal of_write_imm_reg : STD_LOGIC;
  signal p_36_out : STD_LOGIC;
  signal \^use_reg_neg_s_reg\ : STD_LOGIC;
  signal wb_Halted : STD_LOGIC;
  signal wb_byte_access : STD_LOGIC;
  signal wb_dlmb_valid_read_data : STD_LOGIC_VECTOR ( 0 to 31 );
  signal wb_excep_return_addr : STD_LOGIC_VECTOR ( 0 to 15 );
  signal wb_gpr_wr_dbg : STD_LOGIC;
  signal wb_mem_result : STD_LOGIC_VECTOR ( 0 to 15 );
  signal wb_pc_valid : STD_LOGIC;
  signal wb_piperun : STD_LOGIC;
  signal wb_read_imm_reg : STD_LOGIC;
  signal wb_read_imm_reg_1 : STD_LOGIC;
  signal wb_read_msb_doublet_sel : STD_LOGIC;
  signal wb_sel_spr_shr : STD_LOGIC;
begin
  D(362 downto 0) <= \^d\(362 downto 0);
  \Dbg_Reg_En_2__s_net_1\ <= \Dbg_Reg_En_2__s_port_]\;
  E(0) <= \^e\(0);
  LOCKSTEP_Master_Out(41 downto 0) <= \^lockstep_master_out\(41 downto 0);
  Trace_WB_Jump_Hit_reg(0) <= \^trace_wb_jump_hit_reg\(0);
  use_Reg_Neg_S_reg <= \^use_reg_neg_s_reg\;
Data_Flow_I: entity work.system_microblaze_0_0_Data_Flow_gti
     port map (
      ADDRD(4 downto 0) => \^d\(119 downto 115),
      Clk => Clk,
      D(15) => \Operand_Select_I/I0\,
      D(14) => Decode_I_n_326,
      D(13) => Decode_I_n_327,
      D(12) => Decode_I_n_328,
      D(11) => Decode_I_n_329,
      D(10) => Decode_I_n_330,
      D(9) => Decode_I_n_331,
      D(8) => Decode_I_n_332,
      D(7) => Decode_I_n_333,
      D(6) => Decode_I_n_334,
      D(5) => Decode_I_n_335,
      D(4) => Decode_I_n_336,
      D(3) => Decode_I_n_337,
      D(2) => Decode_I_n_338,
      D(1) => Decode_I_n_339,
      D(0) => Decode_I_n_340,
      DI => \^d\(121),
      DI_0 => \ALU_I/DI\,
      \Data_Addr[0]\(119 downto 56) => \^d\(327 downto 264),
      \Data_Addr[0]\(55 downto 20) => \^d\(223 downto 188),
      \Data_Addr[0]\(19) => \^d\(152),
      \Data_Addr[0]\(18 downto 16) => \^d\(114 downto 112),
      \Data_Addr[0]\(15 downto 0) => \^d\(95 downto 80),
      Dbg_Disable => Dbg_Disable,
      E(0) => of_write_imm_reg,
      \EX_ALU_Op_reg[0]\(1) => ex_alu_op(0),
      \EX_ALU_Op_reg[0]\(0) => ex_alu_op(1),
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      EX_Enable_ALU => EX_Enable_ALU,
      EX_Fwd(0 to 31) => EX_Fwd(0 to 31),
      \EX_Op1_reg[24]\ => Decode_I_n_353,
      \EX_Op2_reg[0]\(15) => imm_reg(0),
      \EX_Op2_reg[0]\(14) => imm_reg(1),
      \EX_Op2_reg[0]\(13) => imm_reg(2),
      \EX_Op2_reg[0]\(12) => imm_reg(3),
      \EX_Op2_reg[0]\(11) => imm_reg(4),
      \EX_Op2_reg[0]\(10) => imm_reg(5),
      \EX_Op2_reg[0]\(9) => imm_reg(6),
      \EX_Op2_reg[0]\(8) => imm_reg(7),
      \EX_Op2_reg[0]\(7) => imm_reg(8),
      \EX_Op2_reg[0]\(6) => imm_reg(9),
      \EX_Op2_reg[0]\(5) => imm_reg(10),
      \EX_Op2_reg[0]\(4) => imm_reg(11),
      \EX_Op2_reg[0]\(3) => imm_reg(12),
      \EX_Op2_reg[0]\(2) => imm_reg(13),
      \EX_Op2_reg[0]\(1) => imm_reg(14),
      \EX_Op2_reg[0]\(0) => imm_reg(15),
      \EX_Sext_Op_reg[0]\(1) => ex_sext_op(0),
      \EX_Sext_Op_reg[0]\(0) => ex_sext_op(1),
      GPR_Op1(15) => gpr_op1(0),
      GPR_Op1(14) => gpr_op1(1),
      GPR_Op1(13) => gpr_op1(2),
      GPR_Op1(12) => gpr_op1(3),
      GPR_Op1(11) => gpr_op1(4),
      GPR_Op1(10) => gpr_op1(5),
      GPR_Op1(9) => gpr_op1(6),
      GPR_Op1(8) => gpr_op1(7),
      GPR_Op1(7) => gpr_op1(8),
      GPR_Op1(6) => gpr_op1(9),
      GPR_Op1(5) => gpr_op1(10),
      GPR_Op1(4) => gpr_op1(11),
      GPR_Op1(3) => gpr_op1(12),
      GPR_Op1(2) => gpr_op1(13),
      GPR_Op1(1) => gpr_op1(14),
      GPR_Op1(0) => gpr_op1(15),
      GPR_Op2(0 to 31) => gpr_op2(0 to 31),
      GPR_Op3(15) => gpr_op3(0),
      GPR_Op3(14) => gpr_op3(1),
      GPR_Op3(13) => gpr_op3(2),
      GPR_Op3(12) => gpr_op3(3),
      GPR_Op3(11) => gpr_op3(4),
      GPR_Op3(10) => gpr_op3(5),
      GPR_Op3(9) => gpr_op3(6),
      GPR_Op3(8) => gpr_op3(7),
      GPR_Op3(7) => gpr_op3(8),
      GPR_Op3(6) => gpr_op3(9),
      GPR_Op3(5) => gpr_op3(10),
      GPR_Op3(4) => gpr_op3(11),
      GPR_Op3(3) => gpr_op3(12),
      GPR_Op3(2) => gpr_op3(13),
      GPR_Op3(1) => gpr_op3(14),
      GPR_Op3(0) => gpr_op3(15),
      I1 => \Operand_Select_I/I1\,
      Interrupt => Interrupt,
      LO => ex_alu_carry,
      \LOCKSTEP_Out_reg[3709]\ => \^d\(151),
      \LOCKSTEP_Out_reg[3710]\ => \^d\(150),
      \LOCKSTEP_Out_reg[3711]\ => \^d\(149),
      \LOCKSTEP_Out_reg[3712]\ => \^d\(148),
      \LOCKSTEP_Out_reg[3713]\ => \^d\(147),
      \LOCKSTEP_Out_reg[3714]\ => \^d\(146),
      \LOCKSTEP_Out_reg[3715]\ => \^d\(145),
      \LOCKSTEP_Out_reg[3716]\ => \^d\(144),
      \LOCKSTEP_Out_reg[3717]\ => \^d\(143),
      \LOCKSTEP_Out_reg[3718]\ => \^d\(142),
      \LOCKSTEP_Out_reg[3719]\ => \^d\(141),
      \LOCKSTEP_Out_reg[3720]\ => \^d\(140),
      \LOCKSTEP_Out_reg[3721]\ => \^d\(139),
      \LOCKSTEP_Out_reg[3722]\ => \^d\(138),
      \LOCKSTEP_Out_reg[3723]\ => \^d\(137),
      \LOCKSTEP_Out_reg[3724]\ => \^d\(136),
      \LOCKSTEP_Out_reg[3725]\ => \^d\(135),
      \LOCKSTEP_Out_reg[3726]\ => \^d\(134),
      \LOCKSTEP_Out_reg[3727]\ => \^d\(133),
      \LOCKSTEP_Out_reg[3728]\ => \^d\(132),
      \LOCKSTEP_Out_reg[3729]\ => \^d\(131),
      \LOCKSTEP_Out_reg[3730]\ => \^d\(130),
      \LOCKSTEP_Out_reg[3731]\ => \^d\(129),
      \LOCKSTEP_Out_reg[3732]\ => \^d\(128),
      \LOCKSTEP_Out_reg[3733]\ => \^d\(127),
      \LOCKSTEP_Out_reg[3734]\ => \^d\(126),
      \LOCKSTEP_Out_reg[3735]\ => \^d\(125),
      \LOCKSTEP_Out_reg[3736]\ => \^d\(124),
      \LOCKSTEP_Out_reg[3737]\ => \^d\(123),
      \LOCKSTEP_Out_reg[3738]\ => \^d\(122),
      \LOCKSTEP_Out_reg[3769]\(15) => wb_excep_return_addr(0),
      \LOCKSTEP_Out_reg[3769]\(14) => wb_excep_return_addr(1),
      \LOCKSTEP_Out_reg[3769]\(13) => wb_excep_return_addr(2),
      \LOCKSTEP_Out_reg[3769]\(12) => wb_excep_return_addr(3),
      \LOCKSTEP_Out_reg[3769]\(11) => wb_excep_return_addr(4),
      \LOCKSTEP_Out_reg[3769]\(10) => wb_excep_return_addr(5),
      \LOCKSTEP_Out_reg[3769]\(9) => wb_excep_return_addr(6),
      \LOCKSTEP_Out_reg[3769]\(8) => wb_excep_return_addr(7),
      \LOCKSTEP_Out_reg[3769]\(7) => wb_excep_return_addr(8),
      \LOCKSTEP_Out_reg[3769]\(6) => wb_excep_return_addr(9),
      \LOCKSTEP_Out_reg[3769]\(5) => wb_excep_return_addr(10),
      \LOCKSTEP_Out_reg[3769]\(4) => wb_excep_return_addr(11),
      \LOCKSTEP_Out_reg[3769]\(3) => wb_excep_return_addr(12),
      \LOCKSTEP_Out_reg[3769]\(2) => wb_excep_return_addr(13),
      \LOCKSTEP_Out_reg[3769]\(1) => wb_excep_return_addr(14),
      \LOCKSTEP_Out_reg[3769]\(0) => wb_excep_return_addr(15),
      \LOCKSTEP_Out_reg[3769]_0\(15) => wb_mem_result(0),
      \LOCKSTEP_Out_reg[3769]_0\(14) => wb_mem_result(1),
      \LOCKSTEP_Out_reg[3769]_0\(13) => wb_mem_result(2),
      \LOCKSTEP_Out_reg[3769]_0\(12) => wb_mem_result(3),
      \LOCKSTEP_Out_reg[3769]_0\(11) => wb_mem_result(4),
      \LOCKSTEP_Out_reg[3769]_0\(10) => wb_mem_result(5),
      \LOCKSTEP_Out_reg[3769]_0\(9) => wb_mem_result(6),
      \LOCKSTEP_Out_reg[3769]_0\(8) => wb_mem_result(7),
      \LOCKSTEP_Out_reg[3769]_0\(7) => wb_mem_result(8),
      \LOCKSTEP_Out_reg[3769]_0\(6) => wb_mem_result(9),
      \LOCKSTEP_Out_reg[3769]_0\(5) => wb_mem_result(10),
      \LOCKSTEP_Out_reg[3769]_0\(4) => wb_mem_result(11),
      \LOCKSTEP_Out_reg[3769]_0\(3) => wb_mem_result(12),
      \LOCKSTEP_Out_reg[3769]_0\(2) => wb_mem_result(13),
      \LOCKSTEP_Out_reg[3769]_0\(1) => wb_mem_result(14),
      \LOCKSTEP_Out_reg[3769]_0\(0) => wb_mem_result(15),
      \LOCKSTEP_Out_reg[3792]\(1) => Data_Flow_I_n_396,
      \LOCKSTEP_Out_reg[3792]\(0) => Data_Flow_I_n_397,
      \LOCKSTEP_Out_reg[3800]\(0) => Data_Flow_I_n_398,
      \MEM_DataBus_Addr_reg[30]\(1) => ex_databus_addr_mmu(30),
      \MEM_DataBus_Addr_reg[30]\(0) => ex_databus_addr_mmu(31),
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => Decode_I_n_359,
      \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_3\,
      Q(0) => ex_op2(31),
      R => \Data_Flow_Logic_I/R\,
      SR(0) => SR(0),
      \Use_DLMB.wb_dlmb_valid_read_data_reg[16]\ => \Use_DBUS.DAXI_Interface_I1_n_16\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[17]\ => \Use_DBUS.DAXI_Interface_I1_n_14\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[18]\ => \Use_DBUS.DAXI_Interface_I1_n_12\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[19]\ => \Use_DBUS.DAXI_Interface_I1_n_10\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[20]\ => \Use_DBUS.DAXI_Interface_I1_n_8\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[21]\ => \Use_DBUS.DAXI_Interface_I1_n_6\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[22]\ => \Use_DBUS.DAXI_Interface_I1_n_4\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[23]\ => \Use_DBUS.DAXI_Interface_I1_n_2\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[24]\ => \Use_DBUS.DAXI_Interface_I1_n_17\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[25]\ => \Use_DBUS.DAXI_Interface_I1_n_15\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[26]\ => \Use_DBUS.DAXI_Interface_I1_n_13\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[27]\ => \Use_DBUS.DAXI_Interface_I1_n_11\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[28]\ => \Use_DBUS.DAXI_Interface_I1_n_9\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[29]\ => \Use_DBUS.DAXI_Interface_I1_n_7\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[30]\ => \Use_DBUS.DAXI_Interface_I1_n_5\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[31]\ => \Use_DBUS.DAXI_Interface_I1_n_3\,
      \Using_FPGA.Native\(31) => ex_op1_i(0),
      \Using_FPGA.Native\(30) => ex_op1_i(1),
      \Using_FPGA.Native\(29) => ex_op1_i(2),
      \Using_FPGA.Native\(28) => ex_op1_i(3),
      \Using_FPGA.Native\(27) => ex_op1_i(4),
      \Using_FPGA.Native\(26) => ex_op1_i(5),
      \Using_FPGA.Native\(25) => ex_op1_i(6),
      \Using_FPGA.Native\(24) => ex_op1_i(7),
      \Using_FPGA.Native\(23) => ex_op1_i(8),
      \Using_FPGA.Native\(22) => ex_op1_i(9),
      \Using_FPGA.Native\(21) => ex_op1_i(10),
      \Using_FPGA.Native\(20) => ex_op1_i(11),
      \Using_FPGA.Native\(19) => ex_op1_i(12),
      \Using_FPGA.Native\(18) => ex_op1_i(13),
      \Using_FPGA.Native\(17) => ex_op1_i(14),
      \Using_FPGA.Native\(16) => ex_op1_i(15),
      \Using_FPGA.Native\(15) => ex_op1_i(16),
      \Using_FPGA.Native\(14) => ex_op1_i(17),
      \Using_FPGA.Native\(13) => ex_op1_i(18),
      \Using_FPGA.Native\(12) => ex_op1_i(19),
      \Using_FPGA.Native\(11) => ex_op1_i(20),
      \Using_FPGA.Native\(10) => ex_op1_i(21),
      \Using_FPGA.Native\(9) => ex_op1_i(22),
      \Using_FPGA.Native\(8) => ex_op1_i(23),
      \Using_FPGA.Native\(7) => ex_op1_i(24),
      \Using_FPGA.Native\(6) => ex_op1_i(25),
      \Using_FPGA.Native\(5) => ex_op1_i(26),
      \Using_FPGA.Native\(4) => ex_op1_i(27),
      \Using_FPGA.Native\(3) => ex_op1_i(28),
      \Using_FPGA.Native\(2) => ex_op1_i(29),
      \Using_FPGA.Native\(1) => ex_op1_i(30),
      \Using_FPGA.Native\(0) => ex_op1_i(31),
      \Using_FPGA.Native_0\ => Data_Flow_I_n_33,
      \Using_FPGA.Native_1\ => Data_Flow_I_n_34,
      \Using_FPGA.Native_10\ => Data_Flow_I_n_317,
      \Using_FPGA.Native_11\ => Data_Flow_I_n_318,
      \Using_FPGA.Native_12\ => Data_Flow_I_n_319,
      \Using_FPGA.Native_13\ => Data_Flow_I_n_320,
      \Using_FPGA.Native_14\ => Data_Flow_I_n_321,
      \Using_FPGA.Native_15\ => Data_Flow_I_n_322,
      \Using_FPGA.Native_16\ => Data_Flow_I_n_323,
      \Using_FPGA.Native_17\ => Data_Flow_I_n_324,
      \Using_FPGA.Native_18\ => Data_Flow_I_n_325,
      \Using_FPGA.Native_19\ => Data_Flow_I_n_326,
      \Using_FPGA.Native_2\ => Data_Flow_I_n_241,
      \Using_FPGA.Native_20\ => Data_Flow_I_n_327,
      \Using_FPGA.Native_21\ => Data_Flow_I_n_328,
      \Using_FPGA.Native_22\ => Data_Flow_I_n_329,
      \Using_FPGA.Native_23\ => Data_Flow_I_n_330,
      \Using_FPGA.Native_24\ => Data_Flow_I_n_331,
      \Using_FPGA.Native_25\ => Data_Flow_I_n_332,
      \Using_FPGA.Native_26\ => Data_Flow_I_n_333,
      \Using_FPGA.Native_27\ => Data_Flow_I_n_334,
      \Using_FPGA.Native_28\ => Data_Flow_I_n_335,
      \Using_FPGA.Native_29\ => Data_Flow_I_n_336,
      \Using_FPGA.Native_3\ => Data_Flow_I_n_242,
      \Using_FPGA.Native_30\ => Data_Flow_I_n_337,
      \Using_FPGA.Native_31\ => Data_Flow_I_n_338,
      \Using_FPGA.Native_32\ => Data_Flow_I_n_339,
      \Using_FPGA.Native_33\ => Data_Flow_I_n_340,
      \Using_FPGA.Native_34\ => Data_Flow_I_n_341,
      \Using_FPGA.Native_35\ => Data_Flow_I_n_342,
      \Using_FPGA.Native_36\ => Data_Flow_I_n_343,
      \Using_FPGA.Native_37\(0) => ex_op1_neg,
      \Using_FPGA.Native_38\ => Decode_I_n_393,
      \Using_FPGA.Native_39\ => Decode_I_n_392,
      \Using_FPGA.Native_4\ => Data_Flow_I_n_243,
      \Using_FPGA.Native_40\ => Decode_I_n_391,
      \Using_FPGA.Native_41\ => Decode_I_n_390,
      \Using_FPGA.Native_42\ => Decode_I_n_389,
      \Using_FPGA.Native_43\ => Decode_I_n_388,
      \Using_FPGA.Native_44\ => Decode_I_n_387,
      \Using_FPGA.Native_45\ => Decode_I_n_386,
      \Using_FPGA.Native_46\ => Decode_I_n_385,
      \Using_FPGA.Native_47\ => Decode_I_n_384,
      \Using_FPGA.Native_48\ => Decode_I_n_383,
      \Using_FPGA.Native_49\ => Decode_I_n_382,
      \Using_FPGA.Native_5\ => Data_Flow_I_n_312,
      \Using_FPGA.Native_50\ => Decode_I_n_381,
      \Using_FPGA.Native_51\ => Decode_I_n_380,
      \Using_FPGA.Native_52\ => Decode_I_n_379,
      \Using_FPGA.Native_53\ => Decode_I_n_378,
      \Using_FPGA.Native_54\ => Decode_I_n_377,
      \Using_FPGA.Native_55\ => Decode_I_n_376,
      \Using_FPGA.Native_56\ => Decode_I_n_375,
      \Using_FPGA.Native_57\ => Decode_I_n_374,
      \Using_FPGA.Native_58\ => Decode_I_n_373,
      \Using_FPGA.Native_59\ => Decode_I_n_372,
      \Using_FPGA.Native_6\ => Data_Flow_I_n_313,
      \Using_FPGA.Native_60\ => Decode_I_n_371,
      \Using_FPGA.Native_61\ => Decode_I_n_370,
      \Using_FPGA.Native_62\ => Decode_I_n_369,
      \Using_FPGA.Native_63\ => Decode_I_n_368,
      \Using_FPGA.Native_64\ => Decode_I_n_367,
      \Using_FPGA.Native_65\ => Decode_I_n_363,
      \Using_FPGA.Native_66\ => Decode_I_n_364,
      \Using_FPGA.Native_67\ => Decode_I_n_365,
      \Using_FPGA.Native_68\ => Decode_I_n_366,
      \Using_FPGA.Native_69\ => Decode_I_n_305,
      \Using_FPGA.Native_7\ => Data_Flow_I_n_314,
      \Using_FPGA.Native_70\ => Decode_I_n_304,
      \Using_FPGA.Native_71\ => Decode_I_n_301,
      \Using_FPGA.Native_72\ => \^use_reg_neg_s_reg\,
      \Using_FPGA.Native_73\(3 downto 0) => \^d\(260 downto 257),
      \Using_FPGA.Native_8\ => Data_Flow_I_n_315,
      \Using_FPGA.Native_9\ => Data_Flow_I_n_316,
      \Using_Fast_Interrupt.wb_ie_rising_reg\ => Data_Flow_I_n_345,
      WB_Doublet_Access_reg(15) => of_op3(0),
      WB_Doublet_Access_reg(14) => of_op3(1),
      WB_Doublet_Access_reg(13) => of_op3(2),
      WB_Doublet_Access_reg(12) => of_op3(3),
      WB_Doublet_Access_reg(11) => of_op3(4),
      WB_Doublet_Access_reg(10) => of_op3(5),
      WB_Doublet_Access_reg(9) => of_op3(6),
      WB_Doublet_Access_reg(8) => of_op3(7),
      WB_Doublet_Access_reg(7) => of_op3(8),
      WB_Doublet_Access_reg(6) => of_op3(9),
      WB_Doublet_Access_reg(5) => of_op3(10),
      WB_Doublet_Access_reg(4) => of_op3(11),
      WB_Doublet_Access_reg(3) => of_op3(12),
      WB_Doublet_Access_reg(2) => of_op3(13),
      WB_Doublet_Access_reg(1) => of_op3(14),
      WB_Doublet_Access_reg(0) => of_op3(15),
      WB_Doublet_Access_reg_0 => \^d\(111),
      WB_Doublet_Access_reg_1 => \^d\(110),
      WB_Doublet_Access_reg_10 => \^d\(101),
      WB_Doublet_Access_reg_11 => \^d\(100),
      WB_Doublet_Access_reg_12 => \^d\(99),
      WB_Doublet_Access_reg_13 => \^d\(98),
      WB_Doublet_Access_reg_14 => \^d\(97),
      WB_Doublet_Access_reg_15 => \^d\(96),
      WB_Doublet_Access_reg_2 => \^d\(109),
      WB_Doublet_Access_reg_3 => \^d\(108),
      WB_Doublet_Access_reg_4 => \^d\(107),
      WB_Doublet_Access_reg_5 => \^d\(106),
      WB_Doublet_Access_reg_6 => \^d\(105),
      WB_Doublet_Access_reg_7 => \^d\(104),
      WB_Doublet_Access_reg_8 => \^d\(103),
      WB_Doublet_Access_reg_9 => \^d\(102),
      WB_GPR_Wr => \^d\(120),
      \WB_MEM_Result_reg[0]\(29) => mem_ex_result(0),
      \WB_MEM_Result_reg[0]\(28) => mem_ex_result(1),
      \WB_MEM_Result_reg[0]\(27) => mem_ex_result(2),
      \WB_MEM_Result_reg[0]\(26) => mem_ex_result(3),
      \WB_MEM_Result_reg[0]\(25) => mem_ex_result(4),
      \WB_MEM_Result_reg[0]\(24) => mem_ex_result(5),
      \WB_MEM_Result_reg[0]\(23) => mem_ex_result(6),
      \WB_MEM_Result_reg[0]\(22) => mem_ex_result(7),
      \WB_MEM_Result_reg[0]\(21) => mem_ex_result(8),
      \WB_MEM_Result_reg[0]\(20) => mem_ex_result(9),
      \WB_MEM_Result_reg[0]\(19) => mem_ex_result(10),
      \WB_MEM_Result_reg[0]\(18) => mem_ex_result(11),
      \WB_MEM_Result_reg[0]\(17) => mem_ex_result(12),
      \WB_MEM_Result_reg[0]\(16) => mem_ex_result(13),
      \WB_MEM_Result_reg[0]\(15) => mem_ex_result(14),
      \WB_MEM_Result_reg[0]\(14) => mem_ex_result(15),
      \WB_MEM_Result_reg[0]\(13) => mem_ex_result(16),
      \WB_MEM_Result_reg[0]\(12) => mem_ex_result(17),
      \WB_MEM_Result_reg[0]\(11) => mem_ex_result(18),
      \WB_MEM_Result_reg[0]\(10) => mem_ex_result(19),
      \WB_MEM_Result_reg[0]\(9) => mem_ex_result(20),
      \WB_MEM_Result_reg[0]\(8) => mem_ex_result(21),
      \WB_MEM_Result_reg[0]\(7) => mem_ex_result(22),
      \WB_MEM_Result_reg[0]\(6) => mem_ex_result(23),
      \WB_MEM_Result_reg[0]\(5) => mem_ex_result(24),
      \WB_MEM_Result_reg[0]\(4) => mem_ex_result(25),
      \WB_MEM_Result_reg[0]\(3) => mem_ex_result(26),
      \WB_MEM_Result_reg[0]\(2) => mem_ex_result(27),
      \WB_MEM_Result_reg[0]\(1) => mem_ex_result(28),
      \WB_MEM_Result_reg[0]\(0) => mem_ex_result(31),
      \WB_MEM_Result_reg[0]_0\(2) => MEM_Fwd(0),
      \WB_MEM_Result_reg[0]_0\(1) => MEM_Fwd(29),
      \WB_MEM_Result_reg[0]_0\(0) => MEM_Fwd(30),
      \WB_MEM_Result_reg[29]\(0) => mem_MSR(29),
      \control_reg_reg[3]\(0) => \Use_Debug_Logic.Master_Core.Debug_Perf_n_62\,
      \data_rd_reg_reg[16]\ => Data_Flow_I_n_295,
      \data_rd_reg_reg[17]\ => Data_Flow_I_n_294,
      \data_rd_reg_reg[18]\ => Data_Flow_I_n_293,
      \data_rd_reg_reg[19]\ => Data_Flow_I_n_292,
      \data_rd_reg_reg[20]\ => Data_Flow_I_n_291,
      \data_rd_reg_reg[21]\ => Data_Flow_I_n_290,
      \data_rd_reg_reg[22]\ => Data_Flow_I_n_289,
      \data_rd_reg_reg[23]\ => Data_Flow_I_n_288,
      \data_rd_reg_reg[24]\ => Data_Flow_I_n_287,
      \data_rd_reg_reg[25]\ => Data_Flow_I_n_286,
      \data_rd_reg_reg[26]\ => Data_Flow_I_n_285,
      \data_rd_reg_reg[27]\ => Data_Flow_I_n_284,
      \data_rd_reg_reg[28]\ => Data_Flow_I_n_283,
      \data_rd_reg_reg[29]\ => Data_Flow_I_n_282,
      \data_rd_reg_reg[30]\ => Data_Flow_I_n_281,
      \data_rd_reg_reg[31]\ => Data_Flow_I_n_280,
      ex_Interrupt_Brk_combo_reg => Data_Flow_I_n_344,
      ex_MSR(2) => ex_MSR(28),
      ex_MSR(1) => ex_MSR(29),
      ex_MSR(0) => ex_MSR(30),
      ex_Take_Intr_or_Exc_reg => Decode_I_n_300,
      ex_branch_with_delayslot_reg => \^e\(0),
      ex_byte_access => ex_byte_access,
      ex_cmp_op => ex_cmp_op,
      ex_doublet_access => ex_doublet_access,
      ex_move_to_MSR_instr => ex_move_to_MSR_instr,
      ex_op1_cmp_equal => ex_op1_cmp_equal,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      ex_op1_zero => ex_op1_zero,
      ex_reverse_byteorder => \Byte_Doublet_Handle_gti_I/ex_reverse_byteorder\,
      ex_set_MSR_IE_instr_reg => Decode_I_n_360,
      ex_set_MSR_IE_instr_reg_0 => Decode_I_n_361,
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_unsigned_op => ex_unsigned_op,
      ex_use_carry => ex_use_carry,
      \interrupt_address_d1_reg[0]\(31) => of_op2(0),
      \interrupt_address_d1_reg[0]\(30) => of_op2(1),
      \interrupt_address_d1_reg[0]\(29) => of_op2(2),
      \interrupt_address_d1_reg[0]\(28) => of_op2(3),
      \interrupt_address_d1_reg[0]\(27) => of_op2(4),
      \interrupt_address_d1_reg[0]\(26) => of_op2(5),
      \interrupt_address_d1_reg[0]\(25) => of_op2(6),
      \interrupt_address_d1_reg[0]\(24) => of_op2(7),
      \interrupt_address_d1_reg[0]\(23) => of_op2(8),
      \interrupt_address_d1_reg[0]\(22) => of_op2(9),
      \interrupt_address_d1_reg[0]\(21) => of_op2(10),
      \interrupt_address_d1_reg[0]\(20) => of_op2(11),
      \interrupt_address_d1_reg[0]\(19) => of_op2(12),
      \interrupt_address_d1_reg[0]\(18) => of_op2(13),
      \interrupt_address_d1_reg[0]\(17) => of_op2(14),
      \interrupt_address_d1_reg[0]\(16) => of_op2(15),
      \interrupt_address_d1_reg[0]\(15) => of_op2(16),
      \interrupt_address_d1_reg[0]\(14) => of_op2(17),
      \interrupt_address_d1_reg[0]\(13) => of_op2(18),
      \interrupt_address_d1_reg[0]\(12) => of_op2(19),
      \interrupt_address_d1_reg[0]\(11) => of_op2(20),
      \interrupt_address_d1_reg[0]\(10) => of_op2(21),
      \interrupt_address_d1_reg[0]\(9) => of_op2(22),
      \interrupt_address_d1_reg[0]\(8) => of_op2(23),
      \interrupt_address_d1_reg[0]\(7) => of_op2(24),
      \interrupt_address_d1_reg[0]\(6) => of_op2(25),
      \interrupt_address_d1_reg[0]\(5) => of_op2(26),
      \interrupt_address_d1_reg[0]\(4) => of_op2(27),
      \interrupt_address_d1_reg[0]\(3) => of_op2(28),
      \interrupt_address_d1_reg[0]\(2) => of_op2(29),
      \interrupt_address_d1_reg[0]\(1) => of_op2(30),
      \interrupt_address_d1_reg[0]\(0) => of_op2(31),
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      \mem_byte_selects_reg[0]\(0) => \Byte_Doublet_Handle_gti_I/ex_byte_selects\(0),
      mem_daxi_exclusive_failed => mem_daxi_exclusive_failed,
      \mem_pc_i_reg[0]\(31) => MEM_PC(0),
      \mem_pc_i_reg[0]\(30) => MEM_PC(1),
      \mem_pc_i_reg[0]\(29) => MEM_PC(2),
      \mem_pc_i_reg[0]\(28) => MEM_PC(3),
      \mem_pc_i_reg[0]\(27) => MEM_PC(4),
      \mem_pc_i_reg[0]\(26) => MEM_PC(5),
      \mem_pc_i_reg[0]\(25) => MEM_PC(6),
      \mem_pc_i_reg[0]\(24) => MEM_PC(7),
      \mem_pc_i_reg[0]\(23) => MEM_PC(8),
      \mem_pc_i_reg[0]\(22) => MEM_PC(9),
      \mem_pc_i_reg[0]\(21) => MEM_PC(10),
      \mem_pc_i_reg[0]\(20) => MEM_PC(11),
      \mem_pc_i_reg[0]\(19) => MEM_PC(12),
      \mem_pc_i_reg[0]\(18) => MEM_PC(13),
      \mem_pc_i_reg[0]\(17) => MEM_PC(14),
      \mem_pc_i_reg[0]\(16) => MEM_PC(15),
      \mem_pc_i_reg[0]\(15) => MEM_PC(16),
      \mem_pc_i_reg[0]\(14) => MEM_PC(17),
      \mem_pc_i_reg[0]\(13) => MEM_PC(18),
      \mem_pc_i_reg[0]\(12) => MEM_PC(19),
      \mem_pc_i_reg[0]\(11) => MEM_PC(20),
      \mem_pc_i_reg[0]\(10) => MEM_PC(21),
      \mem_pc_i_reg[0]\(9) => MEM_PC(22),
      \mem_pc_i_reg[0]\(8) => MEM_PC(23),
      \mem_pc_i_reg[0]\(7) => MEM_PC(24),
      \mem_pc_i_reg[0]\(6) => MEM_PC(25),
      \mem_pc_i_reg[0]\(5) => MEM_PC(26),
      \mem_pc_i_reg[0]\(4) => MEM_PC(27),
      \mem_pc_i_reg[0]\(3) => MEM_PC(28),
      \mem_pc_i_reg[0]\(2) => MEM_PC(29),
      \mem_pc_i_reg[0]\(1) => MEM_PC(30),
      \mem_pc_i_reg[0]\(0) => MEM_PC(31),
      mem_sel_msr => mem_sel_msr,
      mem_valid_reg => \^trace_wb_jump_hit_reg\(0),
      of_MSR(1) => of_MSR(28),
      of_MSR(0) => of_MSR(30),
      of_Take_Interrupt => of_Take_Interrupt,
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(0 to 15) => of_imm_data(0 to 15),
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op1_sel_spr => of_op1_sel_spr,
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1),
      \out\(0) => \out\(0),
      read_register_MSR_1_reg => \Use_Debug_Logic.Master_Core.Debug_Perf_n_2\,
      restore_wb_msr_to_ex => \msr_reg_i/restore_wb_msr_to_ex\,
      wb_MSR_cmb(0) => \msr_reg_i/wb_MSR_cmb\(28),
      wb_byte_access => wb_byte_access,
      wb_exception_i_reg => \^d\(79),
      \wb_exception_kind_i_reg[28]\(0) => \^d\(77),
      \wb_exception_kind_i_reg[28]_0\ => Decode_I_n_343,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      wb_piperun => wb_piperun,
      \wb_read_lsb_1_sel_reg[0]\ => \Use_DBUS.DAXI_Interface_I1_n_24\,
      \wb_read_lsb_1_sel_reg[0]_0\ => \Use_DBUS.DAXI_Interface_I1_n_22\,
      \wb_read_lsb_1_sel_reg[0]_1\ => \Use_DBUS.DAXI_Interface_I1_n_20\,
      \wb_read_lsb_1_sel_reg[0]_2\ => \Use_DBUS.DAXI_Interface_I1_n_18\,
      \wb_read_lsb_1_sel_reg[0]_3\ => \Use_DBUS.DAXI_Interface_I1_n_19\,
      \wb_read_lsb_1_sel_reg[0]_4\ => \Use_DBUS.DAXI_Interface_I1_n_21\,
      \wb_read_lsb_1_sel_reg[0]_5\ => \Use_DBUS.DAXI_Interface_I1_n_23\,
      \wb_read_lsb_1_sel_reg[0]_6\ => \Use_DBUS.DAXI_Interface_I1_n_25\,
      wb_read_msb_doublet_sel => wb_read_msb_doublet_sel,
      wb_sel_spr_shr => wb_sel_spr_shr
    );
Decode_I: entity work.system_microblaze_0_0_Decode_gti
     port map (
      Clk => Clk,
      D(31) => of_pc(0),
      D(30) => of_pc(1),
      D(29) => of_pc(2),
      D(28) => of_pc(3),
      D(27) => of_pc(4),
      D(26) => of_pc(5),
      D(25) => of_pc(6),
      D(24) => of_pc(7),
      D(23) => of_pc(8),
      D(22) => of_pc(9),
      D(21) => of_pc(10),
      D(20) => of_pc(11),
      D(19) => of_pc(12),
      D(18) => of_pc(13),
      D(17) => of_pc(14),
      D(16) => of_pc(15),
      D(15) => of_pc(16),
      D(14) => of_pc(17),
      D(13) => of_pc(18),
      D(12) => of_pc(19),
      D(11) => of_pc(20),
      D(10) => of_pc(21),
      D(9) => of_pc(22),
      D(8) => of_pc(23),
      D(7) => of_pc(24),
      D(6) => of_pc(25),
      D(5) => of_pc(26),
      D(4) => of_pc(27),
      D(3) => of_pc(28),
      D(2) => of_pc(29),
      D(1) => of_pc(30),
      D(0) => of_pc(31),
      DI => \ALU_I/DI\,
      DReady => DReady,
      DWait => DWait,
      Dbg_Disable => Dbg_Disable,
      E(0) => of_write_imm_reg,
      EX_ALU_Sel_Logic => EX_ALU_Sel_Logic,
      \EX_Branch_CMP_Op1_reg[0]\(15) => \Operand_Select_I/I0\,
      \EX_Branch_CMP_Op1_reg[0]\(14) => Decode_I_n_326,
      \EX_Branch_CMP_Op1_reg[0]\(13) => Decode_I_n_327,
      \EX_Branch_CMP_Op1_reg[0]\(12) => Decode_I_n_328,
      \EX_Branch_CMP_Op1_reg[0]\(11) => Decode_I_n_329,
      \EX_Branch_CMP_Op1_reg[0]\(10) => Decode_I_n_330,
      \EX_Branch_CMP_Op1_reg[0]\(9) => Decode_I_n_331,
      \EX_Branch_CMP_Op1_reg[0]\(8) => Decode_I_n_332,
      \EX_Branch_CMP_Op1_reg[0]\(7) => Decode_I_n_333,
      \EX_Branch_CMP_Op1_reg[0]\(6) => Decode_I_n_334,
      \EX_Branch_CMP_Op1_reg[0]\(5) => Decode_I_n_335,
      \EX_Branch_CMP_Op1_reg[0]\(4) => Decode_I_n_336,
      \EX_Branch_CMP_Op1_reg[0]\(3) => Decode_I_n_337,
      \EX_Branch_CMP_Op1_reg[0]\(2) => Decode_I_n_338,
      \EX_Branch_CMP_Op1_reg[0]\(1) => Decode_I_n_339,
      \EX_Branch_CMP_Op1_reg[0]\(0) => Decode_I_n_340,
      \EX_Branch_CMP_Op1_reg[0]_0\(0) => ex_op1_neg,
      EX_Enable_ALU => EX_Enable_ALU,
      EX_Fwd(0 to 31) => EX_Fwd(0 to 31),
      \EX_Op1_reg[0]\(31) => ex_op1_i(0),
      \EX_Op1_reg[0]\(30) => ex_op1_i(1),
      \EX_Op1_reg[0]\(29) => ex_op1_i(2),
      \EX_Op1_reg[0]\(28) => ex_op1_i(3),
      \EX_Op1_reg[0]\(27) => ex_op1_i(4),
      \EX_Op1_reg[0]\(26) => ex_op1_i(5),
      \EX_Op1_reg[0]\(25) => ex_op1_i(6),
      \EX_Op1_reg[0]\(24) => ex_op1_i(7),
      \EX_Op1_reg[0]\(23) => ex_op1_i(8),
      \EX_Op1_reg[0]\(22) => ex_op1_i(9),
      \EX_Op1_reg[0]\(21) => ex_op1_i(10),
      \EX_Op1_reg[0]\(20) => ex_op1_i(11),
      \EX_Op1_reg[0]\(19) => ex_op1_i(12),
      \EX_Op1_reg[0]\(18) => ex_op1_i(13),
      \EX_Op1_reg[0]\(17) => ex_op1_i(14),
      \EX_Op1_reg[0]\(16) => ex_op1_i(15),
      \EX_Op1_reg[0]\(15) => ex_op1_i(16),
      \EX_Op1_reg[0]\(14) => ex_op1_i(17),
      \EX_Op1_reg[0]\(13) => ex_op1_i(18),
      \EX_Op1_reg[0]\(12) => ex_op1_i(19),
      \EX_Op1_reg[0]\(11) => ex_op1_i(20),
      \EX_Op1_reg[0]\(10) => ex_op1_i(21),
      \EX_Op1_reg[0]\(9) => ex_op1_i(22),
      \EX_Op1_reg[0]\(8) => ex_op1_i(23),
      \EX_Op1_reg[0]\(7) => ex_op1_i(24),
      \EX_Op1_reg[0]\(6) => ex_op1_i(25),
      \EX_Op1_reg[0]\(5) => ex_op1_i(26),
      \EX_Op1_reg[0]\(4) => ex_op1_i(27),
      \EX_Op1_reg[0]\(3) => ex_op1_i(28),
      \EX_Op1_reg[0]\(2) => ex_op1_i(29),
      \EX_Op1_reg[0]\(1) => ex_op1_i(30),
      \EX_Op1_reg[0]\(0) => ex_op1_i(31),
      \EX_Op1_reg[0]_0\ => Data_Flow_I_n_319,
      \EX_Op1_reg[10]\ => Decode_I_n_384,
      \EX_Op1_reg[10]_0\ => Data_Flow_I_n_325,
      \EX_Op1_reg[11]\ => Decode_I_n_383,
      \EX_Op1_reg[11]_0\ => Data_Flow_I_n_324,
      \EX_Op1_reg[12]\ => Decode_I_n_382,
      \EX_Op1_reg[12]_0\ => Data_Flow_I_n_323,
      \EX_Op1_reg[13]\ => Decode_I_n_381,
      \EX_Op1_reg[13]_0\ => Data_Flow_I_n_322,
      \EX_Op1_reg[14]\ => Decode_I_n_380,
      \EX_Op1_reg[14]_0\ => Data_Flow_I_n_321,
      \EX_Op1_reg[15]\ => Decode_I_n_379,
      \EX_Op1_reg[15]_0\ => Data_Flow_I_n_320,
      \EX_Op1_reg[16]\ => Decode_I_n_378,
      \EX_Op1_reg[16]_0\ => Data_Flow_I_n_335,
      \EX_Op1_reg[17]\ => Decode_I_n_377,
      \EX_Op1_reg[17]_0\ => Data_Flow_I_n_334,
      \EX_Op1_reg[18]\ => Decode_I_n_376,
      \EX_Op1_reg[18]_0\ => Data_Flow_I_n_333,
      \EX_Op1_reg[19]\ => Decode_I_n_375,
      \EX_Op1_reg[19]_0\ => Data_Flow_I_n_332,
      \EX_Op1_reg[1]\ => Decode_I_n_393,
      \EX_Op1_reg[1]_0\ => Data_Flow_I_n_318,
      \EX_Op1_reg[20]\ => Decode_I_n_374,
      \EX_Op1_reg[20]_0\ => Data_Flow_I_n_331,
      \EX_Op1_reg[21]\ => Decode_I_n_373,
      \EX_Op1_reg[21]_0\ => Data_Flow_I_n_330,
      \EX_Op1_reg[22]\ => Decode_I_n_372,
      \EX_Op1_reg[22]_0\ => Data_Flow_I_n_329,
      \EX_Op1_reg[23]\ => Decode_I_n_371,
      \EX_Op1_reg[23]_0\ => Data_Flow_I_n_328,
      \EX_Op1_reg[24]\ => Decode_I_n_370,
      \EX_Op1_reg[24]_0\ => Data_Flow_I_n_33,
      \EX_Op1_reg[24]_1\ => Data_Flow_I_n_34,
      \EX_Op1_reg[24]_2\ => Data_Flow_I_n_343,
      \EX_Op1_reg[25]\ => Decode_I_n_369,
      \EX_Op1_reg[25]_0\ => Data_Flow_I_n_342,
      \EX_Op1_reg[26]\ => Decode_I_n_368,
      \EX_Op1_reg[26]_0\ => Data_Flow_I_n_341,
      \EX_Op1_reg[27]\ => Decode_I_n_367,
      \EX_Op1_reg[27]_0\ => Data_Flow_I_n_340,
      \EX_Op1_reg[28]\ => Decode_I_n_363,
      \EX_Op1_reg[28]_0\ => Data_Flow_I_n_243,
      \EX_Op1_reg[28]_1\ => Data_Flow_I_n_339,
      \EX_Op1_reg[29]\ => Decode_I_n_364,
      \EX_Op1_reg[29]_0\ => Data_Flow_I_n_242,
      \EX_Op1_reg[29]_1\ => Data_Flow_I_n_338,
      \EX_Op1_reg[2]\ => Decode_I_n_392,
      \EX_Op1_reg[2]_0\ => Data_Flow_I_n_317,
      \EX_Op1_reg[30]\ => Decode_I_n_365,
      \EX_Op1_reg[30]_0\ => Data_Flow_I_n_337,
      \EX_Op1_reg[30]_1\ => Data_Flow_I_n_241,
      \EX_Op1_reg[31]\ => Decode_I_n_366,
      \EX_Op1_reg[31]_0\ => Data_Flow_I_n_336,
      \EX_Op1_reg[3]\ => Decode_I_n_391,
      \EX_Op1_reg[3]_0\ => Data_Flow_I_n_316,
      \EX_Op1_reg[4]\ => Decode_I_n_390,
      \EX_Op1_reg[4]_0\ => Data_Flow_I_n_315,
      \EX_Op1_reg[5]\ => Decode_I_n_389,
      \EX_Op1_reg[5]_0\ => Data_Flow_I_n_314,
      \EX_Op1_reg[6]\ => Decode_I_n_388,
      \EX_Op1_reg[6]_0\ => Data_Flow_I_n_313,
      \EX_Op1_reg[7]\ => Decode_I_n_387,
      \EX_Op1_reg[7]_0\ => Data_Flow_I_n_312,
      \EX_Op1_reg[8]\ => Decode_I_n_386,
      \EX_Op1_reg[8]_0\ => Data_Flow_I_n_327,
      \EX_Op1_reg[9]\ => Decode_I_n_385,
      \EX_Op1_reg[9]_0\ => Data_Flow_I_n_326,
      \EX_Op2_reg[0]\(31) => of_op2(0),
      \EX_Op2_reg[0]\(30) => of_op2(1),
      \EX_Op2_reg[0]\(29) => of_op2(2),
      \EX_Op2_reg[0]\(28) => of_op2(3),
      \EX_Op2_reg[0]\(27) => of_op2(4),
      \EX_Op2_reg[0]\(26) => of_op2(5),
      \EX_Op2_reg[0]\(25) => of_op2(6),
      \EX_Op2_reg[0]\(24) => of_op2(7),
      \EX_Op2_reg[0]\(23) => of_op2(8),
      \EX_Op2_reg[0]\(22) => of_op2(9),
      \EX_Op2_reg[0]\(21) => of_op2(10),
      \EX_Op2_reg[0]\(20) => of_op2(11),
      \EX_Op2_reg[0]\(19) => of_op2(12),
      \EX_Op2_reg[0]\(18) => of_op2(13),
      \EX_Op2_reg[0]\(17) => of_op2(14),
      \EX_Op2_reg[0]\(16) => of_op2(15),
      \EX_Op2_reg[0]\(15) => of_op2(16),
      \EX_Op2_reg[0]\(14) => of_op2(17),
      \EX_Op2_reg[0]\(13) => of_op2(18),
      \EX_Op2_reg[0]\(12) => of_op2(19),
      \EX_Op2_reg[0]\(11) => of_op2(20),
      \EX_Op2_reg[0]\(10) => of_op2(21),
      \EX_Op2_reg[0]\(9) => of_op2(22),
      \EX_Op2_reg[0]\(8) => of_op2(23),
      \EX_Op2_reg[0]\(7) => of_op2(24),
      \EX_Op2_reg[0]\(6) => of_op2(25),
      \EX_Op2_reg[0]\(5) => of_op2(26),
      \EX_Op2_reg[0]\(4) => of_op2(27),
      \EX_Op2_reg[0]\(3) => of_op2(28),
      \EX_Op2_reg[0]\(2) => of_op2(29),
      \EX_Op2_reg[0]\(1) => of_op2(30),
      \EX_Op2_reg[0]\(0) => of_op2(31),
      \EX_Op2_reg[0]_0\(45 downto 16) => \^d\(327 downto 298),
      \EX_Op2_reg[0]_0\(15 downto 0) => \^d\(95 downto 80),
      \EX_Op2_reg[30]\(1) => ex_databus_addr_mmu(30),
      \EX_Op2_reg[30]\(0) => ex_databus_addr_mmu(31),
      \EX_Op2_reg[31]\(0) => ex_op2(31),
      \EX_Op3_reg[0]\(15) => of_op3(0),
      \EX_Op3_reg[0]\(14) => of_op3(1),
      \EX_Op3_reg[0]\(13) => of_op3(2),
      \EX_Op3_reg[0]\(12) => of_op3(3),
      \EX_Op3_reg[0]\(11) => of_op3(4),
      \EX_Op3_reg[0]\(10) => of_op3(5),
      \EX_Op3_reg[0]\(9) => of_op3(6),
      \EX_Op3_reg[0]\(8) => of_op3(7),
      \EX_Op3_reg[0]\(7) => of_op3(8),
      \EX_Op3_reg[0]\(6) => of_op3(9),
      \EX_Op3_reg[0]\(5) => of_op3(10),
      \EX_Op3_reg[0]\(4) => of_op3(11),
      \EX_Op3_reg[0]\(3) => of_op3(12),
      \EX_Op3_reg[0]\(2) => of_op3(13),
      \EX_Op3_reg[0]\(1) => of_op3(14),
      \EX_Op3_reg[0]\(0) => of_op3(15),
      GPR_Op1(15) => gpr_op1(0),
      GPR_Op1(14) => gpr_op1(1),
      GPR_Op1(13) => gpr_op1(2),
      GPR_Op1(12) => gpr_op1(3),
      GPR_Op1(11) => gpr_op1(4),
      GPR_Op1(10) => gpr_op1(5),
      GPR_Op1(9) => gpr_op1(6),
      GPR_Op1(8) => gpr_op1(7),
      GPR_Op1(7) => gpr_op1(8),
      GPR_Op1(6) => gpr_op1(9),
      GPR_Op1(5) => gpr_op1(10),
      GPR_Op1(4) => gpr_op1(11),
      GPR_Op1(3) => gpr_op1(12),
      GPR_Op1(2) => gpr_op1(13),
      GPR_Op1(1) => gpr_op1(14),
      GPR_Op1(0) => gpr_op1(15),
      GPR_Op2(0 to 31) => gpr_op2(0 to 31),
      GPR_Op3(15) => gpr_op3(0),
      GPR_Op3(14) => gpr_op3(1),
      GPR_Op3(13) => gpr_op3(2),
      GPR_Op3(12) => gpr_op3(3),
      GPR_Op3(11) => gpr_op3(4),
      GPR_Op3(10) => gpr_op3(5),
      GPR_Op3(9) => gpr_op3(6),
      GPR_Op3(8) => gpr_op3(7),
      GPR_Op3(7) => gpr_op3(8),
      GPR_Op3(6) => gpr_op3(9),
      GPR_Op3(5) => gpr_op3(10),
      GPR_Op3(4) => gpr_op3(11),
      GPR_Op3(3) => gpr_op3(12),
      GPR_Op3(2) => gpr_op3(13),
      GPR_Op3(1) => gpr_op3(14),
      GPR_Op3(0) => gpr_op3(15),
      I041_out => \PreFetch_Buffer_I1/I041_out\,
      I1 => \Operand_Select_I/I1\,
      I139_out => \PreFetch_Buffer_I1/I139_out\,
      IB_Ready => IB_Ready,
      IFetch(135 downto 102) => \^d\(361 downto 328),
      IFetch(101 downto 64) => \^d\(262 downto 225),
      IFetch(63 downto 31) => \^d\(185 downto 153),
      IFetch(30 downto 25) => \^d\(120 downto 115),
      IFetch(24 downto 9) => \^d\(111 downto 96),
      IFetch(8 downto 1) => \^d\(79 downto 72),
      IFetch(0) => \^d\(0),
      IReady => IReady,
      Interrupt_Ack(0 to 1) => Interrupt_Ack(0 to 1),
      LOCKSTEP_Master_Out(1) => \^lockstep_master_out\(38),
      LOCKSTEP_Master_Out(0) => \^lockstep_master_out\(36),
      MEM_Sel_MEM_Res => MEM_Sel_MEM_Res,
      M_AXI_DP_AWVALID_i => M_AXI_DP_AWVALID_i,
      M_AXI_DP_AWVALID_i1 => M_AXI_DP_AWVALID_i1,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_7\,
      \Performace_Debug_Control.dbg_hit_reg[15]\ => Decode_I_n_345,
      \Performace_Debug_Control.dbg_state_nohalt_reg\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_5\,
      \Performace_Debug_Control.dbg_stop_if_delay_i_reg\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_15\,
      \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_3\,
      \Performace_Debug_Control.ex_brki_hit_reg\ => Decode_I_n_358,
      \Performace_Debug_Control.ex_dbg_pc_hit_i_reg\ => Decode_I_n_357,
      \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_0\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_61\,
      \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_1\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_11\,
      \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_10\,
      \Performace_Debug_Control.ex_watchpoint_brk_reg\ => Decode_I_n_394,
      \Performace_Debug_Control.ex_watchpoint_brk_reg_0\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_13\,
      Q(1) => ex_alu_op(0),
      Q(0) => ex_alu_op(1),
      R => \Data_Flow_Logic_I/R\,
      Rst18_out => Rst18_out,
      SRI => SRI,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel,
      Sleep => Sleep,
      Sleep_Decode => Sleep_Decode,
      Trace_WB_Jump_Hit_reg_0 => \^trace_wb_jump_hit_reg\(0),
      \Use_DLMB.wb_dlmb_valid_read_data_reg[16]\ => \Use_DBUS.DAXI_Interface_I1_n_33\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[17]\ => \Use_DBUS.DAXI_Interface_I1_n_32\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[18]\ => \Use_DBUS.DAXI_Interface_I1_n_31\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[19]\ => \Use_DBUS.DAXI_Interface_I1_n_30\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[20]\ => \Use_DBUS.DAXI_Interface_I1_n_29\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[21]\ => \Use_DBUS.DAXI_Interface_I1_n_28\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[22]\ => \Use_DBUS.DAXI_Interface_I1_n_27\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[23]\ => \Use_DBUS.DAXI_Interface_I1_n_26\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[24]\ => \Use_DBUS.DAXI_Interface_I1_n_41\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[25]\ => \Use_DBUS.DAXI_Interface_I1_n_40\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[26]\ => \Use_DBUS.DAXI_Interface_I1_n_39\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[27]\ => \Use_DBUS.DAXI_Interface_I1_n_38\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[28]\ => \Use_DBUS.DAXI_Interface_I1_n_37\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[29]\ => \Use_DBUS.DAXI_Interface_I1_n_36\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[30]\ => \Use_DBUS.DAXI_Interface_I1_n_35\,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[31]\ => \Use_DBUS.DAXI_Interface_I1_n_34\,
      \Using_FPGA.Native\(1) => if_sel_input(3),
      \Using_FPGA.Native\(0) => if_sel_input(4),
      \Using_FPGA.Native_0\ => Decode_I_n_35,
      \Using_FPGA.Native_1\ => \^e\(0),
      \Using_FPGA.Native_10\ => Decode_I_n_360,
      \Using_FPGA.Native_11\ => Decode_I_n_361,
      \Using_FPGA.Native_12\(0) => \PreFetch_Buffer_I1/p_1_in49_in\,
      \Using_FPGA.Native_13\(31) => MEM_PC(0),
      \Using_FPGA.Native_13\(30) => MEM_PC(1),
      \Using_FPGA.Native_13\(29) => MEM_PC(2),
      \Using_FPGA.Native_13\(28) => MEM_PC(3),
      \Using_FPGA.Native_13\(27) => MEM_PC(4),
      \Using_FPGA.Native_13\(26) => MEM_PC(5),
      \Using_FPGA.Native_13\(25) => MEM_PC(6),
      \Using_FPGA.Native_13\(24) => MEM_PC(7),
      \Using_FPGA.Native_13\(23) => MEM_PC(8),
      \Using_FPGA.Native_13\(22) => MEM_PC(9),
      \Using_FPGA.Native_13\(21) => MEM_PC(10),
      \Using_FPGA.Native_13\(20) => MEM_PC(11),
      \Using_FPGA.Native_13\(19) => MEM_PC(12),
      \Using_FPGA.Native_13\(18) => MEM_PC(13),
      \Using_FPGA.Native_13\(17) => MEM_PC(14),
      \Using_FPGA.Native_13\(16) => MEM_PC(15),
      \Using_FPGA.Native_13\(15) => MEM_PC(16),
      \Using_FPGA.Native_13\(14) => MEM_PC(17),
      \Using_FPGA.Native_13\(13) => MEM_PC(18),
      \Using_FPGA.Native_13\(12) => MEM_PC(19),
      \Using_FPGA.Native_13\(11) => MEM_PC(20),
      \Using_FPGA.Native_13\(10) => MEM_PC(21),
      \Using_FPGA.Native_13\(9) => MEM_PC(22),
      \Using_FPGA.Native_13\(8) => MEM_PC(23),
      \Using_FPGA.Native_13\(7) => MEM_PC(24),
      \Using_FPGA.Native_13\(6) => MEM_PC(25),
      \Using_FPGA.Native_13\(5) => MEM_PC(26),
      \Using_FPGA.Native_13\(4) => MEM_PC(27),
      \Using_FPGA.Native_13\(3) => MEM_PC(28),
      \Using_FPGA.Native_13\(2) => MEM_PC(29),
      \Using_FPGA.Native_13\(1) => MEM_PC(30),
      \Using_FPGA.Native_13\(0) => MEM_PC(31),
      \Using_FPGA.Native_14\ => Data_Flow_I_n_345,
      \Using_FPGA.Native_15\(29) => mem_ex_result(0),
      \Using_FPGA.Native_15\(28) => mem_ex_result(1),
      \Using_FPGA.Native_15\(27) => mem_ex_result(2),
      \Using_FPGA.Native_15\(26) => mem_ex_result(3),
      \Using_FPGA.Native_15\(25) => mem_ex_result(4),
      \Using_FPGA.Native_15\(24) => mem_ex_result(5),
      \Using_FPGA.Native_15\(23) => mem_ex_result(6),
      \Using_FPGA.Native_15\(22) => mem_ex_result(7),
      \Using_FPGA.Native_15\(21) => mem_ex_result(8),
      \Using_FPGA.Native_15\(20) => mem_ex_result(9),
      \Using_FPGA.Native_15\(19) => mem_ex_result(10),
      \Using_FPGA.Native_15\(18) => mem_ex_result(11),
      \Using_FPGA.Native_15\(17) => mem_ex_result(12),
      \Using_FPGA.Native_15\(16) => mem_ex_result(13),
      \Using_FPGA.Native_15\(15) => mem_ex_result(14),
      \Using_FPGA.Native_15\(14) => mem_ex_result(15),
      \Using_FPGA.Native_15\(13) => mem_ex_result(16),
      \Using_FPGA.Native_15\(12) => mem_ex_result(17),
      \Using_FPGA.Native_15\(11) => mem_ex_result(18),
      \Using_FPGA.Native_15\(10) => mem_ex_result(19),
      \Using_FPGA.Native_15\(9) => mem_ex_result(20),
      \Using_FPGA.Native_15\(8) => mem_ex_result(21),
      \Using_FPGA.Native_15\(7) => mem_ex_result(22),
      \Using_FPGA.Native_15\(6) => mem_ex_result(23),
      \Using_FPGA.Native_15\(5) => mem_ex_result(24),
      \Using_FPGA.Native_15\(4) => mem_ex_result(25),
      \Using_FPGA.Native_15\(3) => mem_ex_result(26),
      \Using_FPGA.Native_15\(2) => mem_ex_result(27),
      \Using_FPGA.Native_15\(1) => mem_ex_result(28),
      \Using_FPGA.Native_15\(0) => mem_ex_result(31),
      \Using_FPGA.Native_16\(2) => MEM_Fwd(0),
      \Using_FPGA.Native_16\(1) => MEM_Fwd(29),
      \Using_FPGA.Native_16\(0) => MEM_Fwd(30),
      \Using_FPGA.Native_17\(0) => mem_MSR(29),
      \Using_FPGA.Native_18\(0) => \Byte_Doublet_Handle_gti_I/ex_byte_selects\(0),
      \Using_FPGA.Native_19\(15) => wb_excep_return_addr(0),
      \Using_FPGA.Native_19\(14) => wb_excep_return_addr(1),
      \Using_FPGA.Native_19\(13) => wb_excep_return_addr(2),
      \Using_FPGA.Native_19\(12) => wb_excep_return_addr(3),
      \Using_FPGA.Native_19\(11) => wb_excep_return_addr(4),
      \Using_FPGA.Native_19\(10) => wb_excep_return_addr(5),
      \Using_FPGA.Native_19\(9) => wb_excep_return_addr(6),
      \Using_FPGA.Native_19\(8) => wb_excep_return_addr(7),
      \Using_FPGA.Native_19\(7) => wb_excep_return_addr(8),
      \Using_FPGA.Native_19\(6) => wb_excep_return_addr(9),
      \Using_FPGA.Native_19\(5) => wb_excep_return_addr(10),
      \Using_FPGA.Native_19\(4) => wb_excep_return_addr(11),
      \Using_FPGA.Native_19\(3) => wb_excep_return_addr(12),
      \Using_FPGA.Native_19\(2) => wb_excep_return_addr(13),
      \Using_FPGA.Native_19\(1) => wb_excep_return_addr(14),
      \Using_FPGA.Native_19\(0) => wb_excep_return_addr(15),
      \Using_FPGA.Native_2\ => Decode_I_n_300,
      \Using_FPGA.Native_3\ => Decode_I_n_301,
      \Using_FPGA.Native_4\ => Decode_I_n_304,
      \Using_FPGA.Native_5\ => Decode_I_n_305,
      \Using_FPGA.Native_6\ => Decode_I_n_343,
      \Using_FPGA.Native_7\(1) => ex_sext_op(0),
      \Using_FPGA.Native_7\(0) => ex_sext_op(1),
      \Using_FPGA.Native_8\ => Decode_I_n_353,
      \Using_FPGA.Native_9\ => Decode_I_n_359,
      \WB_MEM_Result_reg[0]\(15) => wb_mem_result(0),
      \WB_MEM_Result_reg[0]\(14) => wb_mem_result(1),
      \WB_MEM_Result_reg[0]\(13) => wb_mem_result(2),
      \WB_MEM_Result_reg[0]\(12) => wb_mem_result(3),
      \WB_MEM_Result_reg[0]\(11) => wb_mem_result(4),
      \WB_MEM_Result_reg[0]\(10) => wb_mem_result(5),
      \WB_MEM_Result_reg[0]\(9) => wb_mem_result(6),
      \WB_MEM_Result_reg[0]\(8) => wb_mem_result(7),
      \WB_MEM_Result_reg[0]\(7) => wb_mem_result(8),
      \WB_MEM_Result_reg[0]\(6) => wb_mem_result(9),
      \WB_MEM_Result_reg[0]\(5) => wb_mem_result(10),
      \WB_MEM_Result_reg[0]\(4) => wb_mem_result(11),
      \WB_MEM_Result_reg[0]\(3) => wb_mem_result(12),
      \WB_MEM_Result_reg[0]\(2) => wb_mem_result(13),
      \WB_MEM_Result_reg[0]\(1) => wb_mem_result(14),
      \WB_MEM_Result_reg[0]\(0) => wb_mem_result(15),
      Wakeup(0 to 1) => Wakeup(0 to 1),
      active_access_d1 => active_access_d1,
      \control_reg_reg[3]\ => Data_Flow_I_n_344,
      \control_reg_reg[8]\(0) => \Use_Debug_Logic.Master_Core.Debug_Perf_n_63\,
      dbg_clean_stop => dbg_clean_stop,
      dbg_state_i => dbg_state_i,
      dbg_stop_i => dbg_stop_i,
      dbg_stop_if_delay_i => dbg_stop_if_delay_i,
      ex_Exception_Taken => ex_Exception_Taken,
      ex_MSR(2) => ex_MSR(28),
      ex_MSR(1) => ex_MSR(29),
      ex_MSR(0) => ex_MSR(30),
      ex_alu_carry => ex_alu_carry,
      ex_byte_access => ex_byte_access,
      ex_cmp_op => ex_cmp_op,
      ex_doublet_access => ex_doublet_access,
      ex_move_to_MSR_instr => ex_move_to_MSR_instr,
      ex_op1_cmp_equal => ex_op1_cmp_equal,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      ex_op1_zero => ex_op1_zero,
      ex_reverse_byteorder => \Byte_Doublet_Handle_gti_I/ex_reverse_byteorder\,
      ex_swap_byte_instr => ex_swap_byte_instr,
      ex_unsigned_op => ex_unsigned_op,
      ex_use_carry => ex_use_carry,
      exception_reg => Decode_I_n_355,
      executing0 => executing0,
      executing_reg => Decode_I_n_356,
      executing_reg_0(1) => instr_rd_reg(0),
      executing_reg_0(0) => instr_rd_reg(1),
      flush_pipe => flush_pipe,
      if_debug_ready_i_reg => \Use_Debug_Logic.Master_Core.Debug_Perf_n_0\,
      \imm_reg_reg[0]\(15) => imm_reg(0),
      \imm_reg_reg[0]\(14) => imm_reg(1),
      \imm_reg_reg[0]\(13) => imm_reg(2),
      \imm_reg_reg[0]\(12) => imm_reg(3),
      \imm_reg_reg[0]\(11) => imm_reg(4),
      \imm_reg_reg[0]\(10) => imm_reg(5),
      \imm_reg_reg[0]\(9) => imm_reg(6),
      \imm_reg_reg[0]\(8) => imm_reg(7),
      \imm_reg_reg[0]\(7) => imm_reg(8),
      \imm_reg_reg[0]\(6) => imm_reg(9),
      \imm_reg_reg[0]\(5) => imm_reg(10),
      \imm_reg_reg[0]\(4) => imm_reg(11),
      \imm_reg_reg[0]\(3) => imm_reg(12),
      \imm_reg_reg[0]\(2) => imm_reg(13),
      \imm_reg_reg[0]\(1) => imm_reg(14),
      \imm_reg_reg[0]\(0) => imm_reg(15),
      \in\(32) => ib_data(0),
      \in\(31) => ib_data(1),
      \in\(30) => ib_data(2),
      \in\(29) => ib_data(3),
      \in\(28) => ib_data(4),
      \in\(27) => ib_data(5),
      \in\(26) => ib_data(6),
      \in\(25) => ib_data(7),
      \in\(24) => ib_data(8),
      \in\(23) => ib_data(9),
      \in\(22) => ib_data(10),
      \in\(21) => ib_data(21),
      \in\(20) => ib_data(22),
      \in\(19) => ib_data(23),
      \in\(18) => ib_data(24),
      \in\(17) => ib_data(25),
      \in\(16) => ib_data(26),
      \in\(15) => ib_data(27),
      \in\(14) => ib_data(28),
      \in\(13) => ib_data(29),
      \in\(12) => ib_data(30),
      \in\(11) => ib_data(31),
      \in\(10) => \PreFetch_Buffer_I1/if_predecode\(0),
      \in\(9) => ib_data(11),
      \in\(8) => ib_data(12),
      \in\(7) => ib_data(13),
      \in\(6) => ib_data(14),
      \in\(5) => ib_data(15),
      \in\(4) => ib_data(16),
      \in\(3) => ib_data(17),
      \in\(2) => ib_data(18),
      \in\(1) => ib_data(19),
      \in\(0) => ib_data(20),
      \interrupt_address_d1_reg[0]\(31) => interrupt_address_d1(0),
      \interrupt_address_d1_reg[0]\(30) => interrupt_address_d1(1),
      \interrupt_address_d1_reg[0]\(29) => interrupt_address_d1(2),
      \interrupt_address_d1_reg[0]\(28) => interrupt_address_d1(3),
      \interrupt_address_d1_reg[0]\(27) => interrupt_address_d1(4),
      \interrupt_address_d1_reg[0]\(26) => interrupt_address_d1(5),
      \interrupt_address_d1_reg[0]\(25) => interrupt_address_d1(6),
      \interrupt_address_d1_reg[0]\(24) => interrupt_address_d1(7),
      \interrupt_address_d1_reg[0]\(23) => interrupt_address_d1(8),
      \interrupt_address_d1_reg[0]\(22) => interrupt_address_d1(9),
      \interrupt_address_d1_reg[0]\(21) => interrupt_address_d1(10),
      \interrupt_address_d1_reg[0]\(20) => interrupt_address_d1(11),
      \interrupt_address_d1_reg[0]\(19) => interrupt_address_d1(12),
      \interrupt_address_d1_reg[0]\(18) => interrupt_address_d1(13),
      \interrupt_address_d1_reg[0]\(17) => interrupt_address_d1(14),
      \interrupt_address_d1_reg[0]\(16) => interrupt_address_d1(15),
      \interrupt_address_d1_reg[0]\(15) => interrupt_address_d1(16),
      \interrupt_address_d1_reg[0]\(14) => interrupt_address_d1(17),
      \interrupt_address_d1_reg[0]\(13) => interrupt_address_d1(18),
      \interrupt_address_d1_reg[0]\(12) => interrupt_address_d1(19),
      \interrupt_address_d1_reg[0]\(11) => interrupt_address_d1(20),
      \interrupt_address_d1_reg[0]\(10) => interrupt_address_d1(21),
      \interrupt_address_d1_reg[0]\(9) => interrupt_address_d1(22),
      \interrupt_address_d1_reg[0]\(8) => interrupt_address_d1(23),
      \interrupt_address_d1_reg[0]\(7) => interrupt_address_d1(24),
      \interrupt_address_d1_reg[0]\(6) => interrupt_address_d1(25),
      \interrupt_address_d1_reg[0]\(5) => interrupt_address_d1(26),
      \interrupt_address_d1_reg[0]\(4) => interrupt_address_d1(27),
      \interrupt_address_d1_reg[0]\(3) => interrupt_address_d1(28),
      \interrupt_address_d1_reg[0]\(2) => interrupt_address_d1(29),
      \interrupt_address_d1_reg[0]\(1) => interrupt_address_d1(30),
      \interrupt_address_d1_reg[0]\(0) => interrupt_address_d1(31),
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => \Use_DBUS.DAXI_Interface_I1_n_42\,
      mem_Exception_Taken => mem_Exception_Taken,
      mem_databus_access => mem_databus_access,
      mem_databus_read => mem_databus_read,
      mem_databus_ready => mem_databus_ready,
      mem_databus_write => mem_databus_write,
      mem_sel_msr => mem_sel_msr,
      no_sleeping => no_sleeping,
      of_MSR(1) => of_MSR(28),
      of_MSR(0) => of_MSR(30),
      of_Take_Interrupt => of_Take_Interrupt,
      of_gpr_op1_rd_addr(0 to 4) => of_gpr_op1_rd_addr(0 to 4),
      of_gpr_op3_rd_addr(0 to 4) => of_gpr_op3_rd_addr(0 to 4),
      of_imm_data(0 to 15) => of_imm_data(0 to 15),
      of_op1_sel(0 to 1) => of_op1_sel(0 to 1),
      of_op1_sel_spr => of_op1_sel_spr,
      of_op3_sel(0 to 1) => of_op3_sel(0 to 1),
      \out\(0) => \out\(0),
      p_36_out => p_36_out,
      restore_wb_msr_to_ex => \msr_reg_i/restore_wb_msr_to_ex\,
      sleep_reset_mode_reg => \Use_Debug_Logic.Master_Core.Debug_Perf_n_6\,
      use_Reg_Neg_S_reg => \^use_reg_neg_s_reg\,
      use_Reg_Neg_S_reg_0(0) => of_predecode(0),
      wb_Halted => wb_Halted,
      wb_MSR_cmb(0) => \msr_reg_i/wb_MSR_cmb\(28),
      wb_byte_access => wb_byte_access,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      wb_gpr_write_i_reg_0 => wb_exception,
      wb_pc_valid => wb_pc_valid,
      wb_piperun => wb_piperun,
      wb_read_imm_reg => wb_read_imm_reg,
      wb_read_imm_reg_1 => wb_read_imm_reg_1,
      wb_sel_spr_shr => wb_sel_spr_shr
    );
\Use_DBUS.DAXI_Interface_I1\: entity work.system_microblaze_0_0_DAXI_interface
     port map (
      Clk => Clk,
      D(2) => \^d\(224),
      D(1 downto 0) => \^d\(187 downto 186),
      DReady => DReady,
      LOCKSTEP_Master_Out(0) => \^lockstep_master_out\(41),
      \LOCKSTEP_Out_reg[3769]\ => \Use_DBUS.DAXI_Interface_I1_n_41\,
      \LOCKSTEP_Out_reg[3770]\ => \Use_DBUS.DAXI_Interface_I1_n_40\,
      \LOCKSTEP_Out_reg[3771]\ => \Use_DBUS.DAXI_Interface_I1_n_39\,
      \LOCKSTEP_Out_reg[3772]\ => \Use_DBUS.DAXI_Interface_I1_n_38\,
      \LOCKSTEP_Out_reg[3773]\ => \Use_DBUS.DAXI_Interface_I1_n_37\,
      \LOCKSTEP_Out_reg[3774]\ => \Use_DBUS.DAXI_Interface_I1_n_36\,
      \LOCKSTEP_Out_reg[3775]\ => \Use_DBUS.DAXI_Interface_I1_n_35\,
      \LOCKSTEP_Out_reg[3776]\ => \Use_DBUS.DAXI_Interface_I1_n_34\,
      \LOCKSTEP_Out_reg[3777]\ => \Use_DBUS.DAXI_Interface_I1_n_33\,
      \LOCKSTEP_Out_reg[3778]\ => \Use_DBUS.DAXI_Interface_I1_n_32\,
      \LOCKSTEP_Out_reg[3779]\ => \Use_DBUS.DAXI_Interface_I1_n_31\,
      \LOCKSTEP_Out_reg[3780]\ => \Use_DBUS.DAXI_Interface_I1_n_30\,
      \LOCKSTEP_Out_reg[3781]\ => \Use_DBUS.DAXI_Interface_I1_n_29\,
      \LOCKSTEP_Out_reg[3782]\ => \Use_DBUS.DAXI_Interface_I1_n_28\,
      \LOCKSTEP_Out_reg[3783]\ => \Use_DBUS.DAXI_Interface_I1_n_27\,
      \LOCKSTEP_Out_reg[3784]\ => \Use_DBUS.DAXI_Interface_I1_n_26\,
      \LOCKSTEP_Out_reg[3785]\ => \Use_DBUS.DAXI_Interface_I1_n_25\,
      \LOCKSTEP_Out_reg[3786]\ => \Use_DBUS.DAXI_Interface_I1_n_24\,
      \LOCKSTEP_Out_reg[3787]\ => \Use_DBUS.DAXI_Interface_I1_n_23\,
      \LOCKSTEP_Out_reg[3788]\ => \Use_DBUS.DAXI_Interface_I1_n_22\,
      \LOCKSTEP_Out_reg[3789]\ => \Use_DBUS.DAXI_Interface_I1_n_21\,
      \LOCKSTEP_Out_reg[3790]\ => \Use_DBUS.DAXI_Interface_I1_n_20\,
      \LOCKSTEP_Out_reg[3791]\ => \Use_DBUS.DAXI_Interface_I1_n_19\,
      \LOCKSTEP_Out_reg[3792]\ => \Use_DBUS.DAXI_Interface_I1_n_18\,
      \LOCKSTEP_Out_reg[3793]\ => \Use_DBUS.DAXI_Interface_I1_n_16\,
      \LOCKSTEP_Out_reg[3793]_0\ => \Use_DBUS.DAXI_Interface_I1_n_17\,
      \LOCKSTEP_Out_reg[3794]\ => \Use_DBUS.DAXI_Interface_I1_n_14\,
      \LOCKSTEP_Out_reg[3794]_0\ => \Use_DBUS.DAXI_Interface_I1_n_15\,
      \LOCKSTEP_Out_reg[3795]\ => \Use_DBUS.DAXI_Interface_I1_n_12\,
      \LOCKSTEP_Out_reg[3795]_0\ => \Use_DBUS.DAXI_Interface_I1_n_13\,
      \LOCKSTEP_Out_reg[3796]\ => \Use_DBUS.DAXI_Interface_I1_n_10\,
      \LOCKSTEP_Out_reg[3796]_0\ => \Use_DBUS.DAXI_Interface_I1_n_11\,
      \LOCKSTEP_Out_reg[3797]\ => \Use_DBUS.DAXI_Interface_I1_n_8\,
      \LOCKSTEP_Out_reg[3797]_0\ => \Use_DBUS.DAXI_Interface_I1_n_9\,
      \LOCKSTEP_Out_reg[3798]\ => \Use_DBUS.DAXI_Interface_I1_n_6\,
      \LOCKSTEP_Out_reg[3798]_0\ => \Use_DBUS.DAXI_Interface_I1_n_7\,
      \LOCKSTEP_Out_reg[3799]\ => \Use_DBUS.DAXI_Interface_I1_n_4\,
      \LOCKSTEP_Out_reg[3799]_0\ => \Use_DBUS.DAXI_Interface_I1_n_5\,
      \LOCKSTEP_Out_reg[3800]\ => \Use_DBUS.DAXI_Interface_I1_n_2\,
      \LOCKSTEP_Out_reg[3800]_0\ => \Use_DBUS.DAXI_Interface_I1_n_3\,
      M_AXI_DP_ARREADY => M_AXI_DP_ARREADY,
      M_AXI_DP_AWREADY => M_AXI_DP_AWREADY,
      M_AXI_DP_AWVALID_i => M_AXI_DP_AWVALID_i,
      M_AXI_DP_AWVALID_i1 => M_AXI_DP_AWVALID_i1,
      M_AXI_DP_BVALID => M_AXI_DP_BVALID,
      M_AXI_DP_RDATA(31 downto 0) => M_AXI_DP_RDATA(31 downto 0),
      M_AXI_DP_RVALID => M_AXI_DP_RVALID,
      M_AXI_DP_WREADY => M_AXI_DP_WREADY,
      Q(31) => wb_dlmb_valid_read_data(0),
      Q(30) => wb_dlmb_valid_read_data(1),
      Q(29) => wb_dlmb_valid_read_data(2),
      Q(28) => wb_dlmb_valid_read_data(3),
      Q(27) => wb_dlmb_valid_read_data(4),
      Q(26) => wb_dlmb_valid_read_data(5),
      Q(25) => wb_dlmb_valid_read_data(6),
      Q(24) => wb_dlmb_valid_read_data(7),
      Q(23) => wb_dlmb_valid_read_data(8),
      Q(22) => wb_dlmb_valid_read_data(9),
      Q(21) => wb_dlmb_valid_read_data(10),
      Q(20) => wb_dlmb_valid_read_data(11),
      Q(19) => wb_dlmb_valid_read_data(12),
      Q(18) => wb_dlmb_valid_read_data(13),
      Q(17) => wb_dlmb_valid_read_data(14),
      Q(16) => wb_dlmb_valid_read_data(15),
      Q(15) => wb_dlmb_valid_read_data(16),
      Q(14) => wb_dlmb_valid_read_data(17),
      Q(13) => wb_dlmb_valid_read_data(18),
      Q(12) => wb_dlmb_valid_read_data(19),
      Q(11) => wb_dlmb_valid_read_data(20),
      Q(10) => wb_dlmb_valid_read_data(21),
      Q(9) => wb_dlmb_valid_read_data(22),
      Q(8) => wb_dlmb_valid_read_data(23),
      Q(7) => wb_dlmb_valid_read_data(24),
      Q(6) => wb_dlmb_valid_read_data(25),
      Q(5) => wb_dlmb_valid_read_data(26),
      Q(4) => wb_dlmb_valid_read_data(27),
      Q(3) => wb_dlmb_valid_read_data(28),
      Q(2) => wb_dlmb_valid_read_data(29),
      Q(1) => wb_dlmb_valid_read_data(30),
      Q(0) => wb_dlmb_valid_read_data(31),
      Trace_WB_Jump_Hit_reg => \Use_DBUS.DAXI_Interface_I1_n_42\,
      active_access_d1 => active_access_d1,
      mem_databus_write => mem_databus_write,
      mem_daxi_exclusive_failed => mem_daxi_exclusive_failed,
      \out\(0) => \out\(0),
      \wb_read_lsb_1_sel_reg[0]\(1) => Data_Flow_I_n_396,
      \wb_read_lsb_1_sel_reg[0]\(0) => Data_Flow_I_n_397,
      \wb_read_lsb_sel_reg[0]\(0) => Data_Flow_I_n_398,
      wb_read_msb_doublet_sel => wb_read_msb_doublet_sel
    );
\Use_DLMB.Using_Latch_AS_Logic.AND2B1L_I1\: entity work.system_microblaze_0_0_MB_AND2B1L
     port map (
      D(0) => \^d\(263),
      SRI => SRI,
      mem_valid_reg => \^trace_wb_jump_hit_reg\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(0),
      Q => wb_dlmb_valid_read_data(0),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(10),
      Q => wb_dlmb_valid_read_data(10),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(11),
      Q => wb_dlmb_valid_read_data(11),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(12),
      Q => wb_dlmb_valid_read_data(12),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(13),
      Q => wb_dlmb_valid_read_data(13),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(14),
      Q => wb_dlmb_valid_read_data(14),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(15),
      Q => wb_dlmb_valid_read_data(15),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(16),
      Q => wb_dlmb_valid_read_data(16),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(17),
      Q => wb_dlmb_valid_read_data(17),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(18),
      Q => wb_dlmb_valid_read_data(18),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(19),
      Q => wb_dlmb_valid_read_data(19),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(1),
      Q => wb_dlmb_valid_read_data(1),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(20),
      Q => wb_dlmb_valid_read_data(20),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(21),
      Q => wb_dlmb_valid_read_data(21),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(22),
      Q => wb_dlmb_valid_read_data(22),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(23),
      Q => wb_dlmb_valid_read_data(23),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(24),
      Q => wb_dlmb_valid_read_data(24),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(25),
      Q => wb_dlmb_valid_read_data(25),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(26),
      Q => wb_dlmb_valid_read_data(26),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(27),
      Q => wb_dlmb_valid_read_data(27),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(28),
      Q => wb_dlmb_valid_read_data(28),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(29),
      Q => wb_dlmb_valid_read_data(29),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(2),
      Q => wb_dlmb_valid_read_data(2),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(30),
      Q => wb_dlmb_valid_read_data(30),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(31),
      Q => wb_dlmb_valid_read_data(31),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(3),
      Q => wb_dlmb_valid_read_data(3),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(4),
      Q => wb_dlmb_valid_read_data(4),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(5),
      Q => wb_dlmb_valid_read_data(5),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(6),
      Q => wb_dlmb_valid_read_data(6),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(7),
      Q => wb_dlmb_valid_read_data(7),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(8),
      Q => wb_dlmb_valid_read_data(8),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_DLMB.wb_dlmb_valid_read_data_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Data_Read(9),
      Q => wb_dlmb_valid_read_data(9),
      R => \Synchronize.use_sync_reset.sync_reg[2]_0\(0)
    );
\Use_Debug_Logic.Master_Core.Debug_Perf\: entity work.system_microblaze_0_0_Debug
     port map (
      Address(0 to 31) => of_pc(0 to 31),
      Clk => Clk,
      D(33) => \^d\(361),
      D(32 downto 17) => \^d\(152 downto 137),
      D(16 downto 1) => \^d\(111 downto 96),
      D(0) => \^d\(72),
      Dbg_Capture => Dbg_Capture,
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      \Dbg_Reg_En[2]_0\ => \Dbg_Reg_En[2]_0\,
      \Dbg_Reg_En[2]_1\ => \Dbg_Reg_En[2]_1\,
      \Dbg_Reg_En_2__s_port_]\ => \Dbg_Reg_En_2__s_net_1\,
      Dbg_Shift => Dbg_Shift,
      Dbg_Stop => Dbg_Stop,
      Dbg_TDI => Dbg_TDI,
      Dbg_TDO => Dbg_TDO,
      Dbg_Trig_Ack_In(1 downto 0) => Dbg_Trig_Ack_In(1 downto 0),
      Dbg_Trig_Ack_Out(1 downto 0) => Dbg_Trig_Ack_Out(1 downto 0),
      Dbg_Trig_In(1 downto 0) => Dbg_Trig_In(1 downto 0),
      Dbg_Trig_Out(1 downto 0) => Dbg_Trig_Out(1 downto 0),
      Dbg_Update => Dbg_Update,
      IB_Ready => IB_Ready,
      IReady => IReady,
      LOCKSTEP_Master_Out(41 downto 0) => \^lockstep_master_out\(41 downto 0),
      \LOCKSTEP_Out_reg[0]\(0) => \^d\(362),
      MEM_DataBus_Access_reg(0) => mem_databus_access,
      \Performace_Debug_Control.dbg_freeze_nohalt_reg_0\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_7\,
      \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_10\,
      \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_1\ => Decode_I_n_357,
      \Performace_Debug_Control.ex_watchpoint_brk_reg_0\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_13\,
      \Performace_Debug_Control.ex_watchpoint_brk_reg_1\ => Decode_I_n_394,
      \Performace_Debug_Control.normal_stop_i_reg_0\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_5\,
      \Performace_Debug_Control.watchpoint_brk_hold_reg_0\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_11\,
      Q(1) => \Use_Debug_Logic.Master_Core.Debug_Perf_n_62\,
      Q(0) => \Use_Debug_Logic.Master_Core.Debug_Perf_n_63\,
      Reset_Mode(0 to 1) => Reset_Mode(0 to 1),
      Rst18_out => Rst18_out,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel,
      \Single_Synchronize.use_async_reset.sync_reg\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_3\,
      \Single_Synchronize.use_async_reset.sync_reg_0\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_6\,
      Sleep_Decode => Sleep_Decode,
      \Synchronize.use_sync_reset.sync_reg[2]\ => \Synchronize.use_sync_reset.sync_reg[2]\,
      \Synchronize.use_sync_reset.sync_reg[2]_0\ => Decode_I_n_345,
      \Using_FPGA.Native\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_61\,
      \Using_FPGA.Native_0\ => \^use_reg_neg_s_reg\,
      \Using_FPGA.Native_1\ => Data_Flow_I_n_295,
      Wakeup(0 to 1) => Wakeup(0 to 1),
      command_reg_clear_reg_0 => \Use_Debug_Logic.Master_Core.Debug_Perf_n_2\,
      \control_reg_reg[8]_0\ => Decode_I_n_358,
      dbg_clean_stop => dbg_clean_stop,
      dbg_state_i => dbg_state_i,
      dbg_stop_i => dbg_stop_i,
      dbg_stop_if_delay_i => dbg_stop_if_delay_i,
      ex_Exception_Taken => ex_Exception_Taken,
      ex_branch_with_delayslot_reg => \^e\(0),
      exception_reg_0 => Decode_I_n_355,
      executing0 => executing0,
      \if_pc_reg[29]\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_15\,
      \instr_read_reg_reg[0]_0\(1) => instr_rd_reg(0),
      \instr_read_reg_reg[0]_0\(0) => instr_rd_reg(1),
      mem_Exception_Taken => mem_Exception_Taken,
      mem_valid_reg => \^trace_wb_jump_hit_reg\(0),
      no_sleeping => no_sleeping,
      \out\(0) => \out\(0),
      p_36_out => p_36_out,
      saved_reset_mode_dbg_halt => saved_reset_mode_dbg_halt,
      start_dbg_exec_reg_0 => \Use_Debug_Logic.Master_Core.Debug_Perf_n_0\,
      wb_Halted => wb_Halted,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      wb_gpr_write_dbg_reg => Data_Flow_I_n_294,
      wb_gpr_write_dbg_reg_0 => Data_Flow_I_n_293,
      wb_gpr_write_dbg_reg_1 => Data_Flow_I_n_292,
      wb_gpr_write_dbg_reg_10 => Data_Flow_I_n_283,
      wb_gpr_write_dbg_reg_11 => Data_Flow_I_n_282,
      wb_gpr_write_dbg_reg_12 => Data_Flow_I_n_281,
      wb_gpr_write_dbg_reg_13 => Data_Flow_I_n_280,
      wb_gpr_write_dbg_reg_2 => Data_Flow_I_n_291,
      wb_gpr_write_dbg_reg_3 => Data_Flow_I_n_290,
      wb_gpr_write_dbg_reg_4 => Data_Flow_I_n_289,
      wb_gpr_write_dbg_reg_5 => Data_Flow_I_n_288,
      wb_gpr_write_dbg_reg_6 => Data_Flow_I_n_287,
      wb_gpr_write_dbg_reg_7 => Data_Flow_I_n_286,
      wb_gpr_write_dbg_reg_8 => Data_Flow_I_n_285,
      wb_gpr_write_dbg_reg_9 => Data_Flow_I_n_284,
      wb_pc_valid => wb_pc_valid,
      wb_read_imm_reg => wb_read_imm_reg,
      wb_read_imm_reg_1 => wb_read_imm_reg_1,
      wb_valid_reg => Decode_I_n_356
    );
instr_mux_I: entity work.system_microblaze_0_0_instr_mux
     port map (
      I041_out => \PreFetch_Buffer_I1/I041_out\,
      I139_out => \PreFetch_Buffer_I1/I139_out\,
      Instr(0 to 31) => Instr(0 to 31),
      LOCKSTEP_Master_Out(32) => \^lockstep_master_out\(39),
      LOCKSTEP_Master_Out(31 downto 0) => \^lockstep_master_out\(31 downto 0),
      \Performace_Debug_Control.dbg_freeze_nohalt_reg\ => Decode_I_n_35,
      \Using_FPGA.Native\(0) => of_predecode(0),
      \Using_FPGA.Native_0\(1) => if_sel_input(3),
      \Using_FPGA.Native_0\(0) => if_sel_input(4),
      \Using_FPGA.Native_1\(0) => \PreFetch_Buffer_I1/p_1_in49_in\,
      \in\(32) => ib_data(0),
      \in\(31) => ib_data(1),
      \in\(30) => ib_data(2),
      \in\(29) => ib_data(3),
      \in\(28) => ib_data(4),
      \in\(27) => ib_data(5),
      \in\(26) => ib_data(6),
      \in\(25) => ib_data(7),
      \in\(24) => ib_data(8),
      \in\(23) => ib_data(9),
      \in\(22) => ib_data(10),
      \in\(21) => ib_data(21),
      \in\(20) => ib_data(22),
      \in\(19) => ib_data(23),
      \in\(18) => ib_data(24),
      \in\(17) => ib_data(25),
      \in\(16) => ib_data(26),
      \in\(15) => ib_data(27),
      \in\(14) => ib_data(28),
      \in\(13) => ib_data(29),
      \in\(12) => ib_data(30),
      \in\(11) => ib_data(31),
      \in\(10) => \PreFetch_Buffer_I1/if_predecode\(0),
      \in\(9) => ib_data(11),
      \in\(8) => ib_data(12),
      \in\(7) => ib_data(13),
      \in\(6) => ib_data(14),
      \in\(5) => ib_data(15),
      \in\(4) => ib_data(16),
      \in\(3) => ib_data(17),
      \in\(2) => ib_data(18),
      \in\(1) => ib_data(19),
      \in\(0) => ib_data(20)
    );
\interrupt_address_d1_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(0),
      Q => interrupt_address_d1(0),
      R => '0'
    );
\interrupt_address_d1_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(10),
      Q => interrupt_address_d1(10),
      R => '0'
    );
\interrupt_address_d1_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(11),
      Q => interrupt_address_d1(11),
      R => '0'
    );
\interrupt_address_d1_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(12),
      Q => interrupt_address_d1(12),
      R => '0'
    );
\interrupt_address_d1_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(13),
      Q => interrupt_address_d1(13),
      R => '0'
    );
\interrupt_address_d1_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(14),
      Q => interrupt_address_d1(14),
      R => '0'
    );
\interrupt_address_d1_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(15),
      Q => interrupt_address_d1(15),
      R => '0'
    );
\interrupt_address_d1_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(16),
      Q => interrupt_address_d1(16),
      R => '0'
    );
\interrupt_address_d1_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(17),
      Q => interrupt_address_d1(17),
      R => '0'
    );
\interrupt_address_d1_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(18),
      Q => interrupt_address_d1(18),
      R => '0'
    );
\interrupt_address_d1_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(19),
      Q => interrupt_address_d1(19),
      R => '0'
    );
\interrupt_address_d1_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(1),
      Q => interrupt_address_d1(1),
      R => '0'
    );
\interrupt_address_d1_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(20),
      Q => interrupt_address_d1(20),
      R => '0'
    );
\interrupt_address_d1_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(21),
      Q => interrupt_address_d1(21),
      R => '0'
    );
\interrupt_address_d1_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(22),
      Q => interrupt_address_d1(22),
      R => '0'
    );
\interrupt_address_d1_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(23),
      Q => interrupt_address_d1(23),
      R => '0'
    );
\interrupt_address_d1_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(24),
      Q => interrupt_address_d1(24),
      R => '0'
    );
\interrupt_address_d1_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(25),
      Q => interrupt_address_d1(25),
      R => '0'
    );
\interrupt_address_d1_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(26),
      Q => interrupt_address_d1(26),
      R => '0'
    );
\interrupt_address_d1_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(27),
      Q => interrupt_address_d1(27),
      R => '0'
    );
\interrupt_address_d1_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(28),
      Q => interrupt_address_d1(28),
      R => '0'
    );
\interrupt_address_d1_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(29),
      Q => interrupt_address_d1(29),
      R => '0'
    );
\interrupt_address_d1_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(2),
      Q => interrupt_address_d1(2),
      R => '0'
    );
\interrupt_address_d1_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(30),
      Q => interrupt_address_d1(30),
      R => '0'
    );
\interrupt_address_d1_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(31),
      Q => interrupt_address_d1(31),
      R => '0'
    );
\interrupt_address_d1_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(3),
      Q => interrupt_address_d1(3),
      R => '0'
    );
\interrupt_address_d1_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(4),
      Q => interrupt_address_d1(4),
      R => '0'
    );
\interrupt_address_d1_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(5),
      Q => interrupt_address_d1(5),
      R => '0'
    );
\interrupt_address_d1_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(6),
      Q => interrupt_address_d1(6),
      R => '0'
    );
\interrupt_address_d1_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(7),
      Q => interrupt_address_d1(7),
      R => '0'
    );
\interrupt_address_d1_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(8),
      Q => interrupt_address_d1(8),
      R => '0'
    );
\interrupt_address_d1_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(9),
      Q => interrupt_address_d1(9),
      R => '0'
    );
mem_databus_ready_sel_carry_or: entity work.system_microblaze_0_0_carry_or
     port map (
      lopt => lopt_3,
      lopt_1 => lopt_4,
      mem_access_completed_reg => \Use_DBUS.DAXI_Interface_I1_n_42\,
      mem_databus_ready => mem_databus_ready
    );
trace_data_access_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => mem_databus_access,
      Q => \^d\(3),
      R => '0'
    );
\trace_data_address_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(256),
      Q => \^d\(71),
      R => '0'
    );
\trace_data_address_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(246),
      Q => \^d\(61),
      R => '0'
    );
\trace_data_address_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(245),
      Q => \^d\(60),
      R => '0'
    );
\trace_data_address_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(244),
      Q => \^d\(59),
      R => '0'
    );
\trace_data_address_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(243),
      Q => \^d\(58),
      R => '0'
    );
\trace_data_address_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(242),
      Q => \^d\(57),
      R => '0'
    );
\trace_data_address_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(241),
      Q => \^d\(56),
      R => '0'
    );
\trace_data_address_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(240),
      Q => \^d\(55),
      R => '0'
    );
\trace_data_address_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(239),
      Q => \^d\(54),
      R => '0'
    );
\trace_data_address_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(238),
      Q => \^d\(53),
      R => '0'
    );
\trace_data_address_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(237),
      Q => \^d\(52),
      R => '0'
    );
\trace_data_address_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(255),
      Q => \^d\(70),
      R => '0'
    );
\trace_data_address_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(236),
      Q => \^d\(51),
      R => '0'
    );
\trace_data_address_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(235),
      Q => \^d\(50),
      R => '0'
    );
\trace_data_address_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(234),
      Q => \^d\(49),
      R => '0'
    );
\trace_data_address_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(233),
      Q => \^d\(48),
      R => '0'
    );
\trace_data_address_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(232),
      Q => \^d\(47),
      R => '0'
    );
\trace_data_address_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(231),
      Q => \^d\(46),
      R => '0'
    );
\trace_data_address_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(230),
      Q => \^d\(45),
      R => '0'
    );
\trace_data_address_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(229),
      Q => \^d\(44),
      R => '0'
    );
\trace_data_address_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(228),
      Q => \^d\(43),
      R => '0'
    );
\trace_data_address_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(227),
      Q => \^d\(42),
      R => '0'
    );
\trace_data_address_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(254),
      Q => \^d\(69),
      R => '0'
    );
\trace_data_address_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(226),
      Q => \^d\(41),
      R => '0'
    );
\trace_data_address_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(225),
      Q => \^d\(40),
      R => '0'
    );
\trace_data_address_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(253),
      Q => \^d\(68),
      R => '0'
    );
\trace_data_address_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(252),
      Q => \^d\(67),
      R => '0'
    );
\trace_data_address_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(251),
      Q => \^d\(66),
      R => '0'
    );
\trace_data_address_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(250),
      Q => \^d\(65),
      R => '0'
    );
\trace_data_address_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(249),
      Q => \^d\(64),
      R => '0'
    );
\trace_data_address_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(248),
      Q => \^d\(63),
      R => '0'
    );
\trace_data_address_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(247),
      Q => \^d\(62),
      R => '0'
    );
\trace_data_byte_enable_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(191),
      Q => \^d\(7),
      R => '0'
    );
\trace_data_byte_enable_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(190),
      Q => \^d\(6),
      R => '0'
    );
\trace_data_byte_enable_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(189),
      Q => \^d\(5),
      R => '0'
    );
\trace_data_byte_enable_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(188),
      Q => \^d\(4),
      R => '0'
    );
trace_data_read_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => mem_databus_read,
      Q => \^d\(2),
      R => '0'
    );
trace_data_write_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => mem_databus_write,
      Q => \^d\(1),
      R => '0'
    );
\trace_data_write_value_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(223),
      Q => \^d\(39),
      R => '0'
    );
\trace_data_write_value_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(213),
      Q => \^d\(29),
      R => '0'
    );
\trace_data_write_value_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(212),
      Q => \^d\(28),
      R => '0'
    );
\trace_data_write_value_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(211),
      Q => \^d\(27),
      R => '0'
    );
\trace_data_write_value_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(210),
      Q => \^d\(26),
      R => '0'
    );
\trace_data_write_value_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(209),
      Q => \^d\(25),
      R => '0'
    );
\trace_data_write_value_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(208),
      Q => \^d\(24),
      R => '0'
    );
\trace_data_write_value_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(207),
      Q => \^d\(23),
      R => '0'
    );
\trace_data_write_value_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(206),
      Q => \^d\(22),
      R => '0'
    );
\trace_data_write_value_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(205),
      Q => \^d\(21),
      R => '0'
    );
\trace_data_write_value_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(204),
      Q => \^d\(20),
      R => '0'
    );
\trace_data_write_value_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(222),
      Q => \^d\(38),
      R => '0'
    );
\trace_data_write_value_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(203),
      Q => \^d\(19),
      R => '0'
    );
\trace_data_write_value_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(202),
      Q => \^d\(18),
      R => '0'
    );
\trace_data_write_value_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(201),
      Q => \^d\(17),
      R => '0'
    );
\trace_data_write_value_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(200),
      Q => \^d\(16),
      R => '0'
    );
\trace_data_write_value_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(199),
      Q => \^d\(15),
      R => '0'
    );
\trace_data_write_value_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(198),
      Q => \^d\(14),
      R => '0'
    );
\trace_data_write_value_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(197),
      Q => \^d\(13),
      R => '0'
    );
\trace_data_write_value_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(196),
      Q => \^d\(12),
      R => '0'
    );
\trace_data_write_value_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(195),
      Q => \^d\(11),
      R => '0'
    );
\trace_data_write_value_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(194),
      Q => \^d\(10),
      R => '0'
    );
\trace_data_write_value_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(221),
      Q => \^d\(37),
      R => '0'
    );
\trace_data_write_value_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(193),
      Q => \^d\(9),
      R => '0'
    );
\trace_data_write_value_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(192),
      Q => \^d\(8),
      R => '0'
    );
\trace_data_write_value_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(220),
      Q => \^d\(36),
      R => '0'
    );
\trace_data_write_value_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(219),
      Q => \^d\(35),
      R => '0'
    );
\trace_data_write_value_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(218),
      Q => \^d\(34),
      R => '0'
    );
\trace_data_write_value_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(217),
      Q => \^d\(33),
      R => '0'
    );
\trace_data_write_value_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(216),
      Q => \^d\(32),
      R => '0'
    );
\trace_data_write_value_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(215),
      Q => \^d\(31),
      R => '0'
    );
\trace_data_write_value_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^trace_wb_jump_hit_reg\(0),
      D => \^d\(214),
      Q => \^d\(30),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MicroBlaze_Core is
  port (
    use_Reg_Neg_S_reg : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    Trace_WB_Jump_Hit_reg : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 362 downto 0 );
    Sleep : out STD_LOGIC;
    Dbg_TDO : out STD_LOGIC;
    LOCKSTEP_Master_Out : out STD_LOGIC_VECTOR ( 41 downto 0 );
    Interrupt_Ack : out STD_LOGIC_VECTOR ( 0 to 1 );
    Dbg_Trig_In : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Trig_Ack_Out : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Dbg_Update : in STD_LOGIC;
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Stop : in STD_LOGIC;
    Dbg_Capture : in STD_LOGIC;
    Debug_Rst : in STD_LOGIC;
    Reset : in STD_LOGIC;
    Mb_Reset : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC;
    DWait : in STD_LOGIC;
    DReady : in STD_LOGIC;
    M_AXI_DP_BVALID : in STD_LOGIC;
    M_AXI_DP_RVALID : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Reset_Mode : in STD_LOGIC_VECTOR ( 0 to 1 );
    IReady : in STD_LOGIC;
    \Dbg_Reg_En_2__s_port_]\ : in STD_LOGIC;
    \Dbg_Reg_En[2]_0\ : in STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    Wakeup : in STD_LOGIC_VECTOR ( 0 to 1 );
    \Dbg_Reg_En[2]_1\ : in STD_LOGIC;
    Interrupt : in STD_LOGIC;
    Dbg_Shift : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    Dbg_TDI : in STD_LOGIC;
    M_AXI_DP_AWREADY : in STD_LOGIC;
    M_AXI_DP_WREADY : in STD_LOGIC;
    M_AXI_DP_ARREADY : in STD_LOGIC;
    M_AXI_DP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 31 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MicroBlaze_Core : entity is "MicroBlaze_Core";
end system_microblaze_0_0_MicroBlaze_Core;

architecture STRUCTURE of system_microblaze_0_0_MicroBlaze_Core is
  signal \Dbg_Reg_En_2__s_net_1\ : STD_LOGIC;
  signal \Decode_I/flush_pipe\ : STD_LOGIC;
  signal MEM_Sel_MEM_Res : STD_LOGIC;
  signal Reset_DFF_n_3 : STD_LOGIC;
  signal Reset_DFF_n_4 : STD_LOGIC;
  signal Reset_DFF_n_5 : STD_LOGIC;
  signal Synced : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf/Rst18_out\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf/saved_reset_mode_dbg_halt\ : STD_LOGIC;
  signal wb_exception : STD_LOGIC;
begin
  \Dbg_Reg_En_2__s_net_1\ <= \Dbg_Reg_En_2__s_port_]\;
\Performance.Core\: entity work.system_microblaze_0_0_MicroBlaze_GTi
     port map (
      Clk => Clk,
      D(362 downto 0) => D(362 downto 0),
      DReady => DReady,
      DWait => DWait,
      Data_Read(0 to 31) => Data_Read(0 to 31),
      Dbg_Capture => Dbg_Capture,
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      \Dbg_Reg_En[2]_0\ => \Dbg_Reg_En[2]_0\,
      \Dbg_Reg_En[2]_1\ => \Dbg_Reg_En[2]_1\,
      \Dbg_Reg_En_2__s_port_]\ => \Dbg_Reg_En_2__s_net_1\,
      Dbg_Shift => Dbg_Shift,
      Dbg_Stop => Dbg_Stop,
      Dbg_TDI => Dbg_TDI,
      Dbg_TDO => Dbg_TDO,
      Dbg_Trig_Ack_In(1 downto 0) => Dbg_Trig_Ack_In(1 downto 0),
      Dbg_Trig_Ack_Out(1 downto 0) => Dbg_Trig_Ack_Out(1 downto 0),
      Dbg_Trig_In(1 downto 0) => Dbg_Trig_In(1 downto 0),
      Dbg_Trig_Out(1 downto 0) => Dbg_Trig_Out(1 downto 0),
      Dbg_Update => Dbg_Update,
      E(0) => \Using_FPGA.Native\,
      IReady => IReady,
      Instr(0 to 31) => Instr(0 to 31),
      Interrupt => Interrupt,
      Interrupt_Ack(0 to 1) => Interrupt_Ack(0 to 1),
      Interrupt_Address(0 to 31) => Interrupt_Address(0 to 31),
      LOCKSTEP_Master_Out(41 downto 0) => LOCKSTEP_Master_Out(41 downto 0),
      MEM_Sel_MEM_Res => MEM_Sel_MEM_Res,
      M_AXI_DP_ARREADY => M_AXI_DP_ARREADY,
      M_AXI_DP_AWREADY => M_AXI_DP_AWREADY,
      M_AXI_DP_BVALID => M_AXI_DP_BVALID,
      M_AXI_DP_RDATA(31 downto 0) => M_AXI_DP_RDATA(31 downto 0),
      M_AXI_DP_RVALID => M_AXI_DP_RVALID,
      M_AXI_DP_WREADY => M_AXI_DP_WREADY,
      Reset_Mode(0 to 1) => Reset_Mode(0 to 1),
      Rst18_out => \Use_Debug_Logic.Master_Core.Debug_Perf/Rst18_out\,
      SR(0) => Reset_DFF_n_4,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel,
      Sleep => Sleep,
      \Synchronize.use_sync_reset.sync_reg[2]\ => Reset_DFF_n_3,
      \Synchronize.use_sync_reset.sync_reg[2]_0\(0) => Reset_DFF_n_5,
      Trace_WB_Jump_Hit_reg(0) => Trace_WB_Jump_Hit_reg,
      Wakeup(0 to 1) => Wakeup(0 to 1),
      flush_pipe => \Decode_I/flush_pipe\,
      \out\(0) => Synced,
      saved_reset_mode_dbg_halt => \Use_Debug_Logic.Master_Core.Debug_Perf/saved_reset_mode_dbg_halt\,
      use_Reg_Neg_S_reg => use_Reg_Neg_S_reg,
      wb_exception => wb_exception
    );
Reset_DFF: entity work.system_microblaze_0_0_mb_sync_bit
     port map (
      Clk => Clk,
      DReady => DReady,
      Dbg_Disable => Dbg_Disable,
      Debug_Rst => Debug_Rst,
      MEM_Sel_MEM_Res => MEM_Sel_MEM_Res,
      Mb_Reset => Mb_Reset,
      Reset => Reset,
      Reset_Mode(0 to 1) => Reset_Mode(0 to 1),
      Rst18_out => \Use_Debug_Logic.Master_Core.Debug_Perf/Rst18_out\,
      SR(0) => Reset_DFF_n_4,
      \Use_DLMB.wb_dlmb_valid_read_data_reg[31]\(0) => Reset_DFF_n_5,
      flush_pipe => \Decode_I/flush_pipe\,
      \out\(0) => Synced,
      saved_reset_mode_dbg_halt => \Use_Debug_Logic.Master_Core.Debug_Perf/saved_reset_mode_dbg_halt\,
      saved_reset_mode_dbg_halt_reg => Reset_DFF_n_3,
      wb_exception => wb_exception
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0_MicroBlaze is
  port (
    Clk : in STD_LOGIC;
    Reset : in STD_LOGIC;
    Mb_Reset : in STD_LOGIC;
    Config_Reset : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Reset_Mode : in STD_LOGIC_VECTOR ( 0 to 1 );
    Interrupt : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    Interrupt_Ack : out STD_LOGIC_VECTOR ( 0 to 1 );
    Ext_BRK : in STD_LOGIC;
    Ext_NM_BRK : in STD_LOGIC;
    Dbg_Stop : in STD_LOGIC;
    Dbg_Intr : out STD_LOGIC;
    MB_Halted : out STD_LOGIC;
    MB_Error : out STD_LOGIC;
    Wakeup : in STD_LOGIC_VECTOR ( 0 to 1 );
    Sleep : out STD_LOGIC;
    Dbg_Wakeup : out STD_LOGIC;
    LOCKSTEP_Slave_In : in STD_LOGIC_VECTOR ( 0 to 4095 );
    LOCKSTEP_Master_Out : out STD_LOGIC_VECTOR ( 0 to 4095 );
    LOCKSTEP_Out : out STD_LOGIC_VECTOR ( 0 to 4095 );
    Instr_Addr : out STD_LOGIC_VECTOR ( 0 to 31 );
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    IFetch : out STD_LOGIC;
    I_AS : out STD_LOGIC;
    IReady : in STD_LOGIC;
    IWAIT : in STD_LOGIC;
    ICE : in STD_LOGIC;
    IUE : in STD_LOGIC;
    M_AXI_IP_AWID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IP_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IP_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_IP_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IP_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IP_AWLOCK : out STD_LOGIC;
    M_AXI_IP_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IP_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_AWVALID : out STD_LOGIC;
    M_AXI_IP_AWREADY : in STD_LOGIC;
    M_AXI_IP_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IP_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_WLAST : out STD_LOGIC;
    M_AXI_IP_WVALID : out STD_LOGIC;
    M_AXI_IP_WREADY : in STD_LOGIC;
    M_AXI_IP_BID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IP_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IP_BVALID : in STD_LOGIC;
    M_AXI_IP_BREADY : out STD_LOGIC;
    M_AXI_IP_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IP_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IP_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_IP_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IP_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IP_ARLOCK : out STD_LOGIC;
    M_AXI_IP_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IP_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_ARVALID : out STD_LOGIC;
    M_AXI_IP_ARREADY : in STD_LOGIC;
    M_AXI_IP_RID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IP_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IP_RLAST : in STD_LOGIC;
    M_AXI_IP_RVALID : in STD_LOGIC;
    M_AXI_IP_RREADY : out STD_LOGIC;
    Data_Addr : out STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 31 );
    D_AS : out STD_LOGIC;
    Read_Strobe : out STD_LOGIC;
    Write_Strobe : out STD_LOGIC;
    DReady : in STD_LOGIC;
    DWait : in STD_LOGIC;
    DCE : in STD_LOGIC;
    DUE : in STD_LOGIC;
    Byte_Enable : out STD_LOGIC_VECTOR ( 0 to 3 );
    M_AXI_DP_AWID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_DP_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_AWLOCK : out STD_LOGIC;
    M_AXI_DP_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_AWVALID : out STD_LOGIC;
    M_AXI_DP_AWREADY : in STD_LOGIC;
    M_AXI_DP_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_WLAST : out STD_LOGIC;
    M_AXI_DP_WVALID : out STD_LOGIC;
    M_AXI_DP_WREADY : in STD_LOGIC;
    M_AXI_DP_BID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_BVALID : in STD_LOGIC;
    M_AXI_DP_BREADY : out STD_LOGIC;
    M_AXI_DP_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_DP_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_ARLOCK : out STD_LOGIC;
    M_AXI_DP_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_ARVALID : out STD_LOGIC;
    M_AXI_DP_ARREADY : in STD_LOGIC;
    M_AXI_DP_RID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_RLAST : in STD_LOGIC;
    M_AXI_DP_RVALID : in STD_LOGIC;
    M_AXI_DP_RREADY : out STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Dbg_TDI : in STD_LOGIC;
    Dbg_TDO : out STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Shift : in STD_LOGIC;
    Dbg_Capture : in STD_LOGIC;
    Dbg_Update : in STD_LOGIC;
    Debug_Rst : in STD_LOGIC;
    Dbg_Trig_In : out STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Trig_Ack_Out : out STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Trace_Clk : in STD_LOGIC;
    Dbg_Trace_Data : out STD_LOGIC_VECTOR ( 0 to 35 );
    Dbg_Trace_Ready : in STD_LOGIC;
    Dbg_Trace_Valid : out STD_LOGIC;
    Trace_Instruction : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Valid_Instr : out STD_LOGIC;
    Trace_PC : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Reg_Write : out STD_LOGIC;
    Trace_Reg_Addr : out STD_LOGIC_VECTOR ( 0 to 4 );
    Trace_MSR_Reg : out STD_LOGIC_VECTOR ( 0 to 14 );
    Trace_PID_Reg : out STD_LOGIC_VECTOR ( 0 to 7 );
    Trace_New_Reg_Value : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Exception_Taken : out STD_LOGIC;
    Trace_Exception_Kind : out STD_LOGIC_VECTOR ( 0 to 4 );
    Trace_Jump_Taken : out STD_LOGIC;
    Trace_Delay_Slot : out STD_LOGIC;
    Trace_Data_Address : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Data_Write_Value : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Data_Byte_Enable : out STD_LOGIC_VECTOR ( 0 to 3 );
    Trace_Data_Access : out STD_LOGIC;
    Trace_Data_Read : out STD_LOGIC;
    Trace_Data_Write : out STD_LOGIC;
    Trace_DCache_Req : out STD_LOGIC;
    Trace_DCache_Hit : out STD_LOGIC;
    Trace_DCache_Rdy : out STD_LOGIC;
    Trace_DCache_Read : out STD_LOGIC;
    Trace_ICache_Req : out STD_LOGIC;
    Trace_ICache_Hit : out STD_LOGIC;
    Trace_ICache_Rdy : out STD_LOGIC;
    Trace_OF_PipeRun : out STD_LOGIC;
    Trace_EX_PipeRun : out STD_LOGIC;
    Trace_MEM_PipeRun : out STD_LOGIC;
    Trace_MB_Halted : out STD_LOGIC;
    Trace_Jump_Hit : out STD_LOGIC;
    M0_AXIS_TLAST : out STD_LOGIC;
    M0_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M0_AXIS_TVALID : out STD_LOGIC;
    M0_AXIS_TREADY : in STD_LOGIC;
    M1_AXIS_TLAST : out STD_LOGIC;
    M1_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M1_AXIS_TVALID : out STD_LOGIC;
    M1_AXIS_TREADY : in STD_LOGIC;
    M2_AXIS_TLAST : out STD_LOGIC;
    M2_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M2_AXIS_TVALID : out STD_LOGIC;
    M2_AXIS_TREADY : in STD_LOGIC;
    M3_AXIS_TLAST : out STD_LOGIC;
    M3_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M3_AXIS_TVALID : out STD_LOGIC;
    M3_AXIS_TREADY : in STD_LOGIC;
    M4_AXIS_TLAST : out STD_LOGIC;
    M4_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M4_AXIS_TVALID : out STD_LOGIC;
    M4_AXIS_TREADY : in STD_LOGIC;
    M5_AXIS_TLAST : out STD_LOGIC;
    M5_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M5_AXIS_TVALID : out STD_LOGIC;
    M5_AXIS_TREADY : in STD_LOGIC;
    M6_AXIS_TLAST : out STD_LOGIC;
    M6_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M6_AXIS_TVALID : out STD_LOGIC;
    M6_AXIS_TREADY : in STD_LOGIC;
    M7_AXIS_TLAST : out STD_LOGIC;
    M7_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M7_AXIS_TVALID : out STD_LOGIC;
    M7_AXIS_TREADY : in STD_LOGIC;
    M8_AXIS_TLAST : out STD_LOGIC;
    M8_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M8_AXIS_TVALID : out STD_LOGIC;
    M8_AXIS_TREADY : in STD_LOGIC;
    M9_AXIS_TLAST : out STD_LOGIC;
    M9_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M9_AXIS_TVALID : out STD_LOGIC;
    M9_AXIS_TREADY : in STD_LOGIC;
    M10_AXIS_TLAST : out STD_LOGIC;
    M10_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M10_AXIS_TVALID : out STD_LOGIC;
    M10_AXIS_TREADY : in STD_LOGIC;
    M11_AXIS_TLAST : out STD_LOGIC;
    M11_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M11_AXIS_TVALID : out STD_LOGIC;
    M11_AXIS_TREADY : in STD_LOGIC;
    M12_AXIS_TLAST : out STD_LOGIC;
    M12_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M12_AXIS_TVALID : out STD_LOGIC;
    M12_AXIS_TREADY : in STD_LOGIC;
    M13_AXIS_TLAST : out STD_LOGIC;
    M13_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M13_AXIS_TVALID : out STD_LOGIC;
    M13_AXIS_TREADY : in STD_LOGIC;
    M14_AXIS_TLAST : out STD_LOGIC;
    M14_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M14_AXIS_TVALID : out STD_LOGIC;
    M14_AXIS_TREADY : in STD_LOGIC;
    M15_AXIS_TLAST : out STD_LOGIC;
    M15_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M15_AXIS_TVALID : out STD_LOGIC;
    M15_AXIS_TREADY : in STD_LOGIC;
    S0_AXIS_TLAST : in STD_LOGIC;
    S0_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S0_AXIS_TVALID : in STD_LOGIC;
    S0_AXIS_TREADY : out STD_LOGIC;
    S1_AXIS_TLAST : in STD_LOGIC;
    S1_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S1_AXIS_TVALID : in STD_LOGIC;
    S1_AXIS_TREADY : out STD_LOGIC;
    S2_AXIS_TLAST : in STD_LOGIC;
    S2_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S2_AXIS_TVALID : in STD_LOGIC;
    S2_AXIS_TREADY : out STD_LOGIC;
    S3_AXIS_TLAST : in STD_LOGIC;
    S3_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S3_AXIS_TVALID : in STD_LOGIC;
    S3_AXIS_TREADY : out STD_LOGIC;
    S4_AXIS_TLAST : in STD_LOGIC;
    S4_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S4_AXIS_TVALID : in STD_LOGIC;
    S4_AXIS_TREADY : out STD_LOGIC;
    S5_AXIS_TLAST : in STD_LOGIC;
    S5_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S5_AXIS_TVALID : in STD_LOGIC;
    S5_AXIS_TREADY : out STD_LOGIC;
    S6_AXIS_TLAST : in STD_LOGIC;
    S6_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S6_AXIS_TVALID : in STD_LOGIC;
    S6_AXIS_TREADY : out STD_LOGIC;
    S7_AXIS_TLAST : in STD_LOGIC;
    S7_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S7_AXIS_TVALID : in STD_LOGIC;
    S7_AXIS_TREADY : out STD_LOGIC;
    S8_AXIS_TLAST : in STD_LOGIC;
    S8_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S8_AXIS_TVALID : in STD_LOGIC;
    S8_AXIS_TREADY : out STD_LOGIC;
    S9_AXIS_TLAST : in STD_LOGIC;
    S9_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S9_AXIS_TVALID : in STD_LOGIC;
    S9_AXIS_TREADY : out STD_LOGIC;
    S10_AXIS_TLAST : in STD_LOGIC;
    S10_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S10_AXIS_TVALID : in STD_LOGIC;
    S10_AXIS_TREADY : out STD_LOGIC;
    S11_AXIS_TLAST : in STD_LOGIC;
    S11_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S11_AXIS_TVALID : in STD_LOGIC;
    S11_AXIS_TREADY : out STD_LOGIC;
    S12_AXIS_TLAST : in STD_LOGIC;
    S12_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S12_AXIS_TVALID : in STD_LOGIC;
    S12_AXIS_TREADY : out STD_LOGIC;
    S13_AXIS_TLAST : in STD_LOGIC;
    S13_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S13_AXIS_TVALID : in STD_LOGIC;
    S13_AXIS_TREADY : out STD_LOGIC;
    S14_AXIS_TLAST : in STD_LOGIC;
    S14_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S14_AXIS_TVALID : in STD_LOGIC;
    S14_AXIS_TREADY : out STD_LOGIC;
    S15_AXIS_TLAST : in STD_LOGIC;
    S15_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S15_AXIS_TVALID : in STD_LOGIC;
    S15_AXIS_TREADY : out STD_LOGIC;
    M_AXI_IC_AWID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_IC_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_AWLOCK : out STD_LOGIC;
    M_AXI_IC_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_AWVALID : out STD_LOGIC;
    M_AXI_IC_AWREADY : in STD_LOGIC;
    M_AXI_IC_AWUSER : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_IC_AWDOMAIN : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_AWSNOOP : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_AWBAR : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_WLAST : out STD_LOGIC;
    M_AXI_IC_WVALID : out STD_LOGIC;
    M_AXI_IC_WREADY : in STD_LOGIC;
    M_AXI_IC_WUSER : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_BID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_BVALID : in STD_LOGIC;
    M_AXI_IC_BREADY : out STD_LOGIC;
    M_AXI_IC_BUSER : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_WACK : out STD_LOGIC;
    M_AXI_IC_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_IC_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_ARLOCK : out STD_LOGIC;
    M_AXI_IC_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_ARVALID : out STD_LOGIC;
    M_AXI_IC_ARREADY : in STD_LOGIC;
    M_AXI_IC_ARUSER : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_IC_ARDOMAIN : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_ARSNOOP : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_ARBAR : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_RID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_RLAST : in STD_LOGIC;
    M_AXI_IC_RVALID : in STD_LOGIC;
    M_AXI_IC_RREADY : out STD_LOGIC;
    M_AXI_IC_RUSER : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_RACK : out STD_LOGIC;
    M_AXI_IC_ACVALID : in STD_LOGIC;
    M_AXI_IC_ACADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_ACSNOOP : in STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_ACPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_ACREADY : out STD_LOGIC;
    M_AXI_IC_CRVALID : out STD_LOGIC;
    M_AXI_IC_CRRESP : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_IC_CRREADY : in STD_LOGIC;
    M_AXI_IC_CDVALID : out STD_LOGIC;
    M_AXI_IC_CDDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_CDLAST : out STD_LOGIC;
    M_AXI_IC_CDREADY : in STD_LOGIC;
    M_AXI_DC_AWID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_DC_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_AWLOCK : out STD_LOGIC;
    M_AXI_DC_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_AWVALID : out STD_LOGIC;
    M_AXI_DC_AWREADY : in STD_LOGIC;
    M_AXI_DC_AWUSER : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_DC_AWDOMAIN : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_AWSNOOP : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_AWBAR : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_WLAST : out STD_LOGIC;
    M_AXI_DC_WVALID : out STD_LOGIC;
    M_AXI_DC_WREADY : in STD_LOGIC;
    M_AXI_DC_WUSER : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_BID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_BVALID : in STD_LOGIC;
    M_AXI_DC_BREADY : out STD_LOGIC;
    M_AXI_DC_BUSER : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_WACK : out STD_LOGIC;
    M_AXI_DC_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_DC_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_ARLOCK : out STD_LOGIC;
    M_AXI_DC_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_ARVALID : out STD_LOGIC;
    M_AXI_DC_ARREADY : in STD_LOGIC;
    M_AXI_DC_ARUSER : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_DC_ARDOMAIN : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_ARSNOOP : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_ARBAR : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_RID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_RLAST : in STD_LOGIC;
    M_AXI_DC_RVALID : in STD_LOGIC;
    M_AXI_DC_RREADY : out STD_LOGIC;
    M_AXI_DC_RUSER : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_RACK : out STD_LOGIC;
    M_AXI_DC_ACVALID : in STD_LOGIC;
    M_AXI_DC_ACADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_ACSNOOP : in STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_ACPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_ACREADY : out STD_LOGIC;
    M_AXI_DC_CRVALID : out STD_LOGIC;
    M_AXI_DC_CRRESP : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_DC_CRREADY : in STD_LOGIC;
    M_AXI_DC_CDVALID : out STD_LOGIC;
    M_AXI_DC_CDDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_CDLAST : out STD_LOGIC;
    M_AXI_DC_CDREADY : in STD_LOGIC
  );
  attribute C_ADDR_TAG_BITS : integer;
  attribute C_ADDR_TAG_BITS of system_microblaze_0_0_MicroBlaze : entity is 17;
  attribute C_ALLOW_DCACHE_WR : integer;
  attribute C_ALLOW_DCACHE_WR of system_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_ALLOW_ICACHE_WR : integer;
  attribute C_ALLOW_ICACHE_WR of system_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_AREA_OPTIMIZED : integer;
  attribute C_AREA_OPTIMIZED of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_ASYNC_INTERRUPT : integer;
  attribute C_ASYNC_INTERRUPT of system_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_AVOID_PRIMITIVES : integer;
  attribute C_AVOID_PRIMITIVES of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_BASE_VECTORS : integer;
  attribute C_BASE_VECTORS of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_BRANCH_TARGET_CACHE_SIZE : integer;
  attribute C_BRANCH_TARGET_CACHE_SIZE of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_CACHE_BYTE_SIZE : integer;
  attribute C_CACHE_BYTE_SIZE of system_microblaze_0_0_MicroBlaze : entity is 8192;
  attribute C_DATA_SIZE : integer;
  attribute C_DATA_SIZE of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_DCACHE_ADDR_TAG : integer;
  attribute C_DCACHE_ADDR_TAG of system_microblaze_0_0_MicroBlaze : entity is 17;
  attribute C_DCACHE_ALWAYS_USED : integer;
  attribute C_DCACHE_ALWAYS_USED of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_DCACHE_BASEADDR : integer;
  attribute C_DCACHE_BASEADDR of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_DCACHE_BYTE_SIZE : integer;
  attribute C_DCACHE_BYTE_SIZE of system_microblaze_0_0_MicroBlaze : entity is 8192;
  attribute C_DCACHE_DATA_WIDTH : integer;
  attribute C_DCACHE_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_DCACHE_FORCE_TAG_LUTRAM : integer;
  attribute C_DCACHE_FORCE_TAG_LUTRAM of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_DCACHE_HIGHADDR : integer;
  attribute C_DCACHE_HIGHADDR of system_microblaze_0_0_MicroBlaze : entity is 1073741823;
  attribute C_DCACHE_LINE_LEN : integer;
  attribute C_DCACHE_LINE_LEN of system_microblaze_0_0_MicroBlaze : entity is 4;
  attribute C_DCACHE_USE_WRITEBACK : integer;
  attribute C_DCACHE_USE_WRITEBACK of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_DCACHE_VICTIMS : integer;
  attribute C_DCACHE_VICTIMS of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_DEBUG_COUNTER_WIDTH : integer;
  attribute C_DEBUG_COUNTER_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_DEBUG_ENABLED : integer;
  attribute C_DEBUG_ENABLED of system_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_DEBUG_EVENT_COUNTERS : integer;
  attribute C_DEBUG_EVENT_COUNTERS of system_microblaze_0_0_MicroBlaze : entity is 5;
  attribute C_DEBUG_EXTERNAL_TRACE : integer;
  attribute C_DEBUG_EXTERNAL_TRACE of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_DEBUG_LATENCY_COUNTERS : integer;
  attribute C_DEBUG_LATENCY_COUNTERS of system_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_DEBUG_PROFILE_SIZE : integer;
  attribute C_DEBUG_PROFILE_SIZE of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_DEBUG_TRACE_SIZE : integer;
  attribute C_DEBUG_TRACE_SIZE of system_microblaze_0_0_MicroBlaze : entity is 8192;
  attribute C_DIV_ZERO_EXCEPTION : integer;
  attribute C_DIV_ZERO_EXCEPTION of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_DYNAMIC_BUS_SIZING : integer;
  attribute C_DYNAMIC_BUS_SIZING of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_D_AXI : integer;
  attribute C_D_AXI of system_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_D_LMB : integer;
  attribute C_D_LMB of system_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_ECC_USE_CE_EXCEPTION : integer;
  attribute C_ECC_USE_CE_EXCEPTION of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_EDGE_IS_POSITIVE : integer;
  attribute C_EDGE_IS_POSITIVE of system_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_ENDIANNESS : integer;
  attribute C_ENDIANNESS of system_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_FAMILY : string;
  attribute C_FAMILY of system_microblaze_0_0_MicroBlaze : entity is "artix7";
  attribute C_FAULT_TOLERANT : integer;
  attribute C_FAULT_TOLERANT of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_FPU_EXCEPTION : integer;
  attribute C_FPU_EXCEPTION of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_FREQ : integer;
  attribute C_FREQ of system_microblaze_0_0_MicroBlaze : entity is 100000000;
  attribute C_FSL_EXCEPTION : integer;
  attribute C_FSL_EXCEPTION of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_FSL_LINKS : integer;
  attribute C_FSL_LINKS of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_ICACHE_ALWAYS_USED : integer;
  attribute C_ICACHE_ALWAYS_USED of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_ICACHE_BASEADDR : integer;
  attribute C_ICACHE_BASEADDR of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_ICACHE_DATA_WIDTH : integer;
  attribute C_ICACHE_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_ICACHE_FORCE_TAG_LUTRAM : integer;
  attribute C_ICACHE_FORCE_TAG_LUTRAM of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_ICACHE_HIGHADDR : integer;
  attribute C_ICACHE_HIGHADDR of system_microblaze_0_0_MicroBlaze : entity is 1073741823;
  attribute C_ICACHE_LINE_LEN : integer;
  attribute C_ICACHE_LINE_LEN of system_microblaze_0_0_MicroBlaze : entity is 4;
  attribute C_ICACHE_STREAMS : integer;
  attribute C_ICACHE_STREAMS of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_ICACHE_VICTIMS : integer;
  attribute C_ICACHE_VICTIMS of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_ILL_OPCODE_EXCEPTION : integer;
  attribute C_ILL_OPCODE_EXCEPTION of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_IMPRECISE_EXCEPTIONS : integer;
  attribute C_IMPRECISE_EXCEPTIONS of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_INSTANCE : string;
  attribute C_INSTANCE of system_microblaze_0_0_MicroBlaze : entity is "system_microblaze_0_0";
  attribute C_INTERCONNECT : integer;
  attribute C_INTERCONNECT of system_microblaze_0_0_MicroBlaze : entity is 2;
  attribute C_INTERRUPT_IS_EDGE : integer;
  attribute C_INTERRUPT_IS_EDGE of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_I_AXI : integer;
  attribute C_I_AXI of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_I_LMB : integer;
  attribute C_I_LMB of system_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_LOCKSTEP_SLAVE : integer;
  attribute C_LOCKSTEP_SLAVE of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_M0_AXIS_DATA_WIDTH : integer;
  attribute C_M0_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M10_AXIS_DATA_WIDTH : integer;
  attribute C_M10_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M11_AXIS_DATA_WIDTH : integer;
  attribute C_M11_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M12_AXIS_DATA_WIDTH : integer;
  attribute C_M12_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M13_AXIS_DATA_WIDTH : integer;
  attribute C_M13_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M14_AXIS_DATA_WIDTH : integer;
  attribute C_M14_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M15_AXIS_DATA_WIDTH : integer;
  attribute C_M15_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M1_AXIS_DATA_WIDTH : integer;
  attribute C_M1_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M2_AXIS_DATA_WIDTH : integer;
  attribute C_M2_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M3_AXIS_DATA_WIDTH : integer;
  attribute C_M3_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M4_AXIS_DATA_WIDTH : integer;
  attribute C_M4_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M5_AXIS_DATA_WIDTH : integer;
  attribute C_M5_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M6_AXIS_DATA_WIDTH : integer;
  attribute C_M6_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M7_AXIS_DATA_WIDTH : integer;
  attribute C_M7_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M8_AXIS_DATA_WIDTH : integer;
  attribute C_M8_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M9_AXIS_DATA_WIDTH : integer;
  attribute C_M9_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_MMU_DTLB_SIZE : integer;
  attribute C_MMU_DTLB_SIZE of system_microblaze_0_0_MicroBlaze : entity is 4;
  attribute C_MMU_ITLB_SIZE : integer;
  attribute C_MMU_ITLB_SIZE of system_microblaze_0_0_MicroBlaze : entity is 2;
  attribute C_MMU_PRIVILEGED_INSTR : integer;
  attribute C_MMU_PRIVILEGED_INSTR of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_MMU_TLB_ACCESS : integer;
  attribute C_MMU_TLB_ACCESS of system_microblaze_0_0_MicroBlaze : entity is 3;
  attribute C_MMU_ZONES : integer;
  attribute C_MMU_ZONES of system_microblaze_0_0_MicroBlaze : entity is 16;
  attribute C_M_AXI_DC_ADDR_WIDTH : integer;
  attribute C_M_AXI_DC_ADDR_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M_AXI_DC_ARUSER_WIDTH : integer;
  attribute C_M_AXI_DC_ARUSER_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 5;
  attribute C_M_AXI_DC_AWUSER_WIDTH : integer;
  attribute C_M_AXI_DC_AWUSER_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 5;
  attribute C_M_AXI_DC_BUSER_WIDTH : integer;
  attribute C_M_AXI_DC_BUSER_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_M_AXI_DC_DATA_WIDTH : integer;
  attribute C_M_AXI_DC_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M_AXI_DC_EXCLUSIVE_ACCESS : integer;
  attribute C_M_AXI_DC_EXCLUSIVE_ACCESS of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_M_AXI_DC_RUSER_WIDTH : integer;
  attribute C_M_AXI_DC_RUSER_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_M_AXI_DC_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_DC_THREAD_ID_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_M_AXI_DC_USER_VALUE : integer;
  attribute C_M_AXI_DC_USER_VALUE of system_microblaze_0_0_MicroBlaze : entity is 31;
  attribute C_M_AXI_DC_WUSER_WIDTH : integer;
  attribute C_M_AXI_DC_WUSER_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_M_AXI_DP_ADDR_WIDTH : integer;
  attribute C_M_AXI_DP_ADDR_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M_AXI_DP_DATA_WIDTH : integer;
  attribute C_M_AXI_DP_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M_AXI_DP_EXCLUSIVE_ACCESS : integer;
  attribute C_M_AXI_DP_EXCLUSIVE_ACCESS of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_M_AXI_DP_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_DP_THREAD_ID_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_M_AXI_D_BUS_EXCEPTION : integer;
  attribute C_M_AXI_D_BUS_EXCEPTION of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_M_AXI_IC_ADDR_WIDTH : integer;
  attribute C_M_AXI_IC_ADDR_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M_AXI_IC_ARUSER_WIDTH : integer;
  attribute C_M_AXI_IC_ARUSER_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 5;
  attribute C_M_AXI_IC_AWUSER_WIDTH : integer;
  attribute C_M_AXI_IC_AWUSER_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 5;
  attribute C_M_AXI_IC_BUSER_WIDTH : integer;
  attribute C_M_AXI_IC_BUSER_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_M_AXI_IC_DATA_WIDTH : integer;
  attribute C_M_AXI_IC_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M_AXI_IC_RUSER_WIDTH : integer;
  attribute C_M_AXI_IC_RUSER_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_M_AXI_IC_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_IC_THREAD_ID_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_M_AXI_IC_USER_VALUE : integer;
  attribute C_M_AXI_IC_USER_VALUE of system_microblaze_0_0_MicroBlaze : entity is 31;
  attribute C_M_AXI_IC_WUSER_WIDTH : integer;
  attribute C_M_AXI_IC_WUSER_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_M_AXI_IP_ADDR_WIDTH : integer;
  attribute C_M_AXI_IP_ADDR_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M_AXI_IP_DATA_WIDTH : integer;
  attribute C_M_AXI_IP_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M_AXI_IP_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_IP_THREAD_ID_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_M_AXI_I_BUS_EXCEPTION : integer;
  attribute C_M_AXI_I_BUS_EXCEPTION of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_NUMBER_OF_PC_BRK : integer;
  attribute C_NUMBER_OF_PC_BRK of system_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_NUMBER_OF_RD_ADDR_BRK : integer;
  attribute C_NUMBER_OF_RD_ADDR_BRK of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_NUMBER_OF_WR_ADDR_BRK : integer;
  attribute C_NUMBER_OF_WR_ADDR_BRK of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_NUM_SYNC_FF_CLK : integer;
  attribute C_NUM_SYNC_FF_CLK of system_microblaze_0_0_MicroBlaze : entity is 2;
  attribute C_NUM_SYNC_FF_CLK_DEBUG : integer;
  attribute C_NUM_SYNC_FF_CLK_DEBUG of system_microblaze_0_0_MicroBlaze : entity is 2;
  attribute C_NUM_SYNC_FF_CLK_IRQ : integer;
  attribute C_NUM_SYNC_FF_CLK_IRQ of system_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_NUM_SYNC_FF_DBG_CLK : integer;
  attribute C_NUM_SYNC_FF_DBG_CLK of system_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_OPCODE_0x0_ILLEGAL : integer;
  attribute C_OPCODE_0x0_ILLEGAL of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_OPTIMIZATION : integer;
  attribute C_OPTIMIZATION of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_PC_WIDTH : integer;
  attribute C_PC_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_PVR : integer;
  attribute C_PVR of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_PVR_USER1 : string;
  attribute C_PVR_USER1 of system_microblaze_0_0_MicroBlaze : entity is "8'b00000000";
  attribute C_PVR_USER2 : integer;
  attribute C_PVR_USER2 of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_RESET_MSR : integer;
  attribute C_RESET_MSR of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_S0_AXIS_DATA_WIDTH : integer;
  attribute C_S0_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S10_AXIS_DATA_WIDTH : integer;
  attribute C_S10_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S11_AXIS_DATA_WIDTH : integer;
  attribute C_S11_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S12_AXIS_DATA_WIDTH : integer;
  attribute C_S12_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S13_AXIS_DATA_WIDTH : integer;
  attribute C_S13_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S14_AXIS_DATA_WIDTH : integer;
  attribute C_S14_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S15_AXIS_DATA_WIDTH : integer;
  attribute C_S15_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S1_AXIS_DATA_WIDTH : integer;
  attribute C_S1_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S2_AXIS_DATA_WIDTH : integer;
  attribute C_S2_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S3_AXIS_DATA_WIDTH : integer;
  attribute C_S3_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S4_AXIS_DATA_WIDTH : integer;
  attribute C_S4_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S5_AXIS_DATA_WIDTH : integer;
  attribute C_S5_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S6_AXIS_DATA_WIDTH : integer;
  attribute C_S6_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S7_AXIS_DATA_WIDTH : integer;
  attribute C_S7_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S8_AXIS_DATA_WIDTH : integer;
  attribute C_S8_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S9_AXIS_DATA_WIDTH : integer;
  attribute C_S9_AXIS_DATA_WIDTH of system_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_SCO : integer;
  attribute C_SCO of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_UNALIGNED_EXCEPTIONS : integer;
  attribute C_UNALIGNED_EXCEPTIONS of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_BARREL : integer;
  attribute C_USE_BARREL of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_BRANCH_TARGET_CACHE : integer;
  attribute C_USE_BRANCH_TARGET_CACHE of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_CONFIG_RESET : integer;
  attribute C_USE_CONFIG_RESET of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_DCACHE : integer;
  attribute C_USE_DCACHE of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_DIV : integer;
  attribute C_USE_DIV of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_EXTENDED_FSL_INSTR : integer;
  attribute C_USE_EXTENDED_FSL_INSTR of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_EXT_BRK : integer;
  attribute C_USE_EXT_BRK of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_EXT_NM_BRK : integer;
  attribute C_USE_EXT_NM_BRK of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_FPU : integer;
  attribute C_USE_FPU of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_HW_MUL : integer;
  attribute C_USE_HW_MUL of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_ICACHE : integer;
  attribute C_USE_ICACHE of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_INTERRUPT : integer;
  attribute C_USE_INTERRUPT of system_microblaze_0_0_MicroBlaze : entity is 2;
  attribute C_USE_MMU : integer;
  attribute C_USE_MMU of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_MSR_INSTR : integer;
  attribute C_USE_MSR_INSTR of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_PCMP_INSTR : integer;
  attribute C_USE_PCMP_INSTR of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_REORDER_INSTR : integer;
  attribute C_USE_REORDER_INSTR of system_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_USE_STACK_PROTECTION : integer;
  attribute C_USE_STACK_PROTECTION of system_microblaze_0_0_MicroBlaze : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of system_microblaze_0_0_MicroBlaze : entity is "MicroBlaze";
  attribute downgradeipidentifiedwarnings : string;
  attribute downgradeipidentifiedwarnings of system_microblaze_0_0_MicroBlaze : entity is "yes";
end system_microblaze_0_0_MicroBlaze;

architecture STRUCTURE of system_microblaze_0_0_MicroBlaze is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^byte_enable\ : STD_LOGIC_VECTOR ( 0 to 3 );
  signal \^d_as\ : STD_LOGIC;
  signal \^data_addr\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^data_write\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal Dbg_TDO_INST_0_i_12_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_4_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_6_n_0 : STD_LOGIC;
  signal \^dbg_trig_ack_out\ : STD_LOGIC_VECTOR ( 0 to 1 );
  signal \^dbg_trig_in\ : STD_LOGIC_VECTOR ( 0 to 1 );
  signal \^ifetch\ : STD_LOGIC;
  signal \^i_as\ : STD_LOGIC;
  signal \^instr_addr\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^lockstep_master_out\ : STD_LOGIC_VECTOR ( 1 to 45 );
  signal \^m_axi_dp_araddr\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \^m_axi_dp_arvalid\ : STD_LOGIC;
  signal \^m_axi_dp_awvalid\ : STD_LOGIC;
  signal \^m_axi_dp_wdata\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \^m_axi_dp_wstrb\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \^m_axi_dp_wvalid\ : STD_LOGIC;
  signal \^read_strobe\ : STD_LOGIC;
  signal \^trace_data_access\ : STD_LOGIC;
  signal \^trace_data_address\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_data_byte_enable\ : STD_LOGIC_VECTOR ( 0 to 3 );
  signal \^trace_data_read\ : STD_LOGIC;
  signal \^trace_data_write\ : STD_LOGIC;
  signal \^trace_data_write_value\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_delay_slot\ : STD_LOGIC;
  signal \^trace_ex_piperun\ : STD_LOGIC;
  signal \^trace_exception_kind\ : STD_LOGIC_VECTOR ( 0 to 4 );
  signal \^trace_exception_taken\ : STD_LOGIC;
  signal \^trace_instruction\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_jump_hit\ : STD_LOGIC;
  signal \^trace_jump_taken\ : STD_LOGIC;
  signal \^trace_mem_piperun\ : STD_LOGIC;
  signal \^trace_msr_reg\ : STD_LOGIC_VECTOR ( 11 to 13 );
  signal \^trace_new_reg_value\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_of_piperun\ : STD_LOGIC;
  signal \^trace_pc\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_reg_addr\ : STD_LOGIC_VECTOR ( 0 to 4 );
  signal \^trace_reg_write\ : STD_LOGIC;
  signal \^trace_valid_instr\ : STD_LOGIC;
  signal \^write_strobe\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of Dbg_TDO_INST_0_i_4 : label is "soft_lutpair88";
  attribute SOFT_HLUTNM of Dbg_TDO_INST_0_i_6 : label is "soft_lutpair88";
begin
  Byte_Enable(0 to 3) <= \^byte_enable\(0 to 3);
  D_AS <= \^d_as\;
  Data_Addr(0 to 31) <= \^data_addr\(0 to 31);
  Data_Write(0 to 31) <= \^data_write\(0 to 31);
  Dbg_Intr <= \<const0>\;
  Dbg_Trace_Data(0) <= \<const0>\;
  Dbg_Trace_Data(1) <= \<const0>\;
  Dbg_Trace_Data(2) <= \<const0>\;
  Dbg_Trace_Data(3) <= \<const0>\;
  Dbg_Trace_Data(4) <= \<const0>\;
  Dbg_Trace_Data(5) <= \<const0>\;
  Dbg_Trace_Data(6) <= \<const0>\;
  Dbg_Trace_Data(7) <= \<const0>\;
  Dbg_Trace_Data(8) <= \<const0>\;
  Dbg_Trace_Data(9) <= \<const0>\;
  Dbg_Trace_Data(10) <= \<const0>\;
  Dbg_Trace_Data(11) <= \<const0>\;
  Dbg_Trace_Data(12) <= \<const0>\;
  Dbg_Trace_Data(13) <= \<const0>\;
  Dbg_Trace_Data(14) <= \<const0>\;
  Dbg_Trace_Data(15) <= \<const0>\;
  Dbg_Trace_Data(16) <= \<const0>\;
  Dbg_Trace_Data(17) <= \<const0>\;
  Dbg_Trace_Data(18) <= \<const0>\;
  Dbg_Trace_Data(19) <= \<const0>\;
  Dbg_Trace_Data(20) <= \<const0>\;
  Dbg_Trace_Data(21) <= \<const0>\;
  Dbg_Trace_Data(22) <= \<const0>\;
  Dbg_Trace_Data(23) <= \<const0>\;
  Dbg_Trace_Data(24) <= \<const0>\;
  Dbg_Trace_Data(25) <= \<const0>\;
  Dbg_Trace_Data(26) <= \<const0>\;
  Dbg_Trace_Data(27) <= \<const0>\;
  Dbg_Trace_Data(28) <= \<const0>\;
  Dbg_Trace_Data(29) <= \<const0>\;
  Dbg_Trace_Data(30) <= \<const0>\;
  Dbg_Trace_Data(31) <= \<const0>\;
  Dbg_Trace_Data(32) <= \<const0>\;
  Dbg_Trace_Data(33) <= \<const0>\;
  Dbg_Trace_Data(34) <= \<const0>\;
  Dbg_Trace_Data(35) <= \<const0>\;
  Dbg_Trace_Valid <= \<const0>\;
  Dbg_Trig_Ack_Out(0 to 1) <= \^dbg_trig_ack_out\(0 to 1);
  Dbg_Trig_Ack_Out(2) <= \<const0>\;
  Dbg_Trig_Ack_Out(3) <= \<const0>\;
  Dbg_Trig_Ack_Out(4) <= \<const0>\;
  Dbg_Trig_Ack_Out(5) <= \<const0>\;
  Dbg_Trig_Ack_Out(6) <= \<const0>\;
  Dbg_Trig_Ack_Out(7) <= \<const0>\;
  Dbg_Trig_In(0 to 1) <= \^dbg_trig_in\(0 to 1);
  Dbg_Trig_In(2) <= \<const0>\;
  Dbg_Trig_In(3) <= \<const0>\;
  Dbg_Trig_In(4) <= \<const0>\;
  Dbg_Trig_In(5) <= \<const0>\;
  Dbg_Trig_In(6) <= \<const0>\;
  Dbg_Trig_In(7) <= \<const0>\;
  Dbg_Wakeup <= \^lockstep_master_out\(11);
  IFetch <= \^ifetch\;
  I_AS <= \^i_as\;
  Instr_Addr(0 to 31) <= \^instr_addr\(0 to 31);
  LOCKSTEP_Master_Out(0) <= \<const0>\;
  LOCKSTEP_Master_Out(1) <= \^lockstep_master_out\(1);
  LOCKSTEP_Master_Out(2) <= \<const0>\;
  LOCKSTEP_Master_Out(3 to 8) <= \^lockstep_master_out\(3 to 8);
  LOCKSTEP_Master_Out(9) <= \<const0>\;
  LOCKSTEP_Master_Out(10 to 45) <= \^lockstep_master_out\(10 to 45);
  LOCKSTEP_Master_Out(46) <= \<const0>\;
  LOCKSTEP_Master_Out(47) <= \<const0>\;
  LOCKSTEP_Master_Out(48) <= \<const0>\;
  LOCKSTEP_Master_Out(49) <= \<const0>\;
  LOCKSTEP_Master_Out(50) <= \<const0>\;
  LOCKSTEP_Master_Out(51) <= \<const0>\;
  LOCKSTEP_Master_Out(52) <= \<const0>\;
  LOCKSTEP_Master_Out(53) <= \<const0>\;
  LOCKSTEP_Master_Out(54) <= \<const0>\;
  LOCKSTEP_Master_Out(55) <= \<const0>\;
  LOCKSTEP_Master_Out(56) <= \<const0>\;
  LOCKSTEP_Master_Out(57) <= \<const0>\;
  LOCKSTEP_Master_Out(58) <= \<const0>\;
  LOCKSTEP_Master_Out(59) <= \<const0>\;
  LOCKSTEP_Master_Out(60) <= \<const0>\;
  LOCKSTEP_Master_Out(61) <= \<const0>\;
  LOCKSTEP_Master_Out(62) <= \<const0>\;
  LOCKSTEP_Master_Out(63) <= \<const0>\;
  LOCKSTEP_Master_Out(64) <= \<const0>\;
  LOCKSTEP_Master_Out(65) <= \<const0>\;
  LOCKSTEP_Master_Out(66) <= \<const0>\;
  LOCKSTEP_Master_Out(67) <= \<const0>\;
  LOCKSTEP_Master_Out(68) <= \<const0>\;
  LOCKSTEP_Master_Out(69) <= \<const0>\;
  LOCKSTEP_Master_Out(70) <= \<const0>\;
  LOCKSTEP_Master_Out(71) <= \<const0>\;
  LOCKSTEP_Master_Out(72) <= \<const0>\;
  LOCKSTEP_Master_Out(73) <= \<const0>\;
  LOCKSTEP_Master_Out(74) <= \<const0>\;
  LOCKSTEP_Master_Out(75) <= \<const0>\;
  LOCKSTEP_Master_Out(76) <= \<const0>\;
  LOCKSTEP_Master_Out(77) <= \<const0>\;
  LOCKSTEP_Master_Out(78) <= \<const0>\;
  LOCKSTEP_Master_Out(79) <= \<const0>\;
  LOCKSTEP_Master_Out(80) <= \<const0>\;
  LOCKSTEP_Master_Out(81) <= \<const0>\;
  LOCKSTEP_Master_Out(82) <= \<const0>\;
  LOCKSTEP_Master_Out(83) <= \<const0>\;
  LOCKSTEP_Master_Out(84) <= \<const0>\;
  LOCKSTEP_Master_Out(85) <= \<const0>\;
  LOCKSTEP_Master_Out(86) <= \<const0>\;
  LOCKSTEP_Master_Out(87) <= \<const0>\;
  LOCKSTEP_Master_Out(88) <= \<const0>\;
  LOCKSTEP_Master_Out(89) <= \<const0>\;
  LOCKSTEP_Master_Out(90) <= \<const0>\;
  LOCKSTEP_Master_Out(91) <= \<const0>\;
  LOCKSTEP_Master_Out(92) <= \<const0>\;
  LOCKSTEP_Master_Out(93) <= \<const0>\;
  LOCKSTEP_Master_Out(94) <= \<const0>\;
  LOCKSTEP_Master_Out(95) <= \<const0>\;
  LOCKSTEP_Master_Out(96) <= \<const0>\;
  LOCKSTEP_Master_Out(97) <= \<const0>\;
  LOCKSTEP_Master_Out(98) <= \<const0>\;
  LOCKSTEP_Master_Out(99) <= \<const0>\;
  LOCKSTEP_Master_Out(100) <= \<const0>\;
  LOCKSTEP_Master_Out(101) <= \<const0>\;
  LOCKSTEP_Master_Out(102) <= \<const0>\;
  LOCKSTEP_Master_Out(103) <= \<const0>\;
  LOCKSTEP_Master_Out(104) <= \<const0>\;
  LOCKSTEP_Master_Out(105) <= \<const0>\;
  LOCKSTEP_Master_Out(106) <= \<const0>\;
  LOCKSTEP_Master_Out(107) <= \<const0>\;
  LOCKSTEP_Master_Out(108) <= \<const0>\;
  LOCKSTEP_Master_Out(109) <= \<const0>\;
  LOCKSTEP_Master_Out(110) <= \<const0>\;
  LOCKSTEP_Master_Out(111) <= \<const0>\;
  LOCKSTEP_Master_Out(112) <= \<const0>\;
  LOCKSTEP_Master_Out(113) <= \<const0>\;
  LOCKSTEP_Master_Out(114) <= \<const0>\;
  LOCKSTEP_Master_Out(115) <= \<const0>\;
  LOCKSTEP_Master_Out(116) <= \<const0>\;
  LOCKSTEP_Master_Out(117) <= \<const0>\;
  LOCKSTEP_Master_Out(118) <= \<const0>\;
  LOCKSTEP_Master_Out(119) <= \<const0>\;
  LOCKSTEP_Master_Out(120) <= \<const0>\;
  LOCKSTEP_Master_Out(121) <= \<const0>\;
  LOCKSTEP_Master_Out(122) <= \<const0>\;
  LOCKSTEP_Master_Out(123) <= \<const0>\;
  LOCKSTEP_Master_Out(124) <= \<const0>\;
  LOCKSTEP_Master_Out(125) <= \<const0>\;
  LOCKSTEP_Master_Out(126) <= \<const0>\;
  LOCKSTEP_Master_Out(127) <= \<const0>\;
  LOCKSTEP_Master_Out(128) <= \<const0>\;
  LOCKSTEP_Master_Out(129) <= \<const0>\;
  LOCKSTEP_Master_Out(130) <= \<const0>\;
  LOCKSTEP_Master_Out(131) <= \<const0>\;
  LOCKSTEP_Master_Out(132) <= \<const0>\;
  LOCKSTEP_Master_Out(133) <= \<const0>\;
  LOCKSTEP_Master_Out(134) <= \<const0>\;
  LOCKSTEP_Master_Out(135) <= \<const0>\;
  LOCKSTEP_Master_Out(136) <= \<const0>\;
  LOCKSTEP_Master_Out(137) <= \<const0>\;
  LOCKSTEP_Master_Out(138) <= \<const0>\;
  LOCKSTEP_Master_Out(139) <= \<const0>\;
  LOCKSTEP_Master_Out(140) <= \<const0>\;
  LOCKSTEP_Master_Out(141) <= \<const0>\;
  LOCKSTEP_Master_Out(142) <= \<const0>\;
  LOCKSTEP_Master_Out(143) <= \<const0>\;
  LOCKSTEP_Master_Out(144) <= \<const0>\;
  LOCKSTEP_Master_Out(145) <= \<const0>\;
  LOCKSTEP_Master_Out(146) <= \<const0>\;
  LOCKSTEP_Master_Out(147) <= \<const0>\;
  LOCKSTEP_Master_Out(148) <= \<const0>\;
  LOCKSTEP_Master_Out(149) <= \<const0>\;
  LOCKSTEP_Master_Out(150) <= \<const0>\;
  LOCKSTEP_Master_Out(151) <= \<const0>\;
  LOCKSTEP_Master_Out(152) <= \<const0>\;
  LOCKSTEP_Master_Out(153) <= \<const0>\;
  LOCKSTEP_Master_Out(154) <= \<const0>\;
  LOCKSTEP_Master_Out(155) <= \<const0>\;
  LOCKSTEP_Master_Out(156) <= \<const0>\;
  LOCKSTEP_Master_Out(157) <= \<const0>\;
  LOCKSTEP_Master_Out(158) <= \<const0>\;
  LOCKSTEP_Master_Out(159) <= \<const0>\;
  LOCKSTEP_Master_Out(160) <= \<const0>\;
  LOCKSTEP_Master_Out(161) <= \<const0>\;
  LOCKSTEP_Master_Out(162) <= \<const0>\;
  LOCKSTEP_Master_Out(163) <= \<const0>\;
  LOCKSTEP_Master_Out(164) <= \<const0>\;
  LOCKSTEP_Master_Out(165) <= \<const0>\;
  LOCKSTEP_Master_Out(166) <= \<const0>\;
  LOCKSTEP_Master_Out(167) <= \<const0>\;
  LOCKSTEP_Master_Out(168) <= \<const0>\;
  LOCKSTEP_Master_Out(169) <= \<const0>\;
  LOCKSTEP_Master_Out(170) <= \<const0>\;
  LOCKSTEP_Master_Out(171) <= \<const0>\;
  LOCKSTEP_Master_Out(172) <= \<const0>\;
  LOCKSTEP_Master_Out(173) <= \<const0>\;
  LOCKSTEP_Master_Out(174) <= \<const0>\;
  LOCKSTEP_Master_Out(175) <= \<const0>\;
  LOCKSTEP_Master_Out(176) <= \<const0>\;
  LOCKSTEP_Master_Out(177) <= \<const0>\;
  LOCKSTEP_Master_Out(178) <= \<const0>\;
  LOCKSTEP_Master_Out(179) <= \<const0>\;
  LOCKSTEP_Master_Out(180) <= \<const0>\;
  LOCKSTEP_Master_Out(181) <= \<const0>\;
  LOCKSTEP_Master_Out(182) <= \<const0>\;
  LOCKSTEP_Master_Out(183) <= \<const0>\;
  LOCKSTEP_Master_Out(184) <= \<const0>\;
  LOCKSTEP_Master_Out(185) <= \<const0>\;
  LOCKSTEP_Master_Out(186) <= \<const0>\;
  LOCKSTEP_Master_Out(187) <= \<const0>\;
  LOCKSTEP_Master_Out(188) <= \<const0>\;
  LOCKSTEP_Master_Out(189) <= \<const0>\;
  LOCKSTEP_Master_Out(190) <= \<const0>\;
  LOCKSTEP_Master_Out(191) <= \<const0>\;
  LOCKSTEP_Master_Out(192) <= \<const0>\;
  LOCKSTEP_Master_Out(193) <= \<const0>\;
  LOCKSTEP_Master_Out(194) <= \<const0>\;
  LOCKSTEP_Master_Out(195) <= \<const0>\;
  LOCKSTEP_Master_Out(196) <= \<const0>\;
  LOCKSTEP_Master_Out(197) <= \<const0>\;
  LOCKSTEP_Master_Out(198) <= \<const0>\;
  LOCKSTEP_Master_Out(199) <= \<const0>\;
  LOCKSTEP_Master_Out(200) <= \<const0>\;
  LOCKSTEP_Master_Out(201) <= \<const0>\;
  LOCKSTEP_Master_Out(202) <= \<const0>\;
  LOCKSTEP_Master_Out(203) <= \<const0>\;
  LOCKSTEP_Master_Out(204) <= \<const0>\;
  LOCKSTEP_Master_Out(205) <= \<const0>\;
  LOCKSTEP_Master_Out(206) <= \<const0>\;
  LOCKSTEP_Master_Out(207) <= \<const0>\;
  LOCKSTEP_Master_Out(208) <= \<const0>\;
  LOCKSTEP_Master_Out(209) <= \<const0>\;
  LOCKSTEP_Master_Out(210) <= \<const0>\;
  LOCKSTEP_Master_Out(211) <= \<const0>\;
  LOCKSTEP_Master_Out(212) <= \<const0>\;
  LOCKSTEP_Master_Out(213) <= \<const0>\;
  LOCKSTEP_Master_Out(214) <= \<const0>\;
  LOCKSTEP_Master_Out(215) <= \<const0>\;
  LOCKSTEP_Master_Out(216) <= \<const0>\;
  LOCKSTEP_Master_Out(217) <= \<const0>\;
  LOCKSTEP_Master_Out(218) <= \<const0>\;
  LOCKSTEP_Master_Out(219) <= \<const0>\;
  LOCKSTEP_Master_Out(220) <= \<const0>\;
  LOCKSTEP_Master_Out(221) <= \<const0>\;
  LOCKSTEP_Master_Out(222) <= \<const0>\;
  LOCKSTEP_Master_Out(223) <= \<const0>\;
  LOCKSTEP_Master_Out(224) <= \<const0>\;
  LOCKSTEP_Master_Out(225) <= \<const0>\;
  LOCKSTEP_Master_Out(226) <= \<const0>\;
  LOCKSTEP_Master_Out(227) <= \<const0>\;
  LOCKSTEP_Master_Out(228) <= \<const0>\;
  LOCKSTEP_Master_Out(229) <= \<const0>\;
  LOCKSTEP_Master_Out(230) <= \<const0>\;
  LOCKSTEP_Master_Out(231) <= \<const0>\;
  LOCKSTEP_Master_Out(232) <= \<const0>\;
  LOCKSTEP_Master_Out(233) <= \<const0>\;
  LOCKSTEP_Master_Out(234) <= \<const0>\;
  LOCKSTEP_Master_Out(235) <= \<const0>\;
  LOCKSTEP_Master_Out(236) <= \<const0>\;
  LOCKSTEP_Master_Out(237) <= \<const0>\;
  LOCKSTEP_Master_Out(238) <= \<const0>\;
  LOCKSTEP_Master_Out(239) <= \<const0>\;
  LOCKSTEP_Master_Out(240) <= \<const0>\;
  LOCKSTEP_Master_Out(241) <= \<const0>\;
  LOCKSTEP_Master_Out(242) <= \<const0>\;
  LOCKSTEP_Master_Out(243) <= \<const0>\;
  LOCKSTEP_Master_Out(244) <= \<const0>\;
  LOCKSTEP_Master_Out(245) <= \<const0>\;
  LOCKSTEP_Master_Out(246) <= \<const0>\;
  LOCKSTEP_Master_Out(247) <= \<const0>\;
  LOCKSTEP_Master_Out(248) <= \<const0>\;
  LOCKSTEP_Master_Out(249) <= \<const0>\;
  LOCKSTEP_Master_Out(250) <= \<const0>\;
  LOCKSTEP_Master_Out(251) <= \<const0>\;
  LOCKSTEP_Master_Out(252) <= \<const0>\;
  LOCKSTEP_Master_Out(253) <= \<const0>\;
  LOCKSTEP_Master_Out(254) <= \<const0>\;
  LOCKSTEP_Master_Out(255) <= \<const0>\;
  LOCKSTEP_Master_Out(256) <= \<const0>\;
  LOCKSTEP_Master_Out(257) <= \<const0>\;
  LOCKSTEP_Master_Out(258) <= \<const0>\;
  LOCKSTEP_Master_Out(259) <= \<const0>\;
  LOCKSTEP_Master_Out(260) <= \<const0>\;
  LOCKSTEP_Master_Out(261) <= \<const0>\;
  LOCKSTEP_Master_Out(262) <= \<const0>\;
  LOCKSTEP_Master_Out(263) <= \<const0>\;
  LOCKSTEP_Master_Out(264) <= \<const0>\;
  LOCKSTEP_Master_Out(265) <= \<const0>\;
  LOCKSTEP_Master_Out(266) <= \<const0>\;
  LOCKSTEP_Master_Out(267) <= \<const0>\;
  LOCKSTEP_Master_Out(268) <= \<const0>\;
  LOCKSTEP_Master_Out(269) <= \<const0>\;
  LOCKSTEP_Master_Out(270) <= \<const0>\;
  LOCKSTEP_Master_Out(271) <= \<const0>\;
  LOCKSTEP_Master_Out(272) <= \<const0>\;
  LOCKSTEP_Master_Out(273) <= \<const0>\;
  LOCKSTEP_Master_Out(274) <= \<const0>\;
  LOCKSTEP_Master_Out(275) <= \<const0>\;
  LOCKSTEP_Master_Out(276) <= \<const0>\;
  LOCKSTEP_Master_Out(277) <= \<const0>\;
  LOCKSTEP_Master_Out(278) <= \<const0>\;
  LOCKSTEP_Master_Out(279) <= \<const0>\;
  LOCKSTEP_Master_Out(280) <= \<const0>\;
  LOCKSTEP_Master_Out(281) <= \<const0>\;
  LOCKSTEP_Master_Out(282) <= \<const0>\;
  LOCKSTEP_Master_Out(283) <= \<const0>\;
  LOCKSTEP_Master_Out(284) <= \<const0>\;
  LOCKSTEP_Master_Out(285) <= \<const0>\;
  LOCKSTEP_Master_Out(286) <= \<const0>\;
  LOCKSTEP_Master_Out(287) <= \<const0>\;
  LOCKSTEP_Master_Out(288) <= \<const0>\;
  LOCKSTEP_Master_Out(289) <= \<const0>\;
  LOCKSTEP_Master_Out(290) <= \<const0>\;
  LOCKSTEP_Master_Out(291) <= \<const0>\;
  LOCKSTEP_Master_Out(292) <= \<const0>\;
  LOCKSTEP_Master_Out(293) <= \<const0>\;
  LOCKSTEP_Master_Out(294) <= \<const0>\;
  LOCKSTEP_Master_Out(295) <= \<const0>\;
  LOCKSTEP_Master_Out(296) <= \<const0>\;
  LOCKSTEP_Master_Out(297) <= \<const0>\;
  LOCKSTEP_Master_Out(298) <= \<const0>\;
  LOCKSTEP_Master_Out(299) <= \<const0>\;
  LOCKSTEP_Master_Out(300) <= \<const0>\;
  LOCKSTEP_Master_Out(301) <= \<const0>\;
  LOCKSTEP_Master_Out(302) <= \<const0>\;
  LOCKSTEP_Master_Out(303) <= \<const0>\;
  LOCKSTEP_Master_Out(304) <= \<const0>\;
  LOCKSTEP_Master_Out(305) <= \<const0>\;
  LOCKSTEP_Master_Out(306) <= \<const0>\;
  LOCKSTEP_Master_Out(307) <= \<const0>\;
  LOCKSTEP_Master_Out(308) <= \<const0>\;
  LOCKSTEP_Master_Out(309) <= \<const0>\;
  LOCKSTEP_Master_Out(310) <= \<const0>\;
  LOCKSTEP_Master_Out(311) <= \<const0>\;
  LOCKSTEP_Master_Out(312) <= \<const0>\;
  LOCKSTEP_Master_Out(313) <= \<const0>\;
  LOCKSTEP_Master_Out(314) <= \<const0>\;
  LOCKSTEP_Master_Out(315) <= \<const0>\;
  LOCKSTEP_Master_Out(316) <= \<const0>\;
  LOCKSTEP_Master_Out(317) <= \<const0>\;
  LOCKSTEP_Master_Out(318) <= \<const0>\;
  LOCKSTEP_Master_Out(319) <= \<const0>\;
  LOCKSTEP_Master_Out(320) <= \<const0>\;
  LOCKSTEP_Master_Out(321) <= \<const0>\;
  LOCKSTEP_Master_Out(322) <= \<const0>\;
  LOCKSTEP_Master_Out(323) <= \<const0>\;
  LOCKSTEP_Master_Out(324) <= \<const0>\;
  LOCKSTEP_Master_Out(325) <= \<const0>\;
  LOCKSTEP_Master_Out(326) <= \<const0>\;
  LOCKSTEP_Master_Out(327) <= \<const0>\;
  LOCKSTEP_Master_Out(328) <= \<const0>\;
  LOCKSTEP_Master_Out(329) <= \<const0>\;
  LOCKSTEP_Master_Out(330) <= \<const0>\;
  LOCKSTEP_Master_Out(331) <= \<const0>\;
  LOCKSTEP_Master_Out(332) <= \<const0>\;
  LOCKSTEP_Master_Out(333) <= \<const0>\;
  LOCKSTEP_Master_Out(334) <= \<const0>\;
  LOCKSTEP_Master_Out(335) <= \<const0>\;
  LOCKSTEP_Master_Out(336) <= \<const0>\;
  LOCKSTEP_Master_Out(337) <= \<const0>\;
  LOCKSTEP_Master_Out(338) <= \<const0>\;
  LOCKSTEP_Master_Out(339) <= \<const0>\;
  LOCKSTEP_Master_Out(340) <= \<const0>\;
  LOCKSTEP_Master_Out(341) <= \<const0>\;
  LOCKSTEP_Master_Out(342) <= \<const0>\;
  LOCKSTEP_Master_Out(343) <= \<const0>\;
  LOCKSTEP_Master_Out(344) <= \<const0>\;
  LOCKSTEP_Master_Out(345) <= \<const0>\;
  LOCKSTEP_Master_Out(346) <= \<const0>\;
  LOCKSTEP_Master_Out(347) <= \<const0>\;
  LOCKSTEP_Master_Out(348) <= \<const0>\;
  LOCKSTEP_Master_Out(349) <= \<const0>\;
  LOCKSTEP_Master_Out(350) <= \<const0>\;
  LOCKSTEP_Master_Out(351) <= \<const0>\;
  LOCKSTEP_Master_Out(352) <= \<const0>\;
  LOCKSTEP_Master_Out(353) <= \<const0>\;
  LOCKSTEP_Master_Out(354) <= \<const0>\;
  LOCKSTEP_Master_Out(355) <= \<const0>\;
  LOCKSTEP_Master_Out(356) <= \<const0>\;
  LOCKSTEP_Master_Out(357) <= \<const0>\;
  LOCKSTEP_Master_Out(358) <= \<const0>\;
  LOCKSTEP_Master_Out(359) <= \<const0>\;
  LOCKSTEP_Master_Out(360) <= \<const0>\;
  LOCKSTEP_Master_Out(361) <= \<const0>\;
  LOCKSTEP_Master_Out(362) <= \<const0>\;
  LOCKSTEP_Master_Out(363) <= \<const0>\;
  LOCKSTEP_Master_Out(364) <= \<const0>\;
  LOCKSTEP_Master_Out(365) <= \<const0>\;
  LOCKSTEP_Master_Out(366) <= \<const0>\;
  LOCKSTEP_Master_Out(367) <= \<const0>\;
  LOCKSTEP_Master_Out(368) <= \<const0>\;
  LOCKSTEP_Master_Out(369) <= \<const0>\;
  LOCKSTEP_Master_Out(370) <= \<const0>\;
  LOCKSTEP_Master_Out(371) <= \<const0>\;
  LOCKSTEP_Master_Out(372) <= \<const0>\;
  LOCKSTEP_Master_Out(373) <= \<const0>\;
  LOCKSTEP_Master_Out(374) <= \<const0>\;
  LOCKSTEP_Master_Out(375) <= \<const0>\;
  LOCKSTEP_Master_Out(376) <= \<const0>\;
  LOCKSTEP_Master_Out(377) <= \<const0>\;
  LOCKSTEP_Master_Out(378) <= \<const0>\;
  LOCKSTEP_Master_Out(379) <= \<const0>\;
  LOCKSTEP_Master_Out(380) <= \<const0>\;
  LOCKSTEP_Master_Out(381) <= \<const0>\;
  LOCKSTEP_Master_Out(382) <= \<const0>\;
  LOCKSTEP_Master_Out(383) <= \<const0>\;
  LOCKSTEP_Master_Out(384) <= \<const0>\;
  LOCKSTEP_Master_Out(385) <= \<const0>\;
  LOCKSTEP_Master_Out(386) <= \<const0>\;
  LOCKSTEP_Master_Out(387) <= \<const0>\;
  LOCKSTEP_Master_Out(388) <= \<const0>\;
  LOCKSTEP_Master_Out(389) <= \<const0>\;
  LOCKSTEP_Master_Out(390) <= \<const0>\;
  LOCKSTEP_Master_Out(391) <= \<const0>\;
  LOCKSTEP_Master_Out(392) <= \<const0>\;
  LOCKSTEP_Master_Out(393) <= \<const0>\;
  LOCKSTEP_Master_Out(394) <= \<const0>\;
  LOCKSTEP_Master_Out(395) <= \<const0>\;
  LOCKSTEP_Master_Out(396) <= \<const0>\;
  LOCKSTEP_Master_Out(397) <= \<const0>\;
  LOCKSTEP_Master_Out(398) <= \<const0>\;
  LOCKSTEP_Master_Out(399) <= \<const0>\;
  LOCKSTEP_Master_Out(400) <= \<const0>\;
  LOCKSTEP_Master_Out(401) <= \<const0>\;
  LOCKSTEP_Master_Out(402) <= \<const0>\;
  LOCKSTEP_Master_Out(403) <= \<const0>\;
  LOCKSTEP_Master_Out(404) <= \<const0>\;
  LOCKSTEP_Master_Out(405) <= \<const0>\;
  LOCKSTEP_Master_Out(406) <= \<const0>\;
  LOCKSTEP_Master_Out(407) <= \<const0>\;
  LOCKSTEP_Master_Out(408) <= \<const0>\;
  LOCKSTEP_Master_Out(409) <= \<const0>\;
  LOCKSTEP_Master_Out(410) <= \<const0>\;
  LOCKSTEP_Master_Out(411) <= \<const0>\;
  LOCKSTEP_Master_Out(412) <= \<const0>\;
  LOCKSTEP_Master_Out(413) <= \<const0>\;
  LOCKSTEP_Master_Out(414) <= \<const0>\;
  LOCKSTEP_Master_Out(415) <= \<const0>\;
  LOCKSTEP_Master_Out(416) <= \<const0>\;
  LOCKSTEP_Master_Out(417) <= \<const0>\;
  LOCKSTEP_Master_Out(418) <= \<const0>\;
  LOCKSTEP_Master_Out(419) <= \<const0>\;
  LOCKSTEP_Master_Out(420) <= \<const0>\;
  LOCKSTEP_Master_Out(421) <= \<const0>\;
  LOCKSTEP_Master_Out(422) <= \<const0>\;
  LOCKSTEP_Master_Out(423) <= \<const0>\;
  LOCKSTEP_Master_Out(424) <= \<const0>\;
  LOCKSTEP_Master_Out(425) <= \<const0>\;
  LOCKSTEP_Master_Out(426) <= \<const0>\;
  LOCKSTEP_Master_Out(427) <= \<const0>\;
  LOCKSTEP_Master_Out(428) <= \<const0>\;
  LOCKSTEP_Master_Out(429) <= \<const0>\;
  LOCKSTEP_Master_Out(430) <= \<const0>\;
  LOCKSTEP_Master_Out(431) <= \<const0>\;
  LOCKSTEP_Master_Out(432) <= \<const0>\;
  LOCKSTEP_Master_Out(433) <= \<const0>\;
  LOCKSTEP_Master_Out(434) <= \<const0>\;
  LOCKSTEP_Master_Out(435) <= \<const0>\;
  LOCKSTEP_Master_Out(436) <= \<const0>\;
  LOCKSTEP_Master_Out(437) <= \<const0>\;
  LOCKSTEP_Master_Out(438) <= \<const0>\;
  LOCKSTEP_Master_Out(439) <= \<const0>\;
  LOCKSTEP_Master_Out(440) <= \<const0>\;
  LOCKSTEP_Master_Out(441) <= \<const0>\;
  LOCKSTEP_Master_Out(442) <= \<const0>\;
  LOCKSTEP_Master_Out(443) <= \<const0>\;
  LOCKSTEP_Master_Out(444) <= \<const0>\;
  LOCKSTEP_Master_Out(445) <= \<const0>\;
  LOCKSTEP_Master_Out(446) <= \<const0>\;
  LOCKSTEP_Master_Out(447) <= \<const0>\;
  LOCKSTEP_Master_Out(448) <= \<const0>\;
  LOCKSTEP_Master_Out(449) <= \<const0>\;
  LOCKSTEP_Master_Out(450) <= \<const0>\;
  LOCKSTEP_Master_Out(451) <= \<const0>\;
  LOCKSTEP_Master_Out(452) <= \<const0>\;
  LOCKSTEP_Master_Out(453) <= \<const0>\;
  LOCKSTEP_Master_Out(454) <= \<const0>\;
  LOCKSTEP_Master_Out(455) <= \<const0>\;
  LOCKSTEP_Master_Out(456) <= \<const0>\;
  LOCKSTEP_Master_Out(457) <= \<const0>\;
  LOCKSTEP_Master_Out(458) <= \<const0>\;
  LOCKSTEP_Master_Out(459) <= \<const0>\;
  LOCKSTEP_Master_Out(460) <= \<const0>\;
  LOCKSTEP_Master_Out(461) <= \<const0>\;
  LOCKSTEP_Master_Out(462) <= \<const0>\;
  LOCKSTEP_Master_Out(463) <= \<const0>\;
  LOCKSTEP_Master_Out(464) <= \<const0>\;
  LOCKSTEP_Master_Out(465) <= \<const0>\;
  LOCKSTEP_Master_Out(466) <= \<const0>\;
  LOCKSTEP_Master_Out(467) <= \<const0>\;
  LOCKSTEP_Master_Out(468) <= \<const0>\;
  LOCKSTEP_Master_Out(469) <= \<const0>\;
  LOCKSTEP_Master_Out(470) <= \<const0>\;
  LOCKSTEP_Master_Out(471) <= \<const0>\;
  LOCKSTEP_Master_Out(472) <= \<const0>\;
  LOCKSTEP_Master_Out(473) <= \<const0>\;
  LOCKSTEP_Master_Out(474) <= \<const0>\;
  LOCKSTEP_Master_Out(475) <= \<const0>\;
  LOCKSTEP_Master_Out(476) <= \<const0>\;
  LOCKSTEP_Master_Out(477) <= \<const0>\;
  LOCKSTEP_Master_Out(478) <= \<const0>\;
  LOCKSTEP_Master_Out(479) <= \<const0>\;
  LOCKSTEP_Master_Out(480) <= \<const0>\;
  LOCKSTEP_Master_Out(481) <= \<const0>\;
  LOCKSTEP_Master_Out(482) <= \<const0>\;
  LOCKSTEP_Master_Out(483) <= \<const0>\;
  LOCKSTEP_Master_Out(484) <= \<const0>\;
  LOCKSTEP_Master_Out(485) <= \<const0>\;
  LOCKSTEP_Master_Out(486) <= \<const0>\;
  LOCKSTEP_Master_Out(487) <= \<const0>\;
  LOCKSTEP_Master_Out(488) <= \<const0>\;
  LOCKSTEP_Master_Out(489) <= \<const0>\;
  LOCKSTEP_Master_Out(490) <= \<const0>\;
  LOCKSTEP_Master_Out(491) <= \<const0>\;
  LOCKSTEP_Master_Out(492) <= \<const0>\;
  LOCKSTEP_Master_Out(493) <= \<const0>\;
  LOCKSTEP_Master_Out(494) <= \<const0>\;
  LOCKSTEP_Master_Out(495) <= \<const0>\;
  LOCKSTEP_Master_Out(496) <= \<const0>\;
  LOCKSTEP_Master_Out(497) <= \<const0>\;
  LOCKSTEP_Master_Out(498) <= \<const0>\;
  LOCKSTEP_Master_Out(499) <= \<const0>\;
  LOCKSTEP_Master_Out(500) <= \<const0>\;
  LOCKSTEP_Master_Out(501) <= \<const0>\;
  LOCKSTEP_Master_Out(502) <= \<const0>\;
  LOCKSTEP_Master_Out(503) <= \<const0>\;
  LOCKSTEP_Master_Out(504) <= \<const0>\;
  LOCKSTEP_Master_Out(505) <= \<const0>\;
  LOCKSTEP_Master_Out(506) <= \<const0>\;
  LOCKSTEP_Master_Out(507) <= \<const0>\;
  LOCKSTEP_Master_Out(508) <= \<const0>\;
  LOCKSTEP_Master_Out(509) <= \<const0>\;
  LOCKSTEP_Master_Out(510) <= \<const0>\;
  LOCKSTEP_Master_Out(511) <= \<const0>\;
  LOCKSTEP_Master_Out(512) <= \<const0>\;
  LOCKSTEP_Master_Out(513) <= \<const0>\;
  LOCKSTEP_Master_Out(514) <= \<const0>\;
  LOCKSTEP_Master_Out(515) <= \<const0>\;
  LOCKSTEP_Master_Out(516) <= \<const0>\;
  LOCKSTEP_Master_Out(517) <= \<const0>\;
  LOCKSTEP_Master_Out(518) <= \<const0>\;
  LOCKSTEP_Master_Out(519) <= \<const0>\;
  LOCKSTEP_Master_Out(520) <= \<const0>\;
  LOCKSTEP_Master_Out(521) <= \<const0>\;
  LOCKSTEP_Master_Out(522) <= \<const0>\;
  LOCKSTEP_Master_Out(523) <= \<const0>\;
  LOCKSTEP_Master_Out(524) <= \<const0>\;
  LOCKSTEP_Master_Out(525) <= \<const0>\;
  LOCKSTEP_Master_Out(526) <= \<const0>\;
  LOCKSTEP_Master_Out(527) <= \<const0>\;
  LOCKSTEP_Master_Out(528) <= \<const0>\;
  LOCKSTEP_Master_Out(529) <= \<const0>\;
  LOCKSTEP_Master_Out(530) <= \<const0>\;
  LOCKSTEP_Master_Out(531) <= \<const0>\;
  LOCKSTEP_Master_Out(532) <= \<const0>\;
  LOCKSTEP_Master_Out(533) <= \<const0>\;
  LOCKSTEP_Master_Out(534) <= \<const0>\;
  LOCKSTEP_Master_Out(535) <= \<const0>\;
  LOCKSTEP_Master_Out(536) <= \<const0>\;
  LOCKSTEP_Master_Out(537) <= \<const0>\;
  LOCKSTEP_Master_Out(538) <= \<const0>\;
  LOCKSTEP_Master_Out(539) <= \<const0>\;
  LOCKSTEP_Master_Out(540) <= \<const0>\;
  LOCKSTEP_Master_Out(541) <= \<const0>\;
  LOCKSTEP_Master_Out(542) <= \<const0>\;
  LOCKSTEP_Master_Out(543) <= \<const0>\;
  LOCKSTEP_Master_Out(544) <= \<const0>\;
  LOCKSTEP_Master_Out(545) <= \<const0>\;
  LOCKSTEP_Master_Out(546) <= \<const0>\;
  LOCKSTEP_Master_Out(547) <= \<const0>\;
  LOCKSTEP_Master_Out(548) <= \<const0>\;
  LOCKSTEP_Master_Out(549) <= \<const0>\;
  LOCKSTEP_Master_Out(550) <= \<const0>\;
  LOCKSTEP_Master_Out(551) <= \<const0>\;
  LOCKSTEP_Master_Out(552) <= \<const0>\;
  LOCKSTEP_Master_Out(553) <= \<const0>\;
  LOCKSTEP_Master_Out(554) <= \<const0>\;
  LOCKSTEP_Master_Out(555) <= \<const0>\;
  LOCKSTEP_Master_Out(556) <= \<const0>\;
  LOCKSTEP_Master_Out(557) <= \<const0>\;
  LOCKSTEP_Master_Out(558) <= \<const0>\;
  LOCKSTEP_Master_Out(559) <= \<const0>\;
  LOCKSTEP_Master_Out(560) <= \<const0>\;
  LOCKSTEP_Master_Out(561) <= \<const0>\;
  LOCKSTEP_Master_Out(562) <= \<const0>\;
  LOCKSTEP_Master_Out(563) <= \<const0>\;
  LOCKSTEP_Master_Out(564) <= \<const0>\;
  LOCKSTEP_Master_Out(565) <= \<const0>\;
  LOCKSTEP_Master_Out(566) <= \<const0>\;
  LOCKSTEP_Master_Out(567) <= \<const0>\;
  LOCKSTEP_Master_Out(568) <= \<const0>\;
  LOCKSTEP_Master_Out(569) <= \<const0>\;
  LOCKSTEP_Master_Out(570) <= \<const0>\;
  LOCKSTEP_Master_Out(571) <= \<const0>\;
  LOCKSTEP_Master_Out(572) <= \<const0>\;
  LOCKSTEP_Master_Out(573) <= \<const0>\;
  LOCKSTEP_Master_Out(574) <= \<const0>\;
  LOCKSTEP_Master_Out(575) <= \<const0>\;
  LOCKSTEP_Master_Out(576) <= \<const0>\;
  LOCKSTEP_Master_Out(577) <= \<const0>\;
  LOCKSTEP_Master_Out(578) <= \<const0>\;
  LOCKSTEP_Master_Out(579) <= \<const0>\;
  LOCKSTEP_Master_Out(580) <= \<const0>\;
  LOCKSTEP_Master_Out(581) <= \<const0>\;
  LOCKSTEP_Master_Out(582) <= \<const0>\;
  LOCKSTEP_Master_Out(583) <= \<const0>\;
  LOCKSTEP_Master_Out(584) <= \<const0>\;
  LOCKSTEP_Master_Out(585) <= \<const0>\;
  LOCKSTEP_Master_Out(586) <= \<const0>\;
  LOCKSTEP_Master_Out(587) <= \<const0>\;
  LOCKSTEP_Master_Out(588) <= \<const0>\;
  LOCKSTEP_Master_Out(589) <= \<const0>\;
  LOCKSTEP_Master_Out(590) <= \<const0>\;
  LOCKSTEP_Master_Out(591) <= \<const0>\;
  LOCKSTEP_Master_Out(592) <= \<const0>\;
  LOCKSTEP_Master_Out(593) <= \<const0>\;
  LOCKSTEP_Master_Out(594) <= \<const0>\;
  LOCKSTEP_Master_Out(595) <= \<const0>\;
  LOCKSTEP_Master_Out(596) <= \<const0>\;
  LOCKSTEP_Master_Out(597) <= \<const0>\;
  LOCKSTEP_Master_Out(598) <= \<const0>\;
  LOCKSTEP_Master_Out(599) <= \<const0>\;
  LOCKSTEP_Master_Out(600) <= \<const0>\;
  LOCKSTEP_Master_Out(601) <= \<const0>\;
  LOCKSTEP_Master_Out(602) <= \<const0>\;
  LOCKSTEP_Master_Out(603) <= \<const0>\;
  LOCKSTEP_Master_Out(604) <= \<const0>\;
  LOCKSTEP_Master_Out(605) <= \<const0>\;
  LOCKSTEP_Master_Out(606) <= \<const0>\;
  LOCKSTEP_Master_Out(607) <= \<const0>\;
  LOCKSTEP_Master_Out(608) <= \<const0>\;
  LOCKSTEP_Master_Out(609) <= \<const0>\;
  LOCKSTEP_Master_Out(610) <= \<const0>\;
  LOCKSTEP_Master_Out(611) <= \<const0>\;
  LOCKSTEP_Master_Out(612) <= \<const0>\;
  LOCKSTEP_Master_Out(613) <= \<const0>\;
  LOCKSTEP_Master_Out(614) <= \<const0>\;
  LOCKSTEP_Master_Out(615) <= \<const0>\;
  LOCKSTEP_Master_Out(616) <= \<const0>\;
  LOCKSTEP_Master_Out(617) <= \<const0>\;
  LOCKSTEP_Master_Out(618) <= \<const0>\;
  LOCKSTEP_Master_Out(619) <= \<const0>\;
  LOCKSTEP_Master_Out(620) <= \<const0>\;
  LOCKSTEP_Master_Out(621) <= \<const0>\;
  LOCKSTEP_Master_Out(622) <= \<const0>\;
  LOCKSTEP_Master_Out(623) <= \<const0>\;
  LOCKSTEP_Master_Out(624) <= \<const0>\;
  LOCKSTEP_Master_Out(625) <= \<const0>\;
  LOCKSTEP_Master_Out(626) <= \<const0>\;
  LOCKSTEP_Master_Out(627) <= \<const0>\;
  LOCKSTEP_Master_Out(628) <= \<const0>\;
  LOCKSTEP_Master_Out(629) <= \<const0>\;
  LOCKSTEP_Master_Out(630) <= \<const0>\;
  LOCKSTEP_Master_Out(631) <= \<const0>\;
  LOCKSTEP_Master_Out(632) <= \<const0>\;
  LOCKSTEP_Master_Out(633) <= \<const0>\;
  LOCKSTEP_Master_Out(634) <= \<const0>\;
  LOCKSTEP_Master_Out(635) <= \<const0>\;
  LOCKSTEP_Master_Out(636) <= \<const0>\;
  LOCKSTEP_Master_Out(637) <= \<const0>\;
  LOCKSTEP_Master_Out(638) <= \<const0>\;
  LOCKSTEP_Master_Out(639) <= \<const0>\;
  LOCKSTEP_Master_Out(640) <= \<const0>\;
  LOCKSTEP_Master_Out(641) <= \<const0>\;
  LOCKSTEP_Master_Out(642) <= \<const0>\;
  LOCKSTEP_Master_Out(643) <= \<const0>\;
  LOCKSTEP_Master_Out(644) <= \<const0>\;
  LOCKSTEP_Master_Out(645) <= \<const0>\;
  LOCKSTEP_Master_Out(646) <= \<const0>\;
  LOCKSTEP_Master_Out(647) <= \<const0>\;
  LOCKSTEP_Master_Out(648) <= \<const0>\;
  LOCKSTEP_Master_Out(649) <= \<const0>\;
  LOCKSTEP_Master_Out(650) <= \<const0>\;
  LOCKSTEP_Master_Out(651) <= \<const0>\;
  LOCKSTEP_Master_Out(652) <= \<const0>\;
  LOCKSTEP_Master_Out(653) <= \<const0>\;
  LOCKSTEP_Master_Out(654) <= \<const0>\;
  LOCKSTEP_Master_Out(655) <= \<const0>\;
  LOCKSTEP_Master_Out(656) <= \<const0>\;
  LOCKSTEP_Master_Out(657) <= \<const0>\;
  LOCKSTEP_Master_Out(658) <= \<const0>\;
  LOCKSTEP_Master_Out(659) <= \<const0>\;
  LOCKSTEP_Master_Out(660) <= \<const0>\;
  LOCKSTEP_Master_Out(661) <= \<const0>\;
  LOCKSTEP_Master_Out(662) <= \<const0>\;
  LOCKSTEP_Master_Out(663) <= \<const0>\;
  LOCKSTEP_Master_Out(664) <= \<const0>\;
  LOCKSTEP_Master_Out(665) <= \<const0>\;
  LOCKSTEP_Master_Out(666) <= \<const0>\;
  LOCKSTEP_Master_Out(667) <= \<const0>\;
  LOCKSTEP_Master_Out(668) <= \<const0>\;
  LOCKSTEP_Master_Out(669) <= \<const0>\;
  LOCKSTEP_Master_Out(670) <= \<const0>\;
  LOCKSTEP_Master_Out(671) <= \<const0>\;
  LOCKSTEP_Master_Out(672) <= \<const0>\;
  LOCKSTEP_Master_Out(673) <= \<const0>\;
  LOCKSTEP_Master_Out(674) <= \<const0>\;
  LOCKSTEP_Master_Out(675) <= \<const0>\;
  LOCKSTEP_Master_Out(676) <= \<const0>\;
  LOCKSTEP_Master_Out(677) <= \<const0>\;
  LOCKSTEP_Master_Out(678) <= \<const0>\;
  LOCKSTEP_Master_Out(679) <= \<const0>\;
  LOCKSTEP_Master_Out(680) <= \<const0>\;
  LOCKSTEP_Master_Out(681) <= \<const0>\;
  LOCKSTEP_Master_Out(682) <= \<const0>\;
  LOCKSTEP_Master_Out(683) <= \<const0>\;
  LOCKSTEP_Master_Out(684) <= \<const0>\;
  LOCKSTEP_Master_Out(685) <= \<const0>\;
  LOCKSTEP_Master_Out(686) <= \<const0>\;
  LOCKSTEP_Master_Out(687) <= \<const0>\;
  LOCKSTEP_Master_Out(688) <= \<const0>\;
  LOCKSTEP_Master_Out(689) <= \<const0>\;
  LOCKSTEP_Master_Out(690) <= \<const0>\;
  LOCKSTEP_Master_Out(691) <= \<const0>\;
  LOCKSTEP_Master_Out(692) <= \<const0>\;
  LOCKSTEP_Master_Out(693) <= \<const0>\;
  LOCKSTEP_Master_Out(694) <= \<const0>\;
  LOCKSTEP_Master_Out(695) <= \<const0>\;
  LOCKSTEP_Master_Out(696) <= \<const0>\;
  LOCKSTEP_Master_Out(697) <= \<const0>\;
  LOCKSTEP_Master_Out(698) <= \<const0>\;
  LOCKSTEP_Master_Out(699) <= \<const0>\;
  LOCKSTEP_Master_Out(700) <= \<const0>\;
  LOCKSTEP_Master_Out(701) <= \<const0>\;
  LOCKSTEP_Master_Out(702) <= \<const0>\;
  LOCKSTEP_Master_Out(703) <= \<const0>\;
  LOCKSTEP_Master_Out(704) <= \<const0>\;
  LOCKSTEP_Master_Out(705) <= \<const0>\;
  LOCKSTEP_Master_Out(706) <= \<const0>\;
  LOCKSTEP_Master_Out(707) <= \<const0>\;
  LOCKSTEP_Master_Out(708) <= \<const0>\;
  LOCKSTEP_Master_Out(709) <= \<const0>\;
  LOCKSTEP_Master_Out(710) <= \<const0>\;
  LOCKSTEP_Master_Out(711) <= \<const0>\;
  LOCKSTEP_Master_Out(712) <= \<const0>\;
  LOCKSTEP_Master_Out(713) <= \<const0>\;
  LOCKSTEP_Master_Out(714) <= \<const0>\;
  LOCKSTEP_Master_Out(715) <= \<const0>\;
  LOCKSTEP_Master_Out(716) <= \<const0>\;
  LOCKSTEP_Master_Out(717) <= \<const0>\;
  LOCKSTEP_Master_Out(718) <= \<const0>\;
  LOCKSTEP_Master_Out(719) <= \<const0>\;
  LOCKSTEP_Master_Out(720) <= \<const0>\;
  LOCKSTEP_Master_Out(721) <= \<const0>\;
  LOCKSTEP_Master_Out(722) <= \<const0>\;
  LOCKSTEP_Master_Out(723) <= \<const0>\;
  LOCKSTEP_Master_Out(724) <= \<const0>\;
  LOCKSTEP_Master_Out(725) <= \<const0>\;
  LOCKSTEP_Master_Out(726) <= \<const0>\;
  LOCKSTEP_Master_Out(727) <= \<const0>\;
  LOCKSTEP_Master_Out(728) <= \<const0>\;
  LOCKSTEP_Master_Out(729) <= \<const0>\;
  LOCKSTEP_Master_Out(730) <= \<const0>\;
  LOCKSTEP_Master_Out(731) <= \<const0>\;
  LOCKSTEP_Master_Out(732) <= \<const0>\;
  LOCKSTEP_Master_Out(733) <= \<const0>\;
  LOCKSTEP_Master_Out(734) <= \<const0>\;
  LOCKSTEP_Master_Out(735) <= \<const0>\;
  LOCKSTEP_Master_Out(736) <= \<const0>\;
  LOCKSTEP_Master_Out(737) <= \<const0>\;
  LOCKSTEP_Master_Out(738) <= \<const0>\;
  LOCKSTEP_Master_Out(739) <= \<const0>\;
  LOCKSTEP_Master_Out(740) <= \<const0>\;
  LOCKSTEP_Master_Out(741) <= \<const0>\;
  LOCKSTEP_Master_Out(742) <= \<const0>\;
  LOCKSTEP_Master_Out(743) <= \<const0>\;
  LOCKSTEP_Master_Out(744) <= \<const0>\;
  LOCKSTEP_Master_Out(745) <= \<const0>\;
  LOCKSTEP_Master_Out(746) <= \<const0>\;
  LOCKSTEP_Master_Out(747) <= \<const0>\;
  LOCKSTEP_Master_Out(748) <= \<const0>\;
  LOCKSTEP_Master_Out(749) <= \<const0>\;
  LOCKSTEP_Master_Out(750) <= \<const0>\;
  LOCKSTEP_Master_Out(751) <= \<const0>\;
  LOCKSTEP_Master_Out(752) <= \<const0>\;
  LOCKSTEP_Master_Out(753) <= \<const0>\;
  LOCKSTEP_Master_Out(754) <= \<const0>\;
  LOCKSTEP_Master_Out(755) <= \<const0>\;
  LOCKSTEP_Master_Out(756) <= \<const0>\;
  LOCKSTEP_Master_Out(757) <= \<const0>\;
  LOCKSTEP_Master_Out(758) <= \<const0>\;
  LOCKSTEP_Master_Out(759) <= \<const0>\;
  LOCKSTEP_Master_Out(760) <= \<const0>\;
  LOCKSTEP_Master_Out(761) <= \<const0>\;
  LOCKSTEP_Master_Out(762) <= \<const0>\;
  LOCKSTEP_Master_Out(763) <= \<const0>\;
  LOCKSTEP_Master_Out(764) <= \<const0>\;
  LOCKSTEP_Master_Out(765) <= \<const0>\;
  LOCKSTEP_Master_Out(766) <= \<const0>\;
  LOCKSTEP_Master_Out(767) <= \<const0>\;
  LOCKSTEP_Master_Out(768) <= \<const0>\;
  LOCKSTEP_Master_Out(769) <= \<const0>\;
  LOCKSTEP_Master_Out(770) <= \<const0>\;
  LOCKSTEP_Master_Out(771) <= \<const0>\;
  LOCKSTEP_Master_Out(772) <= \<const0>\;
  LOCKSTEP_Master_Out(773) <= \<const0>\;
  LOCKSTEP_Master_Out(774) <= \<const0>\;
  LOCKSTEP_Master_Out(775) <= \<const0>\;
  LOCKSTEP_Master_Out(776) <= \<const0>\;
  LOCKSTEP_Master_Out(777) <= \<const0>\;
  LOCKSTEP_Master_Out(778) <= \<const0>\;
  LOCKSTEP_Master_Out(779) <= \<const0>\;
  LOCKSTEP_Master_Out(780) <= \<const0>\;
  LOCKSTEP_Master_Out(781) <= \<const0>\;
  LOCKSTEP_Master_Out(782) <= \<const0>\;
  LOCKSTEP_Master_Out(783) <= \<const0>\;
  LOCKSTEP_Master_Out(784) <= \<const0>\;
  LOCKSTEP_Master_Out(785) <= \<const0>\;
  LOCKSTEP_Master_Out(786) <= \<const0>\;
  LOCKSTEP_Master_Out(787) <= \<const0>\;
  LOCKSTEP_Master_Out(788) <= \<const0>\;
  LOCKSTEP_Master_Out(789) <= \<const0>\;
  LOCKSTEP_Master_Out(790) <= \<const0>\;
  LOCKSTEP_Master_Out(791) <= \<const0>\;
  LOCKSTEP_Master_Out(792) <= \<const0>\;
  LOCKSTEP_Master_Out(793) <= \<const0>\;
  LOCKSTEP_Master_Out(794) <= \<const0>\;
  LOCKSTEP_Master_Out(795) <= \<const0>\;
  LOCKSTEP_Master_Out(796) <= \<const0>\;
  LOCKSTEP_Master_Out(797) <= \<const0>\;
  LOCKSTEP_Master_Out(798) <= \<const0>\;
  LOCKSTEP_Master_Out(799) <= \<const0>\;
  LOCKSTEP_Master_Out(800) <= \<const0>\;
  LOCKSTEP_Master_Out(801) <= \<const0>\;
  LOCKSTEP_Master_Out(802) <= \<const0>\;
  LOCKSTEP_Master_Out(803) <= \<const0>\;
  LOCKSTEP_Master_Out(804) <= \<const0>\;
  LOCKSTEP_Master_Out(805) <= \<const0>\;
  LOCKSTEP_Master_Out(806) <= \<const0>\;
  LOCKSTEP_Master_Out(807) <= \<const0>\;
  LOCKSTEP_Master_Out(808) <= \<const0>\;
  LOCKSTEP_Master_Out(809) <= \<const0>\;
  LOCKSTEP_Master_Out(810) <= \<const0>\;
  LOCKSTEP_Master_Out(811) <= \<const0>\;
  LOCKSTEP_Master_Out(812) <= \<const0>\;
  LOCKSTEP_Master_Out(813) <= \<const0>\;
  LOCKSTEP_Master_Out(814) <= \<const0>\;
  LOCKSTEP_Master_Out(815) <= \<const0>\;
  LOCKSTEP_Master_Out(816) <= \<const0>\;
  LOCKSTEP_Master_Out(817) <= \<const0>\;
  LOCKSTEP_Master_Out(818) <= \<const0>\;
  LOCKSTEP_Master_Out(819) <= \<const0>\;
  LOCKSTEP_Master_Out(820) <= \<const0>\;
  LOCKSTEP_Master_Out(821) <= \<const0>\;
  LOCKSTEP_Master_Out(822) <= \<const0>\;
  LOCKSTEP_Master_Out(823) <= \<const0>\;
  LOCKSTEP_Master_Out(824) <= \<const0>\;
  LOCKSTEP_Master_Out(825) <= \<const0>\;
  LOCKSTEP_Master_Out(826) <= \<const0>\;
  LOCKSTEP_Master_Out(827) <= \<const0>\;
  LOCKSTEP_Master_Out(828) <= \<const0>\;
  LOCKSTEP_Master_Out(829) <= \<const0>\;
  LOCKSTEP_Master_Out(830) <= \<const0>\;
  LOCKSTEP_Master_Out(831) <= \<const0>\;
  LOCKSTEP_Master_Out(832) <= \<const0>\;
  LOCKSTEP_Master_Out(833) <= \<const0>\;
  LOCKSTEP_Master_Out(834) <= \<const0>\;
  LOCKSTEP_Master_Out(835) <= \<const0>\;
  LOCKSTEP_Master_Out(836) <= \<const0>\;
  LOCKSTEP_Master_Out(837) <= \<const0>\;
  LOCKSTEP_Master_Out(838) <= \<const0>\;
  LOCKSTEP_Master_Out(839) <= \<const0>\;
  LOCKSTEP_Master_Out(840) <= \<const0>\;
  LOCKSTEP_Master_Out(841) <= \<const0>\;
  LOCKSTEP_Master_Out(842) <= \<const0>\;
  LOCKSTEP_Master_Out(843) <= \<const0>\;
  LOCKSTEP_Master_Out(844) <= \<const0>\;
  LOCKSTEP_Master_Out(845) <= \<const0>\;
  LOCKSTEP_Master_Out(846) <= \<const0>\;
  LOCKSTEP_Master_Out(847) <= \<const0>\;
  LOCKSTEP_Master_Out(848) <= \<const0>\;
  LOCKSTEP_Master_Out(849) <= \<const0>\;
  LOCKSTEP_Master_Out(850) <= \<const0>\;
  LOCKSTEP_Master_Out(851) <= \<const0>\;
  LOCKSTEP_Master_Out(852) <= \<const0>\;
  LOCKSTEP_Master_Out(853) <= \<const0>\;
  LOCKSTEP_Master_Out(854) <= \<const0>\;
  LOCKSTEP_Master_Out(855) <= \<const0>\;
  LOCKSTEP_Master_Out(856) <= \<const0>\;
  LOCKSTEP_Master_Out(857) <= \<const0>\;
  LOCKSTEP_Master_Out(858) <= \<const0>\;
  LOCKSTEP_Master_Out(859) <= \<const0>\;
  LOCKSTEP_Master_Out(860) <= \<const0>\;
  LOCKSTEP_Master_Out(861) <= \<const0>\;
  LOCKSTEP_Master_Out(862) <= \<const0>\;
  LOCKSTEP_Master_Out(863) <= \<const0>\;
  LOCKSTEP_Master_Out(864) <= \<const0>\;
  LOCKSTEP_Master_Out(865) <= \<const0>\;
  LOCKSTEP_Master_Out(866) <= \<const0>\;
  LOCKSTEP_Master_Out(867) <= \<const0>\;
  LOCKSTEP_Master_Out(868) <= \<const0>\;
  LOCKSTEP_Master_Out(869) <= \<const0>\;
  LOCKSTEP_Master_Out(870) <= \<const0>\;
  LOCKSTEP_Master_Out(871) <= \<const0>\;
  LOCKSTEP_Master_Out(872) <= \<const0>\;
  LOCKSTEP_Master_Out(873) <= \<const0>\;
  LOCKSTEP_Master_Out(874) <= \<const0>\;
  LOCKSTEP_Master_Out(875) <= \<const0>\;
  LOCKSTEP_Master_Out(876) <= \<const0>\;
  LOCKSTEP_Master_Out(877) <= \<const0>\;
  LOCKSTEP_Master_Out(878) <= \<const0>\;
  LOCKSTEP_Master_Out(879) <= \<const0>\;
  LOCKSTEP_Master_Out(880) <= \<const0>\;
  LOCKSTEP_Master_Out(881) <= \<const0>\;
  LOCKSTEP_Master_Out(882) <= \<const0>\;
  LOCKSTEP_Master_Out(883) <= \<const0>\;
  LOCKSTEP_Master_Out(884) <= \<const0>\;
  LOCKSTEP_Master_Out(885) <= \<const0>\;
  LOCKSTEP_Master_Out(886) <= \<const0>\;
  LOCKSTEP_Master_Out(887) <= \<const0>\;
  LOCKSTEP_Master_Out(888) <= \<const0>\;
  LOCKSTEP_Master_Out(889) <= \<const0>\;
  LOCKSTEP_Master_Out(890) <= \<const0>\;
  LOCKSTEP_Master_Out(891) <= \<const0>\;
  LOCKSTEP_Master_Out(892) <= \<const0>\;
  LOCKSTEP_Master_Out(893) <= \<const0>\;
  LOCKSTEP_Master_Out(894) <= \<const0>\;
  LOCKSTEP_Master_Out(895) <= \<const0>\;
  LOCKSTEP_Master_Out(896) <= \<const0>\;
  LOCKSTEP_Master_Out(897) <= \<const0>\;
  LOCKSTEP_Master_Out(898) <= \<const0>\;
  LOCKSTEP_Master_Out(899) <= \<const0>\;
  LOCKSTEP_Master_Out(900) <= \<const0>\;
  LOCKSTEP_Master_Out(901) <= \<const0>\;
  LOCKSTEP_Master_Out(902) <= \<const0>\;
  LOCKSTEP_Master_Out(903) <= \<const0>\;
  LOCKSTEP_Master_Out(904) <= \<const0>\;
  LOCKSTEP_Master_Out(905) <= \<const0>\;
  LOCKSTEP_Master_Out(906) <= \<const0>\;
  LOCKSTEP_Master_Out(907) <= \<const0>\;
  LOCKSTEP_Master_Out(908) <= \<const0>\;
  LOCKSTEP_Master_Out(909) <= \<const0>\;
  LOCKSTEP_Master_Out(910) <= \<const0>\;
  LOCKSTEP_Master_Out(911) <= \<const0>\;
  LOCKSTEP_Master_Out(912) <= \<const0>\;
  LOCKSTEP_Master_Out(913) <= \<const0>\;
  LOCKSTEP_Master_Out(914) <= \<const0>\;
  LOCKSTEP_Master_Out(915) <= \<const0>\;
  LOCKSTEP_Master_Out(916) <= \<const0>\;
  LOCKSTEP_Master_Out(917) <= \<const0>\;
  LOCKSTEP_Master_Out(918) <= \<const0>\;
  LOCKSTEP_Master_Out(919) <= \<const0>\;
  LOCKSTEP_Master_Out(920) <= \<const0>\;
  LOCKSTEP_Master_Out(921) <= \<const0>\;
  LOCKSTEP_Master_Out(922) <= \<const0>\;
  LOCKSTEP_Master_Out(923) <= \<const0>\;
  LOCKSTEP_Master_Out(924) <= \<const0>\;
  LOCKSTEP_Master_Out(925) <= \<const0>\;
  LOCKSTEP_Master_Out(926) <= \<const0>\;
  LOCKSTEP_Master_Out(927) <= \<const0>\;
  LOCKSTEP_Master_Out(928) <= \<const0>\;
  LOCKSTEP_Master_Out(929) <= \<const0>\;
  LOCKSTEP_Master_Out(930) <= \<const0>\;
  LOCKSTEP_Master_Out(931) <= \<const0>\;
  LOCKSTEP_Master_Out(932) <= \<const0>\;
  LOCKSTEP_Master_Out(933) <= \<const0>\;
  LOCKSTEP_Master_Out(934) <= \<const0>\;
  LOCKSTEP_Master_Out(935) <= \<const0>\;
  LOCKSTEP_Master_Out(936) <= \<const0>\;
  LOCKSTEP_Master_Out(937) <= \<const0>\;
  LOCKSTEP_Master_Out(938) <= \<const0>\;
  LOCKSTEP_Master_Out(939) <= \<const0>\;
  LOCKSTEP_Master_Out(940) <= \<const0>\;
  LOCKSTEP_Master_Out(941) <= \<const0>\;
  LOCKSTEP_Master_Out(942) <= \<const0>\;
  LOCKSTEP_Master_Out(943) <= \<const0>\;
  LOCKSTEP_Master_Out(944) <= \<const0>\;
  LOCKSTEP_Master_Out(945) <= \<const0>\;
  LOCKSTEP_Master_Out(946) <= \<const0>\;
  LOCKSTEP_Master_Out(947) <= \<const0>\;
  LOCKSTEP_Master_Out(948) <= \<const0>\;
  LOCKSTEP_Master_Out(949) <= \<const0>\;
  LOCKSTEP_Master_Out(950) <= \<const0>\;
  LOCKSTEP_Master_Out(951) <= \<const0>\;
  LOCKSTEP_Master_Out(952) <= \<const0>\;
  LOCKSTEP_Master_Out(953) <= \<const0>\;
  LOCKSTEP_Master_Out(954) <= \<const0>\;
  LOCKSTEP_Master_Out(955) <= \<const0>\;
  LOCKSTEP_Master_Out(956) <= \<const0>\;
  LOCKSTEP_Master_Out(957) <= \<const0>\;
  LOCKSTEP_Master_Out(958) <= \<const0>\;
  LOCKSTEP_Master_Out(959) <= \<const0>\;
  LOCKSTEP_Master_Out(960) <= \<const0>\;
  LOCKSTEP_Master_Out(961) <= \<const0>\;
  LOCKSTEP_Master_Out(962) <= \<const0>\;
  LOCKSTEP_Master_Out(963) <= \<const0>\;
  LOCKSTEP_Master_Out(964) <= \<const0>\;
  LOCKSTEP_Master_Out(965) <= \<const0>\;
  LOCKSTEP_Master_Out(966) <= \<const0>\;
  LOCKSTEP_Master_Out(967) <= \<const0>\;
  LOCKSTEP_Master_Out(968) <= \<const0>\;
  LOCKSTEP_Master_Out(969) <= \<const0>\;
  LOCKSTEP_Master_Out(970) <= \<const0>\;
  LOCKSTEP_Master_Out(971) <= \<const0>\;
  LOCKSTEP_Master_Out(972) <= \<const0>\;
  LOCKSTEP_Master_Out(973) <= \<const0>\;
  LOCKSTEP_Master_Out(974) <= \<const0>\;
  LOCKSTEP_Master_Out(975) <= \<const0>\;
  LOCKSTEP_Master_Out(976) <= \<const0>\;
  LOCKSTEP_Master_Out(977) <= \<const0>\;
  LOCKSTEP_Master_Out(978) <= \<const0>\;
  LOCKSTEP_Master_Out(979) <= \<const0>\;
  LOCKSTEP_Master_Out(980) <= \<const0>\;
  LOCKSTEP_Master_Out(981) <= \<const0>\;
  LOCKSTEP_Master_Out(982) <= \<const0>\;
  LOCKSTEP_Master_Out(983) <= \<const0>\;
  LOCKSTEP_Master_Out(984) <= \<const0>\;
  LOCKSTEP_Master_Out(985) <= \<const0>\;
  LOCKSTEP_Master_Out(986) <= \<const0>\;
  LOCKSTEP_Master_Out(987) <= \<const0>\;
  LOCKSTEP_Master_Out(988) <= \<const0>\;
  LOCKSTEP_Master_Out(989) <= \<const0>\;
  LOCKSTEP_Master_Out(990) <= \<const0>\;
  LOCKSTEP_Master_Out(991) <= \<const0>\;
  LOCKSTEP_Master_Out(992) <= \<const0>\;
  LOCKSTEP_Master_Out(993) <= \<const0>\;
  LOCKSTEP_Master_Out(994) <= \<const0>\;
  LOCKSTEP_Master_Out(995) <= \<const0>\;
  LOCKSTEP_Master_Out(996) <= \<const0>\;
  LOCKSTEP_Master_Out(997) <= \<const0>\;
  LOCKSTEP_Master_Out(998) <= \<const0>\;
  LOCKSTEP_Master_Out(999) <= \<const0>\;
  LOCKSTEP_Master_Out(1000) <= \<const0>\;
  LOCKSTEP_Master_Out(1001) <= \<const0>\;
  LOCKSTEP_Master_Out(1002) <= \<const0>\;
  LOCKSTEP_Master_Out(1003) <= \<const0>\;
  LOCKSTEP_Master_Out(1004) <= \<const0>\;
  LOCKSTEP_Master_Out(1005) <= \<const0>\;
  LOCKSTEP_Master_Out(1006) <= \<const0>\;
  LOCKSTEP_Master_Out(1007) <= \<const0>\;
  LOCKSTEP_Master_Out(1008) <= \<const0>\;
  LOCKSTEP_Master_Out(1009) <= \<const0>\;
  LOCKSTEP_Master_Out(1010) <= \<const0>\;
  LOCKSTEP_Master_Out(1011) <= \<const0>\;
  LOCKSTEP_Master_Out(1012) <= \<const0>\;
  LOCKSTEP_Master_Out(1013) <= \<const0>\;
  LOCKSTEP_Master_Out(1014) <= \<const0>\;
  LOCKSTEP_Master_Out(1015) <= \<const0>\;
  LOCKSTEP_Master_Out(1016) <= \<const0>\;
  LOCKSTEP_Master_Out(1017) <= \<const0>\;
  LOCKSTEP_Master_Out(1018) <= \<const0>\;
  LOCKSTEP_Master_Out(1019) <= \<const0>\;
  LOCKSTEP_Master_Out(1020) <= \<const0>\;
  LOCKSTEP_Master_Out(1021) <= \<const0>\;
  LOCKSTEP_Master_Out(1022) <= \<const0>\;
  LOCKSTEP_Master_Out(1023) <= \<const0>\;
  LOCKSTEP_Master_Out(1024) <= \<const0>\;
  LOCKSTEP_Master_Out(1025) <= \<const0>\;
  LOCKSTEP_Master_Out(1026) <= \<const0>\;
  LOCKSTEP_Master_Out(1027) <= \<const0>\;
  LOCKSTEP_Master_Out(1028) <= \<const0>\;
  LOCKSTEP_Master_Out(1029) <= \<const0>\;
  LOCKSTEP_Master_Out(1030) <= \<const0>\;
  LOCKSTEP_Master_Out(1031) <= \<const0>\;
  LOCKSTEP_Master_Out(1032) <= \<const0>\;
  LOCKSTEP_Master_Out(1033) <= \<const0>\;
  LOCKSTEP_Master_Out(1034) <= \<const0>\;
  LOCKSTEP_Master_Out(1035) <= \<const0>\;
  LOCKSTEP_Master_Out(1036) <= \<const0>\;
  LOCKSTEP_Master_Out(1037) <= \<const0>\;
  LOCKSTEP_Master_Out(1038) <= \<const0>\;
  LOCKSTEP_Master_Out(1039) <= \<const0>\;
  LOCKSTEP_Master_Out(1040) <= \<const0>\;
  LOCKSTEP_Master_Out(1041) <= \<const0>\;
  LOCKSTEP_Master_Out(1042) <= \<const0>\;
  LOCKSTEP_Master_Out(1043) <= \<const0>\;
  LOCKSTEP_Master_Out(1044) <= \<const0>\;
  LOCKSTEP_Master_Out(1045) <= \<const0>\;
  LOCKSTEP_Master_Out(1046) <= \<const0>\;
  LOCKSTEP_Master_Out(1047) <= \<const0>\;
  LOCKSTEP_Master_Out(1048) <= \<const0>\;
  LOCKSTEP_Master_Out(1049) <= \<const0>\;
  LOCKSTEP_Master_Out(1050) <= \<const0>\;
  LOCKSTEP_Master_Out(1051) <= \<const0>\;
  LOCKSTEP_Master_Out(1052) <= \<const0>\;
  LOCKSTEP_Master_Out(1053) <= \<const0>\;
  LOCKSTEP_Master_Out(1054) <= \<const0>\;
  LOCKSTEP_Master_Out(1055) <= \<const0>\;
  LOCKSTEP_Master_Out(1056) <= \<const0>\;
  LOCKSTEP_Master_Out(1057) <= \<const0>\;
  LOCKSTEP_Master_Out(1058) <= \<const0>\;
  LOCKSTEP_Master_Out(1059) <= \<const0>\;
  LOCKSTEP_Master_Out(1060) <= \<const0>\;
  LOCKSTEP_Master_Out(1061) <= \<const0>\;
  LOCKSTEP_Master_Out(1062) <= \<const0>\;
  LOCKSTEP_Master_Out(1063) <= \<const0>\;
  LOCKSTEP_Master_Out(1064) <= \<const0>\;
  LOCKSTEP_Master_Out(1065) <= \<const0>\;
  LOCKSTEP_Master_Out(1066) <= \<const0>\;
  LOCKSTEP_Master_Out(1067) <= \<const0>\;
  LOCKSTEP_Master_Out(1068) <= \<const0>\;
  LOCKSTEP_Master_Out(1069) <= \<const0>\;
  LOCKSTEP_Master_Out(1070) <= \<const0>\;
  LOCKSTEP_Master_Out(1071) <= \<const0>\;
  LOCKSTEP_Master_Out(1072) <= \<const0>\;
  LOCKSTEP_Master_Out(1073) <= \<const0>\;
  LOCKSTEP_Master_Out(1074) <= \<const0>\;
  LOCKSTEP_Master_Out(1075) <= \<const0>\;
  LOCKSTEP_Master_Out(1076) <= \<const0>\;
  LOCKSTEP_Master_Out(1077) <= \<const0>\;
  LOCKSTEP_Master_Out(1078) <= \<const0>\;
  LOCKSTEP_Master_Out(1079) <= \<const0>\;
  LOCKSTEP_Master_Out(1080) <= \<const0>\;
  LOCKSTEP_Master_Out(1081) <= \<const0>\;
  LOCKSTEP_Master_Out(1082) <= \<const0>\;
  LOCKSTEP_Master_Out(1083) <= \<const0>\;
  LOCKSTEP_Master_Out(1084) <= \<const0>\;
  LOCKSTEP_Master_Out(1085) <= \<const0>\;
  LOCKSTEP_Master_Out(1086) <= \<const0>\;
  LOCKSTEP_Master_Out(1087) <= \<const0>\;
  LOCKSTEP_Master_Out(1088) <= \<const0>\;
  LOCKSTEP_Master_Out(1089) <= \<const0>\;
  LOCKSTEP_Master_Out(1090) <= \<const0>\;
  LOCKSTEP_Master_Out(1091) <= \<const0>\;
  LOCKSTEP_Master_Out(1092) <= \<const0>\;
  LOCKSTEP_Master_Out(1093) <= \<const0>\;
  LOCKSTEP_Master_Out(1094) <= \<const0>\;
  LOCKSTEP_Master_Out(1095) <= \<const0>\;
  LOCKSTEP_Master_Out(1096) <= \<const0>\;
  LOCKSTEP_Master_Out(1097) <= \<const0>\;
  LOCKSTEP_Master_Out(1098) <= \<const0>\;
  LOCKSTEP_Master_Out(1099) <= \<const0>\;
  LOCKSTEP_Master_Out(1100) <= \<const0>\;
  LOCKSTEP_Master_Out(1101) <= \<const0>\;
  LOCKSTEP_Master_Out(1102) <= \<const0>\;
  LOCKSTEP_Master_Out(1103) <= \<const0>\;
  LOCKSTEP_Master_Out(1104) <= \<const0>\;
  LOCKSTEP_Master_Out(1105) <= \<const0>\;
  LOCKSTEP_Master_Out(1106) <= \<const0>\;
  LOCKSTEP_Master_Out(1107) <= \<const0>\;
  LOCKSTEP_Master_Out(1108) <= \<const0>\;
  LOCKSTEP_Master_Out(1109) <= \<const0>\;
  LOCKSTEP_Master_Out(1110) <= \<const0>\;
  LOCKSTEP_Master_Out(1111) <= \<const0>\;
  LOCKSTEP_Master_Out(1112) <= \<const0>\;
  LOCKSTEP_Master_Out(1113) <= \<const0>\;
  LOCKSTEP_Master_Out(1114) <= \<const0>\;
  LOCKSTEP_Master_Out(1115) <= \<const0>\;
  LOCKSTEP_Master_Out(1116) <= \<const0>\;
  LOCKSTEP_Master_Out(1117) <= \<const0>\;
  LOCKSTEP_Master_Out(1118) <= \<const0>\;
  LOCKSTEP_Master_Out(1119) <= \<const0>\;
  LOCKSTEP_Master_Out(1120) <= \<const0>\;
  LOCKSTEP_Master_Out(1121) <= \<const0>\;
  LOCKSTEP_Master_Out(1122) <= \<const0>\;
  LOCKSTEP_Master_Out(1123) <= \<const0>\;
  LOCKSTEP_Master_Out(1124) <= \<const0>\;
  LOCKSTEP_Master_Out(1125) <= \<const0>\;
  LOCKSTEP_Master_Out(1126) <= \<const0>\;
  LOCKSTEP_Master_Out(1127) <= \<const0>\;
  LOCKSTEP_Master_Out(1128) <= \<const0>\;
  LOCKSTEP_Master_Out(1129) <= \<const0>\;
  LOCKSTEP_Master_Out(1130) <= \<const0>\;
  LOCKSTEP_Master_Out(1131) <= \<const0>\;
  LOCKSTEP_Master_Out(1132) <= \<const0>\;
  LOCKSTEP_Master_Out(1133) <= \<const0>\;
  LOCKSTEP_Master_Out(1134) <= \<const0>\;
  LOCKSTEP_Master_Out(1135) <= \<const0>\;
  LOCKSTEP_Master_Out(1136) <= \<const0>\;
  LOCKSTEP_Master_Out(1137) <= \<const0>\;
  LOCKSTEP_Master_Out(1138) <= \<const0>\;
  LOCKSTEP_Master_Out(1139) <= \<const0>\;
  LOCKSTEP_Master_Out(1140) <= \<const0>\;
  LOCKSTEP_Master_Out(1141) <= \<const0>\;
  LOCKSTEP_Master_Out(1142) <= \<const0>\;
  LOCKSTEP_Master_Out(1143) <= \<const0>\;
  LOCKSTEP_Master_Out(1144) <= \<const0>\;
  LOCKSTEP_Master_Out(1145) <= \<const0>\;
  LOCKSTEP_Master_Out(1146) <= \<const0>\;
  LOCKSTEP_Master_Out(1147) <= \<const0>\;
  LOCKSTEP_Master_Out(1148) <= \<const0>\;
  LOCKSTEP_Master_Out(1149) <= \<const0>\;
  LOCKSTEP_Master_Out(1150) <= \<const0>\;
  LOCKSTEP_Master_Out(1151) <= \<const0>\;
  LOCKSTEP_Master_Out(1152) <= \<const0>\;
  LOCKSTEP_Master_Out(1153) <= \<const0>\;
  LOCKSTEP_Master_Out(1154) <= \<const0>\;
  LOCKSTEP_Master_Out(1155) <= \<const0>\;
  LOCKSTEP_Master_Out(1156) <= \<const0>\;
  LOCKSTEP_Master_Out(1157) <= \<const0>\;
  LOCKSTEP_Master_Out(1158) <= \<const0>\;
  LOCKSTEP_Master_Out(1159) <= \<const0>\;
  LOCKSTEP_Master_Out(1160) <= \<const0>\;
  LOCKSTEP_Master_Out(1161) <= \<const0>\;
  LOCKSTEP_Master_Out(1162) <= \<const0>\;
  LOCKSTEP_Master_Out(1163) <= \<const0>\;
  LOCKSTEP_Master_Out(1164) <= \<const0>\;
  LOCKSTEP_Master_Out(1165) <= \<const0>\;
  LOCKSTEP_Master_Out(1166) <= \<const0>\;
  LOCKSTEP_Master_Out(1167) <= \<const0>\;
  LOCKSTEP_Master_Out(1168) <= \<const0>\;
  LOCKSTEP_Master_Out(1169) <= \<const0>\;
  LOCKSTEP_Master_Out(1170) <= \<const0>\;
  LOCKSTEP_Master_Out(1171) <= \<const0>\;
  LOCKSTEP_Master_Out(1172) <= \<const0>\;
  LOCKSTEP_Master_Out(1173) <= \<const0>\;
  LOCKSTEP_Master_Out(1174) <= \<const0>\;
  LOCKSTEP_Master_Out(1175) <= \<const0>\;
  LOCKSTEP_Master_Out(1176) <= \<const0>\;
  LOCKSTEP_Master_Out(1177) <= \<const0>\;
  LOCKSTEP_Master_Out(1178) <= \<const0>\;
  LOCKSTEP_Master_Out(1179) <= \<const0>\;
  LOCKSTEP_Master_Out(1180) <= \<const0>\;
  LOCKSTEP_Master_Out(1181) <= \<const0>\;
  LOCKSTEP_Master_Out(1182) <= \<const0>\;
  LOCKSTEP_Master_Out(1183) <= \<const0>\;
  LOCKSTEP_Master_Out(1184) <= \<const0>\;
  LOCKSTEP_Master_Out(1185) <= \<const0>\;
  LOCKSTEP_Master_Out(1186) <= \<const0>\;
  LOCKSTEP_Master_Out(1187) <= \<const0>\;
  LOCKSTEP_Master_Out(1188) <= \<const0>\;
  LOCKSTEP_Master_Out(1189) <= \<const0>\;
  LOCKSTEP_Master_Out(1190) <= \<const0>\;
  LOCKSTEP_Master_Out(1191) <= \<const0>\;
  LOCKSTEP_Master_Out(1192) <= \<const0>\;
  LOCKSTEP_Master_Out(1193) <= \<const0>\;
  LOCKSTEP_Master_Out(1194) <= \<const0>\;
  LOCKSTEP_Master_Out(1195) <= \<const0>\;
  LOCKSTEP_Master_Out(1196) <= \<const0>\;
  LOCKSTEP_Master_Out(1197) <= \<const0>\;
  LOCKSTEP_Master_Out(1198) <= \<const0>\;
  LOCKSTEP_Master_Out(1199) <= \<const0>\;
  LOCKSTEP_Master_Out(1200) <= \<const0>\;
  LOCKSTEP_Master_Out(1201) <= \<const0>\;
  LOCKSTEP_Master_Out(1202) <= \<const0>\;
  LOCKSTEP_Master_Out(1203) <= \<const0>\;
  LOCKSTEP_Master_Out(1204) <= \<const0>\;
  LOCKSTEP_Master_Out(1205) <= \<const0>\;
  LOCKSTEP_Master_Out(1206) <= \<const0>\;
  LOCKSTEP_Master_Out(1207) <= \<const0>\;
  LOCKSTEP_Master_Out(1208) <= \<const0>\;
  LOCKSTEP_Master_Out(1209) <= \<const0>\;
  LOCKSTEP_Master_Out(1210) <= \<const0>\;
  LOCKSTEP_Master_Out(1211) <= \<const0>\;
  LOCKSTEP_Master_Out(1212) <= \<const0>\;
  LOCKSTEP_Master_Out(1213) <= \<const0>\;
  LOCKSTEP_Master_Out(1214) <= \<const0>\;
  LOCKSTEP_Master_Out(1215) <= \<const0>\;
  LOCKSTEP_Master_Out(1216) <= \<const0>\;
  LOCKSTEP_Master_Out(1217) <= \<const0>\;
  LOCKSTEP_Master_Out(1218) <= \<const0>\;
  LOCKSTEP_Master_Out(1219) <= \<const0>\;
  LOCKSTEP_Master_Out(1220) <= \<const0>\;
  LOCKSTEP_Master_Out(1221) <= \<const0>\;
  LOCKSTEP_Master_Out(1222) <= \<const0>\;
  LOCKSTEP_Master_Out(1223) <= \<const0>\;
  LOCKSTEP_Master_Out(1224) <= \<const0>\;
  LOCKSTEP_Master_Out(1225) <= \<const0>\;
  LOCKSTEP_Master_Out(1226) <= \<const0>\;
  LOCKSTEP_Master_Out(1227) <= \<const0>\;
  LOCKSTEP_Master_Out(1228) <= \<const0>\;
  LOCKSTEP_Master_Out(1229) <= \<const0>\;
  LOCKSTEP_Master_Out(1230) <= \<const0>\;
  LOCKSTEP_Master_Out(1231) <= \<const0>\;
  LOCKSTEP_Master_Out(1232) <= \<const0>\;
  LOCKSTEP_Master_Out(1233) <= \<const0>\;
  LOCKSTEP_Master_Out(1234) <= \<const0>\;
  LOCKSTEP_Master_Out(1235) <= \<const0>\;
  LOCKSTEP_Master_Out(1236) <= \<const0>\;
  LOCKSTEP_Master_Out(1237) <= \<const0>\;
  LOCKSTEP_Master_Out(1238) <= \<const0>\;
  LOCKSTEP_Master_Out(1239) <= \<const0>\;
  LOCKSTEP_Master_Out(1240) <= \<const0>\;
  LOCKSTEP_Master_Out(1241) <= \<const0>\;
  LOCKSTEP_Master_Out(1242) <= \<const0>\;
  LOCKSTEP_Master_Out(1243) <= \<const0>\;
  LOCKSTEP_Master_Out(1244) <= \<const0>\;
  LOCKSTEP_Master_Out(1245) <= \<const0>\;
  LOCKSTEP_Master_Out(1246) <= \<const0>\;
  LOCKSTEP_Master_Out(1247) <= \<const0>\;
  LOCKSTEP_Master_Out(1248) <= \<const0>\;
  LOCKSTEP_Master_Out(1249) <= \<const0>\;
  LOCKSTEP_Master_Out(1250) <= \<const0>\;
  LOCKSTEP_Master_Out(1251) <= \<const0>\;
  LOCKSTEP_Master_Out(1252) <= \<const0>\;
  LOCKSTEP_Master_Out(1253) <= \<const0>\;
  LOCKSTEP_Master_Out(1254) <= \<const0>\;
  LOCKSTEP_Master_Out(1255) <= \<const0>\;
  LOCKSTEP_Master_Out(1256) <= \<const0>\;
  LOCKSTEP_Master_Out(1257) <= \<const0>\;
  LOCKSTEP_Master_Out(1258) <= \<const0>\;
  LOCKSTEP_Master_Out(1259) <= \<const0>\;
  LOCKSTEP_Master_Out(1260) <= \<const0>\;
  LOCKSTEP_Master_Out(1261) <= \<const0>\;
  LOCKSTEP_Master_Out(1262) <= \<const0>\;
  LOCKSTEP_Master_Out(1263) <= \<const0>\;
  LOCKSTEP_Master_Out(1264) <= \<const0>\;
  LOCKSTEP_Master_Out(1265) <= \<const0>\;
  LOCKSTEP_Master_Out(1266) <= \<const0>\;
  LOCKSTEP_Master_Out(1267) <= \<const0>\;
  LOCKSTEP_Master_Out(1268) <= \<const0>\;
  LOCKSTEP_Master_Out(1269) <= \<const0>\;
  LOCKSTEP_Master_Out(1270) <= \<const0>\;
  LOCKSTEP_Master_Out(1271) <= \<const0>\;
  LOCKSTEP_Master_Out(1272) <= \<const0>\;
  LOCKSTEP_Master_Out(1273) <= \<const0>\;
  LOCKSTEP_Master_Out(1274) <= \<const0>\;
  LOCKSTEP_Master_Out(1275) <= \<const0>\;
  LOCKSTEP_Master_Out(1276) <= \<const0>\;
  LOCKSTEP_Master_Out(1277) <= \<const0>\;
  LOCKSTEP_Master_Out(1278) <= \<const0>\;
  LOCKSTEP_Master_Out(1279) <= \<const0>\;
  LOCKSTEP_Master_Out(1280) <= \<const0>\;
  LOCKSTEP_Master_Out(1281) <= \<const0>\;
  LOCKSTEP_Master_Out(1282) <= \<const0>\;
  LOCKSTEP_Master_Out(1283) <= \<const0>\;
  LOCKSTEP_Master_Out(1284) <= \<const0>\;
  LOCKSTEP_Master_Out(1285) <= \<const0>\;
  LOCKSTEP_Master_Out(1286) <= \<const0>\;
  LOCKSTEP_Master_Out(1287) <= \<const0>\;
  LOCKSTEP_Master_Out(1288) <= \<const0>\;
  LOCKSTEP_Master_Out(1289) <= \<const0>\;
  LOCKSTEP_Master_Out(1290) <= \<const0>\;
  LOCKSTEP_Master_Out(1291) <= \<const0>\;
  LOCKSTEP_Master_Out(1292) <= \<const0>\;
  LOCKSTEP_Master_Out(1293) <= \<const0>\;
  LOCKSTEP_Master_Out(1294) <= \<const0>\;
  LOCKSTEP_Master_Out(1295) <= \<const0>\;
  LOCKSTEP_Master_Out(1296) <= \<const0>\;
  LOCKSTEP_Master_Out(1297) <= \<const0>\;
  LOCKSTEP_Master_Out(1298) <= \<const0>\;
  LOCKSTEP_Master_Out(1299) <= \<const0>\;
  LOCKSTEP_Master_Out(1300) <= \<const0>\;
  LOCKSTEP_Master_Out(1301) <= \<const0>\;
  LOCKSTEP_Master_Out(1302) <= \<const0>\;
  LOCKSTEP_Master_Out(1303) <= \<const0>\;
  LOCKSTEP_Master_Out(1304) <= \<const0>\;
  LOCKSTEP_Master_Out(1305) <= \<const0>\;
  LOCKSTEP_Master_Out(1306) <= \<const0>\;
  LOCKSTEP_Master_Out(1307) <= \<const0>\;
  LOCKSTEP_Master_Out(1308) <= \<const0>\;
  LOCKSTEP_Master_Out(1309) <= \<const0>\;
  LOCKSTEP_Master_Out(1310) <= \<const0>\;
  LOCKSTEP_Master_Out(1311) <= \<const0>\;
  LOCKSTEP_Master_Out(1312) <= \<const0>\;
  LOCKSTEP_Master_Out(1313) <= \<const0>\;
  LOCKSTEP_Master_Out(1314) <= \<const0>\;
  LOCKSTEP_Master_Out(1315) <= \<const0>\;
  LOCKSTEP_Master_Out(1316) <= \<const0>\;
  LOCKSTEP_Master_Out(1317) <= \<const0>\;
  LOCKSTEP_Master_Out(1318) <= \<const0>\;
  LOCKSTEP_Master_Out(1319) <= \<const0>\;
  LOCKSTEP_Master_Out(1320) <= \<const0>\;
  LOCKSTEP_Master_Out(1321) <= \<const0>\;
  LOCKSTEP_Master_Out(1322) <= \<const0>\;
  LOCKSTEP_Master_Out(1323) <= \<const0>\;
  LOCKSTEP_Master_Out(1324) <= \<const0>\;
  LOCKSTEP_Master_Out(1325) <= \<const0>\;
  LOCKSTEP_Master_Out(1326) <= \<const0>\;
  LOCKSTEP_Master_Out(1327) <= \<const0>\;
  LOCKSTEP_Master_Out(1328) <= \<const0>\;
  LOCKSTEP_Master_Out(1329) <= \<const0>\;
  LOCKSTEP_Master_Out(1330) <= \<const0>\;
  LOCKSTEP_Master_Out(1331) <= \<const0>\;
  LOCKSTEP_Master_Out(1332) <= \<const0>\;
  LOCKSTEP_Master_Out(1333) <= \<const0>\;
  LOCKSTEP_Master_Out(1334) <= \<const0>\;
  LOCKSTEP_Master_Out(1335) <= \<const0>\;
  LOCKSTEP_Master_Out(1336) <= \<const0>\;
  LOCKSTEP_Master_Out(1337) <= \<const0>\;
  LOCKSTEP_Master_Out(1338) <= \<const0>\;
  LOCKSTEP_Master_Out(1339) <= \<const0>\;
  LOCKSTEP_Master_Out(1340) <= \<const0>\;
  LOCKSTEP_Master_Out(1341) <= \<const0>\;
  LOCKSTEP_Master_Out(1342) <= \<const0>\;
  LOCKSTEP_Master_Out(1343) <= \<const0>\;
  LOCKSTEP_Master_Out(1344) <= \<const0>\;
  LOCKSTEP_Master_Out(1345) <= \<const0>\;
  LOCKSTEP_Master_Out(1346) <= \<const0>\;
  LOCKSTEP_Master_Out(1347) <= \<const0>\;
  LOCKSTEP_Master_Out(1348) <= \<const0>\;
  LOCKSTEP_Master_Out(1349) <= \<const0>\;
  LOCKSTEP_Master_Out(1350) <= \<const0>\;
  LOCKSTEP_Master_Out(1351) <= \<const0>\;
  LOCKSTEP_Master_Out(1352) <= \<const0>\;
  LOCKSTEP_Master_Out(1353) <= \<const0>\;
  LOCKSTEP_Master_Out(1354) <= \<const0>\;
  LOCKSTEP_Master_Out(1355) <= \<const0>\;
  LOCKSTEP_Master_Out(1356) <= \<const0>\;
  LOCKSTEP_Master_Out(1357) <= \<const0>\;
  LOCKSTEP_Master_Out(1358) <= \<const0>\;
  LOCKSTEP_Master_Out(1359) <= \<const0>\;
  LOCKSTEP_Master_Out(1360) <= \<const0>\;
  LOCKSTEP_Master_Out(1361) <= \<const0>\;
  LOCKSTEP_Master_Out(1362) <= \<const0>\;
  LOCKSTEP_Master_Out(1363) <= \<const0>\;
  LOCKSTEP_Master_Out(1364) <= \<const0>\;
  LOCKSTEP_Master_Out(1365) <= \<const0>\;
  LOCKSTEP_Master_Out(1366) <= \<const0>\;
  LOCKSTEP_Master_Out(1367) <= \<const0>\;
  LOCKSTEP_Master_Out(1368) <= \<const0>\;
  LOCKSTEP_Master_Out(1369) <= \<const0>\;
  LOCKSTEP_Master_Out(1370) <= \<const0>\;
  LOCKSTEP_Master_Out(1371) <= \<const0>\;
  LOCKSTEP_Master_Out(1372) <= \<const0>\;
  LOCKSTEP_Master_Out(1373) <= \<const0>\;
  LOCKSTEP_Master_Out(1374) <= \<const0>\;
  LOCKSTEP_Master_Out(1375) <= \<const0>\;
  LOCKSTEP_Master_Out(1376) <= \<const0>\;
  LOCKSTEP_Master_Out(1377) <= \<const0>\;
  LOCKSTEP_Master_Out(1378) <= \<const0>\;
  LOCKSTEP_Master_Out(1379) <= \<const0>\;
  LOCKSTEP_Master_Out(1380) <= \<const0>\;
  LOCKSTEP_Master_Out(1381) <= \<const0>\;
  LOCKSTEP_Master_Out(1382) <= \<const0>\;
  LOCKSTEP_Master_Out(1383) <= \<const0>\;
  LOCKSTEP_Master_Out(1384) <= \<const0>\;
  LOCKSTEP_Master_Out(1385) <= \<const0>\;
  LOCKSTEP_Master_Out(1386) <= \<const0>\;
  LOCKSTEP_Master_Out(1387) <= \<const0>\;
  LOCKSTEP_Master_Out(1388) <= \<const0>\;
  LOCKSTEP_Master_Out(1389) <= \<const0>\;
  LOCKSTEP_Master_Out(1390) <= \<const0>\;
  LOCKSTEP_Master_Out(1391) <= \<const0>\;
  LOCKSTEP_Master_Out(1392) <= \<const0>\;
  LOCKSTEP_Master_Out(1393) <= \<const0>\;
  LOCKSTEP_Master_Out(1394) <= \<const0>\;
  LOCKSTEP_Master_Out(1395) <= \<const0>\;
  LOCKSTEP_Master_Out(1396) <= \<const0>\;
  LOCKSTEP_Master_Out(1397) <= \<const0>\;
  LOCKSTEP_Master_Out(1398) <= \<const0>\;
  LOCKSTEP_Master_Out(1399) <= \<const0>\;
  LOCKSTEP_Master_Out(1400) <= \<const0>\;
  LOCKSTEP_Master_Out(1401) <= \<const0>\;
  LOCKSTEP_Master_Out(1402) <= \<const0>\;
  LOCKSTEP_Master_Out(1403) <= \<const0>\;
  LOCKSTEP_Master_Out(1404) <= \<const0>\;
  LOCKSTEP_Master_Out(1405) <= \<const0>\;
  LOCKSTEP_Master_Out(1406) <= \<const0>\;
  LOCKSTEP_Master_Out(1407) <= \<const0>\;
  LOCKSTEP_Master_Out(1408) <= \<const0>\;
  LOCKSTEP_Master_Out(1409) <= \<const0>\;
  LOCKSTEP_Master_Out(1410) <= \<const0>\;
  LOCKSTEP_Master_Out(1411) <= \<const0>\;
  LOCKSTEP_Master_Out(1412) <= \<const0>\;
  LOCKSTEP_Master_Out(1413) <= \<const0>\;
  LOCKSTEP_Master_Out(1414) <= \<const0>\;
  LOCKSTEP_Master_Out(1415) <= \<const0>\;
  LOCKSTEP_Master_Out(1416) <= \<const0>\;
  LOCKSTEP_Master_Out(1417) <= \<const0>\;
  LOCKSTEP_Master_Out(1418) <= \<const0>\;
  LOCKSTEP_Master_Out(1419) <= \<const0>\;
  LOCKSTEP_Master_Out(1420) <= \<const0>\;
  LOCKSTEP_Master_Out(1421) <= \<const0>\;
  LOCKSTEP_Master_Out(1422) <= \<const0>\;
  LOCKSTEP_Master_Out(1423) <= \<const0>\;
  LOCKSTEP_Master_Out(1424) <= \<const0>\;
  LOCKSTEP_Master_Out(1425) <= \<const0>\;
  LOCKSTEP_Master_Out(1426) <= \<const0>\;
  LOCKSTEP_Master_Out(1427) <= \<const0>\;
  LOCKSTEP_Master_Out(1428) <= \<const0>\;
  LOCKSTEP_Master_Out(1429) <= \<const0>\;
  LOCKSTEP_Master_Out(1430) <= \<const0>\;
  LOCKSTEP_Master_Out(1431) <= \<const0>\;
  LOCKSTEP_Master_Out(1432) <= \<const0>\;
  LOCKSTEP_Master_Out(1433) <= \<const0>\;
  LOCKSTEP_Master_Out(1434) <= \<const0>\;
  LOCKSTEP_Master_Out(1435) <= \<const0>\;
  LOCKSTEP_Master_Out(1436) <= \<const0>\;
  LOCKSTEP_Master_Out(1437) <= \<const0>\;
  LOCKSTEP_Master_Out(1438) <= \<const0>\;
  LOCKSTEP_Master_Out(1439) <= \<const0>\;
  LOCKSTEP_Master_Out(1440) <= \<const0>\;
  LOCKSTEP_Master_Out(1441) <= \<const0>\;
  LOCKSTEP_Master_Out(1442) <= \<const0>\;
  LOCKSTEP_Master_Out(1443) <= \<const0>\;
  LOCKSTEP_Master_Out(1444) <= \<const0>\;
  LOCKSTEP_Master_Out(1445) <= \<const0>\;
  LOCKSTEP_Master_Out(1446) <= \<const0>\;
  LOCKSTEP_Master_Out(1447) <= \<const0>\;
  LOCKSTEP_Master_Out(1448) <= \<const0>\;
  LOCKSTEP_Master_Out(1449) <= \<const0>\;
  LOCKSTEP_Master_Out(1450) <= \<const0>\;
  LOCKSTEP_Master_Out(1451) <= \<const0>\;
  LOCKSTEP_Master_Out(1452) <= \<const0>\;
  LOCKSTEP_Master_Out(1453) <= \<const0>\;
  LOCKSTEP_Master_Out(1454) <= \<const0>\;
  LOCKSTEP_Master_Out(1455) <= \<const0>\;
  LOCKSTEP_Master_Out(1456) <= \<const0>\;
  LOCKSTEP_Master_Out(1457) <= \<const0>\;
  LOCKSTEP_Master_Out(1458) <= \<const0>\;
  LOCKSTEP_Master_Out(1459) <= \<const0>\;
  LOCKSTEP_Master_Out(1460) <= \<const0>\;
  LOCKSTEP_Master_Out(1461) <= \<const0>\;
  LOCKSTEP_Master_Out(1462) <= \<const0>\;
  LOCKSTEP_Master_Out(1463) <= \<const0>\;
  LOCKSTEP_Master_Out(1464) <= \<const0>\;
  LOCKSTEP_Master_Out(1465) <= \<const0>\;
  LOCKSTEP_Master_Out(1466) <= \<const0>\;
  LOCKSTEP_Master_Out(1467) <= \<const0>\;
  LOCKSTEP_Master_Out(1468) <= \<const0>\;
  LOCKSTEP_Master_Out(1469) <= \<const0>\;
  LOCKSTEP_Master_Out(1470) <= \<const0>\;
  LOCKSTEP_Master_Out(1471) <= \<const0>\;
  LOCKSTEP_Master_Out(1472) <= \<const0>\;
  LOCKSTEP_Master_Out(1473) <= \<const0>\;
  LOCKSTEP_Master_Out(1474) <= \<const0>\;
  LOCKSTEP_Master_Out(1475) <= \<const0>\;
  LOCKSTEP_Master_Out(1476) <= \<const0>\;
  LOCKSTEP_Master_Out(1477) <= \<const0>\;
  LOCKSTEP_Master_Out(1478) <= \<const0>\;
  LOCKSTEP_Master_Out(1479) <= \<const0>\;
  LOCKSTEP_Master_Out(1480) <= \<const0>\;
  LOCKSTEP_Master_Out(1481) <= \<const0>\;
  LOCKSTEP_Master_Out(1482) <= \<const0>\;
  LOCKSTEP_Master_Out(1483) <= \<const0>\;
  LOCKSTEP_Master_Out(1484) <= \<const0>\;
  LOCKSTEP_Master_Out(1485) <= \<const0>\;
  LOCKSTEP_Master_Out(1486) <= \<const0>\;
  LOCKSTEP_Master_Out(1487) <= \<const0>\;
  LOCKSTEP_Master_Out(1488) <= \<const0>\;
  LOCKSTEP_Master_Out(1489) <= \<const0>\;
  LOCKSTEP_Master_Out(1490) <= \<const0>\;
  LOCKSTEP_Master_Out(1491) <= \<const0>\;
  LOCKSTEP_Master_Out(1492) <= \<const0>\;
  LOCKSTEP_Master_Out(1493) <= \<const0>\;
  LOCKSTEP_Master_Out(1494) <= \<const0>\;
  LOCKSTEP_Master_Out(1495) <= \<const0>\;
  LOCKSTEP_Master_Out(1496) <= \<const0>\;
  LOCKSTEP_Master_Out(1497) <= \<const0>\;
  LOCKSTEP_Master_Out(1498) <= \<const0>\;
  LOCKSTEP_Master_Out(1499) <= \<const0>\;
  LOCKSTEP_Master_Out(1500) <= \<const0>\;
  LOCKSTEP_Master_Out(1501) <= \<const0>\;
  LOCKSTEP_Master_Out(1502) <= \<const0>\;
  LOCKSTEP_Master_Out(1503) <= \<const0>\;
  LOCKSTEP_Master_Out(1504) <= \<const0>\;
  LOCKSTEP_Master_Out(1505) <= \<const0>\;
  LOCKSTEP_Master_Out(1506) <= \<const0>\;
  LOCKSTEP_Master_Out(1507) <= \<const0>\;
  LOCKSTEP_Master_Out(1508) <= \<const0>\;
  LOCKSTEP_Master_Out(1509) <= \<const0>\;
  LOCKSTEP_Master_Out(1510) <= \<const0>\;
  LOCKSTEP_Master_Out(1511) <= \<const0>\;
  LOCKSTEP_Master_Out(1512) <= \<const0>\;
  LOCKSTEP_Master_Out(1513) <= \<const0>\;
  LOCKSTEP_Master_Out(1514) <= \<const0>\;
  LOCKSTEP_Master_Out(1515) <= \<const0>\;
  LOCKSTEP_Master_Out(1516) <= \<const0>\;
  LOCKSTEP_Master_Out(1517) <= \<const0>\;
  LOCKSTEP_Master_Out(1518) <= \<const0>\;
  LOCKSTEP_Master_Out(1519) <= \<const0>\;
  LOCKSTEP_Master_Out(1520) <= \<const0>\;
  LOCKSTEP_Master_Out(1521) <= \<const0>\;
  LOCKSTEP_Master_Out(1522) <= \<const0>\;
  LOCKSTEP_Master_Out(1523) <= \<const0>\;
  LOCKSTEP_Master_Out(1524) <= \<const0>\;
  LOCKSTEP_Master_Out(1525) <= \<const0>\;
  LOCKSTEP_Master_Out(1526) <= \<const0>\;
  LOCKSTEP_Master_Out(1527) <= \<const0>\;
  LOCKSTEP_Master_Out(1528) <= \<const0>\;
  LOCKSTEP_Master_Out(1529) <= \<const0>\;
  LOCKSTEP_Master_Out(1530) <= \<const0>\;
  LOCKSTEP_Master_Out(1531) <= \<const0>\;
  LOCKSTEP_Master_Out(1532) <= \<const0>\;
  LOCKSTEP_Master_Out(1533) <= \<const0>\;
  LOCKSTEP_Master_Out(1534) <= \<const0>\;
  LOCKSTEP_Master_Out(1535) <= \<const0>\;
  LOCKSTEP_Master_Out(1536) <= \<const0>\;
  LOCKSTEP_Master_Out(1537) <= \<const0>\;
  LOCKSTEP_Master_Out(1538) <= \<const0>\;
  LOCKSTEP_Master_Out(1539) <= \<const0>\;
  LOCKSTEP_Master_Out(1540) <= \<const0>\;
  LOCKSTEP_Master_Out(1541) <= \<const0>\;
  LOCKSTEP_Master_Out(1542) <= \<const0>\;
  LOCKSTEP_Master_Out(1543) <= \<const0>\;
  LOCKSTEP_Master_Out(1544) <= \<const0>\;
  LOCKSTEP_Master_Out(1545) <= \<const0>\;
  LOCKSTEP_Master_Out(1546) <= \<const0>\;
  LOCKSTEP_Master_Out(1547) <= \<const0>\;
  LOCKSTEP_Master_Out(1548) <= \<const0>\;
  LOCKSTEP_Master_Out(1549) <= \<const0>\;
  LOCKSTEP_Master_Out(1550) <= \<const0>\;
  LOCKSTEP_Master_Out(1551) <= \<const0>\;
  LOCKSTEP_Master_Out(1552) <= \<const0>\;
  LOCKSTEP_Master_Out(1553) <= \<const0>\;
  LOCKSTEP_Master_Out(1554) <= \<const0>\;
  LOCKSTEP_Master_Out(1555) <= \<const0>\;
  LOCKSTEP_Master_Out(1556) <= \<const0>\;
  LOCKSTEP_Master_Out(1557) <= \<const0>\;
  LOCKSTEP_Master_Out(1558) <= \<const0>\;
  LOCKSTEP_Master_Out(1559) <= \<const0>\;
  LOCKSTEP_Master_Out(1560) <= \<const0>\;
  LOCKSTEP_Master_Out(1561) <= \<const0>\;
  LOCKSTEP_Master_Out(1562) <= \<const0>\;
  LOCKSTEP_Master_Out(1563) <= \<const0>\;
  LOCKSTEP_Master_Out(1564) <= \<const0>\;
  LOCKSTEP_Master_Out(1565) <= \<const0>\;
  LOCKSTEP_Master_Out(1566) <= \<const0>\;
  LOCKSTEP_Master_Out(1567) <= \<const0>\;
  LOCKSTEP_Master_Out(1568) <= \<const0>\;
  LOCKSTEP_Master_Out(1569) <= \<const0>\;
  LOCKSTEP_Master_Out(1570) <= \<const0>\;
  LOCKSTEP_Master_Out(1571) <= \<const0>\;
  LOCKSTEP_Master_Out(1572) <= \<const0>\;
  LOCKSTEP_Master_Out(1573) <= \<const0>\;
  LOCKSTEP_Master_Out(1574) <= \<const0>\;
  LOCKSTEP_Master_Out(1575) <= \<const0>\;
  LOCKSTEP_Master_Out(1576) <= \<const0>\;
  LOCKSTEP_Master_Out(1577) <= \<const0>\;
  LOCKSTEP_Master_Out(1578) <= \<const0>\;
  LOCKSTEP_Master_Out(1579) <= \<const0>\;
  LOCKSTEP_Master_Out(1580) <= \<const0>\;
  LOCKSTEP_Master_Out(1581) <= \<const0>\;
  LOCKSTEP_Master_Out(1582) <= \<const0>\;
  LOCKSTEP_Master_Out(1583) <= \<const0>\;
  LOCKSTEP_Master_Out(1584) <= \<const0>\;
  LOCKSTEP_Master_Out(1585) <= \<const0>\;
  LOCKSTEP_Master_Out(1586) <= \<const0>\;
  LOCKSTEP_Master_Out(1587) <= \<const0>\;
  LOCKSTEP_Master_Out(1588) <= \<const0>\;
  LOCKSTEP_Master_Out(1589) <= \<const0>\;
  LOCKSTEP_Master_Out(1590) <= \<const0>\;
  LOCKSTEP_Master_Out(1591) <= \<const0>\;
  LOCKSTEP_Master_Out(1592) <= \<const0>\;
  LOCKSTEP_Master_Out(1593) <= \<const0>\;
  LOCKSTEP_Master_Out(1594) <= \<const0>\;
  LOCKSTEP_Master_Out(1595) <= \<const0>\;
  LOCKSTEP_Master_Out(1596) <= \<const0>\;
  LOCKSTEP_Master_Out(1597) <= \<const0>\;
  LOCKSTEP_Master_Out(1598) <= \<const0>\;
  LOCKSTEP_Master_Out(1599) <= \<const0>\;
  LOCKSTEP_Master_Out(1600) <= \<const0>\;
  LOCKSTEP_Master_Out(1601) <= \<const0>\;
  LOCKSTEP_Master_Out(1602) <= \<const0>\;
  LOCKSTEP_Master_Out(1603) <= \<const0>\;
  LOCKSTEP_Master_Out(1604) <= \<const0>\;
  LOCKSTEP_Master_Out(1605) <= \<const0>\;
  LOCKSTEP_Master_Out(1606) <= \<const0>\;
  LOCKSTEP_Master_Out(1607) <= \<const0>\;
  LOCKSTEP_Master_Out(1608) <= \<const0>\;
  LOCKSTEP_Master_Out(1609) <= \<const0>\;
  LOCKSTEP_Master_Out(1610) <= \<const0>\;
  LOCKSTEP_Master_Out(1611) <= \<const0>\;
  LOCKSTEP_Master_Out(1612) <= \<const0>\;
  LOCKSTEP_Master_Out(1613) <= \<const0>\;
  LOCKSTEP_Master_Out(1614) <= \<const0>\;
  LOCKSTEP_Master_Out(1615) <= \<const0>\;
  LOCKSTEP_Master_Out(1616) <= \<const0>\;
  LOCKSTEP_Master_Out(1617) <= \<const0>\;
  LOCKSTEP_Master_Out(1618) <= \<const0>\;
  LOCKSTEP_Master_Out(1619) <= \<const0>\;
  LOCKSTEP_Master_Out(1620) <= \<const0>\;
  LOCKSTEP_Master_Out(1621) <= \<const0>\;
  LOCKSTEP_Master_Out(1622) <= \<const0>\;
  LOCKSTEP_Master_Out(1623) <= \<const0>\;
  LOCKSTEP_Master_Out(1624) <= \<const0>\;
  LOCKSTEP_Master_Out(1625) <= \<const0>\;
  LOCKSTEP_Master_Out(1626) <= \<const0>\;
  LOCKSTEP_Master_Out(1627) <= \<const0>\;
  LOCKSTEP_Master_Out(1628) <= \<const0>\;
  LOCKSTEP_Master_Out(1629) <= \<const0>\;
  LOCKSTEP_Master_Out(1630) <= \<const0>\;
  LOCKSTEP_Master_Out(1631) <= \<const0>\;
  LOCKSTEP_Master_Out(1632) <= \<const0>\;
  LOCKSTEP_Master_Out(1633) <= \<const0>\;
  LOCKSTEP_Master_Out(1634) <= \<const0>\;
  LOCKSTEP_Master_Out(1635) <= \<const0>\;
  LOCKSTEP_Master_Out(1636) <= \<const0>\;
  LOCKSTEP_Master_Out(1637) <= \<const0>\;
  LOCKSTEP_Master_Out(1638) <= \<const0>\;
  LOCKSTEP_Master_Out(1639) <= \<const0>\;
  LOCKSTEP_Master_Out(1640) <= \<const0>\;
  LOCKSTEP_Master_Out(1641) <= \<const0>\;
  LOCKSTEP_Master_Out(1642) <= \<const0>\;
  LOCKSTEP_Master_Out(1643) <= \<const0>\;
  LOCKSTEP_Master_Out(1644) <= \<const0>\;
  LOCKSTEP_Master_Out(1645) <= \<const0>\;
  LOCKSTEP_Master_Out(1646) <= \<const0>\;
  LOCKSTEP_Master_Out(1647) <= \<const0>\;
  LOCKSTEP_Master_Out(1648) <= \<const0>\;
  LOCKSTEP_Master_Out(1649) <= \<const0>\;
  LOCKSTEP_Master_Out(1650) <= \<const0>\;
  LOCKSTEP_Master_Out(1651) <= \<const0>\;
  LOCKSTEP_Master_Out(1652) <= \<const0>\;
  LOCKSTEP_Master_Out(1653) <= \<const0>\;
  LOCKSTEP_Master_Out(1654) <= \<const0>\;
  LOCKSTEP_Master_Out(1655) <= \<const0>\;
  LOCKSTEP_Master_Out(1656) <= \<const0>\;
  LOCKSTEP_Master_Out(1657) <= \<const0>\;
  LOCKSTEP_Master_Out(1658) <= \<const0>\;
  LOCKSTEP_Master_Out(1659) <= \<const0>\;
  LOCKSTEP_Master_Out(1660) <= \<const0>\;
  LOCKSTEP_Master_Out(1661) <= \<const0>\;
  LOCKSTEP_Master_Out(1662) <= \<const0>\;
  LOCKSTEP_Master_Out(1663) <= \<const0>\;
  LOCKSTEP_Master_Out(1664) <= \<const0>\;
  LOCKSTEP_Master_Out(1665) <= \<const0>\;
  LOCKSTEP_Master_Out(1666) <= \<const0>\;
  LOCKSTEP_Master_Out(1667) <= \<const0>\;
  LOCKSTEP_Master_Out(1668) <= \<const0>\;
  LOCKSTEP_Master_Out(1669) <= \<const0>\;
  LOCKSTEP_Master_Out(1670) <= \<const0>\;
  LOCKSTEP_Master_Out(1671) <= \<const0>\;
  LOCKSTEP_Master_Out(1672) <= \<const0>\;
  LOCKSTEP_Master_Out(1673) <= \<const0>\;
  LOCKSTEP_Master_Out(1674) <= \<const0>\;
  LOCKSTEP_Master_Out(1675) <= \<const0>\;
  LOCKSTEP_Master_Out(1676) <= \<const0>\;
  LOCKSTEP_Master_Out(1677) <= \<const0>\;
  LOCKSTEP_Master_Out(1678) <= \<const0>\;
  LOCKSTEP_Master_Out(1679) <= \<const0>\;
  LOCKSTEP_Master_Out(1680) <= \<const0>\;
  LOCKSTEP_Master_Out(1681) <= \<const0>\;
  LOCKSTEP_Master_Out(1682) <= \<const0>\;
  LOCKSTEP_Master_Out(1683) <= \<const0>\;
  LOCKSTEP_Master_Out(1684) <= \<const0>\;
  LOCKSTEP_Master_Out(1685) <= \<const0>\;
  LOCKSTEP_Master_Out(1686) <= \<const0>\;
  LOCKSTEP_Master_Out(1687) <= \<const0>\;
  LOCKSTEP_Master_Out(1688) <= \<const0>\;
  LOCKSTEP_Master_Out(1689) <= \<const0>\;
  LOCKSTEP_Master_Out(1690) <= \<const0>\;
  LOCKSTEP_Master_Out(1691) <= \<const0>\;
  LOCKSTEP_Master_Out(1692) <= \<const0>\;
  LOCKSTEP_Master_Out(1693) <= \<const0>\;
  LOCKSTEP_Master_Out(1694) <= \<const0>\;
  LOCKSTEP_Master_Out(1695) <= \<const0>\;
  LOCKSTEP_Master_Out(1696) <= \<const0>\;
  LOCKSTEP_Master_Out(1697) <= \<const0>\;
  LOCKSTEP_Master_Out(1698) <= \<const0>\;
  LOCKSTEP_Master_Out(1699) <= \<const0>\;
  LOCKSTEP_Master_Out(1700) <= \<const0>\;
  LOCKSTEP_Master_Out(1701) <= \<const0>\;
  LOCKSTEP_Master_Out(1702) <= \<const0>\;
  LOCKSTEP_Master_Out(1703) <= \<const0>\;
  LOCKSTEP_Master_Out(1704) <= \<const0>\;
  LOCKSTEP_Master_Out(1705) <= \<const0>\;
  LOCKSTEP_Master_Out(1706) <= \<const0>\;
  LOCKSTEP_Master_Out(1707) <= \<const0>\;
  LOCKSTEP_Master_Out(1708) <= \<const0>\;
  LOCKSTEP_Master_Out(1709) <= \<const0>\;
  LOCKSTEP_Master_Out(1710) <= \<const0>\;
  LOCKSTEP_Master_Out(1711) <= \<const0>\;
  LOCKSTEP_Master_Out(1712) <= \<const0>\;
  LOCKSTEP_Master_Out(1713) <= \<const0>\;
  LOCKSTEP_Master_Out(1714) <= \<const0>\;
  LOCKSTEP_Master_Out(1715) <= \<const0>\;
  LOCKSTEP_Master_Out(1716) <= \<const0>\;
  LOCKSTEP_Master_Out(1717) <= \<const0>\;
  LOCKSTEP_Master_Out(1718) <= \<const0>\;
  LOCKSTEP_Master_Out(1719) <= \<const0>\;
  LOCKSTEP_Master_Out(1720) <= \<const0>\;
  LOCKSTEP_Master_Out(1721) <= \<const0>\;
  LOCKSTEP_Master_Out(1722) <= \<const0>\;
  LOCKSTEP_Master_Out(1723) <= \<const0>\;
  LOCKSTEP_Master_Out(1724) <= \<const0>\;
  LOCKSTEP_Master_Out(1725) <= \<const0>\;
  LOCKSTEP_Master_Out(1726) <= \<const0>\;
  LOCKSTEP_Master_Out(1727) <= \<const0>\;
  LOCKSTEP_Master_Out(1728) <= \<const0>\;
  LOCKSTEP_Master_Out(1729) <= \<const0>\;
  LOCKSTEP_Master_Out(1730) <= \<const0>\;
  LOCKSTEP_Master_Out(1731) <= \<const0>\;
  LOCKSTEP_Master_Out(1732) <= \<const0>\;
  LOCKSTEP_Master_Out(1733) <= \<const0>\;
  LOCKSTEP_Master_Out(1734) <= \<const0>\;
  LOCKSTEP_Master_Out(1735) <= \<const0>\;
  LOCKSTEP_Master_Out(1736) <= \<const0>\;
  LOCKSTEP_Master_Out(1737) <= \<const0>\;
  LOCKSTEP_Master_Out(1738) <= \<const0>\;
  LOCKSTEP_Master_Out(1739) <= \<const0>\;
  LOCKSTEP_Master_Out(1740) <= \<const0>\;
  LOCKSTEP_Master_Out(1741) <= \<const0>\;
  LOCKSTEP_Master_Out(1742) <= \<const0>\;
  LOCKSTEP_Master_Out(1743) <= \<const0>\;
  LOCKSTEP_Master_Out(1744) <= \<const0>\;
  LOCKSTEP_Master_Out(1745) <= \<const0>\;
  LOCKSTEP_Master_Out(1746) <= \<const0>\;
  LOCKSTEP_Master_Out(1747) <= \<const0>\;
  LOCKSTEP_Master_Out(1748) <= \<const0>\;
  LOCKSTEP_Master_Out(1749) <= \<const0>\;
  LOCKSTEP_Master_Out(1750) <= \<const0>\;
  LOCKSTEP_Master_Out(1751) <= \<const0>\;
  LOCKSTEP_Master_Out(1752) <= \<const0>\;
  LOCKSTEP_Master_Out(1753) <= \<const0>\;
  LOCKSTEP_Master_Out(1754) <= \<const0>\;
  LOCKSTEP_Master_Out(1755) <= \<const0>\;
  LOCKSTEP_Master_Out(1756) <= \<const0>\;
  LOCKSTEP_Master_Out(1757) <= \<const0>\;
  LOCKSTEP_Master_Out(1758) <= \<const0>\;
  LOCKSTEP_Master_Out(1759) <= \<const0>\;
  LOCKSTEP_Master_Out(1760) <= \<const0>\;
  LOCKSTEP_Master_Out(1761) <= \<const0>\;
  LOCKSTEP_Master_Out(1762) <= \<const0>\;
  LOCKSTEP_Master_Out(1763) <= \<const0>\;
  LOCKSTEP_Master_Out(1764) <= \<const0>\;
  LOCKSTEP_Master_Out(1765) <= \<const0>\;
  LOCKSTEP_Master_Out(1766) <= \<const0>\;
  LOCKSTEP_Master_Out(1767) <= \<const0>\;
  LOCKSTEP_Master_Out(1768) <= \<const0>\;
  LOCKSTEP_Master_Out(1769) <= \<const0>\;
  LOCKSTEP_Master_Out(1770) <= \<const0>\;
  LOCKSTEP_Master_Out(1771) <= \<const0>\;
  LOCKSTEP_Master_Out(1772) <= \<const0>\;
  LOCKSTEP_Master_Out(1773) <= \<const0>\;
  LOCKSTEP_Master_Out(1774) <= \<const0>\;
  LOCKSTEP_Master_Out(1775) <= \<const0>\;
  LOCKSTEP_Master_Out(1776) <= \<const0>\;
  LOCKSTEP_Master_Out(1777) <= \<const0>\;
  LOCKSTEP_Master_Out(1778) <= \<const0>\;
  LOCKSTEP_Master_Out(1779) <= \<const0>\;
  LOCKSTEP_Master_Out(1780) <= \<const0>\;
  LOCKSTEP_Master_Out(1781) <= \<const0>\;
  LOCKSTEP_Master_Out(1782) <= \<const0>\;
  LOCKSTEP_Master_Out(1783) <= \<const0>\;
  LOCKSTEP_Master_Out(1784) <= \<const0>\;
  LOCKSTEP_Master_Out(1785) <= \<const0>\;
  LOCKSTEP_Master_Out(1786) <= \<const0>\;
  LOCKSTEP_Master_Out(1787) <= \<const0>\;
  LOCKSTEP_Master_Out(1788) <= \<const0>\;
  LOCKSTEP_Master_Out(1789) <= \<const0>\;
  LOCKSTEP_Master_Out(1790) <= \<const0>\;
  LOCKSTEP_Master_Out(1791) <= \<const0>\;
  LOCKSTEP_Master_Out(1792) <= \<const0>\;
  LOCKSTEP_Master_Out(1793) <= \<const0>\;
  LOCKSTEP_Master_Out(1794) <= \<const0>\;
  LOCKSTEP_Master_Out(1795) <= \<const0>\;
  LOCKSTEP_Master_Out(1796) <= \<const0>\;
  LOCKSTEP_Master_Out(1797) <= \<const0>\;
  LOCKSTEP_Master_Out(1798) <= \<const0>\;
  LOCKSTEP_Master_Out(1799) <= \<const0>\;
  LOCKSTEP_Master_Out(1800) <= \<const0>\;
  LOCKSTEP_Master_Out(1801) <= \<const0>\;
  LOCKSTEP_Master_Out(1802) <= \<const0>\;
  LOCKSTEP_Master_Out(1803) <= \<const0>\;
  LOCKSTEP_Master_Out(1804) <= \<const0>\;
  LOCKSTEP_Master_Out(1805) <= \<const0>\;
  LOCKSTEP_Master_Out(1806) <= \<const0>\;
  LOCKSTEP_Master_Out(1807) <= \<const0>\;
  LOCKSTEP_Master_Out(1808) <= \<const0>\;
  LOCKSTEP_Master_Out(1809) <= \<const0>\;
  LOCKSTEP_Master_Out(1810) <= \<const0>\;
  LOCKSTEP_Master_Out(1811) <= \<const0>\;
  LOCKSTEP_Master_Out(1812) <= \<const0>\;
  LOCKSTEP_Master_Out(1813) <= \<const0>\;
  LOCKSTEP_Master_Out(1814) <= \<const0>\;
  LOCKSTEP_Master_Out(1815) <= \<const0>\;
  LOCKSTEP_Master_Out(1816) <= \<const0>\;
  LOCKSTEP_Master_Out(1817) <= \<const0>\;
  LOCKSTEP_Master_Out(1818) <= \<const0>\;
  LOCKSTEP_Master_Out(1819) <= \<const0>\;
  LOCKSTEP_Master_Out(1820) <= \<const0>\;
  LOCKSTEP_Master_Out(1821) <= \<const0>\;
  LOCKSTEP_Master_Out(1822) <= \<const0>\;
  LOCKSTEP_Master_Out(1823) <= \<const0>\;
  LOCKSTEP_Master_Out(1824) <= \<const0>\;
  LOCKSTEP_Master_Out(1825) <= \<const0>\;
  LOCKSTEP_Master_Out(1826) <= \<const0>\;
  LOCKSTEP_Master_Out(1827) <= \<const0>\;
  LOCKSTEP_Master_Out(1828) <= \<const0>\;
  LOCKSTEP_Master_Out(1829) <= \<const0>\;
  LOCKSTEP_Master_Out(1830) <= \<const0>\;
  LOCKSTEP_Master_Out(1831) <= \<const0>\;
  LOCKSTEP_Master_Out(1832) <= \<const0>\;
  LOCKSTEP_Master_Out(1833) <= \<const0>\;
  LOCKSTEP_Master_Out(1834) <= \<const0>\;
  LOCKSTEP_Master_Out(1835) <= \<const0>\;
  LOCKSTEP_Master_Out(1836) <= \<const0>\;
  LOCKSTEP_Master_Out(1837) <= \<const0>\;
  LOCKSTEP_Master_Out(1838) <= \<const0>\;
  LOCKSTEP_Master_Out(1839) <= \<const0>\;
  LOCKSTEP_Master_Out(1840) <= \<const0>\;
  LOCKSTEP_Master_Out(1841) <= \<const0>\;
  LOCKSTEP_Master_Out(1842) <= \<const0>\;
  LOCKSTEP_Master_Out(1843) <= \<const0>\;
  LOCKSTEP_Master_Out(1844) <= \<const0>\;
  LOCKSTEP_Master_Out(1845) <= \<const0>\;
  LOCKSTEP_Master_Out(1846) <= \<const0>\;
  LOCKSTEP_Master_Out(1847) <= \<const0>\;
  LOCKSTEP_Master_Out(1848) <= \<const0>\;
  LOCKSTEP_Master_Out(1849) <= \<const0>\;
  LOCKSTEP_Master_Out(1850) <= \<const0>\;
  LOCKSTEP_Master_Out(1851) <= \<const0>\;
  LOCKSTEP_Master_Out(1852) <= \<const0>\;
  LOCKSTEP_Master_Out(1853) <= \<const0>\;
  LOCKSTEP_Master_Out(1854) <= \<const0>\;
  LOCKSTEP_Master_Out(1855) <= \<const0>\;
  LOCKSTEP_Master_Out(1856) <= \<const0>\;
  LOCKSTEP_Master_Out(1857) <= \<const0>\;
  LOCKSTEP_Master_Out(1858) <= \<const0>\;
  LOCKSTEP_Master_Out(1859) <= \<const0>\;
  LOCKSTEP_Master_Out(1860) <= \<const0>\;
  LOCKSTEP_Master_Out(1861) <= \<const0>\;
  LOCKSTEP_Master_Out(1862) <= \<const0>\;
  LOCKSTEP_Master_Out(1863) <= \<const0>\;
  LOCKSTEP_Master_Out(1864) <= \<const0>\;
  LOCKSTEP_Master_Out(1865) <= \<const0>\;
  LOCKSTEP_Master_Out(1866) <= \<const0>\;
  LOCKSTEP_Master_Out(1867) <= \<const0>\;
  LOCKSTEP_Master_Out(1868) <= \<const0>\;
  LOCKSTEP_Master_Out(1869) <= \<const0>\;
  LOCKSTEP_Master_Out(1870) <= \<const0>\;
  LOCKSTEP_Master_Out(1871) <= \<const0>\;
  LOCKSTEP_Master_Out(1872) <= \<const0>\;
  LOCKSTEP_Master_Out(1873) <= \<const0>\;
  LOCKSTEP_Master_Out(1874) <= \<const0>\;
  LOCKSTEP_Master_Out(1875) <= \<const0>\;
  LOCKSTEP_Master_Out(1876) <= \<const0>\;
  LOCKSTEP_Master_Out(1877) <= \<const0>\;
  LOCKSTEP_Master_Out(1878) <= \<const0>\;
  LOCKSTEP_Master_Out(1879) <= \<const0>\;
  LOCKSTEP_Master_Out(1880) <= \<const0>\;
  LOCKSTEP_Master_Out(1881) <= \<const0>\;
  LOCKSTEP_Master_Out(1882) <= \<const0>\;
  LOCKSTEP_Master_Out(1883) <= \<const0>\;
  LOCKSTEP_Master_Out(1884) <= \<const0>\;
  LOCKSTEP_Master_Out(1885) <= \<const0>\;
  LOCKSTEP_Master_Out(1886) <= \<const0>\;
  LOCKSTEP_Master_Out(1887) <= \<const0>\;
  LOCKSTEP_Master_Out(1888) <= \<const0>\;
  LOCKSTEP_Master_Out(1889) <= \<const0>\;
  LOCKSTEP_Master_Out(1890) <= \<const0>\;
  LOCKSTEP_Master_Out(1891) <= \<const0>\;
  LOCKSTEP_Master_Out(1892) <= \<const0>\;
  LOCKSTEP_Master_Out(1893) <= \<const0>\;
  LOCKSTEP_Master_Out(1894) <= \<const0>\;
  LOCKSTEP_Master_Out(1895) <= \<const0>\;
  LOCKSTEP_Master_Out(1896) <= \<const0>\;
  LOCKSTEP_Master_Out(1897) <= \<const0>\;
  LOCKSTEP_Master_Out(1898) <= \<const0>\;
  LOCKSTEP_Master_Out(1899) <= \<const0>\;
  LOCKSTEP_Master_Out(1900) <= \<const0>\;
  LOCKSTEP_Master_Out(1901) <= \<const0>\;
  LOCKSTEP_Master_Out(1902) <= \<const0>\;
  LOCKSTEP_Master_Out(1903) <= \<const0>\;
  LOCKSTEP_Master_Out(1904) <= \<const0>\;
  LOCKSTEP_Master_Out(1905) <= \<const0>\;
  LOCKSTEP_Master_Out(1906) <= \<const0>\;
  LOCKSTEP_Master_Out(1907) <= \<const0>\;
  LOCKSTEP_Master_Out(1908) <= \<const0>\;
  LOCKSTEP_Master_Out(1909) <= \<const0>\;
  LOCKSTEP_Master_Out(1910) <= \<const0>\;
  LOCKSTEP_Master_Out(1911) <= \<const0>\;
  LOCKSTEP_Master_Out(1912) <= \<const0>\;
  LOCKSTEP_Master_Out(1913) <= \<const0>\;
  LOCKSTEP_Master_Out(1914) <= \<const0>\;
  LOCKSTEP_Master_Out(1915) <= \<const0>\;
  LOCKSTEP_Master_Out(1916) <= \<const0>\;
  LOCKSTEP_Master_Out(1917) <= \<const0>\;
  LOCKSTEP_Master_Out(1918) <= \<const0>\;
  LOCKSTEP_Master_Out(1919) <= \<const0>\;
  LOCKSTEP_Master_Out(1920) <= \<const0>\;
  LOCKSTEP_Master_Out(1921) <= \<const0>\;
  LOCKSTEP_Master_Out(1922) <= \<const0>\;
  LOCKSTEP_Master_Out(1923) <= \<const0>\;
  LOCKSTEP_Master_Out(1924) <= \<const0>\;
  LOCKSTEP_Master_Out(1925) <= \<const0>\;
  LOCKSTEP_Master_Out(1926) <= \<const0>\;
  LOCKSTEP_Master_Out(1927) <= \<const0>\;
  LOCKSTEP_Master_Out(1928) <= \<const0>\;
  LOCKSTEP_Master_Out(1929) <= \<const0>\;
  LOCKSTEP_Master_Out(1930) <= \<const0>\;
  LOCKSTEP_Master_Out(1931) <= \<const0>\;
  LOCKSTEP_Master_Out(1932) <= \<const0>\;
  LOCKSTEP_Master_Out(1933) <= \<const0>\;
  LOCKSTEP_Master_Out(1934) <= \<const0>\;
  LOCKSTEP_Master_Out(1935) <= \<const0>\;
  LOCKSTEP_Master_Out(1936) <= \<const0>\;
  LOCKSTEP_Master_Out(1937) <= \<const0>\;
  LOCKSTEP_Master_Out(1938) <= \<const0>\;
  LOCKSTEP_Master_Out(1939) <= \<const0>\;
  LOCKSTEP_Master_Out(1940) <= \<const0>\;
  LOCKSTEP_Master_Out(1941) <= \<const0>\;
  LOCKSTEP_Master_Out(1942) <= \<const0>\;
  LOCKSTEP_Master_Out(1943) <= \<const0>\;
  LOCKSTEP_Master_Out(1944) <= \<const0>\;
  LOCKSTEP_Master_Out(1945) <= \<const0>\;
  LOCKSTEP_Master_Out(1946) <= \<const0>\;
  LOCKSTEP_Master_Out(1947) <= \<const0>\;
  LOCKSTEP_Master_Out(1948) <= \<const0>\;
  LOCKSTEP_Master_Out(1949) <= \<const0>\;
  LOCKSTEP_Master_Out(1950) <= \<const0>\;
  LOCKSTEP_Master_Out(1951) <= \<const0>\;
  LOCKSTEP_Master_Out(1952) <= \<const0>\;
  LOCKSTEP_Master_Out(1953) <= \<const0>\;
  LOCKSTEP_Master_Out(1954) <= \<const0>\;
  LOCKSTEP_Master_Out(1955) <= \<const0>\;
  LOCKSTEP_Master_Out(1956) <= \<const0>\;
  LOCKSTEP_Master_Out(1957) <= \<const0>\;
  LOCKSTEP_Master_Out(1958) <= \<const0>\;
  LOCKSTEP_Master_Out(1959) <= \<const0>\;
  LOCKSTEP_Master_Out(1960) <= \<const0>\;
  LOCKSTEP_Master_Out(1961) <= \<const0>\;
  LOCKSTEP_Master_Out(1962) <= \<const0>\;
  LOCKSTEP_Master_Out(1963) <= \<const0>\;
  LOCKSTEP_Master_Out(1964) <= \<const0>\;
  LOCKSTEP_Master_Out(1965) <= \<const0>\;
  LOCKSTEP_Master_Out(1966) <= \<const0>\;
  LOCKSTEP_Master_Out(1967) <= \<const0>\;
  LOCKSTEP_Master_Out(1968) <= \<const0>\;
  LOCKSTEP_Master_Out(1969) <= \<const0>\;
  LOCKSTEP_Master_Out(1970) <= \<const0>\;
  LOCKSTEP_Master_Out(1971) <= \<const0>\;
  LOCKSTEP_Master_Out(1972) <= \<const0>\;
  LOCKSTEP_Master_Out(1973) <= \<const0>\;
  LOCKSTEP_Master_Out(1974) <= \<const0>\;
  LOCKSTEP_Master_Out(1975) <= \<const0>\;
  LOCKSTEP_Master_Out(1976) <= \<const0>\;
  LOCKSTEP_Master_Out(1977) <= \<const0>\;
  LOCKSTEP_Master_Out(1978) <= \<const0>\;
  LOCKSTEP_Master_Out(1979) <= \<const0>\;
  LOCKSTEP_Master_Out(1980) <= \<const0>\;
  LOCKSTEP_Master_Out(1981) <= \<const0>\;
  LOCKSTEP_Master_Out(1982) <= \<const0>\;
  LOCKSTEP_Master_Out(1983) <= \<const0>\;
  LOCKSTEP_Master_Out(1984) <= \<const0>\;
  LOCKSTEP_Master_Out(1985) <= \<const0>\;
  LOCKSTEP_Master_Out(1986) <= \<const0>\;
  LOCKSTEP_Master_Out(1987) <= \<const0>\;
  LOCKSTEP_Master_Out(1988) <= \<const0>\;
  LOCKSTEP_Master_Out(1989) <= \<const0>\;
  LOCKSTEP_Master_Out(1990) <= \<const0>\;
  LOCKSTEP_Master_Out(1991) <= \<const0>\;
  LOCKSTEP_Master_Out(1992) <= \<const0>\;
  LOCKSTEP_Master_Out(1993) <= \<const0>\;
  LOCKSTEP_Master_Out(1994) <= \<const0>\;
  LOCKSTEP_Master_Out(1995) <= \<const0>\;
  LOCKSTEP_Master_Out(1996) <= \<const0>\;
  LOCKSTEP_Master_Out(1997) <= \<const0>\;
  LOCKSTEP_Master_Out(1998) <= \<const0>\;
  LOCKSTEP_Master_Out(1999) <= \<const0>\;
  LOCKSTEP_Master_Out(2000) <= \<const0>\;
  LOCKSTEP_Master_Out(2001) <= \<const0>\;
  LOCKSTEP_Master_Out(2002) <= \<const0>\;
  LOCKSTEP_Master_Out(2003) <= \<const0>\;
  LOCKSTEP_Master_Out(2004) <= \<const0>\;
  LOCKSTEP_Master_Out(2005) <= \<const0>\;
  LOCKSTEP_Master_Out(2006) <= \<const0>\;
  LOCKSTEP_Master_Out(2007) <= \<const0>\;
  LOCKSTEP_Master_Out(2008) <= \<const0>\;
  LOCKSTEP_Master_Out(2009) <= \<const0>\;
  LOCKSTEP_Master_Out(2010) <= \<const0>\;
  LOCKSTEP_Master_Out(2011) <= \<const0>\;
  LOCKSTEP_Master_Out(2012) <= \<const0>\;
  LOCKSTEP_Master_Out(2013) <= \<const0>\;
  LOCKSTEP_Master_Out(2014) <= \<const0>\;
  LOCKSTEP_Master_Out(2015) <= \<const0>\;
  LOCKSTEP_Master_Out(2016) <= \<const0>\;
  LOCKSTEP_Master_Out(2017) <= \<const0>\;
  LOCKSTEP_Master_Out(2018) <= \<const0>\;
  LOCKSTEP_Master_Out(2019) <= \<const0>\;
  LOCKSTEP_Master_Out(2020) <= \<const0>\;
  LOCKSTEP_Master_Out(2021) <= \<const0>\;
  LOCKSTEP_Master_Out(2022) <= \<const0>\;
  LOCKSTEP_Master_Out(2023) <= \<const0>\;
  LOCKSTEP_Master_Out(2024) <= \<const0>\;
  LOCKSTEP_Master_Out(2025) <= \<const0>\;
  LOCKSTEP_Master_Out(2026) <= \<const0>\;
  LOCKSTEP_Master_Out(2027) <= \<const0>\;
  LOCKSTEP_Master_Out(2028) <= \<const0>\;
  LOCKSTEP_Master_Out(2029) <= \<const0>\;
  LOCKSTEP_Master_Out(2030) <= \<const0>\;
  LOCKSTEP_Master_Out(2031) <= \<const0>\;
  LOCKSTEP_Master_Out(2032) <= \<const0>\;
  LOCKSTEP_Master_Out(2033) <= \<const0>\;
  LOCKSTEP_Master_Out(2034) <= \<const0>\;
  LOCKSTEP_Master_Out(2035) <= \<const0>\;
  LOCKSTEP_Master_Out(2036) <= \<const0>\;
  LOCKSTEP_Master_Out(2037) <= \<const0>\;
  LOCKSTEP_Master_Out(2038) <= \<const0>\;
  LOCKSTEP_Master_Out(2039) <= \<const0>\;
  LOCKSTEP_Master_Out(2040) <= \<const0>\;
  LOCKSTEP_Master_Out(2041) <= \<const0>\;
  LOCKSTEP_Master_Out(2042) <= \<const0>\;
  LOCKSTEP_Master_Out(2043) <= \<const0>\;
  LOCKSTEP_Master_Out(2044) <= \<const0>\;
  LOCKSTEP_Master_Out(2045) <= \<const0>\;
  LOCKSTEP_Master_Out(2046) <= \<const0>\;
  LOCKSTEP_Master_Out(2047) <= \<const0>\;
  LOCKSTEP_Master_Out(2048) <= \<const0>\;
  LOCKSTEP_Master_Out(2049) <= \<const0>\;
  LOCKSTEP_Master_Out(2050) <= \<const0>\;
  LOCKSTEP_Master_Out(2051) <= \<const0>\;
  LOCKSTEP_Master_Out(2052) <= \<const0>\;
  LOCKSTEP_Master_Out(2053) <= \<const0>\;
  LOCKSTEP_Master_Out(2054) <= \<const0>\;
  LOCKSTEP_Master_Out(2055) <= \<const0>\;
  LOCKSTEP_Master_Out(2056) <= \<const0>\;
  LOCKSTEP_Master_Out(2057) <= \<const0>\;
  LOCKSTEP_Master_Out(2058) <= \<const0>\;
  LOCKSTEP_Master_Out(2059) <= \<const0>\;
  LOCKSTEP_Master_Out(2060) <= \<const0>\;
  LOCKSTEP_Master_Out(2061) <= \<const0>\;
  LOCKSTEP_Master_Out(2062) <= \<const0>\;
  LOCKSTEP_Master_Out(2063) <= \<const0>\;
  LOCKSTEP_Master_Out(2064) <= \<const0>\;
  LOCKSTEP_Master_Out(2065) <= \<const0>\;
  LOCKSTEP_Master_Out(2066) <= \<const0>\;
  LOCKSTEP_Master_Out(2067) <= \<const0>\;
  LOCKSTEP_Master_Out(2068) <= \<const0>\;
  LOCKSTEP_Master_Out(2069) <= \<const0>\;
  LOCKSTEP_Master_Out(2070) <= \<const0>\;
  LOCKSTEP_Master_Out(2071) <= \<const0>\;
  LOCKSTEP_Master_Out(2072) <= \<const0>\;
  LOCKSTEP_Master_Out(2073) <= \<const0>\;
  LOCKSTEP_Master_Out(2074) <= \<const0>\;
  LOCKSTEP_Master_Out(2075) <= \<const0>\;
  LOCKSTEP_Master_Out(2076) <= \<const0>\;
  LOCKSTEP_Master_Out(2077) <= \<const0>\;
  LOCKSTEP_Master_Out(2078) <= \<const0>\;
  LOCKSTEP_Master_Out(2079) <= \<const0>\;
  LOCKSTEP_Master_Out(2080) <= \<const0>\;
  LOCKSTEP_Master_Out(2081) <= \<const0>\;
  LOCKSTEP_Master_Out(2082) <= \<const0>\;
  LOCKSTEP_Master_Out(2083) <= \<const0>\;
  LOCKSTEP_Master_Out(2084) <= \<const0>\;
  LOCKSTEP_Master_Out(2085) <= \<const0>\;
  LOCKSTEP_Master_Out(2086) <= \<const0>\;
  LOCKSTEP_Master_Out(2087) <= \<const0>\;
  LOCKSTEP_Master_Out(2088) <= \<const0>\;
  LOCKSTEP_Master_Out(2089) <= \<const0>\;
  LOCKSTEP_Master_Out(2090) <= \<const0>\;
  LOCKSTEP_Master_Out(2091) <= \<const0>\;
  LOCKSTEP_Master_Out(2092) <= \<const0>\;
  LOCKSTEP_Master_Out(2093) <= \<const0>\;
  LOCKSTEP_Master_Out(2094) <= \<const0>\;
  LOCKSTEP_Master_Out(2095) <= \<const0>\;
  LOCKSTEP_Master_Out(2096) <= \<const0>\;
  LOCKSTEP_Master_Out(2097) <= \<const0>\;
  LOCKSTEP_Master_Out(2098) <= \<const0>\;
  LOCKSTEP_Master_Out(2099) <= \<const0>\;
  LOCKSTEP_Master_Out(2100) <= \<const0>\;
  LOCKSTEP_Master_Out(2101) <= \<const0>\;
  LOCKSTEP_Master_Out(2102) <= \<const0>\;
  LOCKSTEP_Master_Out(2103) <= \<const0>\;
  LOCKSTEP_Master_Out(2104) <= \<const0>\;
  LOCKSTEP_Master_Out(2105) <= \<const0>\;
  LOCKSTEP_Master_Out(2106) <= \<const0>\;
  LOCKSTEP_Master_Out(2107) <= \<const0>\;
  LOCKSTEP_Master_Out(2108) <= \<const0>\;
  LOCKSTEP_Master_Out(2109) <= \<const0>\;
  LOCKSTEP_Master_Out(2110) <= \<const0>\;
  LOCKSTEP_Master_Out(2111) <= \<const0>\;
  LOCKSTEP_Master_Out(2112) <= \<const0>\;
  LOCKSTEP_Master_Out(2113) <= \<const0>\;
  LOCKSTEP_Master_Out(2114) <= \<const0>\;
  LOCKSTEP_Master_Out(2115) <= \<const0>\;
  LOCKSTEP_Master_Out(2116) <= \<const0>\;
  LOCKSTEP_Master_Out(2117) <= \<const0>\;
  LOCKSTEP_Master_Out(2118) <= \<const0>\;
  LOCKSTEP_Master_Out(2119) <= \<const0>\;
  LOCKSTEP_Master_Out(2120) <= \<const0>\;
  LOCKSTEP_Master_Out(2121) <= \<const0>\;
  LOCKSTEP_Master_Out(2122) <= \<const0>\;
  LOCKSTEP_Master_Out(2123) <= \<const0>\;
  LOCKSTEP_Master_Out(2124) <= \<const0>\;
  LOCKSTEP_Master_Out(2125) <= \<const0>\;
  LOCKSTEP_Master_Out(2126) <= \<const0>\;
  LOCKSTEP_Master_Out(2127) <= \<const0>\;
  LOCKSTEP_Master_Out(2128) <= \<const0>\;
  LOCKSTEP_Master_Out(2129) <= \<const0>\;
  LOCKSTEP_Master_Out(2130) <= \<const0>\;
  LOCKSTEP_Master_Out(2131) <= \<const0>\;
  LOCKSTEP_Master_Out(2132) <= \<const0>\;
  LOCKSTEP_Master_Out(2133) <= \<const0>\;
  LOCKSTEP_Master_Out(2134) <= \<const0>\;
  LOCKSTEP_Master_Out(2135) <= \<const0>\;
  LOCKSTEP_Master_Out(2136) <= \<const0>\;
  LOCKSTEP_Master_Out(2137) <= \<const0>\;
  LOCKSTEP_Master_Out(2138) <= \<const0>\;
  LOCKSTEP_Master_Out(2139) <= \<const0>\;
  LOCKSTEP_Master_Out(2140) <= \<const0>\;
  LOCKSTEP_Master_Out(2141) <= \<const0>\;
  LOCKSTEP_Master_Out(2142) <= \<const0>\;
  LOCKSTEP_Master_Out(2143) <= \<const0>\;
  LOCKSTEP_Master_Out(2144) <= \<const0>\;
  LOCKSTEP_Master_Out(2145) <= \<const0>\;
  LOCKSTEP_Master_Out(2146) <= \<const0>\;
  LOCKSTEP_Master_Out(2147) <= \<const0>\;
  LOCKSTEP_Master_Out(2148) <= \<const0>\;
  LOCKSTEP_Master_Out(2149) <= \<const0>\;
  LOCKSTEP_Master_Out(2150) <= \<const0>\;
  LOCKSTEP_Master_Out(2151) <= \<const0>\;
  LOCKSTEP_Master_Out(2152) <= \<const0>\;
  LOCKSTEP_Master_Out(2153) <= \<const0>\;
  LOCKSTEP_Master_Out(2154) <= \<const0>\;
  LOCKSTEP_Master_Out(2155) <= \<const0>\;
  LOCKSTEP_Master_Out(2156) <= \<const0>\;
  LOCKSTEP_Master_Out(2157) <= \<const0>\;
  LOCKSTEP_Master_Out(2158) <= \<const0>\;
  LOCKSTEP_Master_Out(2159) <= \<const0>\;
  LOCKSTEP_Master_Out(2160) <= \<const0>\;
  LOCKSTEP_Master_Out(2161) <= \<const0>\;
  LOCKSTEP_Master_Out(2162) <= \<const0>\;
  LOCKSTEP_Master_Out(2163) <= \<const0>\;
  LOCKSTEP_Master_Out(2164) <= \<const0>\;
  LOCKSTEP_Master_Out(2165) <= \<const0>\;
  LOCKSTEP_Master_Out(2166) <= \<const0>\;
  LOCKSTEP_Master_Out(2167) <= \<const0>\;
  LOCKSTEP_Master_Out(2168) <= \<const0>\;
  LOCKSTEP_Master_Out(2169) <= \<const0>\;
  LOCKSTEP_Master_Out(2170) <= \<const0>\;
  LOCKSTEP_Master_Out(2171) <= \<const0>\;
  LOCKSTEP_Master_Out(2172) <= \<const0>\;
  LOCKSTEP_Master_Out(2173) <= \<const0>\;
  LOCKSTEP_Master_Out(2174) <= \<const0>\;
  LOCKSTEP_Master_Out(2175) <= \<const0>\;
  LOCKSTEP_Master_Out(2176) <= \<const0>\;
  LOCKSTEP_Master_Out(2177) <= \<const0>\;
  LOCKSTEP_Master_Out(2178) <= \<const0>\;
  LOCKSTEP_Master_Out(2179) <= \<const0>\;
  LOCKSTEP_Master_Out(2180) <= \<const0>\;
  LOCKSTEP_Master_Out(2181) <= \<const0>\;
  LOCKSTEP_Master_Out(2182) <= \<const0>\;
  LOCKSTEP_Master_Out(2183) <= \<const0>\;
  LOCKSTEP_Master_Out(2184) <= \<const0>\;
  LOCKSTEP_Master_Out(2185) <= \<const0>\;
  LOCKSTEP_Master_Out(2186) <= \<const0>\;
  LOCKSTEP_Master_Out(2187) <= \<const0>\;
  LOCKSTEP_Master_Out(2188) <= \<const0>\;
  LOCKSTEP_Master_Out(2189) <= \<const0>\;
  LOCKSTEP_Master_Out(2190) <= \<const0>\;
  LOCKSTEP_Master_Out(2191) <= \<const0>\;
  LOCKSTEP_Master_Out(2192) <= \<const0>\;
  LOCKSTEP_Master_Out(2193) <= \<const0>\;
  LOCKSTEP_Master_Out(2194) <= \<const0>\;
  LOCKSTEP_Master_Out(2195) <= \<const0>\;
  LOCKSTEP_Master_Out(2196) <= \<const0>\;
  LOCKSTEP_Master_Out(2197) <= \<const0>\;
  LOCKSTEP_Master_Out(2198) <= \<const0>\;
  LOCKSTEP_Master_Out(2199) <= \<const0>\;
  LOCKSTEP_Master_Out(2200) <= \<const0>\;
  LOCKSTEP_Master_Out(2201) <= \<const0>\;
  LOCKSTEP_Master_Out(2202) <= \<const0>\;
  LOCKSTEP_Master_Out(2203) <= \<const0>\;
  LOCKSTEP_Master_Out(2204) <= \<const0>\;
  LOCKSTEP_Master_Out(2205) <= \<const0>\;
  LOCKSTEP_Master_Out(2206) <= \<const0>\;
  LOCKSTEP_Master_Out(2207) <= \<const0>\;
  LOCKSTEP_Master_Out(2208) <= \<const0>\;
  LOCKSTEP_Master_Out(2209) <= \<const0>\;
  LOCKSTEP_Master_Out(2210) <= \<const0>\;
  LOCKSTEP_Master_Out(2211) <= \<const0>\;
  LOCKSTEP_Master_Out(2212) <= \<const0>\;
  LOCKSTEP_Master_Out(2213) <= \<const0>\;
  LOCKSTEP_Master_Out(2214) <= \<const0>\;
  LOCKSTEP_Master_Out(2215) <= \<const0>\;
  LOCKSTEP_Master_Out(2216) <= \<const0>\;
  LOCKSTEP_Master_Out(2217) <= \<const0>\;
  LOCKSTEP_Master_Out(2218) <= \<const0>\;
  LOCKSTEP_Master_Out(2219) <= \<const0>\;
  LOCKSTEP_Master_Out(2220) <= \<const0>\;
  LOCKSTEP_Master_Out(2221) <= \<const0>\;
  LOCKSTEP_Master_Out(2222) <= \<const0>\;
  LOCKSTEP_Master_Out(2223) <= \<const0>\;
  LOCKSTEP_Master_Out(2224) <= \<const0>\;
  LOCKSTEP_Master_Out(2225) <= \<const0>\;
  LOCKSTEP_Master_Out(2226) <= \<const0>\;
  LOCKSTEP_Master_Out(2227) <= \<const0>\;
  LOCKSTEP_Master_Out(2228) <= \<const0>\;
  LOCKSTEP_Master_Out(2229) <= \<const0>\;
  LOCKSTEP_Master_Out(2230) <= \<const0>\;
  LOCKSTEP_Master_Out(2231) <= \<const0>\;
  LOCKSTEP_Master_Out(2232) <= \<const0>\;
  LOCKSTEP_Master_Out(2233) <= \<const0>\;
  LOCKSTEP_Master_Out(2234) <= \<const0>\;
  LOCKSTEP_Master_Out(2235) <= \<const0>\;
  LOCKSTEP_Master_Out(2236) <= \<const0>\;
  LOCKSTEP_Master_Out(2237) <= \<const0>\;
  LOCKSTEP_Master_Out(2238) <= \<const0>\;
  LOCKSTEP_Master_Out(2239) <= \<const0>\;
  LOCKSTEP_Master_Out(2240) <= \<const0>\;
  LOCKSTEP_Master_Out(2241) <= \<const0>\;
  LOCKSTEP_Master_Out(2242) <= \<const0>\;
  LOCKSTEP_Master_Out(2243) <= \<const0>\;
  LOCKSTEP_Master_Out(2244) <= \<const0>\;
  LOCKSTEP_Master_Out(2245) <= \<const0>\;
  LOCKSTEP_Master_Out(2246) <= \<const0>\;
  LOCKSTEP_Master_Out(2247) <= \<const0>\;
  LOCKSTEP_Master_Out(2248) <= \<const0>\;
  LOCKSTEP_Master_Out(2249) <= \<const0>\;
  LOCKSTEP_Master_Out(2250) <= \<const0>\;
  LOCKSTEP_Master_Out(2251) <= \<const0>\;
  LOCKSTEP_Master_Out(2252) <= \<const0>\;
  LOCKSTEP_Master_Out(2253) <= \<const0>\;
  LOCKSTEP_Master_Out(2254) <= \<const0>\;
  LOCKSTEP_Master_Out(2255) <= \<const0>\;
  LOCKSTEP_Master_Out(2256) <= \<const0>\;
  LOCKSTEP_Master_Out(2257) <= \<const0>\;
  LOCKSTEP_Master_Out(2258) <= \<const0>\;
  LOCKSTEP_Master_Out(2259) <= \<const0>\;
  LOCKSTEP_Master_Out(2260) <= \<const0>\;
  LOCKSTEP_Master_Out(2261) <= \<const0>\;
  LOCKSTEP_Master_Out(2262) <= \<const0>\;
  LOCKSTEP_Master_Out(2263) <= \<const0>\;
  LOCKSTEP_Master_Out(2264) <= \<const0>\;
  LOCKSTEP_Master_Out(2265) <= \<const0>\;
  LOCKSTEP_Master_Out(2266) <= \<const0>\;
  LOCKSTEP_Master_Out(2267) <= \<const0>\;
  LOCKSTEP_Master_Out(2268) <= \<const0>\;
  LOCKSTEP_Master_Out(2269) <= \<const0>\;
  LOCKSTEP_Master_Out(2270) <= \<const0>\;
  LOCKSTEP_Master_Out(2271) <= \<const0>\;
  LOCKSTEP_Master_Out(2272) <= \<const0>\;
  LOCKSTEP_Master_Out(2273) <= \<const0>\;
  LOCKSTEP_Master_Out(2274) <= \<const0>\;
  LOCKSTEP_Master_Out(2275) <= \<const0>\;
  LOCKSTEP_Master_Out(2276) <= \<const0>\;
  LOCKSTEP_Master_Out(2277) <= \<const0>\;
  LOCKSTEP_Master_Out(2278) <= \<const0>\;
  LOCKSTEP_Master_Out(2279) <= \<const0>\;
  LOCKSTEP_Master_Out(2280) <= \<const0>\;
  LOCKSTEP_Master_Out(2281) <= \<const0>\;
  LOCKSTEP_Master_Out(2282) <= \<const0>\;
  LOCKSTEP_Master_Out(2283) <= \<const0>\;
  LOCKSTEP_Master_Out(2284) <= \<const0>\;
  LOCKSTEP_Master_Out(2285) <= \<const0>\;
  LOCKSTEP_Master_Out(2286) <= \<const0>\;
  LOCKSTEP_Master_Out(2287) <= \<const0>\;
  LOCKSTEP_Master_Out(2288) <= \<const0>\;
  LOCKSTEP_Master_Out(2289) <= \<const0>\;
  LOCKSTEP_Master_Out(2290) <= \<const0>\;
  LOCKSTEP_Master_Out(2291) <= \<const0>\;
  LOCKSTEP_Master_Out(2292) <= \<const0>\;
  LOCKSTEP_Master_Out(2293) <= \<const0>\;
  LOCKSTEP_Master_Out(2294) <= \<const0>\;
  LOCKSTEP_Master_Out(2295) <= \<const0>\;
  LOCKSTEP_Master_Out(2296) <= \<const0>\;
  LOCKSTEP_Master_Out(2297) <= \<const0>\;
  LOCKSTEP_Master_Out(2298) <= \<const0>\;
  LOCKSTEP_Master_Out(2299) <= \<const0>\;
  LOCKSTEP_Master_Out(2300) <= \<const0>\;
  LOCKSTEP_Master_Out(2301) <= \<const0>\;
  LOCKSTEP_Master_Out(2302) <= \<const0>\;
  LOCKSTEP_Master_Out(2303) <= \<const0>\;
  LOCKSTEP_Master_Out(2304) <= \<const0>\;
  LOCKSTEP_Master_Out(2305) <= \<const0>\;
  LOCKSTEP_Master_Out(2306) <= \<const0>\;
  LOCKSTEP_Master_Out(2307) <= \<const0>\;
  LOCKSTEP_Master_Out(2308) <= \<const0>\;
  LOCKSTEP_Master_Out(2309) <= \<const0>\;
  LOCKSTEP_Master_Out(2310) <= \<const0>\;
  LOCKSTEP_Master_Out(2311) <= \<const0>\;
  LOCKSTEP_Master_Out(2312) <= \<const0>\;
  LOCKSTEP_Master_Out(2313) <= \<const0>\;
  LOCKSTEP_Master_Out(2314) <= \<const0>\;
  LOCKSTEP_Master_Out(2315) <= \<const0>\;
  LOCKSTEP_Master_Out(2316) <= \<const0>\;
  LOCKSTEP_Master_Out(2317) <= \<const0>\;
  LOCKSTEP_Master_Out(2318) <= \<const0>\;
  LOCKSTEP_Master_Out(2319) <= \<const0>\;
  LOCKSTEP_Master_Out(2320) <= \<const0>\;
  LOCKSTEP_Master_Out(2321) <= \<const0>\;
  LOCKSTEP_Master_Out(2322) <= \<const0>\;
  LOCKSTEP_Master_Out(2323) <= \<const0>\;
  LOCKSTEP_Master_Out(2324) <= \<const0>\;
  LOCKSTEP_Master_Out(2325) <= \<const0>\;
  LOCKSTEP_Master_Out(2326) <= \<const0>\;
  LOCKSTEP_Master_Out(2327) <= \<const0>\;
  LOCKSTEP_Master_Out(2328) <= \<const0>\;
  LOCKSTEP_Master_Out(2329) <= \<const0>\;
  LOCKSTEP_Master_Out(2330) <= \<const0>\;
  LOCKSTEP_Master_Out(2331) <= \<const0>\;
  LOCKSTEP_Master_Out(2332) <= \<const0>\;
  LOCKSTEP_Master_Out(2333) <= \<const0>\;
  LOCKSTEP_Master_Out(2334) <= \<const0>\;
  LOCKSTEP_Master_Out(2335) <= \<const0>\;
  LOCKSTEP_Master_Out(2336) <= \<const0>\;
  LOCKSTEP_Master_Out(2337) <= \<const0>\;
  LOCKSTEP_Master_Out(2338) <= \<const0>\;
  LOCKSTEP_Master_Out(2339) <= \<const0>\;
  LOCKSTEP_Master_Out(2340) <= \<const0>\;
  LOCKSTEP_Master_Out(2341) <= \<const0>\;
  LOCKSTEP_Master_Out(2342) <= \<const0>\;
  LOCKSTEP_Master_Out(2343) <= \<const0>\;
  LOCKSTEP_Master_Out(2344) <= \<const0>\;
  LOCKSTEP_Master_Out(2345) <= \<const0>\;
  LOCKSTEP_Master_Out(2346) <= \<const0>\;
  LOCKSTEP_Master_Out(2347) <= \<const0>\;
  LOCKSTEP_Master_Out(2348) <= \<const0>\;
  LOCKSTEP_Master_Out(2349) <= \<const0>\;
  LOCKSTEP_Master_Out(2350) <= \<const0>\;
  LOCKSTEP_Master_Out(2351) <= \<const0>\;
  LOCKSTEP_Master_Out(2352) <= \<const0>\;
  LOCKSTEP_Master_Out(2353) <= \<const0>\;
  LOCKSTEP_Master_Out(2354) <= \<const0>\;
  LOCKSTEP_Master_Out(2355) <= \<const0>\;
  LOCKSTEP_Master_Out(2356) <= \<const0>\;
  LOCKSTEP_Master_Out(2357) <= \<const0>\;
  LOCKSTEP_Master_Out(2358) <= \<const0>\;
  LOCKSTEP_Master_Out(2359) <= \<const0>\;
  LOCKSTEP_Master_Out(2360) <= \<const0>\;
  LOCKSTEP_Master_Out(2361) <= \<const0>\;
  LOCKSTEP_Master_Out(2362) <= \<const0>\;
  LOCKSTEP_Master_Out(2363) <= \<const0>\;
  LOCKSTEP_Master_Out(2364) <= \<const0>\;
  LOCKSTEP_Master_Out(2365) <= \<const0>\;
  LOCKSTEP_Master_Out(2366) <= \<const0>\;
  LOCKSTEP_Master_Out(2367) <= \<const0>\;
  LOCKSTEP_Master_Out(2368) <= \<const0>\;
  LOCKSTEP_Master_Out(2369) <= \<const0>\;
  LOCKSTEP_Master_Out(2370) <= \<const0>\;
  LOCKSTEP_Master_Out(2371) <= \<const0>\;
  LOCKSTEP_Master_Out(2372) <= \<const0>\;
  LOCKSTEP_Master_Out(2373) <= \<const0>\;
  LOCKSTEP_Master_Out(2374) <= \<const0>\;
  LOCKSTEP_Master_Out(2375) <= \<const0>\;
  LOCKSTEP_Master_Out(2376) <= \<const0>\;
  LOCKSTEP_Master_Out(2377) <= \<const0>\;
  LOCKSTEP_Master_Out(2378) <= \<const0>\;
  LOCKSTEP_Master_Out(2379) <= \<const0>\;
  LOCKSTEP_Master_Out(2380) <= \<const0>\;
  LOCKSTEP_Master_Out(2381) <= \<const0>\;
  LOCKSTEP_Master_Out(2382) <= \<const0>\;
  LOCKSTEP_Master_Out(2383) <= \<const0>\;
  LOCKSTEP_Master_Out(2384) <= \<const0>\;
  LOCKSTEP_Master_Out(2385) <= \<const0>\;
  LOCKSTEP_Master_Out(2386) <= \<const0>\;
  LOCKSTEP_Master_Out(2387) <= \<const0>\;
  LOCKSTEP_Master_Out(2388) <= \<const0>\;
  LOCKSTEP_Master_Out(2389) <= \<const0>\;
  LOCKSTEP_Master_Out(2390) <= \<const0>\;
  LOCKSTEP_Master_Out(2391) <= \<const0>\;
  LOCKSTEP_Master_Out(2392) <= \<const0>\;
  LOCKSTEP_Master_Out(2393) <= \<const0>\;
  LOCKSTEP_Master_Out(2394) <= \<const0>\;
  LOCKSTEP_Master_Out(2395) <= \<const0>\;
  LOCKSTEP_Master_Out(2396) <= \<const0>\;
  LOCKSTEP_Master_Out(2397) <= \<const0>\;
  LOCKSTEP_Master_Out(2398) <= \<const0>\;
  LOCKSTEP_Master_Out(2399) <= \<const0>\;
  LOCKSTEP_Master_Out(2400) <= \<const0>\;
  LOCKSTEP_Master_Out(2401) <= \<const0>\;
  LOCKSTEP_Master_Out(2402) <= \<const0>\;
  LOCKSTEP_Master_Out(2403) <= \<const0>\;
  LOCKSTEP_Master_Out(2404) <= \<const0>\;
  LOCKSTEP_Master_Out(2405) <= \<const0>\;
  LOCKSTEP_Master_Out(2406) <= \<const0>\;
  LOCKSTEP_Master_Out(2407) <= \<const0>\;
  LOCKSTEP_Master_Out(2408) <= \<const0>\;
  LOCKSTEP_Master_Out(2409) <= \<const0>\;
  LOCKSTEP_Master_Out(2410) <= \<const0>\;
  LOCKSTEP_Master_Out(2411) <= \<const0>\;
  LOCKSTEP_Master_Out(2412) <= \<const0>\;
  LOCKSTEP_Master_Out(2413) <= \<const0>\;
  LOCKSTEP_Master_Out(2414) <= \<const0>\;
  LOCKSTEP_Master_Out(2415) <= \<const0>\;
  LOCKSTEP_Master_Out(2416) <= \<const0>\;
  LOCKSTEP_Master_Out(2417) <= \<const0>\;
  LOCKSTEP_Master_Out(2418) <= \<const0>\;
  LOCKSTEP_Master_Out(2419) <= \<const0>\;
  LOCKSTEP_Master_Out(2420) <= \<const0>\;
  LOCKSTEP_Master_Out(2421) <= \<const0>\;
  LOCKSTEP_Master_Out(2422) <= \<const0>\;
  LOCKSTEP_Master_Out(2423) <= \<const0>\;
  LOCKSTEP_Master_Out(2424) <= \<const0>\;
  LOCKSTEP_Master_Out(2425) <= \<const0>\;
  LOCKSTEP_Master_Out(2426) <= \<const0>\;
  LOCKSTEP_Master_Out(2427) <= \<const0>\;
  LOCKSTEP_Master_Out(2428) <= \<const0>\;
  LOCKSTEP_Master_Out(2429) <= \<const0>\;
  LOCKSTEP_Master_Out(2430) <= \<const0>\;
  LOCKSTEP_Master_Out(2431) <= \<const0>\;
  LOCKSTEP_Master_Out(2432) <= \<const0>\;
  LOCKSTEP_Master_Out(2433) <= \<const0>\;
  LOCKSTEP_Master_Out(2434) <= \<const0>\;
  LOCKSTEP_Master_Out(2435) <= \<const0>\;
  LOCKSTEP_Master_Out(2436) <= \<const0>\;
  LOCKSTEP_Master_Out(2437) <= \<const0>\;
  LOCKSTEP_Master_Out(2438) <= \<const0>\;
  LOCKSTEP_Master_Out(2439) <= \<const0>\;
  LOCKSTEP_Master_Out(2440) <= \<const0>\;
  LOCKSTEP_Master_Out(2441) <= \<const0>\;
  LOCKSTEP_Master_Out(2442) <= \<const0>\;
  LOCKSTEP_Master_Out(2443) <= \<const0>\;
  LOCKSTEP_Master_Out(2444) <= \<const0>\;
  LOCKSTEP_Master_Out(2445) <= \<const0>\;
  LOCKSTEP_Master_Out(2446) <= \<const0>\;
  LOCKSTEP_Master_Out(2447) <= \<const0>\;
  LOCKSTEP_Master_Out(2448) <= \<const0>\;
  LOCKSTEP_Master_Out(2449) <= \<const0>\;
  LOCKSTEP_Master_Out(2450) <= \<const0>\;
  LOCKSTEP_Master_Out(2451) <= \<const0>\;
  LOCKSTEP_Master_Out(2452) <= \<const0>\;
  LOCKSTEP_Master_Out(2453) <= \<const0>\;
  LOCKSTEP_Master_Out(2454) <= \<const0>\;
  LOCKSTEP_Master_Out(2455) <= \<const0>\;
  LOCKSTEP_Master_Out(2456) <= \<const0>\;
  LOCKSTEP_Master_Out(2457) <= \<const0>\;
  LOCKSTEP_Master_Out(2458) <= \<const0>\;
  LOCKSTEP_Master_Out(2459) <= \<const0>\;
  LOCKSTEP_Master_Out(2460) <= \<const0>\;
  LOCKSTEP_Master_Out(2461) <= \<const0>\;
  LOCKSTEP_Master_Out(2462) <= \<const0>\;
  LOCKSTEP_Master_Out(2463) <= \<const0>\;
  LOCKSTEP_Master_Out(2464) <= \<const0>\;
  LOCKSTEP_Master_Out(2465) <= \<const0>\;
  LOCKSTEP_Master_Out(2466) <= \<const0>\;
  LOCKSTEP_Master_Out(2467) <= \<const0>\;
  LOCKSTEP_Master_Out(2468) <= \<const0>\;
  LOCKSTEP_Master_Out(2469) <= \<const0>\;
  LOCKSTEP_Master_Out(2470) <= \<const0>\;
  LOCKSTEP_Master_Out(2471) <= \<const0>\;
  LOCKSTEP_Master_Out(2472) <= \<const0>\;
  LOCKSTEP_Master_Out(2473) <= \<const0>\;
  LOCKSTEP_Master_Out(2474) <= \<const0>\;
  LOCKSTEP_Master_Out(2475) <= \<const0>\;
  LOCKSTEP_Master_Out(2476) <= \<const0>\;
  LOCKSTEP_Master_Out(2477) <= \<const0>\;
  LOCKSTEP_Master_Out(2478) <= \<const0>\;
  LOCKSTEP_Master_Out(2479) <= \<const0>\;
  LOCKSTEP_Master_Out(2480) <= \<const0>\;
  LOCKSTEP_Master_Out(2481) <= \<const0>\;
  LOCKSTEP_Master_Out(2482) <= \<const0>\;
  LOCKSTEP_Master_Out(2483) <= \<const0>\;
  LOCKSTEP_Master_Out(2484) <= \<const0>\;
  LOCKSTEP_Master_Out(2485) <= \<const0>\;
  LOCKSTEP_Master_Out(2486) <= \<const0>\;
  LOCKSTEP_Master_Out(2487) <= \<const0>\;
  LOCKSTEP_Master_Out(2488) <= \<const0>\;
  LOCKSTEP_Master_Out(2489) <= \<const0>\;
  LOCKSTEP_Master_Out(2490) <= \<const0>\;
  LOCKSTEP_Master_Out(2491) <= \<const0>\;
  LOCKSTEP_Master_Out(2492) <= \<const0>\;
  LOCKSTEP_Master_Out(2493) <= \<const0>\;
  LOCKSTEP_Master_Out(2494) <= \<const0>\;
  LOCKSTEP_Master_Out(2495) <= \<const0>\;
  LOCKSTEP_Master_Out(2496) <= \<const0>\;
  LOCKSTEP_Master_Out(2497) <= \<const0>\;
  LOCKSTEP_Master_Out(2498) <= \<const0>\;
  LOCKSTEP_Master_Out(2499) <= \<const0>\;
  LOCKSTEP_Master_Out(2500) <= \<const0>\;
  LOCKSTEP_Master_Out(2501) <= \<const0>\;
  LOCKSTEP_Master_Out(2502) <= \<const0>\;
  LOCKSTEP_Master_Out(2503) <= \<const0>\;
  LOCKSTEP_Master_Out(2504) <= \<const0>\;
  LOCKSTEP_Master_Out(2505) <= \<const0>\;
  LOCKSTEP_Master_Out(2506) <= \<const0>\;
  LOCKSTEP_Master_Out(2507) <= \<const0>\;
  LOCKSTEP_Master_Out(2508) <= \<const0>\;
  LOCKSTEP_Master_Out(2509) <= \<const0>\;
  LOCKSTEP_Master_Out(2510) <= \<const0>\;
  LOCKSTEP_Master_Out(2511) <= \<const0>\;
  LOCKSTEP_Master_Out(2512) <= \<const0>\;
  LOCKSTEP_Master_Out(2513) <= \<const0>\;
  LOCKSTEP_Master_Out(2514) <= \<const0>\;
  LOCKSTEP_Master_Out(2515) <= \<const0>\;
  LOCKSTEP_Master_Out(2516) <= \<const0>\;
  LOCKSTEP_Master_Out(2517) <= \<const0>\;
  LOCKSTEP_Master_Out(2518) <= \<const0>\;
  LOCKSTEP_Master_Out(2519) <= \<const0>\;
  LOCKSTEP_Master_Out(2520) <= \<const0>\;
  LOCKSTEP_Master_Out(2521) <= \<const0>\;
  LOCKSTEP_Master_Out(2522) <= \<const0>\;
  LOCKSTEP_Master_Out(2523) <= \<const0>\;
  LOCKSTEP_Master_Out(2524) <= \<const0>\;
  LOCKSTEP_Master_Out(2525) <= \<const0>\;
  LOCKSTEP_Master_Out(2526) <= \<const0>\;
  LOCKSTEP_Master_Out(2527) <= \<const0>\;
  LOCKSTEP_Master_Out(2528) <= \<const0>\;
  LOCKSTEP_Master_Out(2529) <= \<const0>\;
  LOCKSTEP_Master_Out(2530) <= \<const0>\;
  LOCKSTEP_Master_Out(2531) <= \<const0>\;
  LOCKSTEP_Master_Out(2532) <= \<const0>\;
  LOCKSTEP_Master_Out(2533) <= \<const0>\;
  LOCKSTEP_Master_Out(2534) <= \<const0>\;
  LOCKSTEP_Master_Out(2535) <= \<const0>\;
  LOCKSTEP_Master_Out(2536) <= \<const0>\;
  LOCKSTEP_Master_Out(2537) <= \<const0>\;
  LOCKSTEP_Master_Out(2538) <= \<const0>\;
  LOCKSTEP_Master_Out(2539) <= \<const0>\;
  LOCKSTEP_Master_Out(2540) <= \<const0>\;
  LOCKSTEP_Master_Out(2541) <= \<const0>\;
  LOCKSTEP_Master_Out(2542) <= \<const0>\;
  LOCKSTEP_Master_Out(2543) <= \<const0>\;
  LOCKSTEP_Master_Out(2544) <= \<const0>\;
  LOCKSTEP_Master_Out(2545) <= \<const0>\;
  LOCKSTEP_Master_Out(2546) <= \<const0>\;
  LOCKSTEP_Master_Out(2547) <= \<const0>\;
  LOCKSTEP_Master_Out(2548) <= \<const0>\;
  LOCKSTEP_Master_Out(2549) <= \<const0>\;
  LOCKSTEP_Master_Out(2550) <= \<const0>\;
  LOCKSTEP_Master_Out(2551) <= \<const0>\;
  LOCKSTEP_Master_Out(2552) <= \<const0>\;
  LOCKSTEP_Master_Out(2553) <= \<const0>\;
  LOCKSTEP_Master_Out(2554) <= \<const0>\;
  LOCKSTEP_Master_Out(2555) <= \<const0>\;
  LOCKSTEP_Master_Out(2556) <= \<const0>\;
  LOCKSTEP_Master_Out(2557) <= \<const0>\;
  LOCKSTEP_Master_Out(2558) <= \<const0>\;
  LOCKSTEP_Master_Out(2559) <= \<const0>\;
  LOCKSTEP_Master_Out(2560) <= \<const0>\;
  LOCKSTEP_Master_Out(2561) <= \<const0>\;
  LOCKSTEP_Master_Out(2562) <= \<const0>\;
  LOCKSTEP_Master_Out(2563) <= \<const0>\;
  LOCKSTEP_Master_Out(2564) <= \<const0>\;
  LOCKSTEP_Master_Out(2565) <= \<const0>\;
  LOCKSTEP_Master_Out(2566) <= \<const0>\;
  LOCKSTEP_Master_Out(2567) <= \<const0>\;
  LOCKSTEP_Master_Out(2568) <= \<const0>\;
  LOCKSTEP_Master_Out(2569) <= \<const0>\;
  LOCKSTEP_Master_Out(2570) <= \<const0>\;
  LOCKSTEP_Master_Out(2571) <= \<const0>\;
  LOCKSTEP_Master_Out(2572) <= \<const0>\;
  LOCKSTEP_Master_Out(2573) <= \<const0>\;
  LOCKSTEP_Master_Out(2574) <= \<const0>\;
  LOCKSTEP_Master_Out(2575) <= \<const0>\;
  LOCKSTEP_Master_Out(2576) <= \<const0>\;
  LOCKSTEP_Master_Out(2577) <= \<const0>\;
  LOCKSTEP_Master_Out(2578) <= \<const0>\;
  LOCKSTEP_Master_Out(2579) <= \<const0>\;
  LOCKSTEP_Master_Out(2580) <= \<const0>\;
  LOCKSTEP_Master_Out(2581) <= \<const0>\;
  LOCKSTEP_Master_Out(2582) <= \<const0>\;
  LOCKSTEP_Master_Out(2583) <= \<const0>\;
  LOCKSTEP_Master_Out(2584) <= \<const0>\;
  LOCKSTEP_Master_Out(2585) <= \<const0>\;
  LOCKSTEP_Master_Out(2586) <= \<const0>\;
  LOCKSTEP_Master_Out(2587) <= \<const0>\;
  LOCKSTEP_Master_Out(2588) <= \<const0>\;
  LOCKSTEP_Master_Out(2589) <= \<const0>\;
  LOCKSTEP_Master_Out(2590) <= \<const0>\;
  LOCKSTEP_Master_Out(2591) <= \<const0>\;
  LOCKSTEP_Master_Out(2592) <= \<const0>\;
  LOCKSTEP_Master_Out(2593) <= \<const0>\;
  LOCKSTEP_Master_Out(2594) <= \<const0>\;
  LOCKSTEP_Master_Out(2595) <= \<const0>\;
  LOCKSTEP_Master_Out(2596) <= \<const0>\;
  LOCKSTEP_Master_Out(2597) <= \<const0>\;
  LOCKSTEP_Master_Out(2598) <= \<const0>\;
  LOCKSTEP_Master_Out(2599) <= \<const0>\;
  LOCKSTEP_Master_Out(2600) <= \<const0>\;
  LOCKSTEP_Master_Out(2601) <= \<const0>\;
  LOCKSTEP_Master_Out(2602) <= \<const0>\;
  LOCKSTEP_Master_Out(2603) <= \<const0>\;
  LOCKSTEP_Master_Out(2604) <= \<const0>\;
  LOCKSTEP_Master_Out(2605) <= \<const0>\;
  LOCKSTEP_Master_Out(2606) <= \<const0>\;
  LOCKSTEP_Master_Out(2607) <= \<const0>\;
  LOCKSTEP_Master_Out(2608) <= \<const0>\;
  LOCKSTEP_Master_Out(2609) <= \<const0>\;
  LOCKSTEP_Master_Out(2610) <= \<const0>\;
  LOCKSTEP_Master_Out(2611) <= \<const0>\;
  LOCKSTEP_Master_Out(2612) <= \<const0>\;
  LOCKSTEP_Master_Out(2613) <= \<const0>\;
  LOCKSTEP_Master_Out(2614) <= \<const0>\;
  LOCKSTEP_Master_Out(2615) <= \<const0>\;
  LOCKSTEP_Master_Out(2616) <= \<const0>\;
  LOCKSTEP_Master_Out(2617) <= \<const0>\;
  LOCKSTEP_Master_Out(2618) <= \<const0>\;
  LOCKSTEP_Master_Out(2619) <= \<const0>\;
  LOCKSTEP_Master_Out(2620) <= \<const0>\;
  LOCKSTEP_Master_Out(2621) <= \<const0>\;
  LOCKSTEP_Master_Out(2622) <= \<const0>\;
  LOCKSTEP_Master_Out(2623) <= \<const0>\;
  LOCKSTEP_Master_Out(2624) <= \<const0>\;
  LOCKSTEP_Master_Out(2625) <= \<const0>\;
  LOCKSTEP_Master_Out(2626) <= \<const0>\;
  LOCKSTEP_Master_Out(2627) <= \<const0>\;
  LOCKSTEP_Master_Out(2628) <= \<const0>\;
  LOCKSTEP_Master_Out(2629) <= \<const0>\;
  LOCKSTEP_Master_Out(2630) <= \<const0>\;
  LOCKSTEP_Master_Out(2631) <= \<const0>\;
  LOCKSTEP_Master_Out(2632) <= \<const0>\;
  LOCKSTEP_Master_Out(2633) <= \<const0>\;
  LOCKSTEP_Master_Out(2634) <= \<const0>\;
  LOCKSTEP_Master_Out(2635) <= \<const0>\;
  LOCKSTEP_Master_Out(2636) <= \<const0>\;
  LOCKSTEP_Master_Out(2637) <= \<const0>\;
  LOCKSTEP_Master_Out(2638) <= \<const0>\;
  LOCKSTEP_Master_Out(2639) <= \<const0>\;
  LOCKSTEP_Master_Out(2640) <= \<const0>\;
  LOCKSTEP_Master_Out(2641) <= \<const0>\;
  LOCKSTEP_Master_Out(2642) <= \<const0>\;
  LOCKSTEP_Master_Out(2643) <= \<const0>\;
  LOCKSTEP_Master_Out(2644) <= \<const0>\;
  LOCKSTEP_Master_Out(2645) <= \<const0>\;
  LOCKSTEP_Master_Out(2646) <= \<const0>\;
  LOCKSTEP_Master_Out(2647) <= \<const0>\;
  LOCKSTEP_Master_Out(2648) <= \<const0>\;
  LOCKSTEP_Master_Out(2649) <= \<const0>\;
  LOCKSTEP_Master_Out(2650) <= \<const0>\;
  LOCKSTEP_Master_Out(2651) <= \<const0>\;
  LOCKSTEP_Master_Out(2652) <= \<const0>\;
  LOCKSTEP_Master_Out(2653) <= \<const0>\;
  LOCKSTEP_Master_Out(2654) <= \<const0>\;
  LOCKSTEP_Master_Out(2655) <= \<const0>\;
  LOCKSTEP_Master_Out(2656) <= \<const0>\;
  LOCKSTEP_Master_Out(2657) <= \<const0>\;
  LOCKSTEP_Master_Out(2658) <= \<const0>\;
  LOCKSTEP_Master_Out(2659) <= \<const0>\;
  LOCKSTEP_Master_Out(2660) <= \<const0>\;
  LOCKSTEP_Master_Out(2661) <= \<const0>\;
  LOCKSTEP_Master_Out(2662) <= \<const0>\;
  LOCKSTEP_Master_Out(2663) <= \<const0>\;
  LOCKSTEP_Master_Out(2664) <= \<const0>\;
  LOCKSTEP_Master_Out(2665) <= \<const0>\;
  LOCKSTEP_Master_Out(2666) <= \<const0>\;
  LOCKSTEP_Master_Out(2667) <= \<const0>\;
  LOCKSTEP_Master_Out(2668) <= \<const0>\;
  LOCKSTEP_Master_Out(2669) <= \<const0>\;
  LOCKSTEP_Master_Out(2670) <= \<const0>\;
  LOCKSTEP_Master_Out(2671) <= \<const0>\;
  LOCKSTEP_Master_Out(2672) <= \<const0>\;
  LOCKSTEP_Master_Out(2673) <= \<const0>\;
  LOCKSTEP_Master_Out(2674) <= \<const0>\;
  LOCKSTEP_Master_Out(2675) <= \<const0>\;
  LOCKSTEP_Master_Out(2676) <= \<const0>\;
  LOCKSTEP_Master_Out(2677) <= \<const0>\;
  LOCKSTEP_Master_Out(2678) <= \<const0>\;
  LOCKSTEP_Master_Out(2679) <= \<const0>\;
  LOCKSTEP_Master_Out(2680) <= \<const0>\;
  LOCKSTEP_Master_Out(2681) <= \<const0>\;
  LOCKSTEP_Master_Out(2682) <= \<const0>\;
  LOCKSTEP_Master_Out(2683) <= \<const0>\;
  LOCKSTEP_Master_Out(2684) <= \<const0>\;
  LOCKSTEP_Master_Out(2685) <= \<const0>\;
  LOCKSTEP_Master_Out(2686) <= \<const0>\;
  LOCKSTEP_Master_Out(2687) <= \<const0>\;
  LOCKSTEP_Master_Out(2688) <= \<const0>\;
  LOCKSTEP_Master_Out(2689) <= \<const0>\;
  LOCKSTEP_Master_Out(2690) <= \<const0>\;
  LOCKSTEP_Master_Out(2691) <= \<const0>\;
  LOCKSTEP_Master_Out(2692) <= \<const0>\;
  LOCKSTEP_Master_Out(2693) <= \<const0>\;
  LOCKSTEP_Master_Out(2694) <= \<const0>\;
  LOCKSTEP_Master_Out(2695) <= \<const0>\;
  LOCKSTEP_Master_Out(2696) <= \<const0>\;
  LOCKSTEP_Master_Out(2697) <= \<const0>\;
  LOCKSTEP_Master_Out(2698) <= \<const0>\;
  LOCKSTEP_Master_Out(2699) <= \<const0>\;
  LOCKSTEP_Master_Out(2700) <= \<const0>\;
  LOCKSTEP_Master_Out(2701) <= \<const0>\;
  LOCKSTEP_Master_Out(2702) <= \<const0>\;
  LOCKSTEP_Master_Out(2703) <= \<const0>\;
  LOCKSTEP_Master_Out(2704) <= \<const0>\;
  LOCKSTEP_Master_Out(2705) <= \<const0>\;
  LOCKSTEP_Master_Out(2706) <= \<const0>\;
  LOCKSTEP_Master_Out(2707) <= \<const0>\;
  LOCKSTEP_Master_Out(2708) <= \<const0>\;
  LOCKSTEP_Master_Out(2709) <= \<const0>\;
  LOCKSTEP_Master_Out(2710) <= \<const0>\;
  LOCKSTEP_Master_Out(2711) <= \<const0>\;
  LOCKSTEP_Master_Out(2712) <= \<const0>\;
  LOCKSTEP_Master_Out(2713) <= \<const0>\;
  LOCKSTEP_Master_Out(2714) <= \<const0>\;
  LOCKSTEP_Master_Out(2715) <= \<const0>\;
  LOCKSTEP_Master_Out(2716) <= \<const0>\;
  LOCKSTEP_Master_Out(2717) <= \<const0>\;
  LOCKSTEP_Master_Out(2718) <= \<const0>\;
  LOCKSTEP_Master_Out(2719) <= \<const0>\;
  LOCKSTEP_Master_Out(2720) <= \<const0>\;
  LOCKSTEP_Master_Out(2721) <= \<const0>\;
  LOCKSTEP_Master_Out(2722) <= \<const0>\;
  LOCKSTEP_Master_Out(2723) <= \<const0>\;
  LOCKSTEP_Master_Out(2724) <= \<const0>\;
  LOCKSTEP_Master_Out(2725) <= \<const0>\;
  LOCKSTEP_Master_Out(2726) <= \<const0>\;
  LOCKSTEP_Master_Out(2727) <= \<const0>\;
  LOCKSTEP_Master_Out(2728) <= \<const0>\;
  LOCKSTEP_Master_Out(2729) <= \<const0>\;
  LOCKSTEP_Master_Out(2730) <= \<const0>\;
  LOCKSTEP_Master_Out(2731) <= \<const0>\;
  LOCKSTEP_Master_Out(2732) <= \<const0>\;
  LOCKSTEP_Master_Out(2733) <= \<const0>\;
  LOCKSTEP_Master_Out(2734) <= \<const0>\;
  LOCKSTEP_Master_Out(2735) <= \<const0>\;
  LOCKSTEP_Master_Out(2736) <= \<const0>\;
  LOCKSTEP_Master_Out(2737) <= \<const0>\;
  LOCKSTEP_Master_Out(2738) <= \<const0>\;
  LOCKSTEP_Master_Out(2739) <= \<const0>\;
  LOCKSTEP_Master_Out(2740) <= \<const0>\;
  LOCKSTEP_Master_Out(2741) <= \<const0>\;
  LOCKSTEP_Master_Out(2742) <= \<const0>\;
  LOCKSTEP_Master_Out(2743) <= \<const0>\;
  LOCKSTEP_Master_Out(2744) <= \<const0>\;
  LOCKSTEP_Master_Out(2745) <= \<const0>\;
  LOCKSTEP_Master_Out(2746) <= \<const0>\;
  LOCKSTEP_Master_Out(2747) <= \<const0>\;
  LOCKSTEP_Master_Out(2748) <= \<const0>\;
  LOCKSTEP_Master_Out(2749) <= \<const0>\;
  LOCKSTEP_Master_Out(2750) <= \<const0>\;
  LOCKSTEP_Master_Out(2751) <= \<const0>\;
  LOCKSTEP_Master_Out(2752) <= \<const0>\;
  LOCKSTEP_Master_Out(2753) <= \<const0>\;
  LOCKSTEP_Master_Out(2754) <= \<const0>\;
  LOCKSTEP_Master_Out(2755) <= \<const0>\;
  LOCKSTEP_Master_Out(2756) <= \<const0>\;
  LOCKSTEP_Master_Out(2757) <= \<const0>\;
  LOCKSTEP_Master_Out(2758) <= \<const0>\;
  LOCKSTEP_Master_Out(2759) <= \<const0>\;
  LOCKSTEP_Master_Out(2760) <= \<const0>\;
  LOCKSTEP_Master_Out(2761) <= \<const0>\;
  LOCKSTEP_Master_Out(2762) <= \<const0>\;
  LOCKSTEP_Master_Out(2763) <= \<const0>\;
  LOCKSTEP_Master_Out(2764) <= \<const0>\;
  LOCKSTEP_Master_Out(2765) <= \<const0>\;
  LOCKSTEP_Master_Out(2766) <= \<const0>\;
  LOCKSTEP_Master_Out(2767) <= \<const0>\;
  LOCKSTEP_Master_Out(2768) <= \<const0>\;
  LOCKSTEP_Master_Out(2769) <= \<const0>\;
  LOCKSTEP_Master_Out(2770) <= \<const0>\;
  LOCKSTEP_Master_Out(2771) <= \<const0>\;
  LOCKSTEP_Master_Out(2772) <= \<const0>\;
  LOCKSTEP_Master_Out(2773) <= \<const0>\;
  LOCKSTEP_Master_Out(2774) <= \<const0>\;
  LOCKSTEP_Master_Out(2775) <= \<const0>\;
  LOCKSTEP_Master_Out(2776) <= \<const0>\;
  LOCKSTEP_Master_Out(2777) <= \<const0>\;
  LOCKSTEP_Master_Out(2778) <= \<const0>\;
  LOCKSTEP_Master_Out(2779) <= \<const0>\;
  LOCKSTEP_Master_Out(2780) <= \<const0>\;
  LOCKSTEP_Master_Out(2781) <= \<const0>\;
  LOCKSTEP_Master_Out(2782) <= \<const0>\;
  LOCKSTEP_Master_Out(2783) <= \<const0>\;
  LOCKSTEP_Master_Out(2784) <= \<const0>\;
  LOCKSTEP_Master_Out(2785) <= \<const0>\;
  LOCKSTEP_Master_Out(2786) <= \<const0>\;
  LOCKSTEP_Master_Out(2787) <= \<const0>\;
  LOCKSTEP_Master_Out(2788) <= \<const0>\;
  LOCKSTEP_Master_Out(2789) <= \<const0>\;
  LOCKSTEP_Master_Out(2790) <= \<const0>\;
  LOCKSTEP_Master_Out(2791) <= \<const0>\;
  LOCKSTEP_Master_Out(2792) <= \<const0>\;
  LOCKSTEP_Master_Out(2793) <= \<const0>\;
  LOCKSTEP_Master_Out(2794) <= \<const0>\;
  LOCKSTEP_Master_Out(2795) <= \<const0>\;
  LOCKSTEP_Master_Out(2796) <= \<const0>\;
  LOCKSTEP_Master_Out(2797) <= \<const0>\;
  LOCKSTEP_Master_Out(2798) <= \<const0>\;
  LOCKSTEP_Master_Out(2799) <= \<const0>\;
  LOCKSTEP_Master_Out(2800) <= \<const0>\;
  LOCKSTEP_Master_Out(2801) <= \<const0>\;
  LOCKSTEP_Master_Out(2802) <= \<const0>\;
  LOCKSTEP_Master_Out(2803) <= \<const0>\;
  LOCKSTEP_Master_Out(2804) <= \<const0>\;
  LOCKSTEP_Master_Out(2805) <= \<const0>\;
  LOCKSTEP_Master_Out(2806) <= \<const0>\;
  LOCKSTEP_Master_Out(2807) <= \<const0>\;
  LOCKSTEP_Master_Out(2808) <= \<const0>\;
  LOCKSTEP_Master_Out(2809) <= \<const0>\;
  LOCKSTEP_Master_Out(2810) <= \<const0>\;
  LOCKSTEP_Master_Out(2811) <= \<const0>\;
  LOCKSTEP_Master_Out(2812) <= \<const0>\;
  LOCKSTEP_Master_Out(2813) <= \<const0>\;
  LOCKSTEP_Master_Out(2814) <= \<const0>\;
  LOCKSTEP_Master_Out(2815) <= \<const0>\;
  LOCKSTEP_Master_Out(2816) <= \<const0>\;
  LOCKSTEP_Master_Out(2817) <= \<const0>\;
  LOCKSTEP_Master_Out(2818) <= \<const0>\;
  LOCKSTEP_Master_Out(2819) <= \<const0>\;
  LOCKSTEP_Master_Out(2820) <= \<const0>\;
  LOCKSTEP_Master_Out(2821) <= \<const0>\;
  LOCKSTEP_Master_Out(2822) <= \<const0>\;
  LOCKSTEP_Master_Out(2823) <= \<const0>\;
  LOCKSTEP_Master_Out(2824) <= \<const0>\;
  LOCKSTEP_Master_Out(2825) <= \<const0>\;
  LOCKSTEP_Master_Out(2826) <= \<const0>\;
  LOCKSTEP_Master_Out(2827) <= \<const0>\;
  LOCKSTEP_Master_Out(2828) <= \<const0>\;
  LOCKSTEP_Master_Out(2829) <= \<const0>\;
  LOCKSTEP_Master_Out(2830) <= \<const0>\;
  LOCKSTEP_Master_Out(2831) <= \<const0>\;
  LOCKSTEP_Master_Out(2832) <= \<const0>\;
  LOCKSTEP_Master_Out(2833) <= \<const0>\;
  LOCKSTEP_Master_Out(2834) <= \<const0>\;
  LOCKSTEP_Master_Out(2835) <= \<const0>\;
  LOCKSTEP_Master_Out(2836) <= \<const0>\;
  LOCKSTEP_Master_Out(2837) <= \<const0>\;
  LOCKSTEP_Master_Out(2838) <= \<const0>\;
  LOCKSTEP_Master_Out(2839) <= \<const0>\;
  LOCKSTEP_Master_Out(2840) <= \<const0>\;
  LOCKSTEP_Master_Out(2841) <= \<const0>\;
  LOCKSTEP_Master_Out(2842) <= \<const0>\;
  LOCKSTEP_Master_Out(2843) <= \<const0>\;
  LOCKSTEP_Master_Out(2844) <= \<const0>\;
  LOCKSTEP_Master_Out(2845) <= \<const0>\;
  LOCKSTEP_Master_Out(2846) <= \<const0>\;
  LOCKSTEP_Master_Out(2847) <= \<const0>\;
  LOCKSTEP_Master_Out(2848) <= \<const0>\;
  LOCKSTEP_Master_Out(2849) <= \<const0>\;
  LOCKSTEP_Master_Out(2850) <= \<const0>\;
  LOCKSTEP_Master_Out(2851) <= \<const0>\;
  LOCKSTEP_Master_Out(2852) <= \<const0>\;
  LOCKSTEP_Master_Out(2853) <= \<const0>\;
  LOCKSTEP_Master_Out(2854) <= \<const0>\;
  LOCKSTEP_Master_Out(2855) <= \<const0>\;
  LOCKSTEP_Master_Out(2856) <= \<const0>\;
  LOCKSTEP_Master_Out(2857) <= \<const0>\;
  LOCKSTEP_Master_Out(2858) <= \<const0>\;
  LOCKSTEP_Master_Out(2859) <= \<const0>\;
  LOCKSTEP_Master_Out(2860) <= \<const0>\;
  LOCKSTEP_Master_Out(2861) <= \<const0>\;
  LOCKSTEP_Master_Out(2862) <= \<const0>\;
  LOCKSTEP_Master_Out(2863) <= \<const0>\;
  LOCKSTEP_Master_Out(2864) <= \<const0>\;
  LOCKSTEP_Master_Out(2865) <= \<const0>\;
  LOCKSTEP_Master_Out(2866) <= \<const0>\;
  LOCKSTEP_Master_Out(2867) <= \<const0>\;
  LOCKSTEP_Master_Out(2868) <= \<const0>\;
  LOCKSTEP_Master_Out(2869) <= \<const0>\;
  LOCKSTEP_Master_Out(2870) <= \<const0>\;
  LOCKSTEP_Master_Out(2871) <= \<const0>\;
  LOCKSTEP_Master_Out(2872) <= \<const0>\;
  LOCKSTEP_Master_Out(2873) <= \<const0>\;
  LOCKSTEP_Master_Out(2874) <= \<const0>\;
  LOCKSTEP_Master_Out(2875) <= \<const0>\;
  LOCKSTEP_Master_Out(2876) <= \<const0>\;
  LOCKSTEP_Master_Out(2877) <= \<const0>\;
  LOCKSTEP_Master_Out(2878) <= \<const0>\;
  LOCKSTEP_Master_Out(2879) <= \<const0>\;
  LOCKSTEP_Master_Out(2880) <= \<const0>\;
  LOCKSTEP_Master_Out(2881) <= \<const0>\;
  LOCKSTEP_Master_Out(2882) <= \<const0>\;
  LOCKSTEP_Master_Out(2883) <= \<const0>\;
  LOCKSTEP_Master_Out(2884) <= \<const0>\;
  LOCKSTEP_Master_Out(2885) <= \<const0>\;
  LOCKSTEP_Master_Out(2886) <= \<const0>\;
  LOCKSTEP_Master_Out(2887) <= \<const0>\;
  LOCKSTEP_Master_Out(2888) <= \<const0>\;
  LOCKSTEP_Master_Out(2889) <= \<const0>\;
  LOCKSTEP_Master_Out(2890) <= \<const0>\;
  LOCKSTEP_Master_Out(2891) <= \<const0>\;
  LOCKSTEP_Master_Out(2892) <= \<const0>\;
  LOCKSTEP_Master_Out(2893) <= \<const0>\;
  LOCKSTEP_Master_Out(2894) <= \<const0>\;
  LOCKSTEP_Master_Out(2895) <= \<const0>\;
  LOCKSTEP_Master_Out(2896) <= \<const0>\;
  LOCKSTEP_Master_Out(2897) <= \<const0>\;
  LOCKSTEP_Master_Out(2898) <= \<const0>\;
  LOCKSTEP_Master_Out(2899) <= \<const0>\;
  LOCKSTEP_Master_Out(2900) <= \<const0>\;
  LOCKSTEP_Master_Out(2901) <= \<const0>\;
  LOCKSTEP_Master_Out(2902) <= \<const0>\;
  LOCKSTEP_Master_Out(2903) <= \<const0>\;
  LOCKSTEP_Master_Out(2904) <= \<const0>\;
  LOCKSTEP_Master_Out(2905) <= \<const0>\;
  LOCKSTEP_Master_Out(2906) <= \<const0>\;
  LOCKSTEP_Master_Out(2907) <= \<const0>\;
  LOCKSTEP_Master_Out(2908) <= \<const0>\;
  LOCKSTEP_Master_Out(2909) <= \<const0>\;
  LOCKSTEP_Master_Out(2910) <= \<const0>\;
  LOCKSTEP_Master_Out(2911) <= \<const0>\;
  LOCKSTEP_Master_Out(2912) <= \<const0>\;
  LOCKSTEP_Master_Out(2913) <= \<const0>\;
  LOCKSTEP_Master_Out(2914) <= \<const0>\;
  LOCKSTEP_Master_Out(2915) <= \<const0>\;
  LOCKSTEP_Master_Out(2916) <= \<const0>\;
  LOCKSTEP_Master_Out(2917) <= \<const0>\;
  LOCKSTEP_Master_Out(2918) <= \<const0>\;
  LOCKSTEP_Master_Out(2919) <= \<const0>\;
  LOCKSTEP_Master_Out(2920) <= \<const0>\;
  LOCKSTEP_Master_Out(2921) <= \<const0>\;
  LOCKSTEP_Master_Out(2922) <= \<const0>\;
  LOCKSTEP_Master_Out(2923) <= \<const0>\;
  LOCKSTEP_Master_Out(2924) <= \<const0>\;
  LOCKSTEP_Master_Out(2925) <= \<const0>\;
  LOCKSTEP_Master_Out(2926) <= \<const0>\;
  LOCKSTEP_Master_Out(2927) <= \<const0>\;
  LOCKSTEP_Master_Out(2928) <= \<const0>\;
  LOCKSTEP_Master_Out(2929) <= \<const0>\;
  LOCKSTEP_Master_Out(2930) <= \<const0>\;
  LOCKSTEP_Master_Out(2931) <= \<const0>\;
  LOCKSTEP_Master_Out(2932) <= \<const0>\;
  LOCKSTEP_Master_Out(2933) <= \<const0>\;
  LOCKSTEP_Master_Out(2934) <= \<const0>\;
  LOCKSTEP_Master_Out(2935) <= \<const0>\;
  LOCKSTEP_Master_Out(2936) <= \<const0>\;
  LOCKSTEP_Master_Out(2937) <= \<const0>\;
  LOCKSTEP_Master_Out(2938) <= \<const0>\;
  LOCKSTEP_Master_Out(2939) <= \<const0>\;
  LOCKSTEP_Master_Out(2940) <= \<const0>\;
  LOCKSTEP_Master_Out(2941) <= \<const0>\;
  LOCKSTEP_Master_Out(2942) <= \<const0>\;
  LOCKSTEP_Master_Out(2943) <= \<const0>\;
  LOCKSTEP_Master_Out(2944) <= \<const0>\;
  LOCKSTEP_Master_Out(2945) <= \<const0>\;
  LOCKSTEP_Master_Out(2946) <= \<const0>\;
  LOCKSTEP_Master_Out(2947) <= \<const0>\;
  LOCKSTEP_Master_Out(2948) <= \<const0>\;
  LOCKSTEP_Master_Out(2949) <= \<const0>\;
  LOCKSTEP_Master_Out(2950) <= \<const0>\;
  LOCKSTEP_Master_Out(2951) <= \<const0>\;
  LOCKSTEP_Master_Out(2952) <= \<const0>\;
  LOCKSTEP_Master_Out(2953) <= \<const0>\;
  LOCKSTEP_Master_Out(2954) <= \<const0>\;
  LOCKSTEP_Master_Out(2955) <= \<const0>\;
  LOCKSTEP_Master_Out(2956) <= \<const0>\;
  LOCKSTEP_Master_Out(2957) <= \<const0>\;
  LOCKSTEP_Master_Out(2958) <= \<const0>\;
  LOCKSTEP_Master_Out(2959) <= \<const0>\;
  LOCKSTEP_Master_Out(2960) <= \<const0>\;
  LOCKSTEP_Master_Out(2961) <= \<const0>\;
  LOCKSTEP_Master_Out(2962) <= \<const0>\;
  LOCKSTEP_Master_Out(2963) <= \<const0>\;
  LOCKSTEP_Master_Out(2964) <= \<const0>\;
  LOCKSTEP_Master_Out(2965) <= \<const0>\;
  LOCKSTEP_Master_Out(2966) <= \<const0>\;
  LOCKSTEP_Master_Out(2967) <= \<const0>\;
  LOCKSTEP_Master_Out(2968) <= \<const0>\;
  LOCKSTEP_Master_Out(2969) <= \<const0>\;
  LOCKSTEP_Master_Out(2970) <= \<const0>\;
  LOCKSTEP_Master_Out(2971) <= \<const0>\;
  LOCKSTEP_Master_Out(2972) <= \<const0>\;
  LOCKSTEP_Master_Out(2973) <= \<const0>\;
  LOCKSTEP_Master_Out(2974) <= \<const0>\;
  LOCKSTEP_Master_Out(2975) <= \<const0>\;
  LOCKSTEP_Master_Out(2976) <= \<const0>\;
  LOCKSTEP_Master_Out(2977) <= \<const0>\;
  LOCKSTEP_Master_Out(2978) <= \<const0>\;
  LOCKSTEP_Master_Out(2979) <= \<const0>\;
  LOCKSTEP_Master_Out(2980) <= \<const0>\;
  LOCKSTEP_Master_Out(2981) <= \<const0>\;
  LOCKSTEP_Master_Out(2982) <= \<const0>\;
  LOCKSTEP_Master_Out(2983) <= \<const0>\;
  LOCKSTEP_Master_Out(2984) <= \<const0>\;
  LOCKSTEP_Master_Out(2985) <= \<const0>\;
  LOCKSTEP_Master_Out(2986) <= \<const0>\;
  LOCKSTEP_Master_Out(2987) <= \<const0>\;
  LOCKSTEP_Master_Out(2988) <= \<const0>\;
  LOCKSTEP_Master_Out(2989) <= \<const0>\;
  LOCKSTEP_Master_Out(2990) <= \<const0>\;
  LOCKSTEP_Master_Out(2991) <= \<const0>\;
  LOCKSTEP_Master_Out(2992) <= \<const0>\;
  LOCKSTEP_Master_Out(2993) <= \<const0>\;
  LOCKSTEP_Master_Out(2994) <= \<const0>\;
  LOCKSTEP_Master_Out(2995) <= \<const0>\;
  LOCKSTEP_Master_Out(2996) <= \<const0>\;
  LOCKSTEP_Master_Out(2997) <= \<const0>\;
  LOCKSTEP_Master_Out(2998) <= \<const0>\;
  LOCKSTEP_Master_Out(2999) <= \<const0>\;
  LOCKSTEP_Master_Out(3000) <= \<const0>\;
  LOCKSTEP_Master_Out(3001) <= \<const0>\;
  LOCKSTEP_Master_Out(3002) <= \<const0>\;
  LOCKSTEP_Master_Out(3003) <= \<const0>\;
  LOCKSTEP_Master_Out(3004) <= \<const0>\;
  LOCKSTEP_Master_Out(3005) <= \<const0>\;
  LOCKSTEP_Master_Out(3006) <= \<const0>\;
  LOCKSTEP_Master_Out(3007) <= \<const0>\;
  LOCKSTEP_Master_Out(3008) <= \<const0>\;
  LOCKSTEP_Master_Out(3009) <= \<const0>\;
  LOCKSTEP_Master_Out(3010) <= \<const0>\;
  LOCKSTEP_Master_Out(3011) <= \<const0>\;
  LOCKSTEP_Master_Out(3012) <= \<const0>\;
  LOCKSTEP_Master_Out(3013) <= \<const0>\;
  LOCKSTEP_Master_Out(3014) <= \<const0>\;
  LOCKSTEP_Master_Out(3015) <= \<const0>\;
  LOCKSTEP_Master_Out(3016) <= \<const0>\;
  LOCKSTEP_Master_Out(3017) <= \<const0>\;
  LOCKSTEP_Master_Out(3018) <= \<const0>\;
  LOCKSTEP_Master_Out(3019) <= \<const0>\;
  LOCKSTEP_Master_Out(3020) <= \<const0>\;
  LOCKSTEP_Master_Out(3021) <= \<const0>\;
  LOCKSTEP_Master_Out(3022) <= \<const0>\;
  LOCKSTEP_Master_Out(3023) <= \<const0>\;
  LOCKSTEP_Master_Out(3024) <= \<const0>\;
  LOCKSTEP_Master_Out(3025) <= \<const0>\;
  LOCKSTEP_Master_Out(3026) <= \<const0>\;
  LOCKSTEP_Master_Out(3027) <= \<const0>\;
  LOCKSTEP_Master_Out(3028) <= \<const0>\;
  LOCKSTEP_Master_Out(3029) <= \<const0>\;
  LOCKSTEP_Master_Out(3030) <= \<const0>\;
  LOCKSTEP_Master_Out(3031) <= \<const0>\;
  LOCKSTEP_Master_Out(3032) <= \<const0>\;
  LOCKSTEP_Master_Out(3033) <= \<const0>\;
  LOCKSTEP_Master_Out(3034) <= \<const0>\;
  LOCKSTEP_Master_Out(3035) <= \<const0>\;
  LOCKSTEP_Master_Out(3036) <= \<const0>\;
  LOCKSTEP_Master_Out(3037) <= \<const0>\;
  LOCKSTEP_Master_Out(3038) <= \<const0>\;
  LOCKSTEP_Master_Out(3039) <= \<const0>\;
  LOCKSTEP_Master_Out(3040) <= \<const0>\;
  LOCKSTEP_Master_Out(3041) <= \<const0>\;
  LOCKSTEP_Master_Out(3042) <= \<const0>\;
  LOCKSTEP_Master_Out(3043) <= \<const0>\;
  LOCKSTEP_Master_Out(3044) <= \<const0>\;
  LOCKSTEP_Master_Out(3045) <= \<const0>\;
  LOCKSTEP_Master_Out(3046) <= \<const0>\;
  LOCKSTEP_Master_Out(3047) <= \<const0>\;
  LOCKSTEP_Master_Out(3048) <= \<const0>\;
  LOCKSTEP_Master_Out(3049) <= \<const0>\;
  LOCKSTEP_Master_Out(3050) <= \<const0>\;
  LOCKSTEP_Master_Out(3051) <= \<const0>\;
  LOCKSTEP_Master_Out(3052) <= \<const0>\;
  LOCKSTEP_Master_Out(3053) <= \<const0>\;
  LOCKSTEP_Master_Out(3054) <= \<const0>\;
  LOCKSTEP_Master_Out(3055) <= \<const0>\;
  LOCKSTEP_Master_Out(3056) <= \<const0>\;
  LOCKSTEP_Master_Out(3057) <= \<const0>\;
  LOCKSTEP_Master_Out(3058) <= \<const0>\;
  LOCKSTEP_Master_Out(3059) <= \<const0>\;
  LOCKSTEP_Master_Out(3060) <= \<const0>\;
  LOCKSTEP_Master_Out(3061) <= \<const0>\;
  LOCKSTEP_Master_Out(3062) <= \<const0>\;
  LOCKSTEP_Master_Out(3063) <= \<const0>\;
  LOCKSTEP_Master_Out(3064) <= \<const0>\;
  LOCKSTEP_Master_Out(3065) <= \<const0>\;
  LOCKSTEP_Master_Out(3066) <= \<const0>\;
  LOCKSTEP_Master_Out(3067) <= \<const0>\;
  LOCKSTEP_Master_Out(3068) <= \<const0>\;
  LOCKSTEP_Master_Out(3069) <= \<const0>\;
  LOCKSTEP_Master_Out(3070) <= \<const0>\;
  LOCKSTEP_Master_Out(3071) <= \<const0>\;
  LOCKSTEP_Master_Out(3072) <= \<const0>\;
  LOCKSTEP_Master_Out(3073) <= \<const0>\;
  LOCKSTEP_Master_Out(3074) <= \<const0>\;
  LOCKSTEP_Master_Out(3075) <= \<const0>\;
  LOCKSTEP_Master_Out(3076) <= \<const0>\;
  LOCKSTEP_Master_Out(3077) <= \<const0>\;
  LOCKSTEP_Master_Out(3078) <= \<const0>\;
  LOCKSTEP_Master_Out(3079) <= \<const0>\;
  LOCKSTEP_Master_Out(3080) <= \<const0>\;
  LOCKSTEP_Master_Out(3081) <= \<const0>\;
  LOCKSTEP_Master_Out(3082) <= \<const0>\;
  LOCKSTEP_Master_Out(3083) <= \<const0>\;
  LOCKSTEP_Master_Out(3084) <= \<const0>\;
  LOCKSTEP_Master_Out(3085) <= \<const0>\;
  LOCKSTEP_Master_Out(3086) <= \<const0>\;
  LOCKSTEP_Master_Out(3087) <= \<const0>\;
  LOCKSTEP_Master_Out(3088) <= \<const0>\;
  LOCKSTEP_Master_Out(3089) <= \<const0>\;
  LOCKSTEP_Master_Out(3090) <= \<const0>\;
  LOCKSTEP_Master_Out(3091) <= \<const0>\;
  LOCKSTEP_Master_Out(3092) <= \<const0>\;
  LOCKSTEP_Master_Out(3093) <= \<const0>\;
  LOCKSTEP_Master_Out(3094) <= \<const0>\;
  LOCKSTEP_Master_Out(3095) <= \<const0>\;
  LOCKSTEP_Master_Out(3096) <= \<const0>\;
  LOCKSTEP_Master_Out(3097) <= \<const0>\;
  LOCKSTEP_Master_Out(3098) <= \<const0>\;
  LOCKSTEP_Master_Out(3099) <= \<const0>\;
  LOCKSTEP_Master_Out(3100) <= \<const0>\;
  LOCKSTEP_Master_Out(3101) <= \<const0>\;
  LOCKSTEP_Master_Out(3102) <= \<const0>\;
  LOCKSTEP_Master_Out(3103) <= \<const0>\;
  LOCKSTEP_Master_Out(3104) <= \<const0>\;
  LOCKSTEP_Master_Out(3105) <= \<const0>\;
  LOCKSTEP_Master_Out(3106) <= \<const0>\;
  LOCKSTEP_Master_Out(3107) <= \<const0>\;
  LOCKSTEP_Master_Out(3108) <= \<const0>\;
  LOCKSTEP_Master_Out(3109) <= \<const0>\;
  LOCKSTEP_Master_Out(3110) <= \<const0>\;
  LOCKSTEP_Master_Out(3111) <= \<const0>\;
  LOCKSTEP_Master_Out(3112) <= \<const0>\;
  LOCKSTEP_Master_Out(3113) <= \<const0>\;
  LOCKSTEP_Master_Out(3114) <= \<const0>\;
  LOCKSTEP_Master_Out(3115) <= \<const0>\;
  LOCKSTEP_Master_Out(3116) <= \<const0>\;
  LOCKSTEP_Master_Out(3117) <= \<const0>\;
  LOCKSTEP_Master_Out(3118) <= \<const0>\;
  LOCKSTEP_Master_Out(3119) <= \<const0>\;
  LOCKSTEP_Master_Out(3120) <= \<const0>\;
  LOCKSTEP_Master_Out(3121) <= \<const0>\;
  LOCKSTEP_Master_Out(3122) <= \<const0>\;
  LOCKSTEP_Master_Out(3123) <= \<const0>\;
  LOCKSTEP_Master_Out(3124) <= \<const0>\;
  LOCKSTEP_Master_Out(3125) <= \<const0>\;
  LOCKSTEP_Master_Out(3126) <= \<const0>\;
  LOCKSTEP_Master_Out(3127) <= \<const0>\;
  LOCKSTEP_Master_Out(3128) <= \<const0>\;
  LOCKSTEP_Master_Out(3129) <= \<const0>\;
  LOCKSTEP_Master_Out(3130) <= \<const0>\;
  LOCKSTEP_Master_Out(3131) <= \<const0>\;
  LOCKSTEP_Master_Out(3132) <= \<const0>\;
  LOCKSTEP_Master_Out(3133) <= \<const0>\;
  LOCKSTEP_Master_Out(3134) <= \<const0>\;
  LOCKSTEP_Master_Out(3135) <= \<const0>\;
  LOCKSTEP_Master_Out(3136) <= \<const0>\;
  LOCKSTEP_Master_Out(3137) <= \<const0>\;
  LOCKSTEP_Master_Out(3138) <= \<const0>\;
  LOCKSTEP_Master_Out(3139) <= \<const0>\;
  LOCKSTEP_Master_Out(3140) <= \<const0>\;
  LOCKSTEP_Master_Out(3141) <= \<const0>\;
  LOCKSTEP_Master_Out(3142) <= \<const0>\;
  LOCKSTEP_Master_Out(3143) <= \<const0>\;
  LOCKSTEP_Master_Out(3144) <= \<const0>\;
  LOCKSTEP_Master_Out(3145) <= \<const0>\;
  LOCKSTEP_Master_Out(3146) <= \<const0>\;
  LOCKSTEP_Master_Out(3147) <= \<const0>\;
  LOCKSTEP_Master_Out(3148) <= \<const0>\;
  LOCKSTEP_Master_Out(3149) <= \<const0>\;
  LOCKSTEP_Master_Out(3150) <= \<const0>\;
  LOCKSTEP_Master_Out(3151) <= \<const0>\;
  LOCKSTEP_Master_Out(3152) <= \<const0>\;
  LOCKSTEP_Master_Out(3153) <= \<const0>\;
  LOCKSTEP_Master_Out(3154) <= \<const0>\;
  LOCKSTEP_Master_Out(3155) <= \<const0>\;
  LOCKSTEP_Master_Out(3156) <= \<const0>\;
  LOCKSTEP_Master_Out(3157) <= \<const0>\;
  LOCKSTEP_Master_Out(3158) <= \<const0>\;
  LOCKSTEP_Master_Out(3159) <= \<const0>\;
  LOCKSTEP_Master_Out(3160) <= \<const0>\;
  LOCKSTEP_Master_Out(3161) <= \<const0>\;
  LOCKSTEP_Master_Out(3162) <= \<const0>\;
  LOCKSTEP_Master_Out(3163) <= \<const0>\;
  LOCKSTEP_Master_Out(3164) <= \<const0>\;
  LOCKSTEP_Master_Out(3165) <= \<const0>\;
  LOCKSTEP_Master_Out(3166) <= \<const0>\;
  LOCKSTEP_Master_Out(3167) <= \<const0>\;
  LOCKSTEP_Master_Out(3168) <= \<const0>\;
  LOCKSTEP_Master_Out(3169) <= \<const0>\;
  LOCKSTEP_Master_Out(3170) <= \<const0>\;
  LOCKSTEP_Master_Out(3171) <= \<const0>\;
  LOCKSTEP_Master_Out(3172) <= \<const0>\;
  LOCKSTEP_Master_Out(3173) <= \<const0>\;
  LOCKSTEP_Master_Out(3174) <= \<const0>\;
  LOCKSTEP_Master_Out(3175) <= \<const0>\;
  LOCKSTEP_Master_Out(3176) <= \<const0>\;
  LOCKSTEP_Master_Out(3177) <= \<const0>\;
  LOCKSTEP_Master_Out(3178) <= \<const0>\;
  LOCKSTEP_Master_Out(3179) <= \<const0>\;
  LOCKSTEP_Master_Out(3180) <= \<const0>\;
  LOCKSTEP_Master_Out(3181) <= \<const0>\;
  LOCKSTEP_Master_Out(3182) <= \<const0>\;
  LOCKSTEP_Master_Out(3183) <= \<const0>\;
  LOCKSTEP_Master_Out(3184) <= \<const0>\;
  LOCKSTEP_Master_Out(3185) <= \<const0>\;
  LOCKSTEP_Master_Out(3186) <= \<const0>\;
  LOCKSTEP_Master_Out(3187) <= \<const0>\;
  LOCKSTEP_Master_Out(3188) <= \<const0>\;
  LOCKSTEP_Master_Out(3189) <= \<const0>\;
  LOCKSTEP_Master_Out(3190) <= \<const0>\;
  LOCKSTEP_Master_Out(3191) <= \<const0>\;
  LOCKSTEP_Master_Out(3192) <= \<const0>\;
  LOCKSTEP_Master_Out(3193) <= \<const0>\;
  LOCKSTEP_Master_Out(3194) <= \<const0>\;
  LOCKSTEP_Master_Out(3195) <= \<const0>\;
  LOCKSTEP_Master_Out(3196) <= \<const0>\;
  LOCKSTEP_Master_Out(3197) <= \<const0>\;
  LOCKSTEP_Master_Out(3198) <= \<const0>\;
  LOCKSTEP_Master_Out(3199) <= \<const0>\;
  LOCKSTEP_Master_Out(3200) <= \<const0>\;
  LOCKSTEP_Master_Out(3201) <= \<const0>\;
  LOCKSTEP_Master_Out(3202) <= \<const0>\;
  LOCKSTEP_Master_Out(3203) <= \<const0>\;
  LOCKSTEP_Master_Out(3204) <= \<const0>\;
  LOCKSTEP_Master_Out(3205) <= \<const0>\;
  LOCKSTEP_Master_Out(3206) <= \<const0>\;
  LOCKSTEP_Master_Out(3207) <= \<const0>\;
  LOCKSTEP_Master_Out(3208) <= \<const0>\;
  LOCKSTEP_Master_Out(3209) <= \<const0>\;
  LOCKSTEP_Master_Out(3210) <= \<const0>\;
  LOCKSTEP_Master_Out(3211) <= \<const0>\;
  LOCKSTEP_Master_Out(3212) <= \<const0>\;
  LOCKSTEP_Master_Out(3213) <= \<const0>\;
  LOCKSTEP_Master_Out(3214) <= \<const0>\;
  LOCKSTEP_Master_Out(3215) <= \<const0>\;
  LOCKSTEP_Master_Out(3216) <= \<const0>\;
  LOCKSTEP_Master_Out(3217) <= \<const0>\;
  LOCKSTEP_Master_Out(3218) <= \<const0>\;
  LOCKSTEP_Master_Out(3219) <= \<const0>\;
  LOCKSTEP_Master_Out(3220) <= \<const0>\;
  LOCKSTEP_Master_Out(3221) <= \<const0>\;
  LOCKSTEP_Master_Out(3222) <= \<const0>\;
  LOCKSTEP_Master_Out(3223) <= \<const0>\;
  LOCKSTEP_Master_Out(3224) <= \<const0>\;
  LOCKSTEP_Master_Out(3225) <= \<const0>\;
  LOCKSTEP_Master_Out(3226) <= \<const0>\;
  LOCKSTEP_Master_Out(3227) <= \<const0>\;
  LOCKSTEP_Master_Out(3228) <= \<const0>\;
  LOCKSTEP_Master_Out(3229) <= \<const0>\;
  LOCKSTEP_Master_Out(3230) <= \<const0>\;
  LOCKSTEP_Master_Out(3231) <= \<const0>\;
  LOCKSTEP_Master_Out(3232) <= \<const0>\;
  LOCKSTEP_Master_Out(3233) <= \<const0>\;
  LOCKSTEP_Master_Out(3234) <= \<const0>\;
  LOCKSTEP_Master_Out(3235) <= \<const0>\;
  LOCKSTEP_Master_Out(3236) <= \<const0>\;
  LOCKSTEP_Master_Out(3237) <= \<const0>\;
  LOCKSTEP_Master_Out(3238) <= \<const0>\;
  LOCKSTEP_Master_Out(3239) <= \<const0>\;
  LOCKSTEP_Master_Out(3240) <= \<const0>\;
  LOCKSTEP_Master_Out(3241) <= \<const0>\;
  LOCKSTEP_Master_Out(3242) <= \<const0>\;
  LOCKSTEP_Master_Out(3243) <= \<const0>\;
  LOCKSTEP_Master_Out(3244) <= \<const0>\;
  LOCKSTEP_Master_Out(3245) <= \<const0>\;
  LOCKSTEP_Master_Out(3246) <= \<const0>\;
  LOCKSTEP_Master_Out(3247) <= \<const0>\;
  LOCKSTEP_Master_Out(3248) <= \<const0>\;
  LOCKSTEP_Master_Out(3249) <= \<const0>\;
  LOCKSTEP_Master_Out(3250) <= \<const0>\;
  LOCKSTEP_Master_Out(3251) <= \<const0>\;
  LOCKSTEP_Master_Out(3252) <= \<const0>\;
  LOCKSTEP_Master_Out(3253) <= \<const0>\;
  LOCKSTEP_Master_Out(3254) <= \<const0>\;
  LOCKSTEP_Master_Out(3255) <= \<const0>\;
  LOCKSTEP_Master_Out(3256) <= \<const0>\;
  LOCKSTEP_Master_Out(3257) <= \<const0>\;
  LOCKSTEP_Master_Out(3258) <= \<const0>\;
  LOCKSTEP_Master_Out(3259) <= \<const0>\;
  LOCKSTEP_Master_Out(3260) <= \<const0>\;
  LOCKSTEP_Master_Out(3261) <= \<const0>\;
  LOCKSTEP_Master_Out(3262) <= \<const0>\;
  LOCKSTEP_Master_Out(3263) <= \<const0>\;
  LOCKSTEP_Master_Out(3264) <= \<const0>\;
  LOCKSTEP_Master_Out(3265) <= \<const0>\;
  LOCKSTEP_Master_Out(3266) <= \<const0>\;
  LOCKSTEP_Master_Out(3267) <= \<const0>\;
  LOCKSTEP_Master_Out(3268) <= \<const0>\;
  LOCKSTEP_Master_Out(3269) <= \<const0>\;
  LOCKSTEP_Master_Out(3270) <= \<const0>\;
  LOCKSTEP_Master_Out(3271) <= \<const0>\;
  LOCKSTEP_Master_Out(3272) <= \<const0>\;
  LOCKSTEP_Master_Out(3273) <= \<const0>\;
  LOCKSTEP_Master_Out(3274) <= \<const0>\;
  LOCKSTEP_Master_Out(3275) <= \<const0>\;
  LOCKSTEP_Master_Out(3276) <= \<const0>\;
  LOCKSTEP_Master_Out(3277) <= \<const0>\;
  LOCKSTEP_Master_Out(3278) <= \<const0>\;
  LOCKSTEP_Master_Out(3279) <= \<const0>\;
  LOCKSTEP_Master_Out(3280) <= \<const0>\;
  LOCKSTEP_Master_Out(3281) <= \<const0>\;
  LOCKSTEP_Master_Out(3282) <= \<const0>\;
  LOCKSTEP_Master_Out(3283) <= \<const0>\;
  LOCKSTEP_Master_Out(3284) <= \<const0>\;
  LOCKSTEP_Master_Out(3285) <= \<const0>\;
  LOCKSTEP_Master_Out(3286) <= \<const0>\;
  LOCKSTEP_Master_Out(3287) <= \<const0>\;
  LOCKSTEP_Master_Out(3288) <= \<const0>\;
  LOCKSTEP_Master_Out(3289) <= \<const0>\;
  LOCKSTEP_Master_Out(3290) <= \<const0>\;
  LOCKSTEP_Master_Out(3291) <= \<const0>\;
  LOCKSTEP_Master_Out(3292) <= \<const0>\;
  LOCKSTEP_Master_Out(3293) <= \<const0>\;
  LOCKSTEP_Master_Out(3294) <= \<const0>\;
  LOCKSTEP_Master_Out(3295) <= \<const0>\;
  LOCKSTEP_Master_Out(3296) <= \<const0>\;
  LOCKSTEP_Master_Out(3297) <= \<const0>\;
  LOCKSTEP_Master_Out(3298) <= \<const0>\;
  LOCKSTEP_Master_Out(3299) <= \<const0>\;
  LOCKSTEP_Master_Out(3300) <= \<const0>\;
  LOCKSTEP_Master_Out(3301) <= \<const0>\;
  LOCKSTEP_Master_Out(3302) <= \<const0>\;
  LOCKSTEP_Master_Out(3303) <= \<const0>\;
  LOCKSTEP_Master_Out(3304) <= \<const0>\;
  LOCKSTEP_Master_Out(3305) <= \<const0>\;
  LOCKSTEP_Master_Out(3306) <= \<const0>\;
  LOCKSTEP_Master_Out(3307) <= \<const0>\;
  LOCKSTEP_Master_Out(3308) <= \<const0>\;
  LOCKSTEP_Master_Out(3309) <= \<const0>\;
  LOCKSTEP_Master_Out(3310) <= \<const0>\;
  LOCKSTEP_Master_Out(3311) <= \<const0>\;
  LOCKSTEP_Master_Out(3312) <= \<const0>\;
  LOCKSTEP_Master_Out(3313) <= \<const0>\;
  LOCKSTEP_Master_Out(3314) <= \<const0>\;
  LOCKSTEP_Master_Out(3315) <= \<const0>\;
  LOCKSTEP_Master_Out(3316) <= \<const0>\;
  LOCKSTEP_Master_Out(3317) <= \<const0>\;
  LOCKSTEP_Master_Out(3318) <= \<const0>\;
  LOCKSTEP_Master_Out(3319) <= \<const0>\;
  LOCKSTEP_Master_Out(3320) <= \<const0>\;
  LOCKSTEP_Master_Out(3321) <= \<const0>\;
  LOCKSTEP_Master_Out(3322) <= \<const0>\;
  LOCKSTEP_Master_Out(3323) <= \<const0>\;
  LOCKSTEP_Master_Out(3324) <= \<const0>\;
  LOCKSTEP_Master_Out(3325) <= \<const0>\;
  LOCKSTEP_Master_Out(3326) <= \<const0>\;
  LOCKSTEP_Master_Out(3327) <= \<const0>\;
  LOCKSTEP_Master_Out(3328) <= \<const0>\;
  LOCKSTEP_Master_Out(3329) <= \<const0>\;
  LOCKSTEP_Master_Out(3330) <= \<const0>\;
  LOCKSTEP_Master_Out(3331) <= \<const0>\;
  LOCKSTEP_Master_Out(3332) <= \<const0>\;
  LOCKSTEP_Master_Out(3333) <= \<const0>\;
  LOCKSTEP_Master_Out(3334) <= \<const0>\;
  LOCKSTEP_Master_Out(3335) <= \<const0>\;
  LOCKSTEP_Master_Out(3336) <= \<const0>\;
  LOCKSTEP_Master_Out(3337) <= \<const0>\;
  LOCKSTEP_Master_Out(3338) <= \<const0>\;
  LOCKSTEP_Master_Out(3339) <= \<const0>\;
  LOCKSTEP_Master_Out(3340) <= \<const0>\;
  LOCKSTEP_Master_Out(3341) <= \<const0>\;
  LOCKSTEP_Master_Out(3342) <= \<const0>\;
  LOCKSTEP_Master_Out(3343) <= \<const0>\;
  LOCKSTEP_Master_Out(3344) <= \<const0>\;
  LOCKSTEP_Master_Out(3345) <= \<const0>\;
  LOCKSTEP_Master_Out(3346) <= \<const0>\;
  LOCKSTEP_Master_Out(3347) <= \<const0>\;
  LOCKSTEP_Master_Out(3348) <= \<const0>\;
  LOCKSTEP_Master_Out(3349) <= \<const0>\;
  LOCKSTEP_Master_Out(3350) <= \<const0>\;
  LOCKSTEP_Master_Out(3351) <= \<const0>\;
  LOCKSTEP_Master_Out(3352) <= \<const0>\;
  LOCKSTEP_Master_Out(3353) <= \<const0>\;
  LOCKSTEP_Master_Out(3354) <= \<const0>\;
  LOCKSTEP_Master_Out(3355) <= \<const0>\;
  LOCKSTEP_Master_Out(3356) <= \<const0>\;
  LOCKSTEP_Master_Out(3357) <= \<const0>\;
  LOCKSTEP_Master_Out(3358) <= \<const0>\;
  LOCKSTEP_Master_Out(3359) <= \<const0>\;
  LOCKSTEP_Master_Out(3360) <= \<const0>\;
  LOCKSTEP_Master_Out(3361) <= \<const0>\;
  LOCKSTEP_Master_Out(3362) <= \<const0>\;
  LOCKSTEP_Master_Out(3363) <= \<const0>\;
  LOCKSTEP_Master_Out(3364) <= \<const0>\;
  LOCKSTEP_Master_Out(3365) <= \<const0>\;
  LOCKSTEP_Master_Out(3366) <= \<const0>\;
  LOCKSTEP_Master_Out(3367) <= \<const0>\;
  LOCKSTEP_Master_Out(3368) <= \<const0>\;
  LOCKSTEP_Master_Out(3369) <= \<const0>\;
  LOCKSTEP_Master_Out(3370) <= \<const0>\;
  LOCKSTEP_Master_Out(3371) <= \<const0>\;
  LOCKSTEP_Master_Out(3372) <= \<const0>\;
  LOCKSTEP_Master_Out(3373) <= \<const0>\;
  LOCKSTEP_Master_Out(3374) <= \<const0>\;
  LOCKSTEP_Master_Out(3375) <= \<const0>\;
  LOCKSTEP_Master_Out(3376) <= \<const0>\;
  LOCKSTEP_Master_Out(3377) <= \<const0>\;
  LOCKSTEP_Master_Out(3378) <= \<const0>\;
  LOCKSTEP_Master_Out(3379) <= \<const0>\;
  LOCKSTEP_Master_Out(3380) <= \<const0>\;
  LOCKSTEP_Master_Out(3381) <= \<const0>\;
  LOCKSTEP_Master_Out(3382) <= \<const0>\;
  LOCKSTEP_Master_Out(3383) <= \<const0>\;
  LOCKSTEP_Master_Out(3384) <= \<const0>\;
  LOCKSTEP_Master_Out(3385) <= \<const0>\;
  LOCKSTEP_Master_Out(3386) <= \<const0>\;
  LOCKSTEP_Master_Out(3387) <= \<const0>\;
  LOCKSTEP_Master_Out(3388) <= \<const0>\;
  LOCKSTEP_Master_Out(3389) <= \<const0>\;
  LOCKSTEP_Master_Out(3390) <= \<const0>\;
  LOCKSTEP_Master_Out(3391) <= \<const0>\;
  LOCKSTEP_Master_Out(3392) <= \<const0>\;
  LOCKSTEP_Master_Out(3393) <= \<const0>\;
  LOCKSTEP_Master_Out(3394) <= \<const0>\;
  LOCKSTEP_Master_Out(3395) <= \<const0>\;
  LOCKSTEP_Master_Out(3396) <= \<const0>\;
  LOCKSTEP_Master_Out(3397) <= \<const0>\;
  LOCKSTEP_Master_Out(3398) <= \<const0>\;
  LOCKSTEP_Master_Out(3399) <= \<const0>\;
  LOCKSTEP_Master_Out(3400) <= \<const0>\;
  LOCKSTEP_Master_Out(3401) <= \<const0>\;
  LOCKSTEP_Master_Out(3402) <= \<const0>\;
  LOCKSTEP_Master_Out(3403) <= \<const0>\;
  LOCKSTEP_Master_Out(3404) <= \<const0>\;
  LOCKSTEP_Master_Out(3405) <= \<const0>\;
  LOCKSTEP_Master_Out(3406) <= \<const0>\;
  LOCKSTEP_Master_Out(3407) <= \<const0>\;
  LOCKSTEP_Master_Out(3408) <= \<const0>\;
  LOCKSTEP_Master_Out(3409) <= \<const0>\;
  LOCKSTEP_Master_Out(3410) <= \<const0>\;
  LOCKSTEP_Master_Out(3411) <= \<const0>\;
  LOCKSTEP_Master_Out(3412) <= \<const0>\;
  LOCKSTEP_Master_Out(3413) <= \<const0>\;
  LOCKSTEP_Master_Out(3414) <= \<const0>\;
  LOCKSTEP_Master_Out(3415) <= \<const0>\;
  LOCKSTEP_Master_Out(3416) <= \<const0>\;
  LOCKSTEP_Master_Out(3417) <= \<const0>\;
  LOCKSTEP_Master_Out(3418) <= \<const0>\;
  LOCKSTEP_Master_Out(3419) <= \<const0>\;
  LOCKSTEP_Master_Out(3420) <= \<const0>\;
  LOCKSTEP_Master_Out(3421) <= \<const0>\;
  LOCKSTEP_Master_Out(3422) <= \<const0>\;
  LOCKSTEP_Master_Out(3423) <= \<const0>\;
  LOCKSTEP_Master_Out(3424) <= \<const0>\;
  LOCKSTEP_Master_Out(3425) <= \<const0>\;
  LOCKSTEP_Master_Out(3426) <= \<const0>\;
  LOCKSTEP_Master_Out(3427) <= \<const0>\;
  LOCKSTEP_Master_Out(3428) <= \<const0>\;
  LOCKSTEP_Master_Out(3429) <= \<const0>\;
  LOCKSTEP_Master_Out(3430) <= \<const0>\;
  LOCKSTEP_Master_Out(3431) <= \<const0>\;
  LOCKSTEP_Master_Out(3432) <= \<const0>\;
  LOCKSTEP_Master_Out(3433) <= \<const0>\;
  LOCKSTEP_Master_Out(3434) <= \<const0>\;
  LOCKSTEP_Master_Out(3435) <= \<const0>\;
  LOCKSTEP_Master_Out(3436) <= \<const0>\;
  LOCKSTEP_Master_Out(3437) <= \<const0>\;
  LOCKSTEP_Master_Out(3438) <= \<const0>\;
  LOCKSTEP_Master_Out(3439) <= \<const0>\;
  LOCKSTEP_Master_Out(3440) <= \<const0>\;
  LOCKSTEP_Master_Out(3441) <= \<const0>\;
  LOCKSTEP_Master_Out(3442) <= \<const0>\;
  LOCKSTEP_Master_Out(3443) <= \<const0>\;
  LOCKSTEP_Master_Out(3444) <= \<const0>\;
  LOCKSTEP_Master_Out(3445) <= \<const0>\;
  LOCKSTEP_Master_Out(3446) <= \<const0>\;
  LOCKSTEP_Master_Out(3447) <= \<const0>\;
  LOCKSTEP_Master_Out(3448) <= \<const0>\;
  LOCKSTEP_Master_Out(3449) <= \<const0>\;
  LOCKSTEP_Master_Out(3450) <= \<const0>\;
  LOCKSTEP_Master_Out(3451) <= \<const0>\;
  LOCKSTEP_Master_Out(3452) <= \<const0>\;
  LOCKSTEP_Master_Out(3453) <= \<const0>\;
  LOCKSTEP_Master_Out(3454) <= \<const0>\;
  LOCKSTEP_Master_Out(3455) <= \<const0>\;
  LOCKSTEP_Master_Out(3456) <= \<const0>\;
  LOCKSTEP_Master_Out(3457) <= \<const0>\;
  LOCKSTEP_Master_Out(3458) <= \<const0>\;
  LOCKSTEP_Master_Out(3459) <= \<const0>\;
  LOCKSTEP_Master_Out(3460) <= \<const0>\;
  LOCKSTEP_Master_Out(3461) <= \<const0>\;
  LOCKSTEP_Master_Out(3462) <= \<const0>\;
  LOCKSTEP_Master_Out(3463) <= \<const0>\;
  LOCKSTEP_Master_Out(3464) <= \<const0>\;
  LOCKSTEP_Master_Out(3465) <= \<const0>\;
  LOCKSTEP_Master_Out(3466) <= \<const0>\;
  LOCKSTEP_Master_Out(3467) <= \<const0>\;
  LOCKSTEP_Master_Out(3468) <= \<const0>\;
  LOCKSTEP_Master_Out(3469) <= \<const0>\;
  LOCKSTEP_Master_Out(3470) <= \<const0>\;
  LOCKSTEP_Master_Out(3471) <= \<const0>\;
  LOCKSTEP_Master_Out(3472) <= \<const0>\;
  LOCKSTEP_Master_Out(3473) <= \<const0>\;
  LOCKSTEP_Master_Out(3474) <= \<const0>\;
  LOCKSTEP_Master_Out(3475) <= \<const0>\;
  LOCKSTEP_Master_Out(3476) <= \<const0>\;
  LOCKSTEP_Master_Out(3477) <= \<const0>\;
  LOCKSTEP_Master_Out(3478) <= \<const0>\;
  LOCKSTEP_Master_Out(3479) <= \<const0>\;
  LOCKSTEP_Master_Out(3480) <= \<const0>\;
  LOCKSTEP_Master_Out(3481) <= \<const0>\;
  LOCKSTEP_Master_Out(3482) <= \<const0>\;
  LOCKSTEP_Master_Out(3483) <= \<const0>\;
  LOCKSTEP_Master_Out(3484) <= \<const0>\;
  LOCKSTEP_Master_Out(3485) <= \<const0>\;
  LOCKSTEP_Master_Out(3486) <= \<const0>\;
  LOCKSTEP_Master_Out(3487) <= \<const0>\;
  LOCKSTEP_Master_Out(3488) <= \<const0>\;
  LOCKSTEP_Master_Out(3489) <= \<const0>\;
  LOCKSTEP_Master_Out(3490) <= \<const0>\;
  LOCKSTEP_Master_Out(3491) <= \<const0>\;
  LOCKSTEP_Master_Out(3492) <= \<const0>\;
  LOCKSTEP_Master_Out(3493) <= \<const0>\;
  LOCKSTEP_Master_Out(3494) <= \<const0>\;
  LOCKSTEP_Master_Out(3495) <= \<const0>\;
  LOCKSTEP_Master_Out(3496) <= \<const0>\;
  LOCKSTEP_Master_Out(3497) <= \<const0>\;
  LOCKSTEP_Master_Out(3498) <= \<const0>\;
  LOCKSTEP_Master_Out(3499) <= \<const0>\;
  LOCKSTEP_Master_Out(3500) <= \<const0>\;
  LOCKSTEP_Master_Out(3501) <= \<const0>\;
  LOCKSTEP_Master_Out(3502) <= \<const0>\;
  LOCKSTEP_Master_Out(3503) <= \<const0>\;
  LOCKSTEP_Master_Out(3504) <= \<const0>\;
  LOCKSTEP_Master_Out(3505) <= \<const0>\;
  LOCKSTEP_Master_Out(3506) <= \<const0>\;
  LOCKSTEP_Master_Out(3507) <= \<const0>\;
  LOCKSTEP_Master_Out(3508) <= \<const0>\;
  LOCKSTEP_Master_Out(3509) <= \<const0>\;
  LOCKSTEP_Master_Out(3510) <= \<const0>\;
  LOCKSTEP_Master_Out(3511) <= \<const0>\;
  LOCKSTEP_Master_Out(3512) <= \<const0>\;
  LOCKSTEP_Master_Out(3513) <= \<const0>\;
  LOCKSTEP_Master_Out(3514) <= \<const0>\;
  LOCKSTEP_Master_Out(3515) <= \<const0>\;
  LOCKSTEP_Master_Out(3516) <= \<const0>\;
  LOCKSTEP_Master_Out(3517) <= \<const0>\;
  LOCKSTEP_Master_Out(3518) <= \<const0>\;
  LOCKSTEP_Master_Out(3519) <= \<const0>\;
  LOCKSTEP_Master_Out(3520) <= \<const0>\;
  LOCKSTEP_Master_Out(3521) <= \<const0>\;
  LOCKSTEP_Master_Out(3522) <= \<const0>\;
  LOCKSTEP_Master_Out(3523) <= \<const0>\;
  LOCKSTEP_Master_Out(3524) <= \<const0>\;
  LOCKSTEP_Master_Out(3525) <= \<const0>\;
  LOCKSTEP_Master_Out(3526) <= \<const0>\;
  LOCKSTEP_Master_Out(3527) <= \<const0>\;
  LOCKSTEP_Master_Out(3528) <= \<const0>\;
  LOCKSTEP_Master_Out(3529) <= \<const0>\;
  LOCKSTEP_Master_Out(3530) <= \<const0>\;
  LOCKSTEP_Master_Out(3531) <= \<const0>\;
  LOCKSTEP_Master_Out(3532) <= \<const0>\;
  LOCKSTEP_Master_Out(3533) <= \<const0>\;
  LOCKSTEP_Master_Out(3534) <= \<const0>\;
  LOCKSTEP_Master_Out(3535) <= \<const0>\;
  LOCKSTEP_Master_Out(3536) <= \<const0>\;
  LOCKSTEP_Master_Out(3537) <= \<const0>\;
  LOCKSTEP_Master_Out(3538) <= \<const0>\;
  LOCKSTEP_Master_Out(3539) <= \<const0>\;
  LOCKSTEP_Master_Out(3540) <= \<const0>\;
  LOCKSTEP_Master_Out(3541) <= \<const0>\;
  LOCKSTEP_Master_Out(3542) <= \<const0>\;
  LOCKSTEP_Master_Out(3543) <= \<const0>\;
  LOCKSTEP_Master_Out(3544) <= \<const0>\;
  LOCKSTEP_Master_Out(3545) <= \<const0>\;
  LOCKSTEP_Master_Out(3546) <= \<const0>\;
  LOCKSTEP_Master_Out(3547) <= \<const0>\;
  LOCKSTEP_Master_Out(3548) <= \<const0>\;
  LOCKSTEP_Master_Out(3549) <= \<const0>\;
  LOCKSTEP_Master_Out(3550) <= \<const0>\;
  LOCKSTEP_Master_Out(3551) <= \<const0>\;
  LOCKSTEP_Master_Out(3552) <= \<const0>\;
  LOCKSTEP_Master_Out(3553) <= \<const0>\;
  LOCKSTEP_Master_Out(3554) <= \<const0>\;
  LOCKSTEP_Master_Out(3555) <= \<const0>\;
  LOCKSTEP_Master_Out(3556) <= \<const0>\;
  LOCKSTEP_Master_Out(3557) <= \<const0>\;
  LOCKSTEP_Master_Out(3558) <= \<const0>\;
  LOCKSTEP_Master_Out(3559) <= \<const0>\;
  LOCKSTEP_Master_Out(3560) <= \<const0>\;
  LOCKSTEP_Master_Out(3561) <= \<const0>\;
  LOCKSTEP_Master_Out(3562) <= \<const0>\;
  LOCKSTEP_Master_Out(3563) <= \<const0>\;
  LOCKSTEP_Master_Out(3564) <= \<const0>\;
  LOCKSTEP_Master_Out(3565) <= \<const0>\;
  LOCKSTEP_Master_Out(3566) <= \<const0>\;
  LOCKSTEP_Master_Out(3567) <= \<const0>\;
  LOCKSTEP_Master_Out(3568) <= \<const0>\;
  LOCKSTEP_Master_Out(3569) <= \<const0>\;
  LOCKSTEP_Master_Out(3570) <= \<const0>\;
  LOCKSTEP_Master_Out(3571) <= \<const0>\;
  LOCKSTEP_Master_Out(3572) <= \<const0>\;
  LOCKSTEP_Master_Out(3573) <= \<const0>\;
  LOCKSTEP_Master_Out(3574) <= \<const0>\;
  LOCKSTEP_Master_Out(3575) <= \<const0>\;
  LOCKSTEP_Master_Out(3576) <= \<const0>\;
  LOCKSTEP_Master_Out(3577) <= \<const0>\;
  LOCKSTEP_Master_Out(3578) <= \<const0>\;
  LOCKSTEP_Master_Out(3579) <= \<const0>\;
  LOCKSTEP_Master_Out(3580) <= \<const0>\;
  LOCKSTEP_Master_Out(3581) <= \<const0>\;
  LOCKSTEP_Master_Out(3582) <= \<const0>\;
  LOCKSTEP_Master_Out(3583) <= \<const0>\;
  LOCKSTEP_Master_Out(3584) <= \<const0>\;
  LOCKSTEP_Master_Out(3585) <= \<const0>\;
  LOCKSTEP_Master_Out(3586) <= \<const0>\;
  LOCKSTEP_Master_Out(3587) <= \<const0>\;
  LOCKSTEP_Master_Out(3588) <= \<const0>\;
  LOCKSTEP_Master_Out(3589) <= \<const0>\;
  LOCKSTEP_Master_Out(3590) <= \<const0>\;
  LOCKSTEP_Master_Out(3591) <= \<const0>\;
  LOCKSTEP_Master_Out(3592) <= \<const0>\;
  LOCKSTEP_Master_Out(3593) <= \<const0>\;
  LOCKSTEP_Master_Out(3594) <= \<const0>\;
  LOCKSTEP_Master_Out(3595) <= \<const0>\;
  LOCKSTEP_Master_Out(3596) <= \<const0>\;
  LOCKSTEP_Master_Out(3597) <= \<const0>\;
  LOCKSTEP_Master_Out(3598) <= \<const0>\;
  LOCKSTEP_Master_Out(3599) <= \<const0>\;
  LOCKSTEP_Master_Out(3600) <= \<const0>\;
  LOCKSTEP_Master_Out(3601) <= \<const0>\;
  LOCKSTEP_Master_Out(3602) <= \<const0>\;
  LOCKSTEP_Master_Out(3603) <= \<const0>\;
  LOCKSTEP_Master_Out(3604) <= \<const0>\;
  LOCKSTEP_Master_Out(3605) <= \<const0>\;
  LOCKSTEP_Master_Out(3606) <= \<const0>\;
  LOCKSTEP_Master_Out(3607) <= \<const0>\;
  LOCKSTEP_Master_Out(3608) <= \<const0>\;
  LOCKSTEP_Master_Out(3609) <= \<const0>\;
  LOCKSTEP_Master_Out(3610) <= \<const0>\;
  LOCKSTEP_Master_Out(3611) <= \<const0>\;
  LOCKSTEP_Master_Out(3612) <= \<const0>\;
  LOCKSTEP_Master_Out(3613) <= \<const0>\;
  LOCKSTEP_Master_Out(3614) <= \<const0>\;
  LOCKSTEP_Master_Out(3615) <= \<const0>\;
  LOCKSTEP_Master_Out(3616) <= \<const0>\;
  LOCKSTEP_Master_Out(3617) <= \<const0>\;
  LOCKSTEP_Master_Out(3618) <= \<const0>\;
  LOCKSTEP_Master_Out(3619) <= \<const0>\;
  LOCKSTEP_Master_Out(3620) <= \<const0>\;
  LOCKSTEP_Master_Out(3621) <= \<const0>\;
  LOCKSTEP_Master_Out(3622) <= \<const0>\;
  LOCKSTEP_Master_Out(3623) <= \<const0>\;
  LOCKSTEP_Master_Out(3624) <= \<const0>\;
  LOCKSTEP_Master_Out(3625) <= \<const0>\;
  LOCKSTEP_Master_Out(3626) <= \<const0>\;
  LOCKSTEP_Master_Out(3627) <= \<const0>\;
  LOCKSTEP_Master_Out(3628) <= \<const0>\;
  LOCKSTEP_Master_Out(3629) <= \<const0>\;
  LOCKSTEP_Master_Out(3630) <= \<const0>\;
  LOCKSTEP_Master_Out(3631) <= \<const0>\;
  LOCKSTEP_Master_Out(3632) <= \<const0>\;
  LOCKSTEP_Master_Out(3633) <= \<const0>\;
  LOCKSTEP_Master_Out(3634) <= \<const0>\;
  LOCKSTEP_Master_Out(3635) <= \<const0>\;
  LOCKSTEP_Master_Out(3636) <= \<const0>\;
  LOCKSTEP_Master_Out(3637) <= \<const0>\;
  LOCKSTEP_Master_Out(3638) <= \<const0>\;
  LOCKSTEP_Master_Out(3639) <= \<const0>\;
  LOCKSTEP_Master_Out(3640) <= \<const0>\;
  LOCKSTEP_Master_Out(3641) <= \<const0>\;
  LOCKSTEP_Master_Out(3642) <= \<const0>\;
  LOCKSTEP_Master_Out(3643) <= \<const0>\;
  LOCKSTEP_Master_Out(3644) <= \<const0>\;
  LOCKSTEP_Master_Out(3645) <= \<const0>\;
  LOCKSTEP_Master_Out(3646) <= \<const0>\;
  LOCKSTEP_Master_Out(3647) <= \<const0>\;
  LOCKSTEP_Master_Out(3648) <= \<const0>\;
  LOCKSTEP_Master_Out(3649) <= \<const0>\;
  LOCKSTEP_Master_Out(3650) <= \<const0>\;
  LOCKSTEP_Master_Out(3651) <= \<const0>\;
  LOCKSTEP_Master_Out(3652) <= \<const0>\;
  LOCKSTEP_Master_Out(3653) <= \<const0>\;
  LOCKSTEP_Master_Out(3654) <= \<const0>\;
  LOCKSTEP_Master_Out(3655) <= \<const0>\;
  LOCKSTEP_Master_Out(3656) <= \<const0>\;
  LOCKSTEP_Master_Out(3657) <= \<const0>\;
  LOCKSTEP_Master_Out(3658) <= \<const0>\;
  LOCKSTEP_Master_Out(3659) <= \<const0>\;
  LOCKSTEP_Master_Out(3660) <= \<const0>\;
  LOCKSTEP_Master_Out(3661) <= \<const0>\;
  LOCKSTEP_Master_Out(3662) <= \<const0>\;
  LOCKSTEP_Master_Out(3663) <= \<const0>\;
  LOCKSTEP_Master_Out(3664) <= \<const0>\;
  LOCKSTEP_Master_Out(3665) <= \<const0>\;
  LOCKSTEP_Master_Out(3666) <= \<const0>\;
  LOCKSTEP_Master_Out(3667) <= \<const0>\;
  LOCKSTEP_Master_Out(3668) <= \<const0>\;
  LOCKSTEP_Master_Out(3669) <= \<const0>\;
  LOCKSTEP_Master_Out(3670) <= \<const0>\;
  LOCKSTEP_Master_Out(3671) <= \<const0>\;
  LOCKSTEP_Master_Out(3672) <= \<const0>\;
  LOCKSTEP_Master_Out(3673) <= \<const0>\;
  LOCKSTEP_Master_Out(3674) <= \<const0>\;
  LOCKSTEP_Master_Out(3675) <= \<const0>\;
  LOCKSTEP_Master_Out(3676) <= \<const0>\;
  LOCKSTEP_Master_Out(3677) <= \<const0>\;
  LOCKSTEP_Master_Out(3678) <= \<const0>\;
  LOCKSTEP_Master_Out(3679) <= \<const0>\;
  LOCKSTEP_Master_Out(3680) <= \<const0>\;
  LOCKSTEP_Master_Out(3681) <= \<const0>\;
  LOCKSTEP_Master_Out(3682) <= \<const0>\;
  LOCKSTEP_Master_Out(3683) <= \<const0>\;
  LOCKSTEP_Master_Out(3684) <= \<const0>\;
  LOCKSTEP_Master_Out(3685) <= \<const0>\;
  LOCKSTEP_Master_Out(3686) <= \<const0>\;
  LOCKSTEP_Master_Out(3687) <= \<const0>\;
  LOCKSTEP_Master_Out(3688) <= \<const0>\;
  LOCKSTEP_Master_Out(3689) <= \<const0>\;
  LOCKSTEP_Master_Out(3690) <= \<const0>\;
  LOCKSTEP_Master_Out(3691) <= \<const0>\;
  LOCKSTEP_Master_Out(3692) <= \<const0>\;
  LOCKSTEP_Master_Out(3693) <= \<const0>\;
  LOCKSTEP_Master_Out(3694) <= \<const0>\;
  LOCKSTEP_Master_Out(3695) <= \<const0>\;
  LOCKSTEP_Master_Out(3696) <= \<const0>\;
  LOCKSTEP_Master_Out(3697) <= \<const0>\;
  LOCKSTEP_Master_Out(3698) <= \<const0>\;
  LOCKSTEP_Master_Out(3699) <= \<const0>\;
  LOCKSTEP_Master_Out(3700) <= \<const0>\;
  LOCKSTEP_Master_Out(3701) <= \<const0>\;
  LOCKSTEP_Master_Out(3702) <= \<const0>\;
  LOCKSTEP_Master_Out(3703) <= \<const0>\;
  LOCKSTEP_Master_Out(3704) <= \<const0>\;
  LOCKSTEP_Master_Out(3705) <= \<const0>\;
  LOCKSTEP_Master_Out(3706) <= \<const0>\;
  LOCKSTEP_Master_Out(3707) <= \<const0>\;
  LOCKSTEP_Master_Out(3708) <= \<const0>\;
  LOCKSTEP_Master_Out(3709) <= \<const0>\;
  LOCKSTEP_Master_Out(3710) <= \<const0>\;
  LOCKSTEP_Master_Out(3711) <= \<const0>\;
  LOCKSTEP_Master_Out(3712) <= \<const0>\;
  LOCKSTEP_Master_Out(3713) <= \<const0>\;
  LOCKSTEP_Master_Out(3714) <= \<const0>\;
  LOCKSTEP_Master_Out(3715) <= \<const0>\;
  LOCKSTEP_Master_Out(3716) <= \<const0>\;
  LOCKSTEP_Master_Out(3717) <= \<const0>\;
  LOCKSTEP_Master_Out(3718) <= \<const0>\;
  LOCKSTEP_Master_Out(3719) <= \<const0>\;
  LOCKSTEP_Master_Out(3720) <= \<const0>\;
  LOCKSTEP_Master_Out(3721) <= \<const0>\;
  LOCKSTEP_Master_Out(3722) <= \<const0>\;
  LOCKSTEP_Master_Out(3723) <= \<const0>\;
  LOCKSTEP_Master_Out(3724) <= \<const0>\;
  LOCKSTEP_Master_Out(3725) <= \<const0>\;
  LOCKSTEP_Master_Out(3726) <= \<const0>\;
  LOCKSTEP_Master_Out(3727) <= \<const0>\;
  LOCKSTEP_Master_Out(3728) <= \<const0>\;
  LOCKSTEP_Master_Out(3729) <= \<const0>\;
  LOCKSTEP_Master_Out(3730) <= \<const0>\;
  LOCKSTEP_Master_Out(3731) <= \<const0>\;
  LOCKSTEP_Master_Out(3732) <= \<const0>\;
  LOCKSTEP_Master_Out(3733) <= \<const0>\;
  LOCKSTEP_Master_Out(3734) <= \<const0>\;
  LOCKSTEP_Master_Out(3735) <= \<const0>\;
  LOCKSTEP_Master_Out(3736) <= \<const0>\;
  LOCKSTEP_Master_Out(3737) <= \<const0>\;
  LOCKSTEP_Master_Out(3738) <= \<const0>\;
  LOCKSTEP_Master_Out(3739) <= \<const0>\;
  LOCKSTEP_Master_Out(3740) <= \<const0>\;
  LOCKSTEP_Master_Out(3741) <= \<const0>\;
  LOCKSTEP_Master_Out(3742) <= \<const0>\;
  LOCKSTEP_Master_Out(3743) <= \<const0>\;
  LOCKSTEP_Master_Out(3744) <= \<const0>\;
  LOCKSTEP_Master_Out(3745) <= \<const0>\;
  LOCKSTEP_Master_Out(3746) <= \<const0>\;
  LOCKSTEP_Master_Out(3747) <= \<const0>\;
  LOCKSTEP_Master_Out(3748) <= \<const0>\;
  LOCKSTEP_Master_Out(3749) <= \<const0>\;
  LOCKSTEP_Master_Out(3750) <= \<const0>\;
  LOCKSTEP_Master_Out(3751) <= \<const0>\;
  LOCKSTEP_Master_Out(3752) <= \<const0>\;
  LOCKSTEP_Master_Out(3753) <= \<const0>\;
  LOCKSTEP_Master_Out(3754) <= \<const0>\;
  LOCKSTEP_Master_Out(3755) <= \<const0>\;
  LOCKSTEP_Master_Out(3756) <= \<const0>\;
  LOCKSTEP_Master_Out(3757) <= \<const0>\;
  LOCKSTEP_Master_Out(3758) <= \<const0>\;
  LOCKSTEP_Master_Out(3759) <= \<const0>\;
  LOCKSTEP_Master_Out(3760) <= \<const0>\;
  LOCKSTEP_Master_Out(3761) <= \<const0>\;
  LOCKSTEP_Master_Out(3762) <= \<const0>\;
  LOCKSTEP_Master_Out(3763) <= \<const0>\;
  LOCKSTEP_Master_Out(3764) <= \<const0>\;
  LOCKSTEP_Master_Out(3765) <= \<const0>\;
  LOCKSTEP_Master_Out(3766) <= \<const0>\;
  LOCKSTEP_Master_Out(3767) <= \<const0>\;
  LOCKSTEP_Master_Out(3768) <= \<const0>\;
  LOCKSTEP_Master_Out(3769) <= \<const0>\;
  LOCKSTEP_Master_Out(3770) <= \<const0>\;
  LOCKSTEP_Master_Out(3771) <= \<const0>\;
  LOCKSTEP_Master_Out(3772) <= \<const0>\;
  LOCKSTEP_Master_Out(3773) <= \<const0>\;
  LOCKSTEP_Master_Out(3774) <= \<const0>\;
  LOCKSTEP_Master_Out(3775) <= \<const0>\;
  LOCKSTEP_Master_Out(3776) <= \<const0>\;
  LOCKSTEP_Master_Out(3777) <= \<const0>\;
  LOCKSTEP_Master_Out(3778) <= \<const0>\;
  LOCKSTEP_Master_Out(3779) <= \<const0>\;
  LOCKSTEP_Master_Out(3780) <= \<const0>\;
  LOCKSTEP_Master_Out(3781) <= \<const0>\;
  LOCKSTEP_Master_Out(3782) <= \<const0>\;
  LOCKSTEP_Master_Out(3783) <= \<const0>\;
  LOCKSTEP_Master_Out(3784) <= \<const0>\;
  LOCKSTEP_Master_Out(3785) <= \<const0>\;
  LOCKSTEP_Master_Out(3786) <= \<const0>\;
  LOCKSTEP_Master_Out(3787) <= \<const0>\;
  LOCKSTEP_Master_Out(3788) <= \<const0>\;
  LOCKSTEP_Master_Out(3789) <= \<const0>\;
  LOCKSTEP_Master_Out(3790) <= \<const0>\;
  LOCKSTEP_Master_Out(3791) <= \<const0>\;
  LOCKSTEP_Master_Out(3792) <= \<const0>\;
  LOCKSTEP_Master_Out(3793) <= \<const0>\;
  LOCKSTEP_Master_Out(3794) <= \<const0>\;
  LOCKSTEP_Master_Out(3795) <= \<const0>\;
  LOCKSTEP_Master_Out(3796) <= \<const0>\;
  LOCKSTEP_Master_Out(3797) <= \<const0>\;
  LOCKSTEP_Master_Out(3798) <= \<const0>\;
  LOCKSTEP_Master_Out(3799) <= \<const0>\;
  LOCKSTEP_Master_Out(3800) <= \<const0>\;
  LOCKSTEP_Master_Out(3801) <= \<const0>\;
  LOCKSTEP_Master_Out(3802) <= \<const0>\;
  LOCKSTEP_Master_Out(3803) <= \<const0>\;
  LOCKSTEP_Master_Out(3804) <= \<const0>\;
  LOCKSTEP_Master_Out(3805) <= \<const0>\;
  LOCKSTEP_Master_Out(3806) <= \<const0>\;
  LOCKSTEP_Master_Out(3807) <= \<const0>\;
  LOCKSTEP_Master_Out(3808) <= \<const0>\;
  LOCKSTEP_Master_Out(3809) <= \<const0>\;
  LOCKSTEP_Master_Out(3810) <= \<const0>\;
  LOCKSTEP_Master_Out(3811) <= \<const0>\;
  LOCKSTEP_Master_Out(3812) <= \<const0>\;
  LOCKSTEP_Master_Out(3813) <= \<const0>\;
  LOCKSTEP_Master_Out(3814) <= \<const0>\;
  LOCKSTEP_Master_Out(3815) <= \<const0>\;
  LOCKSTEP_Master_Out(3816) <= \<const0>\;
  LOCKSTEP_Master_Out(3817) <= \<const0>\;
  LOCKSTEP_Master_Out(3818) <= \<const0>\;
  LOCKSTEP_Master_Out(3819) <= \<const0>\;
  LOCKSTEP_Master_Out(3820) <= \<const0>\;
  LOCKSTEP_Master_Out(3821) <= \<const0>\;
  LOCKSTEP_Master_Out(3822) <= \<const0>\;
  LOCKSTEP_Master_Out(3823) <= \<const0>\;
  LOCKSTEP_Master_Out(3824) <= \<const0>\;
  LOCKSTEP_Master_Out(3825) <= \<const0>\;
  LOCKSTEP_Master_Out(3826) <= \<const0>\;
  LOCKSTEP_Master_Out(3827) <= \<const0>\;
  LOCKSTEP_Master_Out(3828) <= \<const0>\;
  LOCKSTEP_Master_Out(3829) <= \<const0>\;
  LOCKSTEP_Master_Out(3830) <= \<const0>\;
  LOCKSTEP_Master_Out(3831) <= \<const0>\;
  LOCKSTEP_Master_Out(3832) <= \<const0>\;
  LOCKSTEP_Master_Out(3833) <= \<const0>\;
  LOCKSTEP_Master_Out(3834) <= \<const0>\;
  LOCKSTEP_Master_Out(3835) <= \<const0>\;
  LOCKSTEP_Master_Out(3836) <= \<const0>\;
  LOCKSTEP_Master_Out(3837) <= \<const0>\;
  LOCKSTEP_Master_Out(3838) <= \<const0>\;
  LOCKSTEP_Master_Out(3839) <= \<const0>\;
  LOCKSTEP_Master_Out(3840) <= \<const0>\;
  LOCKSTEP_Master_Out(3841) <= \<const0>\;
  LOCKSTEP_Master_Out(3842) <= \<const0>\;
  LOCKSTEP_Master_Out(3843) <= \<const0>\;
  LOCKSTEP_Master_Out(3844) <= \<const0>\;
  LOCKSTEP_Master_Out(3845) <= \<const0>\;
  LOCKSTEP_Master_Out(3846) <= \<const0>\;
  LOCKSTEP_Master_Out(3847) <= \<const0>\;
  LOCKSTEP_Master_Out(3848) <= \<const0>\;
  LOCKSTEP_Master_Out(3849) <= \<const0>\;
  LOCKSTEP_Master_Out(3850) <= \<const0>\;
  LOCKSTEP_Master_Out(3851) <= \<const0>\;
  LOCKSTEP_Master_Out(3852) <= \<const0>\;
  LOCKSTEP_Master_Out(3853) <= \<const0>\;
  LOCKSTEP_Master_Out(3854) <= \<const0>\;
  LOCKSTEP_Master_Out(3855) <= \<const0>\;
  LOCKSTEP_Master_Out(3856) <= \<const0>\;
  LOCKSTEP_Master_Out(3857) <= \<const0>\;
  LOCKSTEP_Master_Out(3858) <= \<const0>\;
  LOCKSTEP_Master_Out(3859) <= \<const0>\;
  LOCKSTEP_Master_Out(3860) <= \<const0>\;
  LOCKSTEP_Master_Out(3861) <= \<const0>\;
  LOCKSTEP_Master_Out(3862) <= \<const0>\;
  LOCKSTEP_Master_Out(3863) <= \<const0>\;
  LOCKSTEP_Master_Out(3864) <= \<const0>\;
  LOCKSTEP_Master_Out(3865) <= \<const0>\;
  LOCKSTEP_Master_Out(3866) <= \<const0>\;
  LOCKSTEP_Master_Out(3867) <= \<const0>\;
  LOCKSTEP_Master_Out(3868) <= \<const0>\;
  LOCKSTEP_Master_Out(3869) <= \<const0>\;
  LOCKSTEP_Master_Out(3870) <= \<const0>\;
  LOCKSTEP_Master_Out(3871) <= \<const0>\;
  LOCKSTEP_Master_Out(3872) <= \<const0>\;
  LOCKSTEP_Master_Out(3873) <= \<const0>\;
  LOCKSTEP_Master_Out(3874) <= \<const0>\;
  LOCKSTEP_Master_Out(3875) <= \<const0>\;
  LOCKSTEP_Master_Out(3876) <= \<const0>\;
  LOCKSTEP_Master_Out(3877) <= \<const0>\;
  LOCKSTEP_Master_Out(3878) <= \<const0>\;
  LOCKSTEP_Master_Out(3879) <= \<const0>\;
  LOCKSTEP_Master_Out(3880) <= \<const0>\;
  LOCKSTEP_Master_Out(3881) <= \<const0>\;
  LOCKSTEP_Master_Out(3882) <= \<const0>\;
  LOCKSTEP_Master_Out(3883) <= \<const0>\;
  LOCKSTEP_Master_Out(3884) <= \<const0>\;
  LOCKSTEP_Master_Out(3885) <= \<const0>\;
  LOCKSTEP_Master_Out(3886) <= \<const0>\;
  LOCKSTEP_Master_Out(3887) <= \<const0>\;
  LOCKSTEP_Master_Out(3888) <= \<const0>\;
  LOCKSTEP_Master_Out(3889) <= \<const0>\;
  LOCKSTEP_Master_Out(3890) <= \<const0>\;
  LOCKSTEP_Master_Out(3891) <= \<const0>\;
  LOCKSTEP_Master_Out(3892) <= \<const0>\;
  LOCKSTEP_Master_Out(3893) <= \<const0>\;
  LOCKSTEP_Master_Out(3894) <= \<const0>\;
  LOCKSTEP_Master_Out(3895) <= \<const0>\;
  LOCKSTEP_Master_Out(3896) <= \<const0>\;
  LOCKSTEP_Master_Out(3897) <= \<const0>\;
  LOCKSTEP_Master_Out(3898) <= \<const0>\;
  LOCKSTEP_Master_Out(3899) <= \<const0>\;
  LOCKSTEP_Master_Out(3900) <= \<const0>\;
  LOCKSTEP_Master_Out(3901) <= \<const0>\;
  LOCKSTEP_Master_Out(3902) <= \<const0>\;
  LOCKSTEP_Master_Out(3903) <= \<const0>\;
  LOCKSTEP_Master_Out(3904) <= \<const0>\;
  LOCKSTEP_Master_Out(3905) <= \<const0>\;
  LOCKSTEP_Master_Out(3906) <= \<const0>\;
  LOCKSTEP_Master_Out(3907) <= \<const0>\;
  LOCKSTEP_Master_Out(3908) <= \<const0>\;
  LOCKSTEP_Master_Out(3909) <= \<const0>\;
  LOCKSTEP_Master_Out(3910) <= \<const0>\;
  LOCKSTEP_Master_Out(3911) <= \<const0>\;
  LOCKSTEP_Master_Out(3912) <= \<const0>\;
  LOCKSTEP_Master_Out(3913) <= \<const0>\;
  LOCKSTEP_Master_Out(3914) <= \<const0>\;
  LOCKSTEP_Master_Out(3915) <= \<const0>\;
  LOCKSTEP_Master_Out(3916) <= \<const0>\;
  LOCKSTEP_Master_Out(3917) <= \<const0>\;
  LOCKSTEP_Master_Out(3918) <= \<const0>\;
  LOCKSTEP_Master_Out(3919) <= \<const0>\;
  LOCKSTEP_Master_Out(3920) <= \<const0>\;
  LOCKSTEP_Master_Out(3921) <= \<const0>\;
  LOCKSTEP_Master_Out(3922) <= \<const0>\;
  LOCKSTEP_Master_Out(3923) <= \<const0>\;
  LOCKSTEP_Master_Out(3924) <= \<const0>\;
  LOCKSTEP_Master_Out(3925) <= \<const0>\;
  LOCKSTEP_Master_Out(3926) <= \<const0>\;
  LOCKSTEP_Master_Out(3927) <= \<const0>\;
  LOCKSTEP_Master_Out(3928) <= \<const0>\;
  LOCKSTEP_Master_Out(3929) <= \<const0>\;
  LOCKSTEP_Master_Out(3930) <= \<const0>\;
  LOCKSTEP_Master_Out(3931) <= \<const0>\;
  LOCKSTEP_Master_Out(3932) <= \<const0>\;
  LOCKSTEP_Master_Out(3933) <= \<const0>\;
  LOCKSTEP_Master_Out(3934) <= \<const0>\;
  LOCKSTEP_Master_Out(3935) <= \<const0>\;
  LOCKSTEP_Master_Out(3936) <= \<const0>\;
  LOCKSTEP_Master_Out(3937) <= \<const0>\;
  LOCKSTEP_Master_Out(3938) <= \<const0>\;
  LOCKSTEP_Master_Out(3939) <= \<const0>\;
  LOCKSTEP_Master_Out(3940) <= \<const0>\;
  LOCKSTEP_Master_Out(3941) <= \<const0>\;
  LOCKSTEP_Master_Out(3942) <= \<const0>\;
  LOCKSTEP_Master_Out(3943) <= \<const0>\;
  LOCKSTEP_Master_Out(3944) <= \<const0>\;
  LOCKSTEP_Master_Out(3945) <= \<const0>\;
  LOCKSTEP_Master_Out(3946) <= \<const0>\;
  LOCKSTEP_Master_Out(3947) <= \<const0>\;
  LOCKSTEP_Master_Out(3948) <= \<const0>\;
  LOCKSTEP_Master_Out(3949) <= \<const0>\;
  LOCKSTEP_Master_Out(3950) <= \<const0>\;
  LOCKSTEP_Master_Out(3951) <= \<const0>\;
  LOCKSTEP_Master_Out(3952) <= \<const0>\;
  LOCKSTEP_Master_Out(3953) <= \<const0>\;
  LOCKSTEP_Master_Out(3954) <= \<const0>\;
  LOCKSTEP_Master_Out(3955) <= \<const0>\;
  LOCKSTEP_Master_Out(3956) <= \<const0>\;
  LOCKSTEP_Master_Out(3957) <= \<const0>\;
  LOCKSTEP_Master_Out(3958) <= \<const0>\;
  LOCKSTEP_Master_Out(3959) <= \<const0>\;
  LOCKSTEP_Master_Out(3960) <= \<const0>\;
  LOCKSTEP_Master_Out(3961) <= \<const0>\;
  LOCKSTEP_Master_Out(3962) <= \<const0>\;
  LOCKSTEP_Master_Out(3963) <= \<const0>\;
  LOCKSTEP_Master_Out(3964) <= \<const0>\;
  LOCKSTEP_Master_Out(3965) <= \<const0>\;
  LOCKSTEP_Master_Out(3966) <= \<const0>\;
  LOCKSTEP_Master_Out(3967) <= \<const0>\;
  LOCKSTEP_Master_Out(3968) <= \<const0>\;
  LOCKSTEP_Master_Out(3969) <= \<const0>\;
  LOCKSTEP_Master_Out(3970) <= \<const0>\;
  LOCKSTEP_Master_Out(3971) <= \<const0>\;
  LOCKSTEP_Master_Out(3972) <= \<const0>\;
  LOCKSTEP_Master_Out(3973) <= \<const0>\;
  LOCKSTEP_Master_Out(3974) <= \<const0>\;
  LOCKSTEP_Master_Out(3975) <= \<const0>\;
  LOCKSTEP_Master_Out(3976) <= \<const0>\;
  LOCKSTEP_Master_Out(3977) <= \<const0>\;
  LOCKSTEP_Master_Out(3978) <= \<const0>\;
  LOCKSTEP_Master_Out(3979) <= \<const0>\;
  LOCKSTEP_Master_Out(3980) <= \<const0>\;
  LOCKSTEP_Master_Out(3981) <= \<const0>\;
  LOCKSTEP_Master_Out(3982) <= \<const0>\;
  LOCKSTEP_Master_Out(3983) <= \<const0>\;
  LOCKSTEP_Master_Out(3984) <= \<const0>\;
  LOCKSTEP_Master_Out(3985) <= \<const0>\;
  LOCKSTEP_Master_Out(3986) <= \<const0>\;
  LOCKSTEP_Master_Out(3987) <= \<const0>\;
  LOCKSTEP_Master_Out(3988) <= \<const0>\;
  LOCKSTEP_Master_Out(3989) <= \<const0>\;
  LOCKSTEP_Master_Out(3990) <= \<const0>\;
  LOCKSTEP_Master_Out(3991) <= \<const0>\;
  LOCKSTEP_Master_Out(3992) <= \<const0>\;
  LOCKSTEP_Master_Out(3993) <= \<const0>\;
  LOCKSTEP_Master_Out(3994) <= \<const0>\;
  LOCKSTEP_Master_Out(3995) <= \<const0>\;
  LOCKSTEP_Master_Out(3996) <= \<const0>\;
  LOCKSTEP_Master_Out(3997) <= \<const0>\;
  LOCKSTEP_Master_Out(3998) <= \<const0>\;
  LOCKSTEP_Master_Out(3999) <= \<const0>\;
  LOCKSTEP_Master_Out(4000) <= \<const0>\;
  LOCKSTEP_Master_Out(4001) <= \<const0>\;
  LOCKSTEP_Master_Out(4002) <= \<const0>\;
  LOCKSTEP_Master_Out(4003) <= \<const0>\;
  LOCKSTEP_Master_Out(4004) <= \<const0>\;
  LOCKSTEP_Master_Out(4005) <= \<const0>\;
  LOCKSTEP_Master_Out(4006) <= \<const0>\;
  LOCKSTEP_Master_Out(4007) <= \<const0>\;
  LOCKSTEP_Master_Out(4008) <= \<const0>\;
  LOCKSTEP_Master_Out(4009) <= \<const0>\;
  LOCKSTEP_Master_Out(4010) <= \<const0>\;
  LOCKSTEP_Master_Out(4011) <= \<const0>\;
  LOCKSTEP_Master_Out(4012) <= \<const0>\;
  LOCKSTEP_Master_Out(4013) <= \<const0>\;
  LOCKSTEP_Master_Out(4014) <= \<const0>\;
  LOCKSTEP_Master_Out(4015) <= \<const0>\;
  LOCKSTEP_Master_Out(4016) <= \<const0>\;
  LOCKSTEP_Master_Out(4017) <= \<const0>\;
  LOCKSTEP_Master_Out(4018) <= \<const0>\;
  LOCKSTEP_Master_Out(4019) <= \<const0>\;
  LOCKSTEP_Master_Out(4020) <= \<const0>\;
  LOCKSTEP_Master_Out(4021) <= \<const0>\;
  LOCKSTEP_Master_Out(4022) <= \<const0>\;
  LOCKSTEP_Master_Out(4023) <= \<const0>\;
  LOCKSTEP_Master_Out(4024) <= \<const0>\;
  LOCKSTEP_Master_Out(4025) <= \<const0>\;
  LOCKSTEP_Master_Out(4026) <= \<const0>\;
  LOCKSTEP_Master_Out(4027) <= \<const0>\;
  LOCKSTEP_Master_Out(4028) <= \<const0>\;
  LOCKSTEP_Master_Out(4029) <= \<const0>\;
  LOCKSTEP_Master_Out(4030) <= \<const0>\;
  LOCKSTEP_Master_Out(4031) <= \<const0>\;
  LOCKSTEP_Master_Out(4032) <= \<const0>\;
  LOCKSTEP_Master_Out(4033) <= \<const0>\;
  LOCKSTEP_Master_Out(4034) <= \<const0>\;
  LOCKSTEP_Master_Out(4035) <= \<const0>\;
  LOCKSTEP_Master_Out(4036) <= \<const0>\;
  LOCKSTEP_Master_Out(4037) <= \<const0>\;
  LOCKSTEP_Master_Out(4038) <= \<const0>\;
  LOCKSTEP_Master_Out(4039) <= \<const0>\;
  LOCKSTEP_Master_Out(4040) <= \<const0>\;
  LOCKSTEP_Master_Out(4041) <= \<const0>\;
  LOCKSTEP_Master_Out(4042) <= \<const0>\;
  LOCKSTEP_Master_Out(4043) <= \<const0>\;
  LOCKSTEP_Master_Out(4044) <= \<const0>\;
  LOCKSTEP_Master_Out(4045) <= \<const0>\;
  LOCKSTEP_Master_Out(4046) <= \<const0>\;
  LOCKSTEP_Master_Out(4047) <= \<const0>\;
  LOCKSTEP_Master_Out(4048) <= \<const0>\;
  LOCKSTEP_Master_Out(4049) <= \<const0>\;
  LOCKSTEP_Master_Out(4050) <= \<const0>\;
  LOCKSTEP_Master_Out(4051) <= \<const0>\;
  LOCKSTEP_Master_Out(4052) <= \<const0>\;
  LOCKSTEP_Master_Out(4053) <= \<const0>\;
  LOCKSTEP_Master_Out(4054) <= \<const0>\;
  LOCKSTEP_Master_Out(4055) <= \<const0>\;
  LOCKSTEP_Master_Out(4056) <= \<const0>\;
  LOCKSTEP_Master_Out(4057) <= \<const0>\;
  LOCKSTEP_Master_Out(4058) <= \<const0>\;
  LOCKSTEP_Master_Out(4059) <= \<const0>\;
  LOCKSTEP_Master_Out(4060) <= \<const0>\;
  LOCKSTEP_Master_Out(4061) <= \<const0>\;
  LOCKSTEP_Master_Out(4062) <= \<const0>\;
  LOCKSTEP_Master_Out(4063) <= \<const0>\;
  LOCKSTEP_Master_Out(4064) <= \<const0>\;
  LOCKSTEP_Master_Out(4065) <= \<const0>\;
  LOCKSTEP_Master_Out(4066) <= \<const0>\;
  LOCKSTEP_Master_Out(4067) <= \<const0>\;
  LOCKSTEP_Master_Out(4068) <= \<const0>\;
  LOCKSTEP_Master_Out(4069) <= \<const0>\;
  LOCKSTEP_Master_Out(4070) <= \<const0>\;
  LOCKSTEP_Master_Out(4071) <= \<const0>\;
  LOCKSTEP_Master_Out(4072) <= \<const0>\;
  LOCKSTEP_Master_Out(4073) <= \<const0>\;
  LOCKSTEP_Master_Out(4074) <= \<const0>\;
  LOCKSTEP_Master_Out(4075) <= \<const0>\;
  LOCKSTEP_Master_Out(4076) <= \<const0>\;
  LOCKSTEP_Master_Out(4077) <= \<const0>\;
  LOCKSTEP_Master_Out(4078) <= \<const0>\;
  LOCKSTEP_Master_Out(4079) <= \<const0>\;
  LOCKSTEP_Master_Out(4080) <= \<const0>\;
  LOCKSTEP_Master_Out(4081) <= \<const0>\;
  LOCKSTEP_Master_Out(4082) <= \<const0>\;
  LOCKSTEP_Master_Out(4083) <= \<const0>\;
  LOCKSTEP_Master_Out(4084) <= \<const0>\;
  LOCKSTEP_Master_Out(4085) <= \<const0>\;
  LOCKSTEP_Master_Out(4086) <= \<const0>\;
  LOCKSTEP_Master_Out(4087) <= \<const0>\;
  LOCKSTEP_Master_Out(4088) <= \<const0>\;
  LOCKSTEP_Master_Out(4089) <= \<const0>\;
  LOCKSTEP_Master_Out(4090) <= \<const0>\;
  LOCKSTEP_Master_Out(4091) <= \<const0>\;
  LOCKSTEP_Master_Out(4092) <= \<const0>\;
  LOCKSTEP_Master_Out(4093) <= \<const0>\;
  LOCKSTEP_Master_Out(4094) <= \<const0>\;
  LOCKSTEP_Master_Out(4095) <= \<const0>\;
  M0_AXIS_TDATA(31) <= \<const0>\;
  M0_AXIS_TDATA(30) <= \<const0>\;
  M0_AXIS_TDATA(29) <= \<const0>\;
  M0_AXIS_TDATA(28) <= \<const0>\;
  M0_AXIS_TDATA(27) <= \<const0>\;
  M0_AXIS_TDATA(26) <= \<const0>\;
  M0_AXIS_TDATA(25) <= \<const0>\;
  M0_AXIS_TDATA(24) <= \<const0>\;
  M0_AXIS_TDATA(23) <= \<const0>\;
  M0_AXIS_TDATA(22) <= \<const0>\;
  M0_AXIS_TDATA(21) <= \<const0>\;
  M0_AXIS_TDATA(20) <= \<const0>\;
  M0_AXIS_TDATA(19) <= \<const0>\;
  M0_AXIS_TDATA(18) <= \<const0>\;
  M0_AXIS_TDATA(17) <= \<const0>\;
  M0_AXIS_TDATA(16) <= \<const0>\;
  M0_AXIS_TDATA(15) <= \<const0>\;
  M0_AXIS_TDATA(14) <= \<const0>\;
  M0_AXIS_TDATA(13) <= \<const0>\;
  M0_AXIS_TDATA(12) <= \<const0>\;
  M0_AXIS_TDATA(11) <= \<const0>\;
  M0_AXIS_TDATA(10) <= \<const0>\;
  M0_AXIS_TDATA(9) <= \<const0>\;
  M0_AXIS_TDATA(8) <= \<const0>\;
  M0_AXIS_TDATA(7) <= \<const0>\;
  M0_AXIS_TDATA(6) <= \<const0>\;
  M0_AXIS_TDATA(5) <= \<const0>\;
  M0_AXIS_TDATA(4) <= \<const0>\;
  M0_AXIS_TDATA(3) <= \<const0>\;
  M0_AXIS_TDATA(2) <= \<const0>\;
  M0_AXIS_TDATA(1) <= \<const0>\;
  M0_AXIS_TDATA(0) <= \<const0>\;
  M0_AXIS_TLAST <= \<const0>\;
  M0_AXIS_TVALID <= \<const0>\;
  M10_AXIS_TDATA(31) <= \<const0>\;
  M10_AXIS_TDATA(30) <= \<const0>\;
  M10_AXIS_TDATA(29) <= \<const0>\;
  M10_AXIS_TDATA(28) <= \<const0>\;
  M10_AXIS_TDATA(27) <= \<const0>\;
  M10_AXIS_TDATA(26) <= \<const0>\;
  M10_AXIS_TDATA(25) <= \<const0>\;
  M10_AXIS_TDATA(24) <= \<const0>\;
  M10_AXIS_TDATA(23) <= \<const0>\;
  M10_AXIS_TDATA(22) <= \<const0>\;
  M10_AXIS_TDATA(21) <= \<const0>\;
  M10_AXIS_TDATA(20) <= \<const0>\;
  M10_AXIS_TDATA(19) <= \<const0>\;
  M10_AXIS_TDATA(18) <= \<const0>\;
  M10_AXIS_TDATA(17) <= \<const0>\;
  M10_AXIS_TDATA(16) <= \<const0>\;
  M10_AXIS_TDATA(15) <= \<const0>\;
  M10_AXIS_TDATA(14) <= \<const0>\;
  M10_AXIS_TDATA(13) <= \<const0>\;
  M10_AXIS_TDATA(12) <= \<const0>\;
  M10_AXIS_TDATA(11) <= \<const0>\;
  M10_AXIS_TDATA(10) <= \<const0>\;
  M10_AXIS_TDATA(9) <= \<const0>\;
  M10_AXIS_TDATA(8) <= \<const0>\;
  M10_AXIS_TDATA(7) <= \<const0>\;
  M10_AXIS_TDATA(6) <= \<const0>\;
  M10_AXIS_TDATA(5) <= \<const0>\;
  M10_AXIS_TDATA(4) <= \<const0>\;
  M10_AXIS_TDATA(3) <= \<const0>\;
  M10_AXIS_TDATA(2) <= \<const0>\;
  M10_AXIS_TDATA(1) <= \<const0>\;
  M10_AXIS_TDATA(0) <= \<const0>\;
  M10_AXIS_TLAST <= \<const0>\;
  M10_AXIS_TVALID <= \<const0>\;
  M11_AXIS_TDATA(31) <= \<const0>\;
  M11_AXIS_TDATA(30) <= \<const0>\;
  M11_AXIS_TDATA(29) <= \<const0>\;
  M11_AXIS_TDATA(28) <= \<const0>\;
  M11_AXIS_TDATA(27) <= \<const0>\;
  M11_AXIS_TDATA(26) <= \<const0>\;
  M11_AXIS_TDATA(25) <= \<const0>\;
  M11_AXIS_TDATA(24) <= \<const0>\;
  M11_AXIS_TDATA(23) <= \<const0>\;
  M11_AXIS_TDATA(22) <= \<const0>\;
  M11_AXIS_TDATA(21) <= \<const0>\;
  M11_AXIS_TDATA(20) <= \<const0>\;
  M11_AXIS_TDATA(19) <= \<const0>\;
  M11_AXIS_TDATA(18) <= \<const0>\;
  M11_AXIS_TDATA(17) <= \<const0>\;
  M11_AXIS_TDATA(16) <= \<const0>\;
  M11_AXIS_TDATA(15) <= \<const0>\;
  M11_AXIS_TDATA(14) <= \<const0>\;
  M11_AXIS_TDATA(13) <= \<const0>\;
  M11_AXIS_TDATA(12) <= \<const0>\;
  M11_AXIS_TDATA(11) <= \<const0>\;
  M11_AXIS_TDATA(10) <= \<const0>\;
  M11_AXIS_TDATA(9) <= \<const0>\;
  M11_AXIS_TDATA(8) <= \<const0>\;
  M11_AXIS_TDATA(7) <= \<const0>\;
  M11_AXIS_TDATA(6) <= \<const0>\;
  M11_AXIS_TDATA(5) <= \<const0>\;
  M11_AXIS_TDATA(4) <= \<const0>\;
  M11_AXIS_TDATA(3) <= \<const0>\;
  M11_AXIS_TDATA(2) <= \<const0>\;
  M11_AXIS_TDATA(1) <= \<const0>\;
  M11_AXIS_TDATA(0) <= \<const0>\;
  M11_AXIS_TLAST <= \<const0>\;
  M11_AXIS_TVALID <= \<const0>\;
  M12_AXIS_TDATA(31) <= \<const0>\;
  M12_AXIS_TDATA(30) <= \<const0>\;
  M12_AXIS_TDATA(29) <= \<const0>\;
  M12_AXIS_TDATA(28) <= \<const0>\;
  M12_AXIS_TDATA(27) <= \<const0>\;
  M12_AXIS_TDATA(26) <= \<const0>\;
  M12_AXIS_TDATA(25) <= \<const0>\;
  M12_AXIS_TDATA(24) <= \<const0>\;
  M12_AXIS_TDATA(23) <= \<const0>\;
  M12_AXIS_TDATA(22) <= \<const0>\;
  M12_AXIS_TDATA(21) <= \<const0>\;
  M12_AXIS_TDATA(20) <= \<const0>\;
  M12_AXIS_TDATA(19) <= \<const0>\;
  M12_AXIS_TDATA(18) <= \<const0>\;
  M12_AXIS_TDATA(17) <= \<const0>\;
  M12_AXIS_TDATA(16) <= \<const0>\;
  M12_AXIS_TDATA(15) <= \<const0>\;
  M12_AXIS_TDATA(14) <= \<const0>\;
  M12_AXIS_TDATA(13) <= \<const0>\;
  M12_AXIS_TDATA(12) <= \<const0>\;
  M12_AXIS_TDATA(11) <= \<const0>\;
  M12_AXIS_TDATA(10) <= \<const0>\;
  M12_AXIS_TDATA(9) <= \<const0>\;
  M12_AXIS_TDATA(8) <= \<const0>\;
  M12_AXIS_TDATA(7) <= \<const0>\;
  M12_AXIS_TDATA(6) <= \<const0>\;
  M12_AXIS_TDATA(5) <= \<const0>\;
  M12_AXIS_TDATA(4) <= \<const0>\;
  M12_AXIS_TDATA(3) <= \<const0>\;
  M12_AXIS_TDATA(2) <= \<const0>\;
  M12_AXIS_TDATA(1) <= \<const0>\;
  M12_AXIS_TDATA(0) <= \<const0>\;
  M12_AXIS_TLAST <= \<const0>\;
  M12_AXIS_TVALID <= \<const0>\;
  M13_AXIS_TDATA(31) <= \<const0>\;
  M13_AXIS_TDATA(30) <= \<const0>\;
  M13_AXIS_TDATA(29) <= \<const0>\;
  M13_AXIS_TDATA(28) <= \<const0>\;
  M13_AXIS_TDATA(27) <= \<const0>\;
  M13_AXIS_TDATA(26) <= \<const0>\;
  M13_AXIS_TDATA(25) <= \<const0>\;
  M13_AXIS_TDATA(24) <= \<const0>\;
  M13_AXIS_TDATA(23) <= \<const0>\;
  M13_AXIS_TDATA(22) <= \<const0>\;
  M13_AXIS_TDATA(21) <= \<const0>\;
  M13_AXIS_TDATA(20) <= \<const0>\;
  M13_AXIS_TDATA(19) <= \<const0>\;
  M13_AXIS_TDATA(18) <= \<const0>\;
  M13_AXIS_TDATA(17) <= \<const0>\;
  M13_AXIS_TDATA(16) <= \<const0>\;
  M13_AXIS_TDATA(15) <= \<const0>\;
  M13_AXIS_TDATA(14) <= \<const0>\;
  M13_AXIS_TDATA(13) <= \<const0>\;
  M13_AXIS_TDATA(12) <= \<const0>\;
  M13_AXIS_TDATA(11) <= \<const0>\;
  M13_AXIS_TDATA(10) <= \<const0>\;
  M13_AXIS_TDATA(9) <= \<const0>\;
  M13_AXIS_TDATA(8) <= \<const0>\;
  M13_AXIS_TDATA(7) <= \<const0>\;
  M13_AXIS_TDATA(6) <= \<const0>\;
  M13_AXIS_TDATA(5) <= \<const0>\;
  M13_AXIS_TDATA(4) <= \<const0>\;
  M13_AXIS_TDATA(3) <= \<const0>\;
  M13_AXIS_TDATA(2) <= \<const0>\;
  M13_AXIS_TDATA(1) <= \<const0>\;
  M13_AXIS_TDATA(0) <= \<const0>\;
  M13_AXIS_TLAST <= \<const0>\;
  M13_AXIS_TVALID <= \<const0>\;
  M14_AXIS_TDATA(31) <= \<const0>\;
  M14_AXIS_TDATA(30) <= \<const0>\;
  M14_AXIS_TDATA(29) <= \<const0>\;
  M14_AXIS_TDATA(28) <= \<const0>\;
  M14_AXIS_TDATA(27) <= \<const0>\;
  M14_AXIS_TDATA(26) <= \<const0>\;
  M14_AXIS_TDATA(25) <= \<const0>\;
  M14_AXIS_TDATA(24) <= \<const0>\;
  M14_AXIS_TDATA(23) <= \<const0>\;
  M14_AXIS_TDATA(22) <= \<const0>\;
  M14_AXIS_TDATA(21) <= \<const0>\;
  M14_AXIS_TDATA(20) <= \<const0>\;
  M14_AXIS_TDATA(19) <= \<const0>\;
  M14_AXIS_TDATA(18) <= \<const0>\;
  M14_AXIS_TDATA(17) <= \<const0>\;
  M14_AXIS_TDATA(16) <= \<const0>\;
  M14_AXIS_TDATA(15) <= \<const0>\;
  M14_AXIS_TDATA(14) <= \<const0>\;
  M14_AXIS_TDATA(13) <= \<const0>\;
  M14_AXIS_TDATA(12) <= \<const0>\;
  M14_AXIS_TDATA(11) <= \<const0>\;
  M14_AXIS_TDATA(10) <= \<const0>\;
  M14_AXIS_TDATA(9) <= \<const0>\;
  M14_AXIS_TDATA(8) <= \<const0>\;
  M14_AXIS_TDATA(7) <= \<const0>\;
  M14_AXIS_TDATA(6) <= \<const0>\;
  M14_AXIS_TDATA(5) <= \<const0>\;
  M14_AXIS_TDATA(4) <= \<const0>\;
  M14_AXIS_TDATA(3) <= \<const0>\;
  M14_AXIS_TDATA(2) <= \<const0>\;
  M14_AXIS_TDATA(1) <= \<const0>\;
  M14_AXIS_TDATA(0) <= \<const0>\;
  M14_AXIS_TLAST <= \<const0>\;
  M14_AXIS_TVALID <= \<const0>\;
  M15_AXIS_TDATA(31) <= \<const0>\;
  M15_AXIS_TDATA(30) <= \<const0>\;
  M15_AXIS_TDATA(29) <= \<const0>\;
  M15_AXIS_TDATA(28) <= \<const0>\;
  M15_AXIS_TDATA(27) <= \<const0>\;
  M15_AXIS_TDATA(26) <= \<const0>\;
  M15_AXIS_TDATA(25) <= \<const0>\;
  M15_AXIS_TDATA(24) <= \<const0>\;
  M15_AXIS_TDATA(23) <= \<const0>\;
  M15_AXIS_TDATA(22) <= \<const0>\;
  M15_AXIS_TDATA(21) <= \<const0>\;
  M15_AXIS_TDATA(20) <= \<const0>\;
  M15_AXIS_TDATA(19) <= \<const0>\;
  M15_AXIS_TDATA(18) <= \<const0>\;
  M15_AXIS_TDATA(17) <= \<const0>\;
  M15_AXIS_TDATA(16) <= \<const0>\;
  M15_AXIS_TDATA(15) <= \<const0>\;
  M15_AXIS_TDATA(14) <= \<const0>\;
  M15_AXIS_TDATA(13) <= \<const0>\;
  M15_AXIS_TDATA(12) <= \<const0>\;
  M15_AXIS_TDATA(11) <= \<const0>\;
  M15_AXIS_TDATA(10) <= \<const0>\;
  M15_AXIS_TDATA(9) <= \<const0>\;
  M15_AXIS_TDATA(8) <= \<const0>\;
  M15_AXIS_TDATA(7) <= \<const0>\;
  M15_AXIS_TDATA(6) <= \<const0>\;
  M15_AXIS_TDATA(5) <= \<const0>\;
  M15_AXIS_TDATA(4) <= \<const0>\;
  M15_AXIS_TDATA(3) <= \<const0>\;
  M15_AXIS_TDATA(2) <= \<const0>\;
  M15_AXIS_TDATA(1) <= \<const0>\;
  M15_AXIS_TDATA(0) <= \<const0>\;
  M15_AXIS_TLAST <= \<const0>\;
  M15_AXIS_TVALID <= \<const0>\;
  M1_AXIS_TDATA(31) <= \<const0>\;
  M1_AXIS_TDATA(30) <= \<const0>\;
  M1_AXIS_TDATA(29) <= \<const0>\;
  M1_AXIS_TDATA(28) <= \<const0>\;
  M1_AXIS_TDATA(27) <= \<const0>\;
  M1_AXIS_TDATA(26) <= \<const0>\;
  M1_AXIS_TDATA(25) <= \<const0>\;
  M1_AXIS_TDATA(24) <= \<const0>\;
  M1_AXIS_TDATA(23) <= \<const0>\;
  M1_AXIS_TDATA(22) <= \<const0>\;
  M1_AXIS_TDATA(21) <= \<const0>\;
  M1_AXIS_TDATA(20) <= \<const0>\;
  M1_AXIS_TDATA(19) <= \<const0>\;
  M1_AXIS_TDATA(18) <= \<const0>\;
  M1_AXIS_TDATA(17) <= \<const0>\;
  M1_AXIS_TDATA(16) <= \<const0>\;
  M1_AXIS_TDATA(15) <= \<const0>\;
  M1_AXIS_TDATA(14) <= \<const0>\;
  M1_AXIS_TDATA(13) <= \<const0>\;
  M1_AXIS_TDATA(12) <= \<const0>\;
  M1_AXIS_TDATA(11) <= \<const0>\;
  M1_AXIS_TDATA(10) <= \<const0>\;
  M1_AXIS_TDATA(9) <= \<const0>\;
  M1_AXIS_TDATA(8) <= \<const0>\;
  M1_AXIS_TDATA(7) <= \<const0>\;
  M1_AXIS_TDATA(6) <= \<const0>\;
  M1_AXIS_TDATA(5) <= \<const0>\;
  M1_AXIS_TDATA(4) <= \<const0>\;
  M1_AXIS_TDATA(3) <= \<const0>\;
  M1_AXIS_TDATA(2) <= \<const0>\;
  M1_AXIS_TDATA(1) <= \<const0>\;
  M1_AXIS_TDATA(0) <= \<const0>\;
  M1_AXIS_TLAST <= \<const0>\;
  M1_AXIS_TVALID <= \<const0>\;
  M2_AXIS_TDATA(31) <= \<const0>\;
  M2_AXIS_TDATA(30) <= \<const0>\;
  M2_AXIS_TDATA(29) <= \<const0>\;
  M2_AXIS_TDATA(28) <= \<const0>\;
  M2_AXIS_TDATA(27) <= \<const0>\;
  M2_AXIS_TDATA(26) <= \<const0>\;
  M2_AXIS_TDATA(25) <= \<const0>\;
  M2_AXIS_TDATA(24) <= \<const0>\;
  M2_AXIS_TDATA(23) <= \<const0>\;
  M2_AXIS_TDATA(22) <= \<const0>\;
  M2_AXIS_TDATA(21) <= \<const0>\;
  M2_AXIS_TDATA(20) <= \<const0>\;
  M2_AXIS_TDATA(19) <= \<const0>\;
  M2_AXIS_TDATA(18) <= \<const0>\;
  M2_AXIS_TDATA(17) <= \<const0>\;
  M2_AXIS_TDATA(16) <= \<const0>\;
  M2_AXIS_TDATA(15) <= \<const0>\;
  M2_AXIS_TDATA(14) <= \<const0>\;
  M2_AXIS_TDATA(13) <= \<const0>\;
  M2_AXIS_TDATA(12) <= \<const0>\;
  M2_AXIS_TDATA(11) <= \<const0>\;
  M2_AXIS_TDATA(10) <= \<const0>\;
  M2_AXIS_TDATA(9) <= \<const0>\;
  M2_AXIS_TDATA(8) <= \<const0>\;
  M2_AXIS_TDATA(7) <= \<const0>\;
  M2_AXIS_TDATA(6) <= \<const0>\;
  M2_AXIS_TDATA(5) <= \<const0>\;
  M2_AXIS_TDATA(4) <= \<const0>\;
  M2_AXIS_TDATA(3) <= \<const0>\;
  M2_AXIS_TDATA(2) <= \<const0>\;
  M2_AXIS_TDATA(1) <= \<const0>\;
  M2_AXIS_TDATA(0) <= \<const0>\;
  M2_AXIS_TLAST <= \<const0>\;
  M2_AXIS_TVALID <= \<const0>\;
  M3_AXIS_TDATA(31) <= \<const0>\;
  M3_AXIS_TDATA(30) <= \<const0>\;
  M3_AXIS_TDATA(29) <= \<const0>\;
  M3_AXIS_TDATA(28) <= \<const0>\;
  M3_AXIS_TDATA(27) <= \<const0>\;
  M3_AXIS_TDATA(26) <= \<const0>\;
  M3_AXIS_TDATA(25) <= \<const0>\;
  M3_AXIS_TDATA(24) <= \<const0>\;
  M3_AXIS_TDATA(23) <= \<const0>\;
  M3_AXIS_TDATA(22) <= \<const0>\;
  M3_AXIS_TDATA(21) <= \<const0>\;
  M3_AXIS_TDATA(20) <= \<const0>\;
  M3_AXIS_TDATA(19) <= \<const0>\;
  M3_AXIS_TDATA(18) <= \<const0>\;
  M3_AXIS_TDATA(17) <= \<const0>\;
  M3_AXIS_TDATA(16) <= \<const0>\;
  M3_AXIS_TDATA(15) <= \<const0>\;
  M3_AXIS_TDATA(14) <= \<const0>\;
  M3_AXIS_TDATA(13) <= \<const0>\;
  M3_AXIS_TDATA(12) <= \<const0>\;
  M3_AXIS_TDATA(11) <= \<const0>\;
  M3_AXIS_TDATA(10) <= \<const0>\;
  M3_AXIS_TDATA(9) <= \<const0>\;
  M3_AXIS_TDATA(8) <= \<const0>\;
  M3_AXIS_TDATA(7) <= \<const0>\;
  M3_AXIS_TDATA(6) <= \<const0>\;
  M3_AXIS_TDATA(5) <= \<const0>\;
  M3_AXIS_TDATA(4) <= \<const0>\;
  M3_AXIS_TDATA(3) <= \<const0>\;
  M3_AXIS_TDATA(2) <= \<const0>\;
  M3_AXIS_TDATA(1) <= \<const0>\;
  M3_AXIS_TDATA(0) <= \<const0>\;
  M3_AXIS_TLAST <= \<const0>\;
  M3_AXIS_TVALID <= \<const0>\;
  M4_AXIS_TDATA(31) <= \<const0>\;
  M4_AXIS_TDATA(30) <= \<const0>\;
  M4_AXIS_TDATA(29) <= \<const0>\;
  M4_AXIS_TDATA(28) <= \<const0>\;
  M4_AXIS_TDATA(27) <= \<const0>\;
  M4_AXIS_TDATA(26) <= \<const0>\;
  M4_AXIS_TDATA(25) <= \<const0>\;
  M4_AXIS_TDATA(24) <= \<const0>\;
  M4_AXIS_TDATA(23) <= \<const0>\;
  M4_AXIS_TDATA(22) <= \<const0>\;
  M4_AXIS_TDATA(21) <= \<const0>\;
  M4_AXIS_TDATA(20) <= \<const0>\;
  M4_AXIS_TDATA(19) <= \<const0>\;
  M4_AXIS_TDATA(18) <= \<const0>\;
  M4_AXIS_TDATA(17) <= \<const0>\;
  M4_AXIS_TDATA(16) <= \<const0>\;
  M4_AXIS_TDATA(15) <= \<const0>\;
  M4_AXIS_TDATA(14) <= \<const0>\;
  M4_AXIS_TDATA(13) <= \<const0>\;
  M4_AXIS_TDATA(12) <= \<const0>\;
  M4_AXIS_TDATA(11) <= \<const0>\;
  M4_AXIS_TDATA(10) <= \<const0>\;
  M4_AXIS_TDATA(9) <= \<const0>\;
  M4_AXIS_TDATA(8) <= \<const0>\;
  M4_AXIS_TDATA(7) <= \<const0>\;
  M4_AXIS_TDATA(6) <= \<const0>\;
  M4_AXIS_TDATA(5) <= \<const0>\;
  M4_AXIS_TDATA(4) <= \<const0>\;
  M4_AXIS_TDATA(3) <= \<const0>\;
  M4_AXIS_TDATA(2) <= \<const0>\;
  M4_AXIS_TDATA(1) <= \<const0>\;
  M4_AXIS_TDATA(0) <= \<const0>\;
  M4_AXIS_TLAST <= \<const0>\;
  M4_AXIS_TVALID <= \<const0>\;
  M5_AXIS_TDATA(31) <= \<const0>\;
  M5_AXIS_TDATA(30) <= \<const0>\;
  M5_AXIS_TDATA(29) <= \<const0>\;
  M5_AXIS_TDATA(28) <= \<const0>\;
  M5_AXIS_TDATA(27) <= \<const0>\;
  M5_AXIS_TDATA(26) <= \<const0>\;
  M5_AXIS_TDATA(25) <= \<const0>\;
  M5_AXIS_TDATA(24) <= \<const0>\;
  M5_AXIS_TDATA(23) <= \<const0>\;
  M5_AXIS_TDATA(22) <= \<const0>\;
  M5_AXIS_TDATA(21) <= \<const0>\;
  M5_AXIS_TDATA(20) <= \<const0>\;
  M5_AXIS_TDATA(19) <= \<const0>\;
  M5_AXIS_TDATA(18) <= \<const0>\;
  M5_AXIS_TDATA(17) <= \<const0>\;
  M5_AXIS_TDATA(16) <= \<const0>\;
  M5_AXIS_TDATA(15) <= \<const0>\;
  M5_AXIS_TDATA(14) <= \<const0>\;
  M5_AXIS_TDATA(13) <= \<const0>\;
  M5_AXIS_TDATA(12) <= \<const0>\;
  M5_AXIS_TDATA(11) <= \<const0>\;
  M5_AXIS_TDATA(10) <= \<const0>\;
  M5_AXIS_TDATA(9) <= \<const0>\;
  M5_AXIS_TDATA(8) <= \<const0>\;
  M5_AXIS_TDATA(7) <= \<const0>\;
  M5_AXIS_TDATA(6) <= \<const0>\;
  M5_AXIS_TDATA(5) <= \<const0>\;
  M5_AXIS_TDATA(4) <= \<const0>\;
  M5_AXIS_TDATA(3) <= \<const0>\;
  M5_AXIS_TDATA(2) <= \<const0>\;
  M5_AXIS_TDATA(1) <= \<const0>\;
  M5_AXIS_TDATA(0) <= \<const0>\;
  M5_AXIS_TLAST <= \<const0>\;
  M5_AXIS_TVALID <= \<const0>\;
  M6_AXIS_TDATA(31) <= \<const0>\;
  M6_AXIS_TDATA(30) <= \<const0>\;
  M6_AXIS_TDATA(29) <= \<const0>\;
  M6_AXIS_TDATA(28) <= \<const0>\;
  M6_AXIS_TDATA(27) <= \<const0>\;
  M6_AXIS_TDATA(26) <= \<const0>\;
  M6_AXIS_TDATA(25) <= \<const0>\;
  M6_AXIS_TDATA(24) <= \<const0>\;
  M6_AXIS_TDATA(23) <= \<const0>\;
  M6_AXIS_TDATA(22) <= \<const0>\;
  M6_AXIS_TDATA(21) <= \<const0>\;
  M6_AXIS_TDATA(20) <= \<const0>\;
  M6_AXIS_TDATA(19) <= \<const0>\;
  M6_AXIS_TDATA(18) <= \<const0>\;
  M6_AXIS_TDATA(17) <= \<const0>\;
  M6_AXIS_TDATA(16) <= \<const0>\;
  M6_AXIS_TDATA(15) <= \<const0>\;
  M6_AXIS_TDATA(14) <= \<const0>\;
  M6_AXIS_TDATA(13) <= \<const0>\;
  M6_AXIS_TDATA(12) <= \<const0>\;
  M6_AXIS_TDATA(11) <= \<const0>\;
  M6_AXIS_TDATA(10) <= \<const0>\;
  M6_AXIS_TDATA(9) <= \<const0>\;
  M6_AXIS_TDATA(8) <= \<const0>\;
  M6_AXIS_TDATA(7) <= \<const0>\;
  M6_AXIS_TDATA(6) <= \<const0>\;
  M6_AXIS_TDATA(5) <= \<const0>\;
  M6_AXIS_TDATA(4) <= \<const0>\;
  M6_AXIS_TDATA(3) <= \<const0>\;
  M6_AXIS_TDATA(2) <= \<const0>\;
  M6_AXIS_TDATA(1) <= \<const0>\;
  M6_AXIS_TDATA(0) <= \<const0>\;
  M6_AXIS_TLAST <= \<const0>\;
  M6_AXIS_TVALID <= \<const0>\;
  M7_AXIS_TDATA(31) <= \<const0>\;
  M7_AXIS_TDATA(30) <= \<const0>\;
  M7_AXIS_TDATA(29) <= \<const0>\;
  M7_AXIS_TDATA(28) <= \<const0>\;
  M7_AXIS_TDATA(27) <= \<const0>\;
  M7_AXIS_TDATA(26) <= \<const0>\;
  M7_AXIS_TDATA(25) <= \<const0>\;
  M7_AXIS_TDATA(24) <= \<const0>\;
  M7_AXIS_TDATA(23) <= \<const0>\;
  M7_AXIS_TDATA(22) <= \<const0>\;
  M7_AXIS_TDATA(21) <= \<const0>\;
  M7_AXIS_TDATA(20) <= \<const0>\;
  M7_AXIS_TDATA(19) <= \<const0>\;
  M7_AXIS_TDATA(18) <= \<const0>\;
  M7_AXIS_TDATA(17) <= \<const0>\;
  M7_AXIS_TDATA(16) <= \<const0>\;
  M7_AXIS_TDATA(15) <= \<const0>\;
  M7_AXIS_TDATA(14) <= \<const0>\;
  M7_AXIS_TDATA(13) <= \<const0>\;
  M7_AXIS_TDATA(12) <= \<const0>\;
  M7_AXIS_TDATA(11) <= \<const0>\;
  M7_AXIS_TDATA(10) <= \<const0>\;
  M7_AXIS_TDATA(9) <= \<const0>\;
  M7_AXIS_TDATA(8) <= \<const0>\;
  M7_AXIS_TDATA(7) <= \<const0>\;
  M7_AXIS_TDATA(6) <= \<const0>\;
  M7_AXIS_TDATA(5) <= \<const0>\;
  M7_AXIS_TDATA(4) <= \<const0>\;
  M7_AXIS_TDATA(3) <= \<const0>\;
  M7_AXIS_TDATA(2) <= \<const0>\;
  M7_AXIS_TDATA(1) <= \<const0>\;
  M7_AXIS_TDATA(0) <= \<const0>\;
  M7_AXIS_TLAST <= \<const0>\;
  M7_AXIS_TVALID <= \<const0>\;
  M8_AXIS_TDATA(31) <= \<const0>\;
  M8_AXIS_TDATA(30) <= \<const0>\;
  M8_AXIS_TDATA(29) <= \<const0>\;
  M8_AXIS_TDATA(28) <= \<const0>\;
  M8_AXIS_TDATA(27) <= \<const0>\;
  M8_AXIS_TDATA(26) <= \<const0>\;
  M8_AXIS_TDATA(25) <= \<const0>\;
  M8_AXIS_TDATA(24) <= \<const0>\;
  M8_AXIS_TDATA(23) <= \<const0>\;
  M8_AXIS_TDATA(22) <= \<const0>\;
  M8_AXIS_TDATA(21) <= \<const0>\;
  M8_AXIS_TDATA(20) <= \<const0>\;
  M8_AXIS_TDATA(19) <= \<const0>\;
  M8_AXIS_TDATA(18) <= \<const0>\;
  M8_AXIS_TDATA(17) <= \<const0>\;
  M8_AXIS_TDATA(16) <= \<const0>\;
  M8_AXIS_TDATA(15) <= \<const0>\;
  M8_AXIS_TDATA(14) <= \<const0>\;
  M8_AXIS_TDATA(13) <= \<const0>\;
  M8_AXIS_TDATA(12) <= \<const0>\;
  M8_AXIS_TDATA(11) <= \<const0>\;
  M8_AXIS_TDATA(10) <= \<const0>\;
  M8_AXIS_TDATA(9) <= \<const0>\;
  M8_AXIS_TDATA(8) <= \<const0>\;
  M8_AXIS_TDATA(7) <= \<const0>\;
  M8_AXIS_TDATA(6) <= \<const0>\;
  M8_AXIS_TDATA(5) <= \<const0>\;
  M8_AXIS_TDATA(4) <= \<const0>\;
  M8_AXIS_TDATA(3) <= \<const0>\;
  M8_AXIS_TDATA(2) <= \<const0>\;
  M8_AXIS_TDATA(1) <= \<const0>\;
  M8_AXIS_TDATA(0) <= \<const0>\;
  M8_AXIS_TLAST <= \<const0>\;
  M8_AXIS_TVALID <= \<const0>\;
  M9_AXIS_TDATA(31) <= \<const0>\;
  M9_AXIS_TDATA(30) <= \<const0>\;
  M9_AXIS_TDATA(29) <= \<const0>\;
  M9_AXIS_TDATA(28) <= \<const0>\;
  M9_AXIS_TDATA(27) <= \<const0>\;
  M9_AXIS_TDATA(26) <= \<const0>\;
  M9_AXIS_TDATA(25) <= \<const0>\;
  M9_AXIS_TDATA(24) <= \<const0>\;
  M9_AXIS_TDATA(23) <= \<const0>\;
  M9_AXIS_TDATA(22) <= \<const0>\;
  M9_AXIS_TDATA(21) <= \<const0>\;
  M9_AXIS_TDATA(20) <= \<const0>\;
  M9_AXIS_TDATA(19) <= \<const0>\;
  M9_AXIS_TDATA(18) <= \<const0>\;
  M9_AXIS_TDATA(17) <= \<const0>\;
  M9_AXIS_TDATA(16) <= \<const0>\;
  M9_AXIS_TDATA(15) <= \<const0>\;
  M9_AXIS_TDATA(14) <= \<const0>\;
  M9_AXIS_TDATA(13) <= \<const0>\;
  M9_AXIS_TDATA(12) <= \<const0>\;
  M9_AXIS_TDATA(11) <= \<const0>\;
  M9_AXIS_TDATA(10) <= \<const0>\;
  M9_AXIS_TDATA(9) <= \<const0>\;
  M9_AXIS_TDATA(8) <= \<const0>\;
  M9_AXIS_TDATA(7) <= \<const0>\;
  M9_AXIS_TDATA(6) <= \<const0>\;
  M9_AXIS_TDATA(5) <= \<const0>\;
  M9_AXIS_TDATA(4) <= \<const0>\;
  M9_AXIS_TDATA(3) <= \<const0>\;
  M9_AXIS_TDATA(2) <= \<const0>\;
  M9_AXIS_TDATA(1) <= \<const0>\;
  M9_AXIS_TDATA(0) <= \<const0>\;
  M9_AXIS_TLAST <= \<const0>\;
  M9_AXIS_TVALID <= \<const0>\;
  MB_Error <= \<const0>\;
  MB_Halted <= \^lockstep_master_out\(10);
  M_AXI_DC_ACREADY <= \<const0>\;
  M_AXI_DC_ARADDR(31) <= \<const0>\;
  M_AXI_DC_ARADDR(30) <= \<const0>\;
  M_AXI_DC_ARADDR(29) <= \<const0>\;
  M_AXI_DC_ARADDR(28) <= \<const0>\;
  M_AXI_DC_ARADDR(27) <= \<const0>\;
  M_AXI_DC_ARADDR(26) <= \<const0>\;
  M_AXI_DC_ARADDR(25) <= \<const0>\;
  M_AXI_DC_ARADDR(24) <= \<const0>\;
  M_AXI_DC_ARADDR(23) <= \<const0>\;
  M_AXI_DC_ARADDR(22) <= \<const0>\;
  M_AXI_DC_ARADDR(21) <= \<const0>\;
  M_AXI_DC_ARADDR(20) <= \<const0>\;
  M_AXI_DC_ARADDR(19) <= \<const0>\;
  M_AXI_DC_ARADDR(18) <= \<const0>\;
  M_AXI_DC_ARADDR(17) <= \<const0>\;
  M_AXI_DC_ARADDR(16) <= \<const0>\;
  M_AXI_DC_ARADDR(15) <= \<const0>\;
  M_AXI_DC_ARADDR(14) <= \<const0>\;
  M_AXI_DC_ARADDR(13) <= \<const0>\;
  M_AXI_DC_ARADDR(12) <= \<const0>\;
  M_AXI_DC_ARADDR(11) <= \<const0>\;
  M_AXI_DC_ARADDR(10) <= \<const0>\;
  M_AXI_DC_ARADDR(9) <= \<const0>\;
  M_AXI_DC_ARADDR(8) <= \<const0>\;
  M_AXI_DC_ARADDR(7) <= \<const0>\;
  M_AXI_DC_ARADDR(6) <= \<const0>\;
  M_AXI_DC_ARADDR(5) <= \<const0>\;
  M_AXI_DC_ARADDR(4) <= \<const0>\;
  M_AXI_DC_ARADDR(3) <= \<const0>\;
  M_AXI_DC_ARADDR(2) <= \<const0>\;
  M_AXI_DC_ARADDR(1) <= \<const0>\;
  M_AXI_DC_ARADDR(0) <= \<const0>\;
  M_AXI_DC_ARBAR(1) <= \<const0>\;
  M_AXI_DC_ARBAR(0) <= \<const0>\;
  M_AXI_DC_ARBURST(1) <= \<const0>\;
  M_AXI_DC_ARBURST(0) <= \<const0>\;
  M_AXI_DC_ARCACHE(3) <= \<const0>\;
  M_AXI_DC_ARCACHE(2) <= \<const0>\;
  M_AXI_DC_ARCACHE(1) <= \<const0>\;
  M_AXI_DC_ARCACHE(0) <= \<const0>\;
  M_AXI_DC_ARDOMAIN(1) <= \<const0>\;
  M_AXI_DC_ARDOMAIN(0) <= \<const0>\;
  M_AXI_DC_ARID(0) <= \<const0>\;
  M_AXI_DC_ARLEN(7) <= \<const0>\;
  M_AXI_DC_ARLEN(6) <= \<const0>\;
  M_AXI_DC_ARLEN(5) <= \<const0>\;
  M_AXI_DC_ARLEN(4) <= \<const0>\;
  M_AXI_DC_ARLEN(3) <= \<const0>\;
  M_AXI_DC_ARLEN(2) <= \<const0>\;
  M_AXI_DC_ARLEN(1) <= \<const0>\;
  M_AXI_DC_ARLEN(0) <= \<const0>\;
  M_AXI_DC_ARLOCK <= \<const0>\;
  M_AXI_DC_ARPROT(2) <= \<const0>\;
  M_AXI_DC_ARPROT(1) <= \<const0>\;
  M_AXI_DC_ARPROT(0) <= \<const0>\;
  M_AXI_DC_ARQOS(3) <= \<const0>\;
  M_AXI_DC_ARQOS(2) <= \<const0>\;
  M_AXI_DC_ARQOS(1) <= \<const0>\;
  M_AXI_DC_ARQOS(0) <= \<const0>\;
  M_AXI_DC_ARSIZE(2) <= \<const0>\;
  M_AXI_DC_ARSIZE(1) <= \<const0>\;
  M_AXI_DC_ARSIZE(0) <= \<const0>\;
  M_AXI_DC_ARSNOOP(3) <= \<const0>\;
  M_AXI_DC_ARSNOOP(2) <= \<const0>\;
  M_AXI_DC_ARSNOOP(1) <= \<const0>\;
  M_AXI_DC_ARSNOOP(0) <= \<const0>\;
  M_AXI_DC_ARUSER(4) <= \<const0>\;
  M_AXI_DC_ARUSER(3) <= \<const0>\;
  M_AXI_DC_ARUSER(2) <= \<const0>\;
  M_AXI_DC_ARUSER(1) <= \<const0>\;
  M_AXI_DC_ARUSER(0) <= \<const0>\;
  M_AXI_DC_ARVALID <= \<const0>\;
  M_AXI_DC_AWADDR(31) <= \<const0>\;
  M_AXI_DC_AWADDR(30) <= \<const0>\;
  M_AXI_DC_AWADDR(29) <= \<const0>\;
  M_AXI_DC_AWADDR(28) <= \<const0>\;
  M_AXI_DC_AWADDR(27) <= \<const0>\;
  M_AXI_DC_AWADDR(26) <= \<const0>\;
  M_AXI_DC_AWADDR(25) <= \<const0>\;
  M_AXI_DC_AWADDR(24) <= \<const0>\;
  M_AXI_DC_AWADDR(23) <= \<const0>\;
  M_AXI_DC_AWADDR(22) <= \<const0>\;
  M_AXI_DC_AWADDR(21) <= \<const0>\;
  M_AXI_DC_AWADDR(20) <= \<const0>\;
  M_AXI_DC_AWADDR(19) <= \<const0>\;
  M_AXI_DC_AWADDR(18) <= \<const0>\;
  M_AXI_DC_AWADDR(17) <= \<const0>\;
  M_AXI_DC_AWADDR(16) <= \<const0>\;
  M_AXI_DC_AWADDR(15) <= \<const0>\;
  M_AXI_DC_AWADDR(14) <= \<const0>\;
  M_AXI_DC_AWADDR(13) <= \<const0>\;
  M_AXI_DC_AWADDR(12) <= \<const0>\;
  M_AXI_DC_AWADDR(11) <= \<const0>\;
  M_AXI_DC_AWADDR(10) <= \<const0>\;
  M_AXI_DC_AWADDR(9) <= \<const0>\;
  M_AXI_DC_AWADDR(8) <= \<const0>\;
  M_AXI_DC_AWADDR(7) <= \<const0>\;
  M_AXI_DC_AWADDR(6) <= \<const0>\;
  M_AXI_DC_AWADDR(5) <= \<const0>\;
  M_AXI_DC_AWADDR(4) <= \<const0>\;
  M_AXI_DC_AWADDR(3) <= \<const0>\;
  M_AXI_DC_AWADDR(2) <= \<const0>\;
  M_AXI_DC_AWADDR(1) <= \<const0>\;
  M_AXI_DC_AWADDR(0) <= \<const0>\;
  M_AXI_DC_AWBAR(1) <= \<const0>\;
  M_AXI_DC_AWBAR(0) <= \<const0>\;
  M_AXI_DC_AWBURST(1) <= \<const0>\;
  M_AXI_DC_AWBURST(0) <= \<const0>\;
  M_AXI_DC_AWCACHE(3) <= \<const0>\;
  M_AXI_DC_AWCACHE(2) <= \<const0>\;
  M_AXI_DC_AWCACHE(1) <= \<const0>\;
  M_AXI_DC_AWCACHE(0) <= \<const0>\;
  M_AXI_DC_AWDOMAIN(1) <= \<const0>\;
  M_AXI_DC_AWDOMAIN(0) <= \<const0>\;
  M_AXI_DC_AWID(0) <= \<const0>\;
  M_AXI_DC_AWLEN(7) <= \<const0>\;
  M_AXI_DC_AWLEN(6) <= \<const0>\;
  M_AXI_DC_AWLEN(5) <= \<const0>\;
  M_AXI_DC_AWLEN(4) <= \<const0>\;
  M_AXI_DC_AWLEN(3) <= \<const0>\;
  M_AXI_DC_AWLEN(2) <= \<const0>\;
  M_AXI_DC_AWLEN(1) <= \<const0>\;
  M_AXI_DC_AWLEN(0) <= \<const0>\;
  M_AXI_DC_AWLOCK <= \<const0>\;
  M_AXI_DC_AWPROT(2) <= \<const0>\;
  M_AXI_DC_AWPROT(1) <= \<const0>\;
  M_AXI_DC_AWPROT(0) <= \<const0>\;
  M_AXI_DC_AWQOS(3) <= \<const0>\;
  M_AXI_DC_AWQOS(2) <= \<const0>\;
  M_AXI_DC_AWQOS(1) <= \<const0>\;
  M_AXI_DC_AWQOS(0) <= \<const0>\;
  M_AXI_DC_AWSIZE(2) <= \<const0>\;
  M_AXI_DC_AWSIZE(1) <= \<const0>\;
  M_AXI_DC_AWSIZE(0) <= \<const0>\;
  M_AXI_DC_AWSNOOP(2) <= \<const0>\;
  M_AXI_DC_AWSNOOP(1) <= \<const0>\;
  M_AXI_DC_AWSNOOP(0) <= \<const0>\;
  M_AXI_DC_AWUSER(4) <= \<const0>\;
  M_AXI_DC_AWUSER(3) <= \<const0>\;
  M_AXI_DC_AWUSER(2) <= \<const0>\;
  M_AXI_DC_AWUSER(1) <= \<const0>\;
  M_AXI_DC_AWUSER(0) <= \<const0>\;
  M_AXI_DC_AWVALID <= \<const0>\;
  M_AXI_DC_BREADY <= \<const0>\;
  M_AXI_DC_CDDATA(31) <= \<const0>\;
  M_AXI_DC_CDDATA(30) <= \<const0>\;
  M_AXI_DC_CDDATA(29) <= \<const0>\;
  M_AXI_DC_CDDATA(28) <= \<const0>\;
  M_AXI_DC_CDDATA(27) <= \<const0>\;
  M_AXI_DC_CDDATA(26) <= \<const0>\;
  M_AXI_DC_CDDATA(25) <= \<const0>\;
  M_AXI_DC_CDDATA(24) <= \<const0>\;
  M_AXI_DC_CDDATA(23) <= \<const0>\;
  M_AXI_DC_CDDATA(22) <= \<const0>\;
  M_AXI_DC_CDDATA(21) <= \<const0>\;
  M_AXI_DC_CDDATA(20) <= \<const0>\;
  M_AXI_DC_CDDATA(19) <= \<const0>\;
  M_AXI_DC_CDDATA(18) <= \<const0>\;
  M_AXI_DC_CDDATA(17) <= \<const0>\;
  M_AXI_DC_CDDATA(16) <= \<const0>\;
  M_AXI_DC_CDDATA(15) <= \<const0>\;
  M_AXI_DC_CDDATA(14) <= \<const0>\;
  M_AXI_DC_CDDATA(13) <= \<const0>\;
  M_AXI_DC_CDDATA(12) <= \<const0>\;
  M_AXI_DC_CDDATA(11) <= \<const0>\;
  M_AXI_DC_CDDATA(10) <= \<const0>\;
  M_AXI_DC_CDDATA(9) <= \<const0>\;
  M_AXI_DC_CDDATA(8) <= \<const0>\;
  M_AXI_DC_CDDATA(7) <= \<const0>\;
  M_AXI_DC_CDDATA(6) <= \<const0>\;
  M_AXI_DC_CDDATA(5) <= \<const0>\;
  M_AXI_DC_CDDATA(4) <= \<const0>\;
  M_AXI_DC_CDDATA(3) <= \<const0>\;
  M_AXI_DC_CDDATA(2) <= \<const0>\;
  M_AXI_DC_CDDATA(1) <= \<const0>\;
  M_AXI_DC_CDDATA(0) <= \<const0>\;
  M_AXI_DC_CDLAST <= \<const0>\;
  M_AXI_DC_CDVALID <= \<const0>\;
  M_AXI_DC_CRRESP(4) <= \<const0>\;
  M_AXI_DC_CRRESP(3) <= \<const0>\;
  M_AXI_DC_CRRESP(2) <= \<const0>\;
  M_AXI_DC_CRRESP(1) <= \<const0>\;
  M_AXI_DC_CRRESP(0) <= \<const0>\;
  M_AXI_DC_CRVALID <= \<const0>\;
  M_AXI_DC_RACK <= \<const0>\;
  M_AXI_DC_RREADY <= \<const0>\;
  M_AXI_DC_WACK <= \<const0>\;
  M_AXI_DC_WDATA(31) <= \<const0>\;
  M_AXI_DC_WDATA(30) <= \<const0>\;
  M_AXI_DC_WDATA(29) <= \<const0>\;
  M_AXI_DC_WDATA(28) <= \<const0>\;
  M_AXI_DC_WDATA(27) <= \<const0>\;
  M_AXI_DC_WDATA(26) <= \<const0>\;
  M_AXI_DC_WDATA(25) <= \<const0>\;
  M_AXI_DC_WDATA(24) <= \<const0>\;
  M_AXI_DC_WDATA(23) <= \<const0>\;
  M_AXI_DC_WDATA(22) <= \<const0>\;
  M_AXI_DC_WDATA(21) <= \<const0>\;
  M_AXI_DC_WDATA(20) <= \<const0>\;
  M_AXI_DC_WDATA(19) <= \<const0>\;
  M_AXI_DC_WDATA(18) <= \<const0>\;
  M_AXI_DC_WDATA(17) <= \<const0>\;
  M_AXI_DC_WDATA(16) <= \<const0>\;
  M_AXI_DC_WDATA(15) <= \<const0>\;
  M_AXI_DC_WDATA(14) <= \<const0>\;
  M_AXI_DC_WDATA(13) <= \<const0>\;
  M_AXI_DC_WDATA(12) <= \<const0>\;
  M_AXI_DC_WDATA(11) <= \<const0>\;
  M_AXI_DC_WDATA(10) <= \<const0>\;
  M_AXI_DC_WDATA(9) <= \<const0>\;
  M_AXI_DC_WDATA(8) <= \<const0>\;
  M_AXI_DC_WDATA(7) <= \<const0>\;
  M_AXI_DC_WDATA(6) <= \<const0>\;
  M_AXI_DC_WDATA(5) <= \<const0>\;
  M_AXI_DC_WDATA(4) <= \<const0>\;
  M_AXI_DC_WDATA(3) <= \<const0>\;
  M_AXI_DC_WDATA(2) <= \<const0>\;
  M_AXI_DC_WDATA(1) <= \<const0>\;
  M_AXI_DC_WDATA(0) <= \<const0>\;
  M_AXI_DC_WLAST <= \<const0>\;
  M_AXI_DC_WSTRB(3) <= \<const0>\;
  M_AXI_DC_WSTRB(2) <= \<const0>\;
  M_AXI_DC_WSTRB(1) <= \<const0>\;
  M_AXI_DC_WSTRB(0) <= \<const0>\;
  M_AXI_DC_WUSER(0) <= \<const0>\;
  M_AXI_DC_WVALID <= \<const0>\;
  M_AXI_DP_ARADDR(31 downto 0) <= \^m_axi_dp_araddr\(31 downto 0);
  M_AXI_DP_ARBURST(1) <= \<const0>\;
  M_AXI_DP_ARBURST(0) <= \<const1>\;
  M_AXI_DP_ARCACHE(3) <= \<const0>\;
  M_AXI_DP_ARCACHE(2) <= \<const0>\;
  M_AXI_DP_ARCACHE(1) <= \<const1>\;
  M_AXI_DP_ARCACHE(0) <= \<const1>\;
  M_AXI_DP_ARID(0) <= \<const0>\;
  M_AXI_DP_ARLEN(7) <= \<const0>\;
  M_AXI_DP_ARLEN(6) <= \<const0>\;
  M_AXI_DP_ARLEN(5) <= \<const0>\;
  M_AXI_DP_ARLEN(4) <= \<const0>\;
  M_AXI_DP_ARLEN(3) <= \<const0>\;
  M_AXI_DP_ARLEN(2) <= \<const0>\;
  M_AXI_DP_ARLEN(1) <= \<const0>\;
  M_AXI_DP_ARLEN(0) <= \<const0>\;
  M_AXI_DP_ARLOCK <= \<const0>\;
  M_AXI_DP_ARPROT(2) <= \<const0>\;
  M_AXI_DP_ARPROT(1) <= \<const0>\;
  M_AXI_DP_ARPROT(0) <= \<const0>\;
  M_AXI_DP_ARQOS(3) <= \<const1>\;
  M_AXI_DP_ARQOS(2) <= \<const0>\;
  M_AXI_DP_ARQOS(1) <= \<const0>\;
  M_AXI_DP_ARQOS(0) <= \<const0>\;
  M_AXI_DP_ARSIZE(2) <= \<const0>\;
  M_AXI_DP_ARSIZE(1) <= \<const1>\;
  M_AXI_DP_ARSIZE(0) <= \<const0>\;
  M_AXI_DP_ARVALID <= \^m_axi_dp_arvalid\;
  M_AXI_DP_AWADDR(31 downto 0) <= \^m_axi_dp_araddr\(31 downto 0);
  M_AXI_DP_AWBURST(1) <= \<const0>\;
  M_AXI_DP_AWBURST(0) <= \<const1>\;
  M_AXI_DP_AWCACHE(3) <= \<const0>\;
  M_AXI_DP_AWCACHE(2) <= \<const0>\;
  M_AXI_DP_AWCACHE(1) <= \<const1>\;
  M_AXI_DP_AWCACHE(0) <= \<const1>\;
  M_AXI_DP_AWID(0) <= \<const0>\;
  M_AXI_DP_AWLEN(7) <= \<const0>\;
  M_AXI_DP_AWLEN(6) <= \<const0>\;
  M_AXI_DP_AWLEN(5) <= \<const0>\;
  M_AXI_DP_AWLEN(4) <= \<const0>\;
  M_AXI_DP_AWLEN(3) <= \<const0>\;
  M_AXI_DP_AWLEN(2) <= \<const0>\;
  M_AXI_DP_AWLEN(1) <= \<const0>\;
  M_AXI_DP_AWLEN(0) <= \<const0>\;
  M_AXI_DP_AWLOCK <= \<const0>\;
  M_AXI_DP_AWPROT(2) <= \<const0>\;
  M_AXI_DP_AWPROT(1) <= \<const0>\;
  M_AXI_DP_AWPROT(0) <= \<const0>\;
  M_AXI_DP_AWQOS(3) <= \<const1>\;
  M_AXI_DP_AWQOS(2) <= \<const0>\;
  M_AXI_DP_AWQOS(1) <= \<const0>\;
  M_AXI_DP_AWQOS(0) <= \<const0>\;
  M_AXI_DP_AWSIZE(2) <= \<const0>\;
  M_AXI_DP_AWSIZE(1) <= \<const1>\;
  M_AXI_DP_AWSIZE(0) <= \<const0>\;
  M_AXI_DP_AWVALID <= \^m_axi_dp_awvalid\;
  M_AXI_DP_BREADY <= \<const1>\;
  M_AXI_DP_RREADY <= \<const1>\;
  M_AXI_DP_WDATA(31 downto 0) <= \^m_axi_dp_wdata\(31 downto 0);
  M_AXI_DP_WLAST <= \<const1>\;
  M_AXI_DP_WSTRB(3 downto 0) <= \^m_axi_dp_wstrb\(3 downto 0);
  M_AXI_DP_WVALID <= \^m_axi_dp_wvalid\;
  M_AXI_IC_ACREADY <= \<const0>\;
  M_AXI_IC_ARADDR(31) <= \<const0>\;
  M_AXI_IC_ARADDR(30) <= \<const0>\;
  M_AXI_IC_ARADDR(29) <= \<const0>\;
  M_AXI_IC_ARADDR(28) <= \<const0>\;
  M_AXI_IC_ARADDR(27) <= \<const0>\;
  M_AXI_IC_ARADDR(26) <= \<const0>\;
  M_AXI_IC_ARADDR(25) <= \<const0>\;
  M_AXI_IC_ARADDR(24) <= \<const0>\;
  M_AXI_IC_ARADDR(23) <= \<const0>\;
  M_AXI_IC_ARADDR(22) <= \<const0>\;
  M_AXI_IC_ARADDR(21) <= \<const0>\;
  M_AXI_IC_ARADDR(20) <= \<const0>\;
  M_AXI_IC_ARADDR(19) <= \<const0>\;
  M_AXI_IC_ARADDR(18) <= \<const0>\;
  M_AXI_IC_ARADDR(17) <= \<const0>\;
  M_AXI_IC_ARADDR(16) <= \<const0>\;
  M_AXI_IC_ARADDR(15) <= \<const0>\;
  M_AXI_IC_ARADDR(14) <= \<const0>\;
  M_AXI_IC_ARADDR(13) <= \<const0>\;
  M_AXI_IC_ARADDR(12) <= \<const0>\;
  M_AXI_IC_ARADDR(11) <= \<const0>\;
  M_AXI_IC_ARADDR(10) <= \<const0>\;
  M_AXI_IC_ARADDR(9) <= \<const0>\;
  M_AXI_IC_ARADDR(8) <= \<const0>\;
  M_AXI_IC_ARADDR(7) <= \<const0>\;
  M_AXI_IC_ARADDR(6) <= \<const0>\;
  M_AXI_IC_ARADDR(5) <= \<const0>\;
  M_AXI_IC_ARADDR(4) <= \<const0>\;
  M_AXI_IC_ARADDR(3) <= \<const0>\;
  M_AXI_IC_ARADDR(2) <= \<const0>\;
  M_AXI_IC_ARADDR(1) <= \<const0>\;
  M_AXI_IC_ARADDR(0) <= \<const0>\;
  M_AXI_IC_ARBAR(1) <= \<const0>\;
  M_AXI_IC_ARBAR(0) <= \<const0>\;
  M_AXI_IC_ARBURST(1) <= \<const0>\;
  M_AXI_IC_ARBURST(0) <= \<const0>\;
  M_AXI_IC_ARCACHE(3) <= \<const0>\;
  M_AXI_IC_ARCACHE(2) <= \<const0>\;
  M_AXI_IC_ARCACHE(1) <= \<const0>\;
  M_AXI_IC_ARCACHE(0) <= \<const0>\;
  M_AXI_IC_ARDOMAIN(1) <= \<const0>\;
  M_AXI_IC_ARDOMAIN(0) <= \<const0>\;
  M_AXI_IC_ARID(0) <= \<const0>\;
  M_AXI_IC_ARLEN(7) <= \<const0>\;
  M_AXI_IC_ARLEN(6) <= \<const0>\;
  M_AXI_IC_ARLEN(5) <= \<const0>\;
  M_AXI_IC_ARLEN(4) <= \<const0>\;
  M_AXI_IC_ARLEN(3) <= \<const0>\;
  M_AXI_IC_ARLEN(2) <= \<const0>\;
  M_AXI_IC_ARLEN(1) <= \<const0>\;
  M_AXI_IC_ARLEN(0) <= \<const0>\;
  M_AXI_IC_ARLOCK <= \<const0>\;
  M_AXI_IC_ARPROT(2) <= \<const0>\;
  M_AXI_IC_ARPROT(1) <= \<const0>\;
  M_AXI_IC_ARPROT(0) <= \<const0>\;
  M_AXI_IC_ARQOS(3) <= \<const0>\;
  M_AXI_IC_ARQOS(2) <= \<const0>\;
  M_AXI_IC_ARQOS(1) <= \<const0>\;
  M_AXI_IC_ARQOS(0) <= \<const0>\;
  M_AXI_IC_ARSIZE(2) <= \<const0>\;
  M_AXI_IC_ARSIZE(1) <= \<const0>\;
  M_AXI_IC_ARSIZE(0) <= \<const0>\;
  M_AXI_IC_ARSNOOP(3) <= \<const0>\;
  M_AXI_IC_ARSNOOP(2) <= \<const0>\;
  M_AXI_IC_ARSNOOP(1) <= \<const0>\;
  M_AXI_IC_ARSNOOP(0) <= \<const0>\;
  M_AXI_IC_ARUSER(4) <= \<const0>\;
  M_AXI_IC_ARUSER(3) <= \<const0>\;
  M_AXI_IC_ARUSER(2) <= \<const0>\;
  M_AXI_IC_ARUSER(1) <= \<const0>\;
  M_AXI_IC_ARUSER(0) <= \<const0>\;
  M_AXI_IC_ARVALID <= \<const0>\;
  M_AXI_IC_AWADDR(31) <= \<const0>\;
  M_AXI_IC_AWADDR(30) <= \<const0>\;
  M_AXI_IC_AWADDR(29) <= \<const0>\;
  M_AXI_IC_AWADDR(28) <= \<const0>\;
  M_AXI_IC_AWADDR(27) <= \<const0>\;
  M_AXI_IC_AWADDR(26) <= \<const0>\;
  M_AXI_IC_AWADDR(25) <= \<const0>\;
  M_AXI_IC_AWADDR(24) <= \<const0>\;
  M_AXI_IC_AWADDR(23) <= \<const0>\;
  M_AXI_IC_AWADDR(22) <= \<const0>\;
  M_AXI_IC_AWADDR(21) <= \<const0>\;
  M_AXI_IC_AWADDR(20) <= \<const0>\;
  M_AXI_IC_AWADDR(19) <= \<const0>\;
  M_AXI_IC_AWADDR(18) <= \<const0>\;
  M_AXI_IC_AWADDR(17) <= \<const0>\;
  M_AXI_IC_AWADDR(16) <= \<const0>\;
  M_AXI_IC_AWADDR(15) <= \<const0>\;
  M_AXI_IC_AWADDR(14) <= \<const0>\;
  M_AXI_IC_AWADDR(13) <= \<const0>\;
  M_AXI_IC_AWADDR(12) <= \<const0>\;
  M_AXI_IC_AWADDR(11) <= \<const0>\;
  M_AXI_IC_AWADDR(10) <= \<const0>\;
  M_AXI_IC_AWADDR(9) <= \<const0>\;
  M_AXI_IC_AWADDR(8) <= \<const0>\;
  M_AXI_IC_AWADDR(7) <= \<const0>\;
  M_AXI_IC_AWADDR(6) <= \<const0>\;
  M_AXI_IC_AWADDR(5) <= \<const0>\;
  M_AXI_IC_AWADDR(4) <= \<const0>\;
  M_AXI_IC_AWADDR(3) <= \<const0>\;
  M_AXI_IC_AWADDR(2) <= \<const0>\;
  M_AXI_IC_AWADDR(1) <= \<const0>\;
  M_AXI_IC_AWADDR(0) <= \<const0>\;
  M_AXI_IC_AWBAR(1) <= \<const0>\;
  M_AXI_IC_AWBAR(0) <= \<const0>\;
  M_AXI_IC_AWBURST(1) <= \<const0>\;
  M_AXI_IC_AWBURST(0) <= \<const0>\;
  M_AXI_IC_AWCACHE(3) <= \<const0>\;
  M_AXI_IC_AWCACHE(2) <= \<const0>\;
  M_AXI_IC_AWCACHE(1) <= \<const0>\;
  M_AXI_IC_AWCACHE(0) <= \<const0>\;
  M_AXI_IC_AWDOMAIN(1) <= \<const0>\;
  M_AXI_IC_AWDOMAIN(0) <= \<const0>\;
  M_AXI_IC_AWID(0) <= \<const0>\;
  M_AXI_IC_AWLEN(7) <= \<const0>\;
  M_AXI_IC_AWLEN(6) <= \<const0>\;
  M_AXI_IC_AWLEN(5) <= \<const0>\;
  M_AXI_IC_AWLEN(4) <= \<const0>\;
  M_AXI_IC_AWLEN(3) <= \<const0>\;
  M_AXI_IC_AWLEN(2) <= \<const0>\;
  M_AXI_IC_AWLEN(1) <= \<const0>\;
  M_AXI_IC_AWLEN(0) <= \<const0>\;
  M_AXI_IC_AWLOCK <= \<const0>\;
  M_AXI_IC_AWPROT(2) <= \<const0>\;
  M_AXI_IC_AWPROT(1) <= \<const0>\;
  M_AXI_IC_AWPROT(0) <= \<const0>\;
  M_AXI_IC_AWQOS(3) <= \<const0>\;
  M_AXI_IC_AWQOS(2) <= \<const0>\;
  M_AXI_IC_AWQOS(1) <= \<const0>\;
  M_AXI_IC_AWQOS(0) <= \<const0>\;
  M_AXI_IC_AWSIZE(2) <= \<const0>\;
  M_AXI_IC_AWSIZE(1) <= \<const0>\;
  M_AXI_IC_AWSIZE(0) <= \<const0>\;
  M_AXI_IC_AWSNOOP(2) <= \<const0>\;
  M_AXI_IC_AWSNOOP(1) <= \<const0>\;
  M_AXI_IC_AWSNOOP(0) <= \<const0>\;
  M_AXI_IC_AWUSER(4) <= \<const0>\;
  M_AXI_IC_AWUSER(3) <= \<const0>\;
  M_AXI_IC_AWUSER(2) <= \<const0>\;
  M_AXI_IC_AWUSER(1) <= \<const0>\;
  M_AXI_IC_AWUSER(0) <= \<const0>\;
  M_AXI_IC_AWVALID <= \<const0>\;
  M_AXI_IC_BREADY <= \<const0>\;
  M_AXI_IC_CDDATA(31) <= \<const0>\;
  M_AXI_IC_CDDATA(30) <= \<const0>\;
  M_AXI_IC_CDDATA(29) <= \<const0>\;
  M_AXI_IC_CDDATA(28) <= \<const0>\;
  M_AXI_IC_CDDATA(27) <= \<const0>\;
  M_AXI_IC_CDDATA(26) <= \<const0>\;
  M_AXI_IC_CDDATA(25) <= \<const0>\;
  M_AXI_IC_CDDATA(24) <= \<const0>\;
  M_AXI_IC_CDDATA(23) <= \<const0>\;
  M_AXI_IC_CDDATA(22) <= \<const0>\;
  M_AXI_IC_CDDATA(21) <= \<const0>\;
  M_AXI_IC_CDDATA(20) <= \<const0>\;
  M_AXI_IC_CDDATA(19) <= \<const0>\;
  M_AXI_IC_CDDATA(18) <= \<const0>\;
  M_AXI_IC_CDDATA(17) <= \<const0>\;
  M_AXI_IC_CDDATA(16) <= \<const0>\;
  M_AXI_IC_CDDATA(15) <= \<const0>\;
  M_AXI_IC_CDDATA(14) <= \<const0>\;
  M_AXI_IC_CDDATA(13) <= \<const0>\;
  M_AXI_IC_CDDATA(12) <= \<const0>\;
  M_AXI_IC_CDDATA(11) <= \<const0>\;
  M_AXI_IC_CDDATA(10) <= \<const0>\;
  M_AXI_IC_CDDATA(9) <= \<const0>\;
  M_AXI_IC_CDDATA(8) <= \<const0>\;
  M_AXI_IC_CDDATA(7) <= \<const0>\;
  M_AXI_IC_CDDATA(6) <= \<const0>\;
  M_AXI_IC_CDDATA(5) <= \<const0>\;
  M_AXI_IC_CDDATA(4) <= \<const0>\;
  M_AXI_IC_CDDATA(3) <= \<const0>\;
  M_AXI_IC_CDDATA(2) <= \<const0>\;
  M_AXI_IC_CDDATA(1) <= \<const0>\;
  M_AXI_IC_CDDATA(0) <= \<const0>\;
  M_AXI_IC_CDLAST <= \<const0>\;
  M_AXI_IC_CDVALID <= \<const0>\;
  M_AXI_IC_CRRESP(4) <= \<const0>\;
  M_AXI_IC_CRRESP(3) <= \<const0>\;
  M_AXI_IC_CRRESP(2) <= \<const0>\;
  M_AXI_IC_CRRESP(1) <= \<const0>\;
  M_AXI_IC_CRRESP(0) <= \<const0>\;
  M_AXI_IC_CRVALID <= \<const0>\;
  M_AXI_IC_RACK <= \<const0>\;
  M_AXI_IC_RREADY <= \<const0>\;
  M_AXI_IC_WACK <= \<const0>\;
  M_AXI_IC_WDATA(31) <= \<const0>\;
  M_AXI_IC_WDATA(30) <= \<const0>\;
  M_AXI_IC_WDATA(29) <= \<const0>\;
  M_AXI_IC_WDATA(28) <= \<const0>\;
  M_AXI_IC_WDATA(27) <= \<const0>\;
  M_AXI_IC_WDATA(26) <= \<const0>\;
  M_AXI_IC_WDATA(25) <= \<const0>\;
  M_AXI_IC_WDATA(24) <= \<const0>\;
  M_AXI_IC_WDATA(23) <= \<const0>\;
  M_AXI_IC_WDATA(22) <= \<const0>\;
  M_AXI_IC_WDATA(21) <= \<const0>\;
  M_AXI_IC_WDATA(20) <= \<const0>\;
  M_AXI_IC_WDATA(19) <= \<const0>\;
  M_AXI_IC_WDATA(18) <= \<const0>\;
  M_AXI_IC_WDATA(17) <= \<const0>\;
  M_AXI_IC_WDATA(16) <= \<const0>\;
  M_AXI_IC_WDATA(15) <= \<const0>\;
  M_AXI_IC_WDATA(14) <= \<const0>\;
  M_AXI_IC_WDATA(13) <= \<const0>\;
  M_AXI_IC_WDATA(12) <= \<const0>\;
  M_AXI_IC_WDATA(11) <= \<const0>\;
  M_AXI_IC_WDATA(10) <= \<const0>\;
  M_AXI_IC_WDATA(9) <= \<const0>\;
  M_AXI_IC_WDATA(8) <= \<const0>\;
  M_AXI_IC_WDATA(7) <= \<const0>\;
  M_AXI_IC_WDATA(6) <= \<const0>\;
  M_AXI_IC_WDATA(5) <= \<const0>\;
  M_AXI_IC_WDATA(4) <= \<const0>\;
  M_AXI_IC_WDATA(3) <= \<const0>\;
  M_AXI_IC_WDATA(2) <= \<const0>\;
  M_AXI_IC_WDATA(1) <= \<const0>\;
  M_AXI_IC_WDATA(0) <= \<const0>\;
  M_AXI_IC_WLAST <= \<const0>\;
  M_AXI_IC_WSTRB(3) <= \<const0>\;
  M_AXI_IC_WSTRB(2) <= \<const0>\;
  M_AXI_IC_WSTRB(1) <= \<const0>\;
  M_AXI_IC_WSTRB(0) <= \<const0>\;
  M_AXI_IC_WUSER(0) <= \<const0>\;
  M_AXI_IC_WVALID <= \<const0>\;
  M_AXI_IP_ARADDR(31) <= \<const0>\;
  M_AXI_IP_ARADDR(30) <= \<const0>\;
  M_AXI_IP_ARADDR(29) <= \<const0>\;
  M_AXI_IP_ARADDR(28) <= \<const0>\;
  M_AXI_IP_ARADDR(27) <= \<const0>\;
  M_AXI_IP_ARADDR(26) <= \<const0>\;
  M_AXI_IP_ARADDR(25) <= \<const0>\;
  M_AXI_IP_ARADDR(24) <= \<const0>\;
  M_AXI_IP_ARADDR(23) <= \<const0>\;
  M_AXI_IP_ARADDR(22) <= \<const0>\;
  M_AXI_IP_ARADDR(21) <= \<const0>\;
  M_AXI_IP_ARADDR(20) <= \<const0>\;
  M_AXI_IP_ARADDR(19) <= \<const0>\;
  M_AXI_IP_ARADDR(18) <= \<const0>\;
  M_AXI_IP_ARADDR(17) <= \<const0>\;
  M_AXI_IP_ARADDR(16) <= \<const0>\;
  M_AXI_IP_ARADDR(15) <= \<const0>\;
  M_AXI_IP_ARADDR(14) <= \<const0>\;
  M_AXI_IP_ARADDR(13) <= \<const0>\;
  M_AXI_IP_ARADDR(12) <= \<const0>\;
  M_AXI_IP_ARADDR(11) <= \<const0>\;
  M_AXI_IP_ARADDR(10) <= \<const0>\;
  M_AXI_IP_ARADDR(9) <= \<const0>\;
  M_AXI_IP_ARADDR(8) <= \<const0>\;
  M_AXI_IP_ARADDR(7) <= \<const0>\;
  M_AXI_IP_ARADDR(6) <= \<const0>\;
  M_AXI_IP_ARADDR(5) <= \<const0>\;
  M_AXI_IP_ARADDR(4) <= \<const0>\;
  M_AXI_IP_ARADDR(3) <= \<const0>\;
  M_AXI_IP_ARADDR(2) <= \<const0>\;
  M_AXI_IP_ARADDR(1) <= \<const0>\;
  M_AXI_IP_ARADDR(0) <= \<const0>\;
  M_AXI_IP_ARBURST(1) <= \<const0>\;
  M_AXI_IP_ARBURST(0) <= \<const0>\;
  M_AXI_IP_ARCACHE(3) <= \<const0>\;
  M_AXI_IP_ARCACHE(2) <= \<const0>\;
  M_AXI_IP_ARCACHE(1) <= \<const0>\;
  M_AXI_IP_ARCACHE(0) <= \<const0>\;
  M_AXI_IP_ARID(0) <= \<const0>\;
  M_AXI_IP_ARLEN(7) <= \<const0>\;
  M_AXI_IP_ARLEN(6) <= \<const0>\;
  M_AXI_IP_ARLEN(5) <= \<const0>\;
  M_AXI_IP_ARLEN(4) <= \<const0>\;
  M_AXI_IP_ARLEN(3) <= \<const0>\;
  M_AXI_IP_ARLEN(2) <= \<const0>\;
  M_AXI_IP_ARLEN(1) <= \<const0>\;
  M_AXI_IP_ARLEN(0) <= \<const0>\;
  M_AXI_IP_ARLOCK <= \<const0>\;
  M_AXI_IP_ARPROT(2) <= \<const0>\;
  M_AXI_IP_ARPROT(1) <= \<const0>\;
  M_AXI_IP_ARPROT(0) <= \<const0>\;
  M_AXI_IP_ARQOS(3) <= \<const0>\;
  M_AXI_IP_ARQOS(2) <= \<const0>\;
  M_AXI_IP_ARQOS(1) <= \<const0>\;
  M_AXI_IP_ARQOS(0) <= \<const0>\;
  M_AXI_IP_ARSIZE(2) <= \<const0>\;
  M_AXI_IP_ARSIZE(1) <= \<const0>\;
  M_AXI_IP_ARSIZE(0) <= \<const0>\;
  M_AXI_IP_ARVALID <= \<const0>\;
  M_AXI_IP_AWADDR(31) <= \<const0>\;
  M_AXI_IP_AWADDR(30) <= \<const0>\;
  M_AXI_IP_AWADDR(29) <= \<const0>\;
  M_AXI_IP_AWADDR(28) <= \<const0>\;
  M_AXI_IP_AWADDR(27) <= \<const0>\;
  M_AXI_IP_AWADDR(26) <= \<const0>\;
  M_AXI_IP_AWADDR(25) <= \<const0>\;
  M_AXI_IP_AWADDR(24) <= \<const0>\;
  M_AXI_IP_AWADDR(23) <= \<const0>\;
  M_AXI_IP_AWADDR(22) <= \<const0>\;
  M_AXI_IP_AWADDR(21) <= \<const0>\;
  M_AXI_IP_AWADDR(20) <= \<const0>\;
  M_AXI_IP_AWADDR(19) <= \<const0>\;
  M_AXI_IP_AWADDR(18) <= \<const0>\;
  M_AXI_IP_AWADDR(17) <= \<const0>\;
  M_AXI_IP_AWADDR(16) <= \<const0>\;
  M_AXI_IP_AWADDR(15) <= \<const0>\;
  M_AXI_IP_AWADDR(14) <= \<const0>\;
  M_AXI_IP_AWADDR(13) <= \<const0>\;
  M_AXI_IP_AWADDR(12) <= \<const0>\;
  M_AXI_IP_AWADDR(11) <= \<const0>\;
  M_AXI_IP_AWADDR(10) <= \<const0>\;
  M_AXI_IP_AWADDR(9) <= \<const0>\;
  M_AXI_IP_AWADDR(8) <= \<const0>\;
  M_AXI_IP_AWADDR(7) <= \<const0>\;
  M_AXI_IP_AWADDR(6) <= \<const0>\;
  M_AXI_IP_AWADDR(5) <= \<const0>\;
  M_AXI_IP_AWADDR(4) <= \<const0>\;
  M_AXI_IP_AWADDR(3) <= \<const0>\;
  M_AXI_IP_AWADDR(2) <= \<const0>\;
  M_AXI_IP_AWADDR(1) <= \<const0>\;
  M_AXI_IP_AWADDR(0) <= \<const0>\;
  M_AXI_IP_AWBURST(1) <= \<const0>\;
  M_AXI_IP_AWBURST(0) <= \<const0>\;
  M_AXI_IP_AWCACHE(3) <= \<const0>\;
  M_AXI_IP_AWCACHE(2) <= \<const0>\;
  M_AXI_IP_AWCACHE(1) <= \<const0>\;
  M_AXI_IP_AWCACHE(0) <= \<const0>\;
  M_AXI_IP_AWID(0) <= \<const0>\;
  M_AXI_IP_AWLEN(7) <= \<const0>\;
  M_AXI_IP_AWLEN(6) <= \<const0>\;
  M_AXI_IP_AWLEN(5) <= \<const0>\;
  M_AXI_IP_AWLEN(4) <= \<const0>\;
  M_AXI_IP_AWLEN(3) <= \<const0>\;
  M_AXI_IP_AWLEN(2) <= \<const0>\;
  M_AXI_IP_AWLEN(1) <= \<const0>\;
  M_AXI_IP_AWLEN(0) <= \<const0>\;
  M_AXI_IP_AWLOCK <= \<const0>\;
  M_AXI_IP_AWPROT(2) <= \<const0>\;
  M_AXI_IP_AWPROT(1) <= \<const0>\;
  M_AXI_IP_AWPROT(0) <= \<const0>\;
  M_AXI_IP_AWQOS(3) <= \<const0>\;
  M_AXI_IP_AWQOS(2) <= \<const0>\;
  M_AXI_IP_AWQOS(1) <= \<const0>\;
  M_AXI_IP_AWQOS(0) <= \<const0>\;
  M_AXI_IP_AWSIZE(2) <= \<const0>\;
  M_AXI_IP_AWSIZE(1) <= \<const0>\;
  M_AXI_IP_AWSIZE(0) <= \<const0>\;
  M_AXI_IP_AWVALID <= \<const0>\;
  M_AXI_IP_BREADY <= \<const0>\;
  M_AXI_IP_RREADY <= \<const0>\;
  M_AXI_IP_WDATA(31) <= \<const0>\;
  M_AXI_IP_WDATA(30) <= \<const0>\;
  M_AXI_IP_WDATA(29) <= \<const0>\;
  M_AXI_IP_WDATA(28) <= \<const0>\;
  M_AXI_IP_WDATA(27) <= \<const0>\;
  M_AXI_IP_WDATA(26) <= \<const0>\;
  M_AXI_IP_WDATA(25) <= \<const0>\;
  M_AXI_IP_WDATA(24) <= \<const0>\;
  M_AXI_IP_WDATA(23) <= \<const0>\;
  M_AXI_IP_WDATA(22) <= \<const0>\;
  M_AXI_IP_WDATA(21) <= \<const0>\;
  M_AXI_IP_WDATA(20) <= \<const0>\;
  M_AXI_IP_WDATA(19) <= \<const0>\;
  M_AXI_IP_WDATA(18) <= \<const0>\;
  M_AXI_IP_WDATA(17) <= \<const0>\;
  M_AXI_IP_WDATA(16) <= \<const0>\;
  M_AXI_IP_WDATA(15) <= \<const0>\;
  M_AXI_IP_WDATA(14) <= \<const0>\;
  M_AXI_IP_WDATA(13) <= \<const0>\;
  M_AXI_IP_WDATA(12) <= \<const0>\;
  M_AXI_IP_WDATA(11) <= \<const0>\;
  M_AXI_IP_WDATA(10) <= \<const0>\;
  M_AXI_IP_WDATA(9) <= \<const0>\;
  M_AXI_IP_WDATA(8) <= \<const0>\;
  M_AXI_IP_WDATA(7) <= \<const0>\;
  M_AXI_IP_WDATA(6) <= \<const0>\;
  M_AXI_IP_WDATA(5) <= \<const0>\;
  M_AXI_IP_WDATA(4) <= \<const0>\;
  M_AXI_IP_WDATA(3) <= \<const0>\;
  M_AXI_IP_WDATA(2) <= \<const0>\;
  M_AXI_IP_WDATA(1) <= \<const0>\;
  M_AXI_IP_WDATA(0) <= \<const0>\;
  M_AXI_IP_WLAST <= \<const0>\;
  M_AXI_IP_WSTRB(3) <= \<const0>\;
  M_AXI_IP_WSTRB(2) <= \<const0>\;
  M_AXI_IP_WSTRB(1) <= \<const0>\;
  M_AXI_IP_WSTRB(0) <= \<const0>\;
  M_AXI_IP_WVALID <= \<const0>\;
  Read_Strobe <= \^read_strobe\;
  S0_AXIS_TREADY <= \<const0>\;
  S10_AXIS_TREADY <= \<const0>\;
  S11_AXIS_TREADY <= \<const0>\;
  S12_AXIS_TREADY <= \<const0>\;
  S13_AXIS_TREADY <= \<const0>\;
  S14_AXIS_TREADY <= \<const0>\;
  S15_AXIS_TREADY <= \<const0>\;
  S1_AXIS_TREADY <= \<const0>\;
  S2_AXIS_TREADY <= \<const0>\;
  S3_AXIS_TREADY <= \<const0>\;
  S4_AXIS_TREADY <= \<const0>\;
  S5_AXIS_TREADY <= \<const0>\;
  S6_AXIS_TREADY <= \<const0>\;
  S7_AXIS_TREADY <= \<const0>\;
  S8_AXIS_TREADY <= \<const0>\;
  S9_AXIS_TREADY <= \<const0>\;
  Trace_DCache_Hit <= \<const0>\;
  Trace_DCache_Rdy <= \<const0>\;
  Trace_DCache_Read <= \<const0>\;
  Trace_DCache_Req <= \<const0>\;
  Trace_Data_Access <= \^trace_data_access\;
  Trace_Data_Address(0 to 31) <= \^trace_data_address\(0 to 31);
  Trace_Data_Byte_Enable(0 to 3) <= \^trace_data_byte_enable\(0 to 3);
  Trace_Data_Read <= \^trace_data_read\;
  Trace_Data_Write <= \^trace_data_write\;
  Trace_Data_Write_Value(0 to 31) <= \^trace_data_write_value\(0 to 31);
  Trace_Delay_Slot <= \^trace_delay_slot\;
  Trace_EX_PipeRun <= \^trace_ex_piperun\;
  Trace_Exception_Kind(0 to 4) <= \^trace_exception_kind\(0 to 4);
  Trace_Exception_Taken <= \^trace_exception_taken\;
  Trace_ICache_Hit <= \<const0>\;
  Trace_ICache_Rdy <= \<const0>\;
  Trace_ICache_Req <= \<const0>\;
  Trace_Instruction(0 to 31) <= \^trace_instruction\(0 to 31);
  Trace_Jump_Hit <= \^trace_jump_hit\;
  Trace_Jump_Taken <= \^trace_jump_taken\;
  Trace_MB_Halted <= \^lockstep_master_out\(10);
  Trace_MEM_PipeRun <= \^trace_mem_piperun\;
  Trace_MSR_Reg(0) <= \<const0>\;
  Trace_MSR_Reg(1) <= \<const0>\;
  Trace_MSR_Reg(2) <= \<const0>\;
  Trace_MSR_Reg(3) <= \<const0>\;
  Trace_MSR_Reg(4) <= \<const0>\;
  Trace_MSR_Reg(5) <= \<const0>\;
  Trace_MSR_Reg(6) <= \<const0>\;
  Trace_MSR_Reg(7) <= \<const0>\;
  Trace_MSR_Reg(8) <= \<const0>\;
  Trace_MSR_Reg(9) <= \<const0>\;
  Trace_MSR_Reg(10) <= \<const0>\;
  Trace_MSR_Reg(11 to 13) <= \^trace_msr_reg\(11 to 13);
  Trace_MSR_Reg(14) <= \<const0>\;
  Trace_New_Reg_Value(0 to 31) <= \^trace_new_reg_value\(0 to 31);
  Trace_OF_PipeRun <= \^trace_of_piperun\;
  Trace_PC(0 to 31) <= \^trace_pc\(0 to 31);
  Trace_PID_Reg(0) <= \<const0>\;
  Trace_PID_Reg(1) <= \<const0>\;
  Trace_PID_Reg(2) <= \<const0>\;
  Trace_PID_Reg(3) <= \<const0>\;
  Trace_PID_Reg(4) <= \<const0>\;
  Trace_PID_Reg(5) <= \<const0>\;
  Trace_PID_Reg(6) <= \<const0>\;
  Trace_PID_Reg(7) <= \<const0>\;
  Trace_Reg_Addr(0 to 4) <= \^trace_reg_addr\(0 to 4);
  Trace_Reg_Write <= \^trace_reg_write\;
  Trace_Valid_Instr <= \^trace_valid_instr\;
  Write_Strobe <= \^write_strobe\;
Dbg_TDO_INST_0_i_12: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000001"
    )
        port map (
      I0 => Dbg_Reg_En(1),
      I1 => Dbg_Reg_En(0),
      I2 => Dbg_Reg_En(4),
      I3 => Dbg_Reg_En(3),
      I4 => Dbg_Reg_En(2),
      O => Dbg_TDO_INST_0_i_12_n_0
    );
Dbg_TDO_INST_0_i_4: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_12_n_0,
      I1 => Dbg_Reg_En(5),
      I2 => Dbg_Reg_En(6),
      O => Dbg_TDO_INST_0_i_4_n_0
    );
Dbg_TDO_INST_0_i_6: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_12_n_0,
      I1 => Dbg_Reg_En(6),
      I2 => Dbg_Reg_En(7),
      O => Dbg_TDO_INST_0_i_6_n_0
    );
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\LOCKSTEP_Out_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^lockstep_master_out\(10),
      Q => LOCKSTEP_Out(0),
      R => Reset
    );
\LOCKSTEP_Out_reg[1000]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(25),
      Q => LOCKSTEP_Out(1000),
      R => Reset
    );
\LOCKSTEP_Out_reg[1001]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(24),
      Q => LOCKSTEP_Out(1001),
      R => Reset
    );
\LOCKSTEP_Out_reg[1002]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(23),
      Q => LOCKSTEP_Out(1002),
      R => Reset
    );
\LOCKSTEP_Out_reg[1003]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(22),
      Q => LOCKSTEP_Out(1003),
      R => Reset
    );
\LOCKSTEP_Out_reg[1004]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(21),
      Q => LOCKSTEP_Out(1004),
      R => Reset
    );
\LOCKSTEP_Out_reg[1005]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(20),
      Q => LOCKSTEP_Out(1005),
      R => Reset
    );
\LOCKSTEP_Out_reg[1006]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(19),
      Q => LOCKSTEP_Out(1006),
      R => Reset
    );
\LOCKSTEP_Out_reg[1007]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(18),
      Q => LOCKSTEP_Out(1007),
      R => Reset
    );
\LOCKSTEP_Out_reg[1008]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(17),
      Q => LOCKSTEP_Out(1008),
      R => Reset
    );
\LOCKSTEP_Out_reg[1009]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(16),
      Q => LOCKSTEP_Out(1009),
      R => Reset
    );
\LOCKSTEP_Out_reg[100]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d_as\,
      Q => LOCKSTEP_Out(100),
      R => Reset
    );
\LOCKSTEP_Out_reg[1010]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(15),
      Q => LOCKSTEP_Out(1010),
      R => Reset
    );
\LOCKSTEP_Out_reg[1011]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(14),
      Q => LOCKSTEP_Out(1011),
      R => Reset
    );
\LOCKSTEP_Out_reg[1012]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(13),
      Q => LOCKSTEP_Out(1012),
      R => Reset
    );
\LOCKSTEP_Out_reg[1013]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(12),
      Q => LOCKSTEP_Out(1013),
      R => Reset
    );
\LOCKSTEP_Out_reg[1014]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(11),
      Q => LOCKSTEP_Out(1014),
      R => Reset
    );
\LOCKSTEP_Out_reg[1015]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(10),
      Q => LOCKSTEP_Out(1015),
      R => Reset
    );
\LOCKSTEP_Out_reg[1016]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(9),
      Q => LOCKSTEP_Out(1016),
      R => Reset
    );
\LOCKSTEP_Out_reg[1017]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(8),
      Q => LOCKSTEP_Out(1017),
      R => Reset
    );
\LOCKSTEP_Out_reg[1018]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(7),
      Q => LOCKSTEP_Out(1018),
      R => Reset
    );
\LOCKSTEP_Out_reg[1019]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(6),
      Q => LOCKSTEP_Out(1019),
      R => Reset
    );
\LOCKSTEP_Out_reg[101]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^read_strobe\,
      Q => LOCKSTEP_Out(101),
      R => Reset
    );
\LOCKSTEP_Out_reg[1020]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(5),
      Q => LOCKSTEP_Out(1020),
      R => Reset
    );
\LOCKSTEP_Out_reg[1021]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(4),
      Q => LOCKSTEP_Out(1021),
      R => Reset
    );
\LOCKSTEP_Out_reg[1022]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(3),
      Q => LOCKSTEP_Out(1022),
      R => Reset
    );
\LOCKSTEP_Out_reg[1023]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(2),
      Q => LOCKSTEP_Out(1023),
      R => Reset
    );
\LOCKSTEP_Out_reg[1024]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(1),
      Q => LOCKSTEP_Out(1024),
      R => Reset
    );
\LOCKSTEP_Out_reg[1025]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(0),
      Q => LOCKSTEP_Out(1025),
      R => Reset
    );
\LOCKSTEP_Out_reg[1026]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1026),
      R => Reset
    );
\LOCKSTEP_Out_reg[1027]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1027),
      R => Reset
    );
\LOCKSTEP_Out_reg[1028]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1028),
      R => Reset
    );
\LOCKSTEP_Out_reg[1029]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1029),
      R => Reset
    );
\LOCKSTEP_Out_reg[102]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^write_strobe\,
      Q => LOCKSTEP_Out(102),
      R => Reset
    );
\LOCKSTEP_Out_reg[1030]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1030),
      R => Reset
    );
\LOCKSTEP_Out_reg[1031]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1031),
      R => Reset
    );
\LOCKSTEP_Out_reg[1032]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1032),
      R => Reset
    );
\LOCKSTEP_Out_reg[1033]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1033),
      R => Reset
    );
\LOCKSTEP_Out_reg[1034]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1034),
      R => Reset
    );
\LOCKSTEP_Out_reg[1035]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '1',
      Q => LOCKSTEP_Out(1035),
      R => Reset
    );
\LOCKSTEP_Out_reg[1036]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1036),
      R => Reset
    );
\LOCKSTEP_Out_reg[1037]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1037),
      R => Reset
    );
\LOCKSTEP_Out_reg[1038]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '1',
      Q => LOCKSTEP_Out(1038),
      R => Reset
    );
\LOCKSTEP_Out_reg[1039]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1039),
      R => Reset
    );
\LOCKSTEP_Out_reg[103]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^byte_enable\(0),
      Q => LOCKSTEP_Out(103),
      R => Reset
    );
\LOCKSTEP_Out_reg[1040]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1040),
      R => Reset
    );
\LOCKSTEP_Out_reg[1041]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1041),
      R => Reset
    );
\LOCKSTEP_Out_reg[1042]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '1',
      Q => LOCKSTEP_Out(1042),
      R => Reset
    );
\LOCKSTEP_Out_reg[1043]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '1',
      Q => LOCKSTEP_Out(1043),
      R => Reset
    );
\LOCKSTEP_Out_reg[1044]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1044),
      R => Reset
    );
\LOCKSTEP_Out_reg[1045]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1045),
      R => Reset
    );
\LOCKSTEP_Out_reg[1046]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1046),
      R => Reset
    );
\LOCKSTEP_Out_reg[1047]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '1',
      Q => LOCKSTEP_Out(1047),
      R => Reset
    );
\LOCKSTEP_Out_reg[1048]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1048),
      R => Reset
    );
\LOCKSTEP_Out_reg[1049]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1049),
      R => Reset
    );
\LOCKSTEP_Out_reg[104]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^byte_enable\(1),
      Q => LOCKSTEP_Out(104),
      R => Reset
    );
\LOCKSTEP_Out_reg[1050]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1050),
      R => Reset
    );
\LOCKSTEP_Out_reg[1051]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_arvalid\,
      Q => LOCKSTEP_Out(1051),
      R => Reset
    );
\LOCKSTEP_Out_reg[1052]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '1',
      Q => LOCKSTEP_Out(1052),
      R => Reset
    );
\LOCKSTEP_Out_reg[1053]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1053),
      R => Reset
    );
\LOCKSTEP_Out_reg[1054]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1054),
      R => Reset
    );
\LOCKSTEP_Out_reg[1055]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1055),
      R => Reset
    );
\LOCKSTEP_Out_reg[1056]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1056),
      R => Reset
    );
\LOCKSTEP_Out_reg[1057]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1057),
      R => Reset
    );
\LOCKSTEP_Out_reg[1058]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1058),
      R => Reset
    );
\LOCKSTEP_Out_reg[1059]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1059),
      R => Reset
    );
\LOCKSTEP_Out_reg[105]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^byte_enable\(2),
      Q => LOCKSTEP_Out(105),
      R => Reset
    );
\LOCKSTEP_Out_reg[1060]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1060),
      R => Reset
    );
\LOCKSTEP_Out_reg[1061]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1061),
      R => Reset
    );
\LOCKSTEP_Out_reg[1062]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1062),
      R => Reset
    );
\LOCKSTEP_Out_reg[1063]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1063),
      R => Reset
    );
\LOCKSTEP_Out_reg[1064]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1064),
      R => Reset
    );
\LOCKSTEP_Out_reg[1065]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1065),
      R => Reset
    );
\LOCKSTEP_Out_reg[1066]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1066),
      R => Reset
    );
\LOCKSTEP_Out_reg[1067]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1067),
      R => Reset
    );
\LOCKSTEP_Out_reg[1068]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1068),
      R => Reset
    );
\LOCKSTEP_Out_reg[1069]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1069),
      R => Reset
    );
\LOCKSTEP_Out_reg[106]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^byte_enable\(3),
      Q => LOCKSTEP_Out(106),
      R => Reset
    );
\LOCKSTEP_Out_reg[1070]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1070),
      R => Reset
    );
\LOCKSTEP_Out_reg[1071]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1071),
      R => Reset
    );
\LOCKSTEP_Out_reg[1072]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1072),
      R => Reset
    );
\LOCKSTEP_Out_reg[1073]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1073),
      R => Reset
    );
\LOCKSTEP_Out_reg[1074]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1074),
      R => Reset
    );
\LOCKSTEP_Out_reg[1075]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1075),
      R => Reset
    );
\LOCKSTEP_Out_reg[1076]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1076),
      R => Reset
    );
\LOCKSTEP_Out_reg[1077]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1077),
      R => Reset
    );
\LOCKSTEP_Out_reg[1078]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1078),
      R => Reset
    );
\LOCKSTEP_Out_reg[1079]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1079),
      R => Reset
    );
\LOCKSTEP_Out_reg[107]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(107),
      R => Reset
    );
\LOCKSTEP_Out_reg[1080]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1080),
      R => Reset
    );
\LOCKSTEP_Out_reg[1081]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1081),
      R => Reset
    );
\LOCKSTEP_Out_reg[1082]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1082),
      R => Reset
    );
\LOCKSTEP_Out_reg[1083]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1083),
      R => Reset
    );
\LOCKSTEP_Out_reg[1084]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1084),
      R => Reset
    );
\LOCKSTEP_Out_reg[1085]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1085),
      R => Reset
    );
\LOCKSTEP_Out_reg[1086]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1086),
      R => Reset
    );
\LOCKSTEP_Out_reg[1087]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1087),
      R => Reset
    );
\LOCKSTEP_Out_reg[1088]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1088),
      R => Reset
    );
\LOCKSTEP_Out_reg[1089]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1089),
      R => Reset
    );
\LOCKSTEP_Out_reg[108]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(108),
      R => Reset
    );
\LOCKSTEP_Out_reg[1090]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1090),
      R => Reset
    );
\LOCKSTEP_Out_reg[1091]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1091),
      R => Reset
    );
\LOCKSTEP_Out_reg[1092]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1092),
      R => Reset
    );
\LOCKSTEP_Out_reg[1093]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1093),
      R => Reset
    );
\LOCKSTEP_Out_reg[1094]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1094),
      R => Reset
    );
\LOCKSTEP_Out_reg[1095]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1095),
      R => Reset
    );
\LOCKSTEP_Out_reg[1096]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1096),
      R => Reset
    );
\LOCKSTEP_Out_reg[1097]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1097),
      R => Reset
    );
\LOCKSTEP_Out_reg[1098]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1098),
      R => Reset
    );
\LOCKSTEP_Out_reg[1099]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1099),
      R => Reset
    );
\LOCKSTEP_Out_reg[109]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(109),
      R => Reset
    );
\LOCKSTEP_Out_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(6),
      Q => LOCKSTEP_Out(10),
      R => Reset
    );
\LOCKSTEP_Out_reg[1100]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1100),
      R => Reset
    );
\LOCKSTEP_Out_reg[1101]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1101),
      R => Reset
    );
\LOCKSTEP_Out_reg[1102]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1102),
      R => Reset
    );
\LOCKSTEP_Out_reg[1103]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1103),
      R => Reset
    );
\LOCKSTEP_Out_reg[1104]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1104),
      R => Reset
    );
\LOCKSTEP_Out_reg[1105]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1105),
      R => Reset
    );
\LOCKSTEP_Out_reg[1106]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1106),
      R => Reset
    );
\LOCKSTEP_Out_reg[1107]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1107),
      R => Reset
    );
\LOCKSTEP_Out_reg[1108]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1108),
      R => Reset
    );
\LOCKSTEP_Out_reg[1109]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1109),
      R => Reset
    );
\LOCKSTEP_Out_reg[110]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(110),
      R => Reset
    );
\LOCKSTEP_Out_reg[1110]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1110),
      R => Reset
    );
\LOCKSTEP_Out_reg[1111]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1111),
      R => Reset
    );
\LOCKSTEP_Out_reg[1112]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1112),
      R => Reset
    );
\LOCKSTEP_Out_reg[1113]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1113),
      R => Reset
    );
\LOCKSTEP_Out_reg[1114]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1114),
      R => Reset
    );
\LOCKSTEP_Out_reg[1115]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1115),
      R => Reset
    );
\LOCKSTEP_Out_reg[1116]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1116),
      R => Reset
    );
\LOCKSTEP_Out_reg[1117]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1117),
      R => Reset
    );
\LOCKSTEP_Out_reg[1118]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1118),
      R => Reset
    );
\LOCKSTEP_Out_reg[1119]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1119),
      R => Reset
    );
\LOCKSTEP_Out_reg[111]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(111),
      R => Reset
    );
\LOCKSTEP_Out_reg[1120]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1120),
      R => Reset
    );
\LOCKSTEP_Out_reg[1121]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1121),
      R => Reset
    );
\LOCKSTEP_Out_reg[1122]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1122),
      R => Reset
    );
\LOCKSTEP_Out_reg[1123]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1123),
      R => Reset
    );
\LOCKSTEP_Out_reg[1124]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1124),
      R => Reset
    );
\LOCKSTEP_Out_reg[1125]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1125),
      R => Reset
    );
\LOCKSTEP_Out_reg[1126]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1126),
      R => Reset
    );
\LOCKSTEP_Out_reg[1127]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1127),
      R => Reset
    );
\LOCKSTEP_Out_reg[1128]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1128),
      R => Reset
    );
\LOCKSTEP_Out_reg[1129]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1129),
      R => Reset
    );
\LOCKSTEP_Out_reg[112]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(112),
      R => Reset
    );
\LOCKSTEP_Out_reg[1130]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1130),
      R => Reset
    );
\LOCKSTEP_Out_reg[1131]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1131),
      R => Reset
    );
\LOCKSTEP_Out_reg[1132]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1132),
      R => Reset
    );
\LOCKSTEP_Out_reg[1133]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1133),
      R => Reset
    );
\LOCKSTEP_Out_reg[1134]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1134),
      R => Reset
    );
\LOCKSTEP_Out_reg[1135]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1135),
      R => Reset
    );
\LOCKSTEP_Out_reg[1136]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1136),
      R => Reset
    );
\LOCKSTEP_Out_reg[1137]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1137),
      R => Reset
    );
\LOCKSTEP_Out_reg[1138]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1138),
      R => Reset
    );
\LOCKSTEP_Out_reg[1139]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1139),
      R => Reset
    );
\LOCKSTEP_Out_reg[113]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(113),
      R => Reset
    );
\LOCKSTEP_Out_reg[1140]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1140),
      R => Reset
    );
\LOCKSTEP_Out_reg[1141]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1141),
      R => Reset
    );
\LOCKSTEP_Out_reg[1142]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1142),
      R => Reset
    );
\LOCKSTEP_Out_reg[1143]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1143),
      R => Reset
    );
\LOCKSTEP_Out_reg[1144]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1144),
      R => Reset
    );
\LOCKSTEP_Out_reg[1145]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1145),
      R => Reset
    );
\LOCKSTEP_Out_reg[1146]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1146),
      R => Reset
    );
\LOCKSTEP_Out_reg[1147]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1147),
      R => Reset
    );
\LOCKSTEP_Out_reg[1148]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1148),
      R => Reset
    );
\LOCKSTEP_Out_reg[1149]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1149),
      R => Reset
    );
\LOCKSTEP_Out_reg[114]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(114),
      R => Reset
    );
\LOCKSTEP_Out_reg[1150]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1150),
      R => Reset
    );
\LOCKSTEP_Out_reg[1151]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1151),
      R => Reset
    );
\LOCKSTEP_Out_reg[1152]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1152),
      R => Reset
    );
\LOCKSTEP_Out_reg[1153]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1153),
      R => Reset
    );
\LOCKSTEP_Out_reg[1154]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1154),
      R => Reset
    );
\LOCKSTEP_Out_reg[1155]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1155),
      R => Reset
    );
\LOCKSTEP_Out_reg[1156]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1156),
      R => Reset
    );
\LOCKSTEP_Out_reg[1157]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1157),
      R => Reset
    );
\LOCKSTEP_Out_reg[1158]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1158),
      R => Reset
    );
\LOCKSTEP_Out_reg[1159]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1159),
      R => Reset
    );
\LOCKSTEP_Out_reg[115]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(115),
      R => Reset
    );
\LOCKSTEP_Out_reg[1160]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1160),
      R => Reset
    );
\LOCKSTEP_Out_reg[1161]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1161),
      R => Reset
    );
\LOCKSTEP_Out_reg[1162]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1162),
      R => Reset
    );
\LOCKSTEP_Out_reg[1163]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1163),
      R => Reset
    );
\LOCKSTEP_Out_reg[1164]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1164),
      R => Reset
    );
\LOCKSTEP_Out_reg[1165]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1165),
      R => Reset
    );
\LOCKSTEP_Out_reg[1166]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1166),
      R => Reset
    );
\LOCKSTEP_Out_reg[1167]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1167),
      R => Reset
    );
\LOCKSTEP_Out_reg[1168]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1168),
      R => Reset
    );
\LOCKSTEP_Out_reg[1169]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1169),
      R => Reset
    );
\LOCKSTEP_Out_reg[116]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(116),
      R => Reset
    );
\LOCKSTEP_Out_reg[1170]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1170),
      R => Reset
    );
\LOCKSTEP_Out_reg[1171]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1171),
      R => Reset
    );
\LOCKSTEP_Out_reg[1172]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1172),
      R => Reset
    );
\LOCKSTEP_Out_reg[1173]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1173),
      R => Reset
    );
\LOCKSTEP_Out_reg[1174]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1174),
      R => Reset
    );
\LOCKSTEP_Out_reg[1175]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1175),
      R => Reset
    );
\LOCKSTEP_Out_reg[1176]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1176),
      R => Reset
    );
\LOCKSTEP_Out_reg[1177]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1177),
      R => Reset
    );
\LOCKSTEP_Out_reg[1178]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1178),
      R => Reset
    );
\LOCKSTEP_Out_reg[1179]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1179),
      R => Reset
    );
\LOCKSTEP_Out_reg[117]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(117),
      R => Reset
    );
\LOCKSTEP_Out_reg[1180]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1180),
      R => Reset
    );
\LOCKSTEP_Out_reg[1181]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1181),
      R => Reset
    );
\LOCKSTEP_Out_reg[1182]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1182),
      R => Reset
    );
\LOCKSTEP_Out_reg[1183]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1183),
      R => Reset
    );
\LOCKSTEP_Out_reg[1184]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1184),
      R => Reset
    );
\LOCKSTEP_Out_reg[1185]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1185),
      R => Reset
    );
\LOCKSTEP_Out_reg[1186]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1186),
      R => Reset
    );
\LOCKSTEP_Out_reg[1187]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1187),
      R => Reset
    );
\LOCKSTEP_Out_reg[1188]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1188),
      R => Reset
    );
\LOCKSTEP_Out_reg[1189]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1189),
      R => Reset
    );
\LOCKSTEP_Out_reg[118]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(118),
      R => Reset
    );
\LOCKSTEP_Out_reg[1190]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1190),
      R => Reset
    );
\LOCKSTEP_Out_reg[1191]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1191),
      R => Reset
    );
\LOCKSTEP_Out_reg[1192]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1192),
      R => Reset
    );
\LOCKSTEP_Out_reg[1193]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1193),
      R => Reset
    );
\LOCKSTEP_Out_reg[1194]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1194),
      R => Reset
    );
\LOCKSTEP_Out_reg[1195]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1195),
      R => Reset
    );
\LOCKSTEP_Out_reg[1196]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1196),
      R => Reset
    );
\LOCKSTEP_Out_reg[1197]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1197),
      R => Reset
    );
\LOCKSTEP_Out_reg[1198]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1198),
      R => Reset
    );
\LOCKSTEP_Out_reg[1199]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1199),
      R => Reset
    );
\LOCKSTEP_Out_reg[119]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(119),
      R => Reset
    );
\LOCKSTEP_Out_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(7),
      Q => LOCKSTEP_Out(11),
      R => Reset
    );
\LOCKSTEP_Out_reg[1200]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1200),
      R => Reset
    );
\LOCKSTEP_Out_reg[1201]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1201),
      R => Reset
    );
\LOCKSTEP_Out_reg[1202]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1202),
      R => Reset
    );
\LOCKSTEP_Out_reg[1203]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1203),
      R => Reset
    );
\LOCKSTEP_Out_reg[1204]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1204),
      R => Reset
    );
\LOCKSTEP_Out_reg[1205]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1205),
      R => Reset
    );
\LOCKSTEP_Out_reg[1206]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1206),
      R => Reset
    );
\LOCKSTEP_Out_reg[1207]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1207),
      R => Reset
    );
\LOCKSTEP_Out_reg[1208]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1208),
      R => Reset
    );
\LOCKSTEP_Out_reg[1209]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1209),
      R => Reset
    );
\LOCKSTEP_Out_reg[120]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(120),
      R => Reset
    );
\LOCKSTEP_Out_reg[1210]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1210),
      R => Reset
    );
\LOCKSTEP_Out_reg[1211]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1211),
      R => Reset
    );
\LOCKSTEP_Out_reg[1212]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1212),
      R => Reset
    );
\LOCKSTEP_Out_reg[1213]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1213),
      R => Reset
    );
\LOCKSTEP_Out_reg[1214]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1214),
      R => Reset
    );
\LOCKSTEP_Out_reg[1215]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1215),
      R => Reset
    );
\LOCKSTEP_Out_reg[1216]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1216),
      R => Reset
    );
\LOCKSTEP_Out_reg[1217]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1217),
      R => Reset
    );
\LOCKSTEP_Out_reg[1218]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1218),
      R => Reset
    );
\LOCKSTEP_Out_reg[1219]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1219),
      R => Reset
    );
\LOCKSTEP_Out_reg[121]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(121),
      R => Reset
    );
\LOCKSTEP_Out_reg[1220]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1220),
      R => Reset
    );
\LOCKSTEP_Out_reg[1221]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1221),
      R => Reset
    );
\LOCKSTEP_Out_reg[1222]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1222),
      R => Reset
    );
\LOCKSTEP_Out_reg[1223]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1223),
      R => Reset
    );
\LOCKSTEP_Out_reg[1224]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1224),
      R => Reset
    );
\LOCKSTEP_Out_reg[1225]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1225),
      R => Reset
    );
\LOCKSTEP_Out_reg[1226]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1226),
      R => Reset
    );
\LOCKSTEP_Out_reg[1227]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1227),
      R => Reset
    );
\LOCKSTEP_Out_reg[1228]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1228),
      R => Reset
    );
\LOCKSTEP_Out_reg[1229]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1229),
      R => Reset
    );
\LOCKSTEP_Out_reg[122]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(122),
      R => Reset
    );
\LOCKSTEP_Out_reg[1230]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1230),
      R => Reset
    );
\LOCKSTEP_Out_reg[1231]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1231),
      R => Reset
    );
\LOCKSTEP_Out_reg[1232]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1232),
      R => Reset
    );
\LOCKSTEP_Out_reg[1233]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1233),
      R => Reset
    );
\LOCKSTEP_Out_reg[1234]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1234),
      R => Reset
    );
\LOCKSTEP_Out_reg[1235]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1235),
      R => Reset
    );
\LOCKSTEP_Out_reg[1236]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1236),
      R => Reset
    );
\LOCKSTEP_Out_reg[1237]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1237),
      R => Reset
    );
\LOCKSTEP_Out_reg[1238]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1238),
      R => Reset
    );
\LOCKSTEP_Out_reg[1239]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1239),
      R => Reset
    );
\LOCKSTEP_Out_reg[123]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(123),
      R => Reset
    );
\LOCKSTEP_Out_reg[1240]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1240),
      R => Reset
    );
\LOCKSTEP_Out_reg[1241]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1241),
      R => Reset
    );
\LOCKSTEP_Out_reg[1242]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1242),
      R => Reset
    );
\LOCKSTEP_Out_reg[1243]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1243),
      R => Reset
    );
\LOCKSTEP_Out_reg[1244]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1244),
      R => Reset
    );
\LOCKSTEP_Out_reg[1245]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1245),
      R => Reset
    );
\LOCKSTEP_Out_reg[1246]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1246),
      R => Reset
    );
\LOCKSTEP_Out_reg[1247]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1247),
      R => Reset
    );
\LOCKSTEP_Out_reg[1248]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1248),
      R => Reset
    );
\LOCKSTEP_Out_reg[1249]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1249),
      R => Reset
    );
\LOCKSTEP_Out_reg[124]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(124),
      R => Reset
    );
\LOCKSTEP_Out_reg[1250]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1250),
      R => Reset
    );
\LOCKSTEP_Out_reg[1251]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1251),
      R => Reset
    );
\LOCKSTEP_Out_reg[1252]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1252),
      R => Reset
    );
\LOCKSTEP_Out_reg[1253]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1253),
      R => Reset
    );
\LOCKSTEP_Out_reg[1254]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1254),
      R => Reset
    );
\LOCKSTEP_Out_reg[1255]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1255),
      R => Reset
    );
\LOCKSTEP_Out_reg[1256]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1256),
      R => Reset
    );
\LOCKSTEP_Out_reg[1257]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1257),
      R => Reset
    );
\LOCKSTEP_Out_reg[1258]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1258),
      R => Reset
    );
\LOCKSTEP_Out_reg[1259]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1259),
      R => Reset
    );
\LOCKSTEP_Out_reg[125]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(125),
      R => Reset
    );
\LOCKSTEP_Out_reg[1260]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1260),
      R => Reset
    );
\LOCKSTEP_Out_reg[1261]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1261),
      R => Reset
    );
\LOCKSTEP_Out_reg[1262]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1262),
      R => Reset
    );
\LOCKSTEP_Out_reg[1263]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1263),
      R => Reset
    );
\LOCKSTEP_Out_reg[1264]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1264),
      R => Reset
    );
\LOCKSTEP_Out_reg[1265]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1265),
      R => Reset
    );
\LOCKSTEP_Out_reg[1266]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1266),
      R => Reset
    );
\LOCKSTEP_Out_reg[1267]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1267),
      R => Reset
    );
\LOCKSTEP_Out_reg[1268]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1268),
      R => Reset
    );
\LOCKSTEP_Out_reg[1269]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1269),
      R => Reset
    );
\LOCKSTEP_Out_reg[126]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(126),
      R => Reset
    );
\LOCKSTEP_Out_reg[1270]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1270),
      R => Reset
    );
\LOCKSTEP_Out_reg[1271]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1271),
      R => Reset
    );
\LOCKSTEP_Out_reg[1272]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1272),
      R => Reset
    );
\LOCKSTEP_Out_reg[1273]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1273),
      R => Reset
    );
\LOCKSTEP_Out_reg[1274]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1274),
      R => Reset
    );
\LOCKSTEP_Out_reg[1275]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1275),
      R => Reset
    );
\LOCKSTEP_Out_reg[1276]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1276),
      R => Reset
    );
\LOCKSTEP_Out_reg[1277]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1277),
      R => Reset
    );
\LOCKSTEP_Out_reg[1278]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1278),
      R => Reset
    );
\LOCKSTEP_Out_reg[1279]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1279),
      R => Reset
    );
\LOCKSTEP_Out_reg[127]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(127),
      R => Reset
    );
\LOCKSTEP_Out_reg[1280]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1280),
      R => Reset
    );
\LOCKSTEP_Out_reg[1281]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1281),
      R => Reset
    );
\LOCKSTEP_Out_reg[1282]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1282),
      R => Reset
    );
\LOCKSTEP_Out_reg[1283]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1283),
      R => Reset
    );
\LOCKSTEP_Out_reg[1284]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1284),
      R => Reset
    );
\LOCKSTEP_Out_reg[1285]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1285),
      R => Reset
    );
\LOCKSTEP_Out_reg[1286]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1286),
      R => Reset
    );
\LOCKSTEP_Out_reg[1287]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1287),
      R => Reset
    );
\LOCKSTEP_Out_reg[1288]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1288),
      R => Reset
    );
\LOCKSTEP_Out_reg[1289]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1289),
      R => Reset
    );
\LOCKSTEP_Out_reg[128]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(128),
      R => Reset
    );
\LOCKSTEP_Out_reg[1290]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1290),
      R => Reset
    );
\LOCKSTEP_Out_reg[1291]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1291),
      R => Reset
    );
\LOCKSTEP_Out_reg[1292]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1292),
      R => Reset
    );
\LOCKSTEP_Out_reg[1293]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1293),
      R => Reset
    );
\LOCKSTEP_Out_reg[1294]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1294),
      R => Reset
    );
\LOCKSTEP_Out_reg[1295]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1295),
      R => Reset
    );
\LOCKSTEP_Out_reg[1296]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1296),
      R => Reset
    );
\LOCKSTEP_Out_reg[1297]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1297),
      R => Reset
    );
\LOCKSTEP_Out_reg[1298]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1298),
      R => Reset
    );
\LOCKSTEP_Out_reg[1299]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1299),
      R => Reset
    );
\LOCKSTEP_Out_reg[129]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(129),
      R => Reset
    );
\LOCKSTEP_Out_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(8),
      Q => LOCKSTEP_Out(12),
      R => Reset
    );
\LOCKSTEP_Out_reg[1300]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1300),
      R => Reset
    );
\LOCKSTEP_Out_reg[1301]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1301),
      R => Reset
    );
\LOCKSTEP_Out_reg[1302]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1302),
      R => Reset
    );
\LOCKSTEP_Out_reg[1303]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1303),
      R => Reset
    );
\LOCKSTEP_Out_reg[1304]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1304),
      R => Reset
    );
\LOCKSTEP_Out_reg[1305]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1305),
      R => Reset
    );
\LOCKSTEP_Out_reg[1306]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1306),
      R => Reset
    );
\LOCKSTEP_Out_reg[1307]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1307),
      R => Reset
    );
\LOCKSTEP_Out_reg[1308]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1308),
      R => Reset
    );
\LOCKSTEP_Out_reg[1309]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1309),
      R => Reset
    );
\LOCKSTEP_Out_reg[130]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(130),
      R => Reset
    );
\LOCKSTEP_Out_reg[1310]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1310),
      R => Reset
    );
\LOCKSTEP_Out_reg[1311]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1311),
      R => Reset
    );
\LOCKSTEP_Out_reg[1312]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1312),
      R => Reset
    );
\LOCKSTEP_Out_reg[1313]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1313),
      R => Reset
    );
\LOCKSTEP_Out_reg[1314]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1314),
      R => Reset
    );
\LOCKSTEP_Out_reg[1315]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1315),
      R => Reset
    );
\LOCKSTEP_Out_reg[1316]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1316),
      R => Reset
    );
\LOCKSTEP_Out_reg[1317]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1317),
      R => Reset
    );
\LOCKSTEP_Out_reg[1318]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1318),
      R => Reset
    );
\LOCKSTEP_Out_reg[1319]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1319),
      R => Reset
    );
\LOCKSTEP_Out_reg[131]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(131),
      R => Reset
    );
\LOCKSTEP_Out_reg[1320]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1320),
      R => Reset
    );
\LOCKSTEP_Out_reg[1321]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1321),
      R => Reset
    );
\LOCKSTEP_Out_reg[1322]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1322),
      R => Reset
    );
\LOCKSTEP_Out_reg[1323]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1323),
      R => Reset
    );
\LOCKSTEP_Out_reg[1324]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1324),
      R => Reset
    );
\LOCKSTEP_Out_reg[1325]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1325),
      R => Reset
    );
\LOCKSTEP_Out_reg[1326]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1326),
      R => Reset
    );
\LOCKSTEP_Out_reg[1327]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1327),
      R => Reset
    );
\LOCKSTEP_Out_reg[1328]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1328),
      R => Reset
    );
\LOCKSTEP_Out_reg[1329]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1329),
      R => Reset
    );
\LOCKSTEP_Out_reg[132]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(132),
      R => Reset
    );
\LOCKSTEP_Out_reg[1330]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1330),
      R => Reset
    );
\LOCKSTEP_Out_reg[1331]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1331),
      R => Reset
    );
\LOCKSTEP_Out_reg[1332]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1332),
      R => Reset
    );
\LOCKSTEP_Out_reg[1333]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1333),
      R => Reset
    );
\LOCKSTEP_Out_reg[1334]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1334),
      R => Reset
    );
\LOCKSTEP_Out_reg[1335]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1335),
      R => Reset
    );
\LOCKSTEP_Out_reg[1336]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1336),
      R => Reset
    );
\LOCKSTEP_Out_reg[1337]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1337),
      R => Reset
    );
\LOCKSTEP_Out_reg[1338]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1338),
      R => Reset
    );
\LOCKSTEP_Out_reg[1339]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1339),
      R => Reset
    );
\LOCKSTEP_Out_reg[133]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(133),
      R => Reset
    );
\LOCKSTEP_Out_reg[1340]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1340),
      R => Reset
    );
\LOCKSTEP_Out_reg[1341]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1341),
      R => Reset
    );
\LOCKSTEP_Out_reg[1342]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1342),
      R => Reset
    );
\LOCKSTEP_Out_reg[1343]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1343),
      R => Reset
    );
\LOCKSTEP_Out_reg[1344]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1344),
      R => Reset
    );
\LOCKSTEP_Out_reg[1345]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1345),
      R => Reset
    );
\LOCKSTEP_Out_reg[1346]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1346),
      R => Reset
    );
\LOCKSTEP_Out_reg[1347]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1347),
      R => Reset
    );
\LOCKSTEP_Out_reg[1348]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1348),
      R => Reset
    );
\LOCKSTEP_Out_reg[1349]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1349),
      R => Reset
    );
\LOCKSTEP_Out_reg[134]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(134),
      R => Reset
    );
\LOCKSTEP_Out_reg[1350]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1350),
      R => Reset
    );
\LOCKSTEP_Out_reg[1351]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1351),
      R => Reset
    );
\LOCKSTEP_Out_reg[1352]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1352),
      R => Reset
    );
\LOCKSTEP_Out_reg[1353]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1353),
      R => Reset
    );
\LOCKSTEP_Out_reg[1354]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1354),
      R => Reset
    );
\LOCKSTEP_Out_reg[1355]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1355),
      R => Reset
    );
\LOCKSTEP_Out_reg[1356]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1356),
      R => Reset
    );
\LOCKSTEP_Out_reg[1357]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1357),
      R => Reset
    );
\LOCKSTEP_Out_reg[1358]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1358),
      R => Reset
    );
\LOCKSTEP_Out_reg[1359]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1359),
      R => Reset
    );
\LOCKSTEP_Out_reg[135]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(135),
      R => Reset
    );
\LOCKSTEP_Out_reg[1360]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1360),
      R => Reset
    );
\LOCKSTEP_Out_reg[1361]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1361),
      R => Reset
    );
\LOCKSTEP_Out_reg[1362]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1362),
      R => Reset
    );
\LOCKSTEP_Out_reg[1363]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1363),
      R => Reset
    );
\LOCKSTEP_Out_reg[1364]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1364),
      R => Reset
    );
\LOCKSTEP_Out_reg[1365]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1365),
      R => Reset
    );
\LOCKSTEP_Out_reg[1366]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1366),
      R => Reset
    );
\LOCKSTEP_Out_reg[1367]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1367),
      R => Reset
    );
\LOCKSTEP_Out_reg[1368]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1368),
      R => Reset
    );
\LOCKSTEP_Out_reg[1369]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1369),
      R => Reset
    );
\LOCKSTEP_Out_reg[136]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(136),
      R => Reset
    );
\LOCKSTEP_Out_reg[1370]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1370),
      R => Reset
    );
\LOCKSTEP_Out_reg[1371]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1371),
      R => Reset
    );
\LOCKSTEP_Out_reg[1372]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1372),
      R => Reset
    );
\LOCKSTEP_Out_reg[1373]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1373),
      R => Reset
    );
\LOCKSTEP_Out_reg[1374]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1374),
      R => Reset
    );
\LOCKSTEP_Out_reg[1375]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1375),
      R => Reset
    );
\LOCKSTEP_Out_reg[1376]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1376),
      R => Reset
    );
\LOCKSTEP_Out_reg[1377]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1377),
      R => Reset
    );
\LOCKSTEP_Out_reg[1378]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1378),
      R => Reset
    );
\LOCKSTEP_Out_reg[1379]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1379),
      R => Reset
    );
\LOCKSTEP_Out_reg[137]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(137),
      R => Reset
    );
\LOCKSTEP_Out_reg[1380]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1380),
      R => Reset
    );
\LOCKSTEP_Out_reg[1381]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1381),
      R => Reset
    );
\LOCKSTEP_Out_reg[1382]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1382),
      R => Reset
    );
\LOCKSTEP_Out_reg[1383]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1383),
      R => Reset
    );
\LOCKSTEP_Out_reg[1384]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1384),
      R => Reset
    );
\LOCKSTEP_Out_reg[1385]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1385),
      R => Reset
    );
\LOCKSTEP_Out_reg[1386]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1386),
      R => Reset
    );
\LOCKSTEP_Out_reg[1387]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1387),
      R => Reset
    );
\LOCKSTEP_Out_reg[1388]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1388),
      R => Reset
    );
\LOCKSTEP_Out_reg[1389]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1389),
      R => Reset
    );
\LOCKSTEP_Out_reg[138]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(138),
      R => Reset
    );
\LOCKSTEP_Out_reg[1390]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1390),
      R => Reset
    );
\LOCKSTEP_Out_reg[1391]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1391),
      R => Reset
    );
\LOCKSTEP_Out_reg[1392]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1392),
      R => Reset
    );
\LOCKSTEP_Out_reg[1393]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1393),
      R => Reset
    );
\LOCKSTEP_Out_reg[1394]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1394),
      R => Reset
    );
\LOCKSTEP_Out_reg[1395]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1395),
      R => Reset
    );
\LOCKSTEP_Out_reg[1396]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1396),
      R => Reset
    );
\LOCKSTEP_Out_reg[1397]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1397),
      R => Reset
    );
\LOCKSTEP_Out_reg[1398]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1398),
      R => Reset
    );
\LOCKSTEP_Out_reg[1399]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1399),
      R => Reset
    );
\LOCKSTEP_Out_reg[139]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(139),
      R => Reset
    );
\LOCKSTEP_Out_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(9),
      Q => LOCKSTEP_Out(13),
      R => Reset
    );
\LOCKSTEP_Out_reg[1400]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1400),
      R => Reset
    );
\LOCKSTEP_Out_reg[1401]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1401),
      R => Reset
    );
\LOCKSTEP_Out_reg[1402]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1402),
      R => Reset
    );
\LOCKSTEP_Out_reg[1403]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1403),
      R => Reset
    );
\LOCKSTEP_Out_reg[1404]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1404),
      R => Reset
    );
\LOCKSTEP_Out_reg[1405]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1405),
      R => Reset
    );
\LOCKSTEP_Out_reg[1406]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1406),
      R => Reset
    );
\LOCKSTEP_Out_reg[1407]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1407),
      R => Reset
    );
\LOCKSTEP_Out_reg[1408]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1408),
      R => Reset
    );
\LOCKSTEP_Out_reg[1409]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1409),
      R => Reset
    );
\LOCKSTEP_Out_reg[140]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(140),
      R => Reset
    );
\LOCKSTEP_Out_reg[1410]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1410),
      R => Reset
    );
\LOCKSTEP_Out_reg[1411]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1411),
      R => Reset
    );
\LOCKSTEP_Out_reg[1412]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1412),
      R => Reset
    );
\LOCKSTEP_Out_reg[1413]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1413),
      R => Reset
    );
\LOCKSTEP_Out_reg[1414]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1414),
      R => Reset
    );
\LOCKSTEP_Out_reg[1415]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1415),
      R => Reset
    );
\LOCKSTEP_Out_reg[1416]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1416),
      R => Reset
    );
\LOCKSTEP_Out_reg[1417]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1417),
      R => Reset
    );
\LOCKSTEP_Out_reg[1418]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1418),
      R => Reset
    );
\LOCKSTEP_Out_reg[1419]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1419),
      R => Reset
    );
\LOCKSTEP_Out_reg[141]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(141),
      R => Reset
    );
\LOCKSTEP_Out_reg[1420]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1420),
      R => Reset
    );
\LOCKSTEP_Out_reg[1421]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1421),
      R => Reset
    );
\LOCKSTEP_Out_reg[1422]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1422),
      R => Reset
    );
\LOCKSTEP_Out_reg[1423]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1423),
      R => Reset
    );
\LOCKSTEP_Out_reg[1424]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1424),
      R => Reset
    );
\LOCKSTEP_Out_reg[1425]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1425),
      R => Reset
    );
\LOCKSTEP_Out_reg[1426]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1426),
      R => Reset
    );
\LOCKSTEP_Out_reg[1427]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1427),
      R => Reset
    );
\LOCKSTEP_Out_reg[1428]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1428),
      R => Reset
    );
\LOCKSTEP_Out_reg[1429]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1429),
      R => Reset
    );
\LOCKSTEP_Out_reg[142]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(142),
      R => Reset
    );
\LOCKSTEP_Out_reg[1430]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1430),
      R => Reset
    );
\LOCKSTEP_Out_reg[1431]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1431),
      R => Reset
    );
\LOCKSTEP_Out_reg[1432]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1432),
      R => Reset
    );
\LOCKSTEP_Out_reg[1433]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1433),
      R => Reset
    );
\LOCKSTEP_Out_reg[1434]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1434),
      R => Reset
    );
\LOCKSTEP_Out_reg[1435]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1435),
      R => Reset
    );
\LOCKSTEP_Out_reg[1436]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1436),
      R => Reset
    );
\LOCKSTEP_Out_reg[1437]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1437),
      R => Reset
    );
\LOCKSTEP_Out_reg[1438]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1438),
      R => Reset
    );
\LOCKSTEP_Out_reg[1439]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1439),
      R => Reset
    );
\LOCKSTEP_Out_reg[143]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(143),
      R => Reset
    );
\LOCKSTEP_Out_reg[1440]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1440),
      R => Reset
    );
\LOCKSTEP_Out_reg[1441]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1441),
      R => Reset
    );
\LOCKSTEP_Out_reg[1442]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1442),
      R => Reset
    );
\LOCKSTEP_Out_reg[1443]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1443),
      R => Reset
    );
\LOCKSTEP_Out_reg[1444]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1444),
      R => Reset
    );
\LOCKSTEP_Out_reg[1445]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1445),
      R => Reset
    );
\LOCKSTEP_Out_reg[1446]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1446),
      R => Reset
    );
\LOCKSTEP_Out_reg[1447]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1447),
      R => Reset
    );
\LOCKSTEP_Out_reg[1448]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1448),
      R => Reset
    );
\LOCKSTEP_Out_reg[1449]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1449),
      R => Reset
    );
\LOCKSTEP_Out_reg[144]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(144),
      R => Reset
    );
\LOCKSTEP_Out_reg[1450]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1450),
      R => Reset
    );
\LOCKSTEP_Out_reg[1451]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1451),
      R => Reset
    );
\LOCKSTEP_Out_reg[1452]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1452),
      R => Reset
    );
\LOCKSTEP_Out_reg[1453]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1453),
      R => Reset
    );
\LOCKSTEP_Out_reg[1454]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1454),
      R => Reset
    );
\LOCKSTEP_Out_reg[1455]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1455),
      R => Reset
    );
\LOCKSTEP_Out_reg[1456]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1456),
      R => Reset
    );
\LOCKSTEP_Out_reg[1457]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1457),
      R => Reset
    );
\LOCKSTEP_Out_reg[1458]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1458),
      R => Reset
    );
\LOCKSTEP_Out_reg[1459]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1459),
      R => Reset
    );
\LOCKSTEP_Out_reg[145]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(145),
      R => Reset
    );
\LOCKSTEP_Out_reg[1460]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1460),
      R => Reset
    );
\LOCKSTEP_Out_reg[1461]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1461),
      R => Reset
    );
\LOCKSTEP_Out_reg[1462]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1462),
      R => Reset
    );
\LOCKSTEP_Out_reg[1463]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1463),
      R => Reset
    );
\LOCKSTEP_Out_reg[1464]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1464),
      R => Reset
    );
\LOCKSTEP_Out_reg[1465]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1465),
      R => Reset
    );
\LOCKSTEP_Out_reg[1466]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1466),
      R => Reset
    );
\LOCKSTEP_Out_reg[1467]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1467),
      R => Reset
    );
\LOCKSTEP_Out_reg[1468]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1468),
      R => Reset
    );
\LOCKSTEP_Out_reg[1469]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1469),
      R => Reset
    );
\LOCKSTEP_Out_reg[146]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(146),
      R => Reset
    );
\LOCKSTEP_Out_reg[1470]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1470),
      R => Reset
    );
\LOCKSTEP_Out_reg[1471]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1471),
      R => Reset
    );
\LOCKSTEP_Out_reg[1472]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1472),
      R => Reset
    );
\LOCKSTEP_Out_reg[1473]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1473),
      R => Reset
    );
\LOCKSTEP_Out_reg[1474]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1474),
      R => Reset
    );
\LOCKSTEP_Out_reg[1475]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1475),
      R => Reset
    );
\LOCKSTEP_Out_reg[1476]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1476),
      R => Reset
    );
\LOCKSTEP_Out_reg[1477]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1477),
      R => Reset
    );
\LOCKSTEP_Out_reg[1478]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1478),
      R => Reset
    );
\LOCKSTEP_Out_reg[1479]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1479),
      R => Reset
    );
\LOCKSTEP_Out_reg[147]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(147),
      R => Reset
    );
\LOCKSTEP_Out_reg[1480]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1480),
      R => Reset
    );
\LOCKSTEP_Out_reg[1481]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1481),
      R => Reset
    );
\LOCKSTEP_Out_reg[1482]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1482),
      R => Reset
    );
\LOCKSTEP_Out_reg[1483]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1483),
      R => Reset
    );
\LOCKSTEP_Out_reg[1484]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1484),
      R => Reset
    );
\LOCKSTEP_Out_reg[1485]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1485),
      R => Reset
    );
\LOCKSTEP_Out_reg[1486]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1486),
      R => Reset
    );
\LOCKSTEP_Out_reg[1487]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1487),
      R => Reset
    );
\LOCKSTEP_Out_reg[1488]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1488),
      R => Reset
    );
\LOCKSTEP_Out_reg[1489]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1489),
      R => Reset
    );
\LOCKSTEP_Out_reg[148]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(148),
      R => Reset
    );
\LOCKSTEP_Out_reg[1490]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1490),
      R => Reset
    );
\LOCKSTEP_Out_reg[1491]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1491),
      R => Reset
    );
\LOCKSTEP_Out_reg[1492]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1492),
      R => Reset
    );
\LOCKSTEP_Out_reg[1493]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1493),
      R => Reset
    );
\LOCKSTEP_Out_reg[1494]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1494),
      R => Reset
    );
\LOCKSTEP_Out_reg[1495]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1495),
      R => Reset
    );
\LOCKSTEP_Out_reg[1496]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1496),
      R => Reset
    );
\LOCKSTEP_Out_reg[1497]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1497),
      R => Reset
    );
\LOCKSTEP_Out_reg[1498]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1498),
      R => Reset
    );
\LOCKSTEP_Out_reg[1499]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1499),
      R => Reset
    );
\LOCKSTEP_Out_reg[149]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(149),
      R => Reset
    );
\LOCKSTEP_Out_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(10),
      Q => LOCKSTEP_Out(14),
      R => Reset
    );
\LOCKSTEP_Out_reg[1500]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1500),
      R => Reset
    );
\LOCKSTEP_Out_reg[1501]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1501),
      R => Reset
    );
\LOCKSTEP_Out_reg[1502]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1502),
      R => Reset
    );
\LOCKSTEP_Out_reg[1503]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1503),
      R => Reset
    );
\LOCKSTEP_Out_reg[1504]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1504),
      R => Reset
    );
\LOCKSTEP_Out_reg[1505]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1505),
      R => Reset
    );
\LOCKSTEP_Out_reg[1506]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1506),
      R => Reset
    );
\LOCKSTEP_Out_reg[1507]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1507),
      R => Reset
    );
\LOCKSTEP_Out_reg[1508]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1508),
      R => Reset
    );
\LOCKSTEP_Out_reg[1509]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1509),
      R => Reset
    );
\LOCKSTEP_Out_reg[150]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(150),
      R => Reset
    );
\LOCKSTEP_Out_reg[1510]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1510),
      R => Reset
    );
\LOCKSTEP_Out_reg[1511]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1511),
      R => Reset
    );
\LOCKSTEP_Out_reg[1512]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1512),
      R => Reset
    );
\LOCKSTEP_Out_reg[1513]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1513),
      R => Reset
    );
\LOCKSTEP_Out_reg[1514]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1514),
      R => Reset
    );
\LOCKSTEP_Out_reg[1515]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1515),
      R => Reset
    );
\LOCKSTEP_Out_reg[1516]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1516),
      R => Reset
    );
\LOCKSTEP_Out_reg[1517]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1517),
      R => Reset
    );
\LOCKSTEP_Out_reg[1518]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1518),
      R => Reset
    );
\LOCKSTEP_Out_reg[1519]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1519),
      R => Reset
    );
\LOCKSTEP_Out_reg[151]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(151),
      R => Reset
    );
\LOCKSTEP_Out_reg[1520]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1520),
      R => Reset
    );
\LOCKSTEP_Out_reg[1521]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1521),
      R => Reset
    );
\LOCKSTEP_Out_reg[1522]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1522),
      R => Reset
    );
\LOCKSTEP_Out_reg[1523]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1523),
      R => Reset
    );
\LOCKSTEP_Out_reg[1524]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1524),
      R => Reset
    );
\LOCKSTEP_Out_reg[1525]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1525),
      R => Reset
    );
\LOCKSTEP_Out_reg[1526]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1526),
      R => Reset
    );
\LOCKSTEP_Out_reg[1527]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1527),
      R => Reset
    );
\LOCKSTEP_Out_reg[1528]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1528),
      R => Reset
    );
\LOCKSTEP_Out_reg[1529]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1529),
      R => Reset
    );
\LOCKSTEP_Out_reg[152]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(152),
      R => Reset
    );
\LOCKSTEP_Out_reg[1530]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1530),
      R => Reset
    );
\LOCKSTEP_Out_reg[1531]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1531),
      R => Reset
    );
\LOCKSTEP_Out_reg[1532]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1532),
      R => Reset
    );
\LOCKSTEP_Out_reg[1533]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1533),
      R => Reset
    );
\LOCKSTEP_Out_reg[1534]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1534),
      R => Reset
    );
\LOCKSTEP_Out_reg[1535]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1535),
      R => Reset
    );
\LOCKSTEP_Out_reg[1536]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1536),
      R => Reset
    );
\LOCKSTEP_Out_reg[1537]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1537),
      R => Reset
    );
\LOCKSTEP_Out_reg[1538]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1538),
      R => Reset
    );
\LOCKSTEP_Out_reg[1539]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1539),
      R => Reset
    );
\LOCKSTEP_Out_reg[153]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(153),
      R => Reset
    );
\LOCKSTEP_Out_reg[1540]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1540),
      R => Reset
    );
\LOCKSTEP_Out_reg[1541]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1541),
      R => Reset
    );
\LOCKSTEP_Out_reg[1542]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1542),
      R => Reset
    );
\LOCKSTEP_Out_reg[1543]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1543),
      R => Reset
    );
\LOCKSTEP_Out_reg[1544]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1544),
      R => Reset
    );
\LOCKSTEP_Out_reg[1545]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1545),
      R => Reset
    );
\LOCKSTEP_Out_reg[1546]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1546),
      R => Reset
    );
\LOCKSTEP_Out_reg[1547]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1547),
      R => Reset
    );
\LOCKSTEP_Out_reg[1548]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1548),
      R => Reset
    );
\LOCKSTEP_Out_reg[1549]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1549),
      R => Reset
    );
\LOCKSTEP_Out_reg[154]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(154),
      R => Reset
    );
\LOCKSTEP_Out_reg[1550]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1550),
      R => Reset
    );
\LOCKSTEP_Out_reg[1551]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1551),
      R => Reset
    );
\LOCKSTEP_Out_reg[1552]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1552),
      R => Reset
    );
\LOCKSTEP_Out_reg[1553]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1553),
      R => Reset
    );
\LOCKSTEP_Out_reg[1554]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1554),
      R => Reset
    );
\LOCKSTEP_Out_reg[1555]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1555),
      R => Reset
    );
\LOCKSTEP_Out_reg[1556]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1556),
      R => Reset
    );
\LOCKSTEP_Out_reg[1557]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1557),
      R => Reset
    );
\LOCKSTEP_Out_reg[1558]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1558),
      R => Reset
    );
\LOCKSTEP_Out_reg[1559]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1559),
      R => Reset
    );
\LOCKSTEP_Out_reg[155]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(155),
      R => Reset
    );
\LOCKSTEP_Out_reg[1560]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1560),
      R => Reset
    );
\LOCKSTEP_Out_reg[1561]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1561),
      R => Reset
    );
\LOCKSTEP_Out_reg[1562]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1562),
      R => Reset
    );
\LOCKSTEP_Out_reg[1563]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1563),
      R => Reset
    );
\LOCKSTEP_Out_reg[1564]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1564),
      R => Reset
    );
\LOCKSTEP_Out_reg[1565]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1565),
      R => Reset
    );
\LOCKSTEP_Out_reg[1566]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1566),
      R => Reset
    );
\LOCKSTEP_Out_reg[1567]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1567),
      R => Reset
    );
\LOCKSTEP_Out_reg[1568]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1568),
      R => Reset
    );
\LOCKSTEP_Out_reg[1569]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1569),
      R => Reset
    );
\LOCKSTEP_Out_reg[156]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(156),
      R => Reset
    );
\LOCKSTEP_Out_reg[1570]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1570),
      R => Reset
    );
\LOCKSTEP_Out_reg[1571]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1571),
      R => Reset
    );
\LOCKSTEP_Out_reg[1572]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1572),
      R => Reset
    );
\LOCKSTEP_Out_reg[1573]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1573),
      R => Reset
    );
\LOCKSTEP_Out_reg[1574]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1574),
      R => Reset
    );
\LOCKSTEP_Out_reg[1575]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1575),
      R => Reset
    );
\LOCKSTEP_Out_reg[1576]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1576),
      R => Reset
    );
\LOCKSTEP_Out_reg[1577]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1577),
      R => Reset
    );
\LOCKSTEP_Out_reg[1578]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1578),
      R => Reset
    );
\LOCKSTEP_Out_reg[1579]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1579),
      R => Reset
    );
\LOCKSTEP_Out_reg[157]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(157),
      R => Reset
    );
\LOCKSTEP_Out_reg[1580]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1580),
      R => Reset
    );
\LOCKSTEP_Out_reg[1581]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1581),
      R => Reset
    );
\LOCKSTEP_Out_reg[1582]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1582),
      R => Reset
    );
\LOCKSTEP_Out_reg[1583]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1583),
      R => Reset
    );
\LOCKSTEP_Out_reg[1584]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1584),
      R => Reset
    );
\LOCKSTEP_Out_reg[1585]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1585),
      R => Reset
    );
\LOCKSTEP_Out_reg[1586]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1586),
      R => Reset
    );
\LOCKSTEP_Out_reg[1587]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1587),
      R => Reset
    );
\LOCKSTEP_Out_reg[1588]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1588),
      R => Reset
    );
\LOCKSTEP_Out_reg[1589]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1589),
      R => Reset
    );
\LOCKSTEP_Out_reg[158]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(158),
      R => Reset
    );
\LOCKSTEP_Out_reg[1590]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1590),
      R => Reset
    );
\LOCKSTEP_Out_reg[1591]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1591),
      R => Reset
    );
\LOCKSTEP_Out_reg[1592]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1592),
      R => Reset
    );
\LOCKSTEP_Out_reg[1593]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1593),
      R => Reset
    );
\LOCKSTEP_Out_reg[1594]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1594),
      R => Reset
    );
\LOCKSTEP_Out_reg[1595]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1595),
      R => Reset
    );
\LOCKSTEP_Out_reg[1596]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1596),
      R => Reset
    );
\LOCKSTEP_Out_reg[1597]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1597),
      R => Reset
    );
\LOCKSTEP_Out_reg[1598]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1598),
      R => Reset
    );
\LOCKSTEP_Out_reg[1599]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1599),
      R => Reset
    );
\LOCKSTEP_Out_reg[159]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(159),
      R => Reset
    );
\LOCKSTEP_Out_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(11),
      Q => LOCKSTEP_Out(15),
      R => Reset
    );
\LOCKSTEP_Out_reg[1600]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1600),
      R => Reset
    );
\LOCKSTEP_Out_reg[1601]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1601),
      R => Reset
    );
\LOCKSTEP_Out_reg[1602]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1602),
      R => Reset
    );
\LOCKSTEP_Out_reg[1603]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1603),
      R => Reset
    );
\LOCKSTEP_Out_reg[1604]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1604),
      R => Reset
    );
\LOCKSTEP_Out_reg[1605]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1605),
      R => Reset
    );
\LOCKSTEP_Out_reg[1606]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1606),
      R => Reset
    );
\LOCKSTEP_Out_reg[1607]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1607),
      R => Reset
    );
\LOCKSTEP_Out_reg[1608]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1608),
      R => Reset
    );
\LOCKSTEP_Out_reg[1609]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1609),
      R => Reset
    );
\LOCKSTEP_Out_reg[160]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(160),
      R => Reset
    );
\LOCKSTEP_Out_reg[1610]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1610),
      R => Reset
    );
\LOCKSTEP_Out_reg[1611]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1611),
      R => Reset
    );
\LOCKSTEP_Out_reg[1612]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1612),
      R => Reset
    );
\LOCKSTEP_Out_reg[1613]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1613),
      R => Reset
    );
\LOCKSTEP_Out_reg[1614]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1614),
      R => Reset
    );
\LOCKSTEP_Out_reg[1615]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1615),
      R => Reset
    );
\LOCKSTEP_Out_reg[1616]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1616),
      R => Reset
    );
\LOCKSTEP_Out_reg[1617]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1617),
      R => Reset
    );
\LOCKSTEP_Out_reg[1618]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1618),
      R => Reset
    );
\LOCKSTEP_Out_reg[1619]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1619),
      R => Reset
    );
\LOCKSTEP_Out_reg[161]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(161),
      R => Reset
    );
\LOCKSTEP_Out_reg[1620]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1620),
      R => Reset
    );
\LOCKSTEP_Out_reg[1621]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1621),
      R => Reset
    );
\LOCKSTEP_Out_reg[1622]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1622),
      R => Reset
    );
\LOCKSTEP_Out_reg[1623]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1623),
      R => Reset
    );
\LOCKSTEP_Out_reg[1624]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1624),
      R => Reset
    );
\LOCKSTEP_Out_reg[1625]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1625),
      R => Reset
    );
\LOCKSTEP_Out_reg[1626]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1626),
      R => Reset
    );
\LOCKSTEP_Out_reg[1627]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1627),
      R => Reset
    );
\LOCKSTEP_Out_reg[1628]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1628),
      R => Reset
    );
\LOCKSTEP_Out_reg[1629]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1629),
      R => Reset
    );
\LOCKSTEP_Out_reg[162]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(162),
      R => Reset
    );
\LOCKSTEP_Out_reg[1630]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1630),
      R => Reset
    );
\LOCKSTEP_Out_reg[1631]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1631),
      R => Reset
    );
\LOCKSTEP_Out_reg[1632]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1632),
      R => Reset
    );
\LOCKSTEP_Out_reg[1633]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1633),
      R => Reset
    );
\LOCKSTEP_Out_reg[1634]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1634),
      R => Reset
    );
\LOCKSTEP_Out_reg[1635]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1635),
      R => Reset
    );
\LOCKSTEP_Out_reg[1636]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1636),
      R => Reset
    );
\LOCKSTEP_Out_reg[1637]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1637),
      R => Reset
    );
\LOCKSTEP_Out_reg[1638]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1638),
      R => Reset
    );
\LOCKSTEP_Out_reg[1639]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1639),
      R => Reset
    );
\LOCKSTEP_Out_reg[163]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(163),
      R => Reset
    );
\LOCKSTEP_Out_reg[1640]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1640),
      R => Reset
    );
\LOCKSTEP_Out_reg[1641]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1641),
      R => Reset
    );
\LOCKSTEP_Out_reg[1642]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1642),
      R => Reset
    );
\LOCKSTEP_Out_reg[1643]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1643),
      R => Reset
    );
\LOCKSTEP_Out_reg[1644]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1644),
      R => Reset
    );
\LOCKSTEP_Out_reg[1645]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1645),
      R => Reset
    );
\LOCKSTEP_Out_reg[1646]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1646),
      R => Reset
    );
\LOCKSTEP_Out_reg[1647]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1647),
      R => Reset
    );
\LOCKSTEP_Out_reg[1648]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1648),
      R => Reset
    );
\LOCKSTEP_Out_reg[1649]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1649),
      R => Reset
    );
\LOCKSTEP_Out_reg[164]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(164),
      R => Reset
    );
\LOCKSTEP_Out_reg[1650]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1650),
      R => Reset
    );
\LOCKSTEP_Out_reg[1651]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1651),
      R => Reset
    );
\LOCKSTEP_Out_reg[1652]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1652),
      R => Reset
    );
\LOCKSTEP_Out_reg[1653]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1653),
      R => Reset
    );
\LOCKSTEP_Out_reg[1654]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1654),
      R => Reset
    );
\LOCKSTEP_Out_reg[1655]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1655),
      R => Reset
    );
\LOCKSTEP_Out_reg[1656]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1656),
      R => Reset
    );
\LOCKSTEP_Out_reg[1657]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1657),
      R => Reset
    );
\LOCKSTEP_Out_reg[1658]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1658),
      R => Reset
    );
\LOCKSTEP_Out_reg[1659]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1659),
      R => Reset
    );
\LOCKSTEP_Out_reg[165]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(165),
      R => Reset
    );
\LOCKSTEP_Out_reg[1660]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1660),
      R => Reset
    );
\LOCKSTEP_Out_reg[1661]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1661),
      R => Reset
    );
\LOCKSTEP_Out_reg[1662]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1662),
      R => Reset
    );
\LOCKSTEP_Out_reg[1663]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1663),
      R => Reset
    );
\LOCKSTEP_Out_reg[1664]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1664),
      R => Reset
    );
\LOCKSTEP_Out_reg[1665]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1665),
      R => Reset
    );
\LOCKSTEP_Out_reg[1666]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1666),
      R => Reset
    );
\LOCKSTEP_Out_reg[1667]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1667),
      R => Reset
    );
\LOCKSTEP_Out_reg[1668]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1668),
      R => Reset
    );
\LOCKSTEP_Out_reg[1669]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1669),
      R => Reset
    );
\LOCKSTEP_Out_reg[166]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(166),
      R => Reset
    );
\LOCKSTEP_Out_reg[1670]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1670),
      R => Reset
    );
\LOCKSTEP_Out_reg[1671]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1671),
      R => Reset
    );
\LOCKSTEP_Out_reg[1672]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1672),
      R => Reset
    );
\LOCKSTEP_Out_reg[1673]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1673),
      R => Reset
    );
\LOCKSTEP_Out_reg[1674]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1674),
      R => Reset
    );
\LOCKSTEP_Out_reg[1675]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1675),
      R => Reset
    );
\LOCKSTEP_Out_reg[1676]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1676),
      R => Reset
    );
\LOCKSTEP_Out_reg[1677]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1677),
      R => Reset
    );
\LOCKSTEP_Out_reg[1678]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1678),
      R => Reset
    );
\LOCKSTEP_Out_reg[1679]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1679),
      R => Reset
    );
\LOCKSTEP_Out_reg[167]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(167),
      R => Reset
    );
\LOCKSTEP_Out_reg[1680]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1680),
      R => Reset
    );
\LOCKSTEP_Out_reg[1681]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1681),
      R => Reset
    );
\LOCKSTEP_Out_reg[1682]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1682),
      R => Reset
    );
\LOCKSTEP_Out_reg[1683]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1683),
      R => Reset
    );
\LOCKSTEP_Out_reg[1684]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1684),
      R => Reset
    );
\LOCKSTEP_Out_reg[1685]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1685),
      R => Reset
    );
\LOCKSTEP_Out_reg[1686]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1686),
      R => Reset
    );
\LOCKSTEP_Out_reg[1687]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1687),
      R => Reset
    );
\LOCKSTEP_Out_reg[1688]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1688),
      R => Reset
    );
\LOCKSTEP_Out_reg[1689]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1689),
      R => Reset
    );
\LOCKSTEP_Out_reg[168]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(168),
      R => Reset
    );
\LOCKSTEP_Out_reg[1690]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1690),
      R => Reset
    );
\LOCKSTEP_Out_reg[1691]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1691),
      R => Reset
    );
\LOCKSTEP_Out_reg[1692]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1692),
      R => Reset
    );
\LOCKSTEP_Out_reg[1693]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1693),
      R => Reset
    );
\LOCKSTEP_Out_reg[1694]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1694),
      R => Reset
    );
\LOCKSTEP_Out_reg[1695]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1695),
      R => Reset
    );
\LOCKSTEP_Out_reg[1696]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1696),
      R => Reset
    );
\LOCKSTEP_Out_reg[1697]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1697),
      R => Reset
    );
\LOCKSTEP_Out_reg[1698]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1698),
      R => Reset
    );
\LOCKSTEP_Out_reg[1699]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1699),
      R => Reset
    );
\LOCKSTEP_Out_reg[169]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(169),
      R => Reset
    );
\LOCKSTEP_Out_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(12),
      Q => LOCKSTEP_Out(16),
      R => Reset
    );
\LOCKSTEP_Out_reg[1700]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1700),
      R => Reset
    );
\LOCKSTEP_Out_reg[1701]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1701),
      R => Reset
    );
\LOCKSTEP_Out_reg[1702]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1702),
      R => Reset
    );
\LOCKSTEP_Out_reg[1703]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1703),
      R => Reset
    );
\LOCKSTEP_Out_reg[1704]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1704),
      R => Reset
    );
\LOCKSTEP_Out_reg[1705]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1705),
      R => Reset
    );
\LOCKSTEP_Out_reg[1706]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1706),
      R => Reset
    );
\LOCKSTEP_Out_reg[1707]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1707),
      R => Reset
    );
\LOCKSTEP_Out_reg[1708]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1708),
      R => Reset
    );
\LOCKSTEP_Out_reg[1709]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1709),
      R => Reset
    );
\LOCKSTEP_Out_reg[170]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(170),
      R => Reset
    );
\LOCKSTEP_Out_reg[1710]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1710),
      R => Reset
    );
\LOCKSTEP_Out_reg[1711]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1711),
      R => Reset
    );
\LOCKSTEP_Out_reg[1712]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1712),
      R => Reset
    );
\LOCKSTEP_Out_reg[1713]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1713),
      R => Reset
    );
\LOCKSTEP_Out_reg[1714]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1714),
      R => Reset
    );
\LOCKSTEP_Out_reg[1715]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1715),
      R => Reset
    );
\LOCKSTEP_Out_reg[1716]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1716),
      R => Reset
    );
\LOCKSTEP_Out_reg[1717]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1717),
      R => Reset
    );
\LOCKSTEP_Out_reg[1718]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1718),
      R => Reset
    );
\LOCKSTEP_Out_reg[1719]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1719),
      R => Reset
    );
\LOCKSTEP_Out_reg[171]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(171),
      R => Reset
    );
\LOCKSTEP_Out_reg[1720]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1720),
      R => Reset
    );
\LOCKSTEP_Out_reg[1721]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1721),
      R => Reset
    );
\LOCKSTEP_Out_reg[1722]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1722),
      R => Reset
    );
\LOCKSTEP_Out_reg[1723]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1723),
      R => Reset
    );
\LOCKSTEP_Out_reg[1724]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1724),
      R => Reset
    );
\LOCKSTEP_Out_reg[1725]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1725),
      R => Reset
    );
\LOCKSTEP_Out_reg[1726]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1726),
      R => Reset
    );
\LOCKSTEP_Out_reg[1727]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1727),
      R => Reset
    );
\LOCKSTEP_Out_reg[1728]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1728),
      R => Reset
    );
\LOCKSTEP_Out_reg[1729]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1729),
      R => Reset
    );
\LOCKSTEP_Out_reg[172]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(172),
      R => Reset
    );
\LOCKSTEP_Out_reg[1730]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1730),
      R => Reset
    );
\LOCKSTEP_Out_reg[1731]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1731),
      R => Reset
    );
\LOCKSTEP_Out_reg[1732]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1732),
      R => Reset
    );
\LOCKSTEP_Out_reg[1733]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1733),
      R => Reset
    );
\LOCKSTEP_Out_reg[1734]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1734),
      R => Reset
    );
\LOCKSTEP_Out_reg[1735]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1735),
      R => Reset
    );
\LOCKSTEP_Out_reg[1736]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1736),
      R => Reset
    );
\LOCKSTEP_Out_reg[1737]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1737),
      R => Reset
    );
\LOCKSTEP_Out_reg[1738]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1738),
      R => Reset
    );
\LOCKSTEP_Out_reg[1739]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1739),
      R => Reset
    );
\LOCKSTEP_Out_reg[173]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(173),
      R => Reset
    );
\LOCKSTEP_Out_reg[1740]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1740),
      R => Reset
    );
\LOCKSTEP_Out_reg[1741]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1741),
      R => Reset
    );
\LOCKSTEP_Out_reg[1742]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1742),
      R => Reset
    );
\LOCKSTEP_Out_reg[1743]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1743),
      R => Reset
    );
\LOCKSTEP_Out_reg[1744]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1744),
      R => Reset
    );
\LOCKSTEP_Out_reg[1745]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1745),
      R => Reset
    );
\LOCKSTEP_Out_reg[1746]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1746),
      R => Reset
    );
\LOCKSTEP_Out_reg[1747]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1747),
      R => Reset
    );
\LOCKSTEP_Out_reg[1748]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1748),
      R => Reset
    );
\LOCKSTEP_Out_reg[1749]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1749),
      R => Reset
    );
\LOCKSTEP_Out_reg[174]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(174),
      R => Reset
    );
\LOCKSTEP_Out_reg[1750]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1750),
      R => Reset
    );
\LOCKSTEP_Out_reg[1751]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1751),
      R => Reset
    );
\LOCKSTEP_Out_reg[1752]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1752),
      R => Reset
    );
\LOCKSTEP_Out_reg[1753]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1753),
      R => Reset
    );
\LOCKSTEP_Out_reg[1754]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1754),
      R => Reset
    );
\LOCKSTEP_Out_reg[1755]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1755),
      R => Reset
    );
\LOCKSTEP_Out_reg[1756]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1756),
      R => Reset
    );
\LOCKSTEP_Out_reg[1757]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1757),
      R => Reset
    );
\LOCKSTEP_Out_reg[1758]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1758),
      R => Reset
    );
\LOCKSTEP_Out_reg[1759]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1759),
      R => Reset
    );
\LOCKSTEP_Out_reg[175]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(175),
      R => Reset
    );
\LOCKSTEP_Out_reg[1760]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1760),
      R => Reset
    );
\LOCKSTEP_Out_reg[1761]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1761),
      R => Reset
    );
\LOCKSTEP_Out_reg[1762]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1762),
      R => Reset
    );
\LOCKSTEP_Out_reg[1763]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1763),
      R => Reset
    );
\LOCKSTEP_Out_reg[1764]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1764),
      R => Reset
    );
\LOCKSTEP_Out_reg[1765]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1765),
      R => Reset
    );
\LOCKSTEP_Out_reg[1766]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1766),
      R => Reset
    );
\LOCKSTEP_Out_reg[1767]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1767),
      R => Reset
    );
\LOCKSTEP_Out_reg[1768]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1768),
      R => Reset
    );
\LOCKSTEP_Out_reg[1769]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1769),
      R => Reset
    );
\LOCKSTEP_Out_reg[176]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(176),
      R => Reset
    );
\LOCKSTEP_Out_reg[1770]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1770),
      R => Reset
    );
\LOCKSTEP_Out_reg[1771]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1771),
      R => Reset
    );
\LOCKSTEP_Out_reg[1772]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1772),
      R => Reset
    );
\LOCKSTEP_Out_reg[1773]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1773),
      R => Reset
    );
\LOCKSTEP_Out_reg[1774]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1774),
      R => Reset
    );
\LOCKSTEP_Out_reg[1775]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1775),
      R => Reset
    );
\LOCKSTEP_Out_reg[1776]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1776),
      R => Reset
    );
\LOCKSTEP_Out_reg[1777]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1777),
      R => Reset
    );
\LOCKSTEP_Out_reg[1778]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1778),
      R => Reset
    );
\LOCKSTEP_Out_reg[1779]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1779),
      R => Reset
    );
\LOCKSTEP_Out_reg[177]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(177),
      R => Reset
    );
\LOCKSTEP_Out_reg[1780]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1780),
      R => Reset
    );
\LOCKSTEP_Out_reg[1781]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1781),
      R => Reset
    );
\LOCKSTEP_Out_reg[1782]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1782),
      R => Reset
    );
\LOCKSTEP_Out_reg[1783]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1783),
      R => Reset
    );
\LOCKSTEP_Out_reg[1784]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1784),
      R => Reset
    );
\LOCKSTEP_Out_reg[1785]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1785),
      R => Reset
    );
\LOCKSTEP_Out_reg[1786]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1786),
      R => Reset
    );
\LOCKSTEP_Out_reg[1787]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1787),
      R => Reset
    );
\LOCKSTEP_Out_reg[1788]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1788),
      R => Reset
    );
\LOCKSTEP_Out_reg[1789]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1789),
      R => Reset
    );
\LOCKSTEP_Out_reg[178]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(178),
      R => Reset
    );
\LOCKSTEP_Out_reg[1790]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1790),
      R => Reset
    );
\LOCKSTEP_Out_reg[1791]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1791),
      R => Reset
    );
\LOCKSTEP_Out_reg[1792]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1792),
      R => Reset
    );
\LOCKSTEP_Out_reg[1793]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1793),
      R => Reset
    );
\LOCKSTEP_Out_reg[1794]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1794),
      R => Reset
    );
\LOCKSTEP_Out_reg[1795]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1795),
      R => Reset
    );
\LOCKSTEP_Out_reg[1796]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1796),
      R => Reset
    );
\LOCKSTEP_Out_reg[1797]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1797),
      R => Reset
    );
\LOCKSTEP_Out_reg[1798]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1798),
      R => Reset
    );
\LOCKSTEP_Out_reg[1799]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1799),
      R => Reset
    );
\LOCKSTEP_Out_reg[179]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(179),
      R => Reset
    );
\LOCKSTEP_Out_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(13),
      Q => LOCKSTEP_Out(17),
      R => Reset
    );
\LOCKSTEP_Out_reg[1800]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1800),
      R => Reset
    );
\LOCKSTEP_Out_reg[1801]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1801),
      R => Reset
    );
\LOCKSTEP_Out_reg[1802]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1802),
      R => Reset
    );
\LOCKSTEP_Out_reg[1803]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1803),
      R => Reset
    );
\LOCKSTEP_Out_reg[1804]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1804),
      R => Reset
    );
\LOCKSTEP_Out_reg[1805]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1805),
      R => Reset
    );
\LOCKSTEP_Out_reg[1806]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1806),
      R => Reset
    );
\LOCKSTEP_Out_reg[1807]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1807),
      R => Reset
    );
\LOCKSTEP_Out_reg[1808]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1808),
      R => Reset
    );
\LOCKSTEP_Out_reg[1809]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1809),
      R => Reset
    );
\LOCKSTEP_Out_reg[180]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(180),
      R => Reset
    );
\LOCKSTEP_Out_reg[1810]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1810),
      R => Reset
    );
\LOCKSTEP_Out_reg[1811]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1811),
      R => Reset
    );
\LOCKSTEP_Out_reg[1812]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1812),
      R => Reset
    );
\LOCKSTEP_Out_reg[1813]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1813),
      R => Reset
    );
\LOCKSTEP_Out_reg[1814]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1814),
      R => Reset
    );
\LOCKSTEP_Out_reg[1815]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1815),
      R => Reset
    );
\LOCKSTEP_Out_reg[1816]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1816),
      R => Reset
    );
\LOCKSTEP_Out_reg[1817]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1817),
      R => Reset
    );
\LOCKSTEP_Out_reg[1818]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1818),
      R => Reset
    );
\LOCKSTEP_Out_reg[1819]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1819),
      R => Reset
    );
\LOCKSTEP_Out_reg[181]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(181),
      R => Reset
    );
\LOCKSTEP_Out_reg[1820]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1820),
      R => Reset
    );
\LOCKSTEP_Out_reg[1821]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1821),
      R => Reset
    );
\LOCKSTEP_Out_reg[1822]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1822),
      R => Reset
    );
\LOCKSTEP_Out_reg[1823]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1823),
      R => Reset
    );
\LOCKSTEP_Out_reg[1824]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1824),
      R => Reset
    );
\LOCKSTEP_Out_reg[1825]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1825),
      R => Reset
    );
\LOCKSTEP_Out_reg[1826]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1826),
      R => Reset
    );
\LOCKSTEP_Out_reg[1827]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1827),
      R => Reset
    );
\LOCKSTEP_Out_reg[1828]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1828),
      R => Reset
    );
\LOCKSTEP_Out_reg[1829]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1829),
      R => Reset
    );
\LOCKSTEP_Out_reg[182]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(182),
      R => Reset
    );
\LOCKSTEP_Out_reg[1830]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1830),
      R => Reset
    );
\LOCKSTEP_Out_reg[1831]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1831),
      R => Reset
    );
\LOCKSTEP_Out_reg[1832]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1832),
      R => Reset
    );
\LOCKSTEP_Out_reg[1833]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1833),
      R => Reset
    );
\LOCKSTEP_Out_reg[1834]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1834),
      R => Reset
    );
\LOCKSTEP_Out_reg[1835]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1835),
      R => Reset
    );
\LOCKSTEP_Out_reg[1836]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1836),
      R => Reset
    );
\LOCKSTEP_Out_reg[1837]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1837),
      R => Reset
    );
\LOCKSTEP_Out_reg[1838]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1838),
      R => Reset
    );
\LOCKSTEP_Out_reg[1839]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1839),
      R => Reset
    );
\LOCKSTEP_Out_reg[183]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(183),
      R => Reset
    );
\LOCKSTEP_Out_reg[1840]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1840),
      R => Reset
    );
\LOCKSTEP_Out_reg[1841]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1841),
      R => Reset
    );
\LOCKSTEP_Out_reg[1842]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1842),
      R => Reset
    );
\LOCKSTEP_Out_reg[1843]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1843),
      R => Reset
    );
\LOCKSTEP_Out_reg[1844]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1844),
      R => Reset
    );
\LOCKSTEP_Out_reg[1845]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1845),
      R => Reset
    );
\LOCKSTEP_Out_reg[1846]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1846),
      R => Reset
    );
\LOCKSTEP_Out_reg[1847]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1847),
      R => Reset
    );
\LOCKSTEP_Out_reg[1848]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1848),
      R => Reset
    );
\LOCKSTEP_Out_reg[1849]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1849),
      R => Reset
    );
\LOCKSTEP_Out_reg[184]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(184),
      R => Reset
    );
\LOCKSTEP_Out_reg[1850]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1850),
      R => Reset
    );
\LOCKSTEP_Out_reg[1851]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1851),
      R => Reset
    );
\LOCKSTEP_Out_reg[1852]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1852),
      R => Reset
    );
\LOCKSTEP_Out_reg[1853]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1853),
      R => Reset
    );
\LOCKSTEP_Out_reg[1854]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1854),
      R => Reset
    );
\LOCKSTEP_Out_reg[1855]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1855),
      R => Reset
    );
\LOCKSTEP_Out_reg[1856]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1856),
      R => Reset
    );
\LOCKSTEP_Out_reg[1857]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1857),
      R => Reset
    );
\LOCKSTEP_Out_reg[1858]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1858),
      R => Reset
    );
\LOCKSTEP_Out_reg[1859]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1859),
      R => Reset
    );
\LOCKSTEP_Out_reg[185]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(185),
      R => Reset
    );
\LOCKSTEP_Out_reg[1860]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1860),
      R => Reset
    );
\LOCKSTEP_Out_reg[1861]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1861),
      R => Reset
    );
\LOCKSTEP_Out_reg[1862]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1862),
      R => Reset
    );
\LOCKSTEP_Out_reg[1863]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1863),
      R => Reset
    );
\LOCKSTEP_Out_reg[1864]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1864),
      R => Reset
    );
\LOCKSTEP_Out_reg[1865]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1865),
      R => Reset
    );
\LOCKSTEP_Out_reg[1866]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1866),
      R => Reset
    );
\LOCKSTEP_Out_reg[1867]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1867),
      R => Reset
    );
\LOCKSTEP_Out_reg[1868]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1868),
      R => Reset
    );
\LOCKSTEP_Out_reg[1869]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1869),
      R => Reset
    );
\LOCKSTEP_Out_reg[186]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(186),
      R => Reset
    );
\LOCKSTEP_Out_reg[1870]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1870),
      R => Reset
    );
\LOCKSTEP_Out_reg[1871]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1871),
      R => Reset
    );
\LOCKSTEP_Out_reg[1872]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1872),
      R => Reset
    );
\LOCKSTEP_Out_reg[1873]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1873),
      R => Reset
    );
\LOCKSTEP_Out_reg[1874]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1874),
      R => Reset
    );
\LOCKSTEP_Out_reg[1875]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1875),
      R => Reset
    );
\LOCKSTEP_Out_reg[1876]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1876),
      R => Reset
    );
\LOCKSTEP_Out_reg[1877]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1877),
      R => Reset
    );
\LOCKSTEP_Out_reg[1878]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1878),
      R => Reset
    );
\LOCKSTEP_Out_reg[1879]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1879),
      R => Reset
    );
\LOCKSTEP_Out_reg[187]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(187),
      R => Reset
    );
\LOCKSTEP_Out_reg[1880]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1880),
      R => Reset
    );
\LOCKSTEP_Out_reg[1881]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1881),
      R => Reset
    );
\LOCKSTEP_Out_reg[1882]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1882),
      R => Reset
    );
\LOCKSTEP_Out_reg[1883]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1883),
      R => Reset
    );
\LOCKSTEP_Out_reg[1884]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1884),
      R => Reset
    );
\LOCKSTEP_Out_reg[1885]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1885),
      R => Reset
    );
\LOCKSTEP_Out_reg[1886]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1886),
      R => Reset
    );
\LOCKSTEP_Out_reg[1887]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1887),
      R => Reset
    );
\LOCKSTEP_Out_reg[1888]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1888),
      R => Reset
    );
\LOCKSTEP_Out_reg[1889]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1889),
      R => Reset
    );
\LOCKSTEP_Out_reg[188]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(188),
      R => Reset
    );
\LOCKSTEP_Out_reg[1890]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1890),
      R => Reset
    );
\LOCKSTEP_Out_reg[1891]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1891),
      R => Reset
    );
\LOCKSTEP_Out_reg[1892]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1892),
      R => Reset
    );
\LOCKSTEP_Out_reg[1893]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1893),
      R => Reset
    );
\LOCKSTEP_Out_reg[1894]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1894),
      R => Reset
    );
\LOCKSTEP_Out_reg[1895]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1895),
      R => Reset
    );
\LOCKSTEP_Out_reg[1896]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1896),
      R => Reset
    );
\LOCKSTEP_Out_reg[1897]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1897),
      R => Reset
    );
\LOCKSTEP_Out_reg[1898]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1898),
      R => Reset
    );
\LOCKSTEP_Out_reg[1899]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1899),
      R => Reset
    );
\LOCKSTEP_Out_reg[189]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(189),
      R => Reset
    );
\LOCKSTEP_Out_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(14),
      Q => LOCKSTEP_Out(18),
      R => Reset
    );
\LOCKSTEP_Out_reg[1900]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1900),
      R => Reset
    );
\LOCKSTEP_Out_reg[1901]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1901),
      R => Reset
    );
\LOCKSTEP_Out_reg[1902]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1902),
      R => Reset
    );
\LOCKSTEP_Out_reg[1903]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1903),
      R => Reset
    );
\LOCKSTEP_Out_reg[1904]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1904),
      R => Reset
    );
\LOCKSTEP_Out_reg[1905]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1905),
      R => Reset
    );
\LOCKSTEP_Out_reg[1906]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1906),
      R => Reset
    );
\LOCKSTEP_Out_reg[1907]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1907),
      R => Reset
    );
\LOCKSTEP_Out_reg[1908]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1908),
      R => Reset
    );
\LOCKSTEP_Out_reg[1909]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1909),
      R => Reset
    );
\LOCKSTEP_Out_reg[190]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(190),
      R => Reset
    );
\LOCKSTEP_Out_reg[1910]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1910),
      R => Reset
    );
\LOCKSTEP_Out_reg[1911]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1911),
      R => Reset
    );
\LOCKSTEP_Out_reg[1912]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1912),
      R => Reset
    );
\LOCKSTEP_Out_reg[1913]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1913),
      R => Reset
    );
\LOCKSTEP_Out_reg[1914]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1914),
      R => Reset
    );
\LOCKSTEP_Out_reg[1915]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1915),
      R => Reset
    );
\LOCKSTEP_Out_reg[1916]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1916),
      R => Reset
    );
\LOCKSTEP_Out_reg[1917]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1917),
      R => Reset
    );
\LOCKSTEP_Out_reg[1918]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1918),
      R => Reset
    );
\LOCKSTEP_Out_reg[1919]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1919),
      R => Reset
    );
\LOCKSTEP_Out_reg[191]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(191),
      R => Reset
    );
\LOCKSTEP_Out_reg[1920]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1920),
      R => Reset
    );
\LOCKSTEP_Out_reg[1921]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1921),
      R => Reset
    );
\LOCKSTEP_Out_reg[1922]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1922),
      R => Reset
    );
\LOCKSTEP_Out_reg[1923]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1923),
      R => Reset
    );
\LOCKSTEP_Out_reg[1924]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1924),
      R => Reset
    );
\LOCKSTEP_Out_reg[1925]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1925),
      R => Reset
    );
\LOCKSTEP_Out_reg[1926]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1926),
      R => Reset
    );
\LOCKSTEP_Out_reg[1927]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1927),
      R => Reset
    );
\LOCKSTEP_Out_reg[1928]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1928),
      R => Reset
    );
\LOCKSTEP_Out_reg[1929]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1929),
      R => Reset
    );
\LOCKSTEP_Out_reg[192]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(192),
      R => Reset
    );
\LOCKSTEP_Out_reg[1930]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1930),
      R => Reset
    );
\LOCKSTEP_Out_reg[1931]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1931),
      R => Reset
    );
\LOCKSTEP_Out_reg[1932]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1932),
      R => Reset
    );
\LOCKSTEP_Out_reg[1933]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1933),
      R => Reset
    );
\LOCKSTEP_Out_reg[1934]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1934),
      R => Reset
    );
\LOCKSTEP_Out_reg[1935]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1935),
      R => Reset
    );
\LOCKSTEP_Out_reg[1936]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1936),
      R => Reset
    );
\LOCKSTEP_Out_reg[1937]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1937),
      R => Reset
    );
\LOCKSTEP_Out_reg[1938]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1938),
      R => Reset
    );
\LOCKSTEP_Out_reg[1939]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1939),
      R => Reset
    );
\LOCKSTEP_Out_reg[193]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(193),
      R => Reset
    );
\LOCKSTEP_Out_reg[1940]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1940),
      R => Reset
    );
\LOCKSTEP_Out_reg[1941]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1941),
      R => Reset
    );
\LOCKSTEP_Out_reg[1942]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1942),
      R => Reset
    );
\LOCKSTEP_Out_reg[1943]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1943),
      R => Reset
    );
\LOCKSTEP_Out_reg[1944]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1944),
      R => Reset
    );
\LOCKSTEP_Out_reg[1945]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1945),
      R => Reset
    );
\LOCKSTEP_Out_reg[1946]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1946),
      R => Reset
    );
\LOCKSTEP_Out_reg[1947]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1947),
      R => Reset
    );
\LOCKSTEP_Out_reg[1948]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1948),
      R => Reset
    );
\LOCKSTEP_Out_reg[1949]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1949),
      R => Reset
    );
\LOCKSTEP_Out_reg[194]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(194),
      R => Reset
    );
\LOCKSTEP_Out_reg[1950]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1950),
      R => Reset
    );
\LOCKSTEP_Out_reg[1951]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1951),
      R => Reset
    );
\LOCKSTEP_Out_reg[1952]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1952),
      R => Reset
    );
\LOCKSTEP_Out_reg[1953]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1953),
      R => Reset
    );
\LOCKSTEP_Out_reg[1954]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1954),
      R => Reset
    );
\LOCKSTEP_Out_reg[1955]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1955),
      R => Reset
    );
\LOCKSTEP_Out_reg[1956]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1956),
      R => Reset
    );
\LOCKSTEP_Out_reg[1957]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1957),
      R => Reset
    );
\LOCKSTEP_Out_reg[1958]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1958),
      R => Reset
    );
\LOCKSTEP_Out_reg[1959]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1959),
      R => Reset
    );
\LOCKSTEP_Out_reg[195]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(195),
      R => Reset
    );
\LOCKSTEP_Out_reg[1960]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1960),
      R => Reset
    );
\LOCKSTEP_Out_reg[1961]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1961),
      R => Reset
    );
\LOCKSTEP_Out_reg[1962]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1962),
      R => Reset
    );
\LOCKSTEP_Out_reg[1963]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1963),
      R => Reset
    );
\LOCKSTEP_Out_reg[1964]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1964),
      R => Reset
    );
\LOCKSTEP_Out_reg[1965]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1965),
      R => Reset
    );
\LOCKSTEP_Out_reg[1966]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1966),
      R => Reset
    );
\LOCKSTEP_Out_reg[1967]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1967),
      R => Reset
    );
\LOCKSTEP_Out_reg[1968]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1968),
      R => Reset
    );
\LOCKSTEP_Out_reg[1969]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1969),
      R => Reset
    );
\LOCKSTEP_Out_reg[196]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(196),
      R => Reset
    );
\LOCKSTEP_Out_reg[1970]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1970),
      R => Reset
    );
\LOCKSTEP_Out_reg[1971]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1971),
      R => Reset
    );
\LOCKSTEP_Out_reg[1972]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1972),
      R => Reset
    );
\LOCKSTEP_Out_reg[1973]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1973),
      R => Reset
    );
\LOCKSTEP_Out_reg[1974]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1974),
      R => Reset
    );
\LOCKSTEP_Out_reg[1975]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1975),
      R => Reset
    );
\LOCKSTEP_Out_reg[1976]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1976),
      R => Reset
    );
\LOCKSTEP_Out_reg[1977]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1977),
      R => Reset
    );
\LOCKSTEP_Out_reg[1978]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1978),
      R => Reset
    );
\LOCKSTEP_Out_reg[1979]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1979),
      R => Reset
    );
\LOCKSTEP_Out_reg[197]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(197),
      R => Reset
    );
\LOCKSTEP_Out_reg[1980]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1980),
      R => Reset
    );
\LOCKSTEP_Out_reg[1981]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1981),
      R => Reset
    );
\LOCKSTEP_Out_reg[1982]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1982),
      R => Reset
    );
\LOCKSTEP_Out_reg[1983]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1983),
      R => Reset
    );
\LOCKSTEP_Out_reg[1984]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1984),
      R => Reset
    );
\LOCKSTEP_Out_reg[1985]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1985),
      R => Reset
    );
\LOCKSTEP_Out_reg[1986]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1986),
      R => Reset
    );
\LOCKSTEP_Out_reg[1987]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1987),
      R => Reset
    );
\LOCKSTEP_Out_reg[1988]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1988),
      R => Reset
    );
\LOCKSTEP_Out_reg[1989]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1989),
      R => Reset
    );
\LOCKSTEP_Out_reg[198]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(198),
      R => Reset
    );
\LOCKSTEP_Out_reg[1990]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1990),
      R => Reset
    );
\LOCKSTEP_Out_reg[1991]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1991),
      R => Reset
    );
\LOCKSTEP_Out_reg[1992]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1992),
      R => Reset
    );
\LOCKSTEP_Out_reg[1993]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1993),
      R => Reset
    );
\LOCKSTEP_Out_reg[1994]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1994),
      R => Reset
    );
\LOCKSTEP_Out_reg[1995]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1995),
      R => Reset
    );
\LOCKSTEP_Out_reg[1996]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1996),
      R => Reset
    );
\LOCKSTEP_Out_reg[1997]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1997),
      R => Reset
    );
\LOCKSTEP_Out_reg[1998]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1998),
      R => Reset
    );
\LOCKSTEP_Out_reg[1999]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1999),
      R => Reset
    );
\LOCKSTEP_Out_reg[199]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(199),
      R => Reset
    );
\LOCKSTEP_Out_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(15),
      Q => LOCKSTEP_Out(19),
      R => Reset
    );
\LOCKSTEP_Out_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(1),
      R => Reset
    );
\LOCKSTEP_Out_reg[2000]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2000),
      R => Reset
    );
\LOCKSTEP_Out_reg[2001]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2001),
      R => Reset
    );
\LOCKSTEP_Out_reg[2002]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2002),
      R => Reset
    );
\LOCKSTEP_Out_reg[2003]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2003),
      R => Reset
    );
\LOCKSTEP_Out_reg[2004]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2004),
      R => Reset
    );
\LOCKSTEP_Out_reg[2005]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2005),
      R => Reset
    );
\LOCKSTEP_Out_reg[2006]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2006),
      R => Reset
    );
\LOCKSTEP_Out_reg[2007]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2007),
      R => Reset
    );
\LOCKSTEP_Out_reg[2008]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2008),
      R => Reset
    );
\LOCKSTEP_Out_reg[2009]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2009),
      R => Reset
    );
\LOCKSTEP_Out_reg[200]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(200),
      R => Reset
    );
\LOCKSTEP_Out_reg[2010]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2010),
      R => Reset
    );
\LOCKSTEP_Out_reg[2011]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2011),
      R => Reset
    );
\LOCKSTEP_Out_reg[2012]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2012),
      R => Reset
    );
\LOCKSTEP_Out_reg[2013]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2013),
      R => Reset
    );
\LOCKSTEP_Out_reg[2014]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2014),
      R => Reset
    );
\LOCKSTEP_Out_reg[2015]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2015),
      R => Reset
    );
\LOCKSTEP_Out_reg[2016]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2016),
      R => Reset
    );
\LOCKSTEP_Out_reg[2017]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2017),
      R => Reset
    );
\LOCKSTEP_Out_reg[2018]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2018),
      R => Reset
    );
\LOCKSTEP_Out_reg[2019]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2019),
      R => Reset
    );
\LOCKSTEP_Out_reg[201]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(201),
      R => Reset
    );
\LOCKSTEP_Out_reg[2020]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2020),
      R => Reset
    );
\LOCKSTEP_Out_reg[2021]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2021),
      R => Reset
    );
\LOCKSTEP_Out_reg[2022]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2022),
      R => Reset
    );
\LOCKSTEP_Out_reg[2023]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2023),
      R => Reset
    );
\LOCKSTEP_Out_reg[2024]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2024),
      R => Reset
    );
\LOCKSTEP_Out_reg[2025]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2025),
      R => Reset
    );
\LOCKSTEP_Out_reg[2026]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2026),
      R => Reset
    );
\LOCKSTEP_Out_reg[2027]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2027),
      R => Reset
    );
\LOCKSTEP_Out_reg[2028]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2028),
      R => Reset
    );
\LOCKSTEP_Out_reg[2029]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2029),
      R => Reset
    );
\LOCKSTEP_Out_reg[202]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(202),
      R => Reset
    );
\LOCKSTEP_Out_reg[2030]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2030),
      R => Reset
    );
\LOCKSTEP_Out_reg[2031]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2031),
      R => Reset
    );
\LOCKSTEP_Out_reg[2032]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2032),
      R => Reset
    );
\LOCKSTEP_Out_reg[2033]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2033),
      R => Reset
    );
\LOCKSTEP_Out_reg[2034]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2034),
      R => Reset
    );
\LOCKSTEP_Out_reg[2035]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2035),
      R => Reset
    );
\LOCKSTEP_Out_reg[2036]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2036),
      R => Reset
    );
\LOCKSTEP_Out_reg[2037]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2037),
      R => Reset
    );
\LOCKSTEP_Out_reg[2038]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2038),
      R => Reset
    );
\LOCKSTEP_Out_reg[2039]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2039),
      R => Reset
    );
\LOCKSTEP_Out_reg[203]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(203),
      R => Reset
    );
\LOCKSTEP_Out_reg[2040]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2040),
      R => Reset
    );
\LOCKSTEP_Out_reg[2041]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2041),
      R => Reset
    );
\LOCKSTEP_Out_reg[2042]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2042),
      R => Reset
    );
\LOCKSTEP_Out_reg[2043]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2043),
      R => Reset
    );
\LOCKSTEP_Out_reg[2044]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2044),
      R => Reset
    );
\LOCKSTEP_Out_reg[2045]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2045),
      R => Reset
    );
\LOCKSTEP_Out_reg[2046]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2046),
      R => Reset
    );
\LOCKSTEP_Out_reg[2047]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2047),
      R => Reset
    );
\LOCKSTEP_Out_reg[2048]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2048),
      R => Reset
    );
\LOCKSTEP_Out_reg[2049]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2049),
      R => Reset
    );
\LOCKSTEP_Out_reg[204]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(204),
      R => Reset
    );
\LOCKSTEP_Out_reg[2050]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2050),
      R => Reset
    );
\LOCKSTEP_Out_reg[2051]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2051),
      R => Reset
    );
\LOCKSTEP_Out_reg[2052]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2052),
      R => Reset
    );
\LOCKSTEP_Out_reg[2053]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2053),
      R => Reset
    );
\LOCKSTEP_Out_reg[2054]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2054),
      R => Reset
    );
\LOCKSTEP_Out_reg[2055]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2055),
      R => Reset
    );
\LOCKSTEP_Out_reg[2056]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2056),
      R => Reset
    );
\LOCKSTEP_Out_reg[2057]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2057),
      R => Reset
    );
\LOCKSTEP_Out_reg[2058]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2058),
      R => Reset
    );
\LOCKSTEP_Out_reg[2059]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2059),
      R => Reset
    );
\LOCKSTEP_Out_reg[205]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(205),
      R => Reset
    );
\LOCKSTEP_Out_reg[2060]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2060),
      R => Reset
    );
\LOCKSTEP_Out_reg[2061]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2061),
      R => Reset
    );
\LOCKSTEP_Out_reg[2062]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2062),
      R => Reset
    );
\LOCKSTEP_Out_reg[2063]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2063),
      R => Reset
    );
\LOCKSTEP_Out_reg[2064]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2064),
      R => Reset
    );
\LOCKSTEP_Out_reg[2065]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2065),
      R => Reset
    );
\LOCKSTEP_Out_reg[2066]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2066),
      R => Reset
    );
\LOCKSTEP_Out_reg[2067]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2067),
      R => Reset
    );
\LOCKSTEP_Out_reg[2068]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2068),
      R => Reset
    );
\LOCKSTEP_Out_reg[2069]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2069),
      R => Reset
    );
\LOCKSTEP_Out_reg[206]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(206),
      R => Reset
    );
\LOCKSTEP_Out_reg[2070]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2070),
      R => Reset
    );
\LOCKSTEP_Out_reg[2071]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2071),
      R => Reset
    );
\LOCKSTEP_Out_reg[2072]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2072),
      R => Reset
    );
\LOCKSTEP_Out_reg[2073]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2073),
      R => Reset
    );
\LOCKSTEP_Out_reg[2074]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2074),
      R => Reset
    );
\LOCKSTEP_Out_reg[2075]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2075),
      R => Reset
    );
\LOCKSTEP_Out_reg[2076]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2076),
      R => Reset
    );
\LOCKSTEP_Out_reg[2077]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2077),
      R => Reset
    );
\LOCKSTEP_Out_reg[2078]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2078),
      R => Reset
    );
\LOCKSTEP_Out_reg[2079]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2079),
      R => Reset
    );
\LOCKSTEP_Out_reg[207]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(207),
      R => Reset
    );
\LOCKSTEP_Out_reg[2080]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2080),
      R => Reset
    );
\LOCKSTEP_Out_reg[2081]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2081),
      R => Reset
    );
\LOCKSTEP_Out_reg[2082]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2082),
      R => Reset
    );
\LOCKSTEP_Out_reg[2083]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2083),
      R => Reset
    );
\LOCKSTEP_Out_reg[2084]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2084),
      R => Reset
    );
\LOCKSTEP_Out_reg[2085]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2085),
      R => Reset
    );
\LOCKSTEP_Out_reg[2086]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2086),
      R => Reset
    );
\LOCKSTEP_Out_reg[2087]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2087),
      R => Reset
    );
\LOCKSTEP_Out_reg[2088]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2088),
      R => Reset
    );
\LOCKSTEP_Out_reg[2089]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2089),
      R => Reset
    );
\LOCKSTEP_Out_reg[208]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(208),
      R => Reset
    );
\LOCKSTEP_Out_reg[2090]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2090),
      R => Reset
    );
\LOCKSTEP_Out_reg[2091]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2091),
      R => Reset
    );
\LOCKSTEP_Out_reg[2092]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2092),
      R => Reset
    );
\LOCKSTEP_Out_reg[2093]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2093),
      R => Reset
    );
\LOCKSTEP_Out_reg[2094]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2094),
      R => Reset
    );
\LOCKSTEP_Out_reg[2095]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2095),
      R => Reset
    );
\LOCKSTEP_Out_reg[2096]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2096),
      R => Reset
    );
\LOCKSTEP_Out_reg[2097]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2097),
      R => Reset
    );
\LOCKSTEP_Out_reg[2098]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2098),
      R => Reset
    );
\LOCKSTEP_Out_reg[2099]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2099),
      R => Reset
    );
\LOCKSTEP_Out_reg[209]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(209),
      R => Reset
    );
\LOCKSTEP_Out_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(16),
      Q => LOCKSTEP_Out(20),
      R => Reset
    );
\LOCKSTEP_Out_reg[2100]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2100),
      R => Reset
    );
\LOCKSTEP_Out_reg[2101]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2101),
      R => Reset
    );
\LOCKSTEP_Out_reg[2102]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2102),
      R => Reset
    );
\LOCKSTEP_Out_reg[2103]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2103),
      R => Reset
    );
\LOCKSTEP_Out_reg[2104]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2104),
      R => Reset
    );
\LOCKSTEP_Out_reg[2105]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2105),
      R => Reset
    );
\LOCKSTEP_Out_reg[2106]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2106),
      R => Reset
    );
\LOCKSTEP_Out_reg[2107]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2107),
      R => Reset
    );
\LOCKSTEP_Out_reg[2108]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2108),
      R => Reset
    );
\LOCKSTEP_Out_reg[2109]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2109),
      R => Reset
    );
\LOCKSTEP_Out_reg[210]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(210),
      R => Reset
    );
\LOCKSTEP_Out_reg[2110]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2110),
      R => Reset
    );
\LOCKSTEP_Out_reg[2111]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2111),
      R => Reset
    );
\LOCKSTEP_Out_reg[2112]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2112),
      R => Reset
    );
\LOCKSTEP_Out_reg[2113]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2113),
      R => Reset
    );
\LOCKSTEP_Out_reg[2114]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2114),
      R => Reset
    );
\LOCKSTEP_Out_reg[2115]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2115),
      R => Reset
    );
\LOCKSTEP_Out_reg[2116]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2116),
      R => Reset
    );
\LOCKSTEP_Out_reg[2117]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2117),
      R => Reset
    );
\LOCKSTEP_Out_reg[2118]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2118),
      R => Reset
    );
\LOCKSTEP_Out_reg[2119]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2119),
      R => Reset
    );
\LOCKSTEP_Out_reg[211]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(211),
      R => Reset
    );
\LOCKSTEP_Out_reg[2120]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2120),
      R => Reset
    );
\LOCKSTEP_Out_reg[2121]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2121),
      R => Reset
    );
\LOCKSTEP_Out_reg[2122]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2122),
      R => Reset
    );
\LOCKSTEP_Out_reg[2123]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2123),
      R => Reset
    );
\LOCKSTEP_Out_reg[2124]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2124),
      R => Reset
    );
\LOCKSTEP_Out_reg[2125]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2125),
      R => Reset
    );
\LOCKSTEP_Out_reg[2126]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2126),
      R => Reset
    );
\LOCKSTEP_Out_reg[2127]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2127),
      R => Reset
    );
\LOCKSTEP_Out_reg[2128]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2128),
      R => Reset
    );
\LOCKSTEP_Out_reg[2129]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2129),
      R => Reset
    );
\LOCKSTEP_Out_reg[212]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(212),
      R => Reset
    );
\LOCKSTEP_Out_reg[2130]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2130),
      R => Reset
    );
\LOCKSTEP_Out_reg[2131]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2131),
      R => Reset
    );
\LOCKSTEP_Out_reg[2132]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2132),
      R => Reset
    );
\LOCKSTEP_Out_reg[2133]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2133),
      R => Reset
    );
\LOCKSTEP_Out_reg[2134]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2134),
      R => Reset
    );
\LOCKSTEP_Out_reg[2135]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2135),
      R => Reset
    );
\LOCKSTEP_Out_reg[2136]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2136),
      R => Reset
    );
\LOCKSTEP_Out_reg[2137]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2137),
      R => Reset
    );
\LOCKSTEP_Out_reg[2138]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2138),
      R => Reset
    );
\LOCKSTEP_Out_reg[2139]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2139),
      R => Reset
    );
\LOCKSTEP_Out_reg[213]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(213),
      R => Reset
    );
\LOCKSTEP_Out_reg[2140]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2140),
      R => Reset
    );
\LOCKSTEP_Out_reg[2141]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2141),
      R => Reset
    );
\LOCKSTEP_Out_reg[2142]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2142),
      R => Reset
    );
\LOCKSTEP_Out_reg[2143]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2143),
      R => Reset
    );
\LOCKSTEP_Out_reg[2144]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2144),
      R => Reset
    );
\LOCKSTEP_Out_reg[2145]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2145),
      R => Reset
    );
\LOCKSTEP_Out_reg[2146]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2146),
      R => Reset
    );
\LOCKSTEP_Out_reg[2147]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2147),
      R => Reset
    );
\LOCKSTEP_Out_reg[2148]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2148),
      R => Reset
    );
\LOCKSTEP_Out_reg[2149]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2149),
      R => Reset
    );
\LOCKSTEP_Out_reg[214]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(214),
      R => Reset
    );
\LOCKSTEP_Out_reg[2150]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2150),
      R => Reset
    );
\LOCKSTEP_Out_reg[2151]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2151),
      R => Reset
    );
\LOCKSTEP_Out_reg[2152]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2152),
      R => Reset
    );
\LOCKSTEP_Out_reg[2153]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2153),
      R => Reset
    );
\LOCKSTEP_Out_reg[2154]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2154),
      R => Reset
    );
\LOCKSTEP_Out_reg[2155]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2155),
      R => Reset
    );
\LOCKSTEP_Out_reg[2156]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2156),
      R => Reset
    );
\LOCKSTEP_Out_reg[2157]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2157),
      R => Reset
    );
\LOCKSTEP_Out_reg[2158]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2158),
      R => Reset
    );
\LOCKSTEP_Out_reg[2159]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2159),
      R => Reset
    );
\LOCKSTEP_Out_reg[215]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(215),
      R => Reset
    );
\LOCKSTEP_Out_reg[2160]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2160),
      R => Reset
    );
\LOCKSTEP_Out_reg[2161]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2161),
      R => Reset
    );
\LOCKSTEP_Out_reg[2162]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2162),
      R => Reset
    );
\LOCKSTEP_Out_reg[2163]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2163),
      R => Reset
    );
\LOCKSTEP_Out_reg[2164]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2164),
      R => Reset
    );
\LOCKSTEP_Out_reg[2165]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2165),
      R => Reset
    );
\LOCKSTEP_Out_reg[2166]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2166),
      R => Reset
    );
\LOCKSTEP_Out_reg[2167]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2167),
      R => Reset
    );
\LOCKSTEP_Out_reg[2168]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2168),
      R => Reset
    );
\LOCKSTEP_Out_reg[2169]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2169),
      R => Reset
    );
\LOCKSTEP_Out_reg[216]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(216),
      R => Reset
    );
\LOCKSTEP_Out_reg[2170]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2170),
      R => Reset
    );
\LOCKSTEP_Out_reg[2171]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2171),
      R => Reset
    );
\LOCKSTEP_Out_reg[2172]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2172),
      R => Reset
    );
\LOCKSTEP_Out_reg[2173]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2173),
      R => Reset
    );
\LOCKSTEP_Out_reg[2174]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2174),
      R => Reset
    );
\LOCKSTEP_Out_reg[2175]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2175),
      R => Reset
    );
\LOCKSTEP_Out_reg[2176]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2176),
      R => Reset
    );
\LOCKSTEP_Out_reg[2177]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2177),
      R => Reset
    );
\LOCKSTEP_Out_reg[2178]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2178),
      R => Reset
    );
\LOCKSTEP_Out_reg[2179]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2179),
      R => Reset
    );
\LOCKSTEP_Out_reg[217]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(217),
      R => Reset
    );
\LOCKSTEP_Out_reg[2180]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2180),
      R => Reset
    );
\LOCKSTEP_Out_reg[2181]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2181),
      R => Reset
    );
\LOCKSTEP_Out_reg[2182]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2182),
      R => Reset
    );
\LOCKSTEP_Out_reg[2183]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2183),
      R => Reset
    );
\LOCKSTEP_Out_reg[2184]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2184),
      R => Reset
    );
\LOCKSTEP_Out_reg[2185]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2185),
      R => Reset
    );
\LOCKSTEP_Out_reg[2186]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2186),
      R => Reset
    );
\LOCKSTEP_Out_reg[2187]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2187),
      R => Reset
    );
\LOCKSTEP_Out_reg[2188]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2188),
      R => Reset
    );
\LOCKSTEP_Out_reg[2189]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2189),
      R => Reset
    );
\LOCKSTEP_Out_reg[218]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(218),
      R => Reset
    );
\LOCKSTEP_Out_reg[2190]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2190),
      R => Reset
    );
\LOCKSTEP_Out_reg[2191]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2191),
      R => Reset
    );
\LOCKSTEP_Out_reg[2192]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2192),
      R => Reset
    );
\LOCKSTEP_Out_reg[2193]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2193),
      R => Reset
    );
\LOCKSTEP_Out_reg[2194]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2194),
      R => Reset
    );
\LOCKSTEP_Out_reg[2195]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2195),
      R => Reset
    );
\LOCKSTEP_Out_reg[2196]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2196),
      R => Reset
    );
\LOCKSTEP_Out_reg[2197]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2197),
      R => Reset
    );
\LOCKSTEP_Out_reg[2198]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2198),
      R => Reset
    );
\LOCKSTEP_Out_reg[2199]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2199),
      R => Reset
    );
\LOCKSTEP_Out_reg[219]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(219),
      R => Reset
    );
\LOCKSTEP_Out_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(17),
      Q => LOCKSTEP_Out(21),
      R => Reset
    );
\LOCKSTEP_Out_reg[2200]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2200),
      R => Reset
    );
\LOCKSTEP_Out_reg[2201]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2201),
      R => Reset
    );
\LOCKSTEP_Out_reg[2202]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2202),
      R => Reset
    );
\LOCKSTEP_Out_reg[2203]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2203),
      R => Reset
    );
\LOCKSTEP_Out_reg[2204]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2204),
      R => Reset
    );
\LOCKSTEP_Out_reg[2205]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2205),
      R => Reset
    );
\LOCKSTEP_Out_reg[2206]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2206),
      R => Reset
    );
\LOCKSTEP_Out_reg[2207]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2207),
      R => Reset
    );
\LOCKSTEP_Out_reg[2208]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2208),
      R => Reset
    );
\LOCKSTEP_Out_reg[2209]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2209),
      R => Reset
    );
\LOCKSTEP_Out_reg[220]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(220),
      R => Reset
    );
\LOCKSTEP_Out_reg[2210]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2210),
      R => Reset
    );
\LOCKSTEP_Out_reg[2211]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2211),
      R => Reset
    );
\LOCKSTEP_Out_reg[2212]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2212),
      R => Reset
    );
\LOCKSTEP_Out_reg[2213]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2213),
      R => Reset
    );
\LOCKSTEP_Out_reg[2214]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2214),
      R => Reset
    );
\LOCKSTEP_Out_reg[2215]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2215),
      R => Reset
    );
\LOCKSTEP_Out_reg[2216]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2216),
      R => Reset
    );
\LOCKSTEP_Out_reg[2217]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2217),
      R => Reset
    );
\LOCKSTEP_Out_reg[2218]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2218),
      R => Reset
    );
\LOCKSTEP_Out_reg[2219]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2219),
      R => Reset
    );
\LOCKSTEP_Out_reg[221]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(221),
      R => Reset
    );
\LOCKSTEP_Out_reg[2220]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2220),
      R => Reset
    );
\LOCKSTEP_Out_reg[2221]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2221),
      R => Reset
    );
\LOCKSTEP_Out_reg[2222]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2222),
      R => Reset
    );
\LOCKSTEP_Out_reg[2223]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2223),
      R => Reset
    );
\LOCKSTEP_Out_reg[2224]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2224),
      R => Reset
    );
\LOCKSTEP_Out_reg[2225]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2225),
      R => Reset
    );
\LOCKSTEP_Out_reg[2226]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2226),
      R => Reset
    );
\LOCKSTEP_Out_reg[2227]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2227),
      R => Reset
    );
\LOCKSTEP_Out_reg[2228]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2228),
      R => Reset
    );
\LOCKSTEP_Out_reg[2229]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2229),
      R => Reset
    );
\LOCKSTEP_Out_reg[222]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(222),
      R => Reset
    );
\LOCKSTEP_Out_reg[2230]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2230),
      R => Reset
    );
\LOCKSTEP_Out_reg[2231]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2231),
      R => Reset
    );
\LOCKSTEP_Out_reg[2232]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2232),
      R => Reset
    );
\LOCKSTEP_Out_reg[2233]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2233),
      R => Reset
    );
\LOCKSTEP_Out_reg[2234]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2234),
      R => Reset
    );
\LOCKSTEP_Out_reg[2235]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2235),
      R => Reset
    );
\LOCKSTEP_Out_reg[2236]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2236),
      R => Reset
    );
\LOCKSTEP_Out_reg[2237]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2237),
      R => Reset
    );
\LOCKSTEP_Out_reg[2238]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2238),
      R => Reset
    );
\LOCKSTEP_Out_reg[2239]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2239),
      R => Reset
    );
\LOCKSTEP_Out_reg[223]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(223),
      R => Reset
    );
\LOCKSTEP_Out_reg[2240]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2240),
      R => Reset
    );
\LOCKSTEP_Out_reg[2241]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2241),
      R => Reset
    );
\LOCKSTEP_Out_reg[2242]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2242),
      R => Reset
    );
\LOCKSTEP_Out_reg[2243]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2243),
      R => Reset
    );
\LOCKSTEP_Out_reg[2244]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2244),
      R => Reset
    );
\LOCKSTEP_Out_reg[2245]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2245),
      R => Reset
    );
\LOCKSTEP_Out_reg[2246]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2246),
      R => Reset
    );
\LOCKSTEP_Out_reg[2247]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2247),
      R => Reset
    );
\LOCKSTEP_Out_reg[2248]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2248),
      R => Reset
    );
\LOCKSTEP_Out_reg[2249]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2249),
      R => Reset
    );
\LOCKSTEP_Out_reg[224]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(224),
      R => Reset
    );
\LOCKSTEP_Out_reg[2250]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2250),
      R => Reset
    );
\LOCKSTEP_Out_reg[2251]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2251),
      R => Reset
    );
\LOCKSTEP_Out_reg[2252]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2252),
      R => Reset
    );
\LOCKSTEP_Out_reg[2253]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2253),
      R => Reset
    );
\LOCKSTEP_Out_reg[2254]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2254),
      R => Reset
    );
\LOCKSTEP_Out_reg[2255]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2255),
      R => Reset
    );
\LOCKSTEP_Out_reg[2256]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2256),
      R => Reset
    );
\LOCKSTEP_Out_reg[2257]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2257),
      R => Reset
    );
\LOCKSTEP_Out_reg[2258]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2258),
      R => Reset
    );
\LOCKSTEP_Out_reg[2259]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2259),
      R => Reset
    );
\LOCKSTEP_Out_reg[225]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(225),
      R => Reset
    );
\LOCKSTEP_Out_reg[2260]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2260),
      R => Reset
    );
\LOCKSTEP_Out_reg[2261]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2261),
      R => Reset
    );
\LOCKSTEP_Out_reg[2262]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2262),
      R => Reset
    );
\LOCKSTEP_Out_reg[2263]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2263),
      R => Reset
    );
\LOCKSTEP_Out_reg[2264]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2264),
      R => Reset
    );
\LOCKSTEP_Out_reg[2265]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2265),
      R => Reset
    );
\LOCKSTEP_Out_reg[2266]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2266),
      R => Reset
    );
\LOCKSTEP_Out_reg[2267]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2267),
      R => Reset
    );
\LOCKSTEP_Out_reg[2268]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2268),
      R => Reset
    );
\LOCKSTEP_Out_reg[2269]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2269),
      R => Reset
    );
\LOCKSTEP_Out_reg[226]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(226),
      R => Reset
    );
\LOCKSTEP_Out_reg[2270]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2270),
      R => Reset
    );
\LOCKSTEP_Out_reg[2271]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2271),
      R => Reset
    );
\LOCKSTEP_Out_reg[2272]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2272),
      R => Reset
    );
\LOCKSTEP_Out_reg[2273]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2273),
      R => Reset
    );
\LOCKSTEP_Out_reg[2274]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2274),
      R => Reset
    );
\LOCKSTEP_Out_reg[2275]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2275),
      R => Reset
    );
\LOCKSTEP_Out_reg[2276]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2276),
      R => Reset
    );
\LOCKSTEP_Out_reg[2277]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2277),
      R => Reset
    );
\LOCKSTEP_Out_reg[2278]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2278),
      R => Reset
    );
\LOCKSTEP_Out_reg[2279]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2279),
      R => Reset
    );
\LOCKSTEP_Out_reg[227]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(227),
      R => Reset
    );
\LOCKSTEP_Out_reg[2280]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2280),
      R => Reset
    );
\LOCKSTEP_Out_reg[2281]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2281),
      R => Reset
    );
\LOCKSTEP_Out_reg[2282]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2282),
      R => Reset
    );
\LOCKSTEP_Out_reg[2283]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2283),
      R => Reset
    );
\LOCKSTEP_Out_reg[2284]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2284),
      R => Reset
    );
\LOCKSTEP_Out_reg[2285]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2285),
      R => Reset
    );
\LOCKSTEP_Out_reg[2286]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2286),
      R => Reset
    );
\LOCKSTEP_Out_reg[2287]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2287),
      R => Reset
    );
\LOCKSTEP_Out_reg[2288]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2288),
      R => Reset
    );
\LOCKSTEP_Out_reg[2289]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2289),
      R => Reset
    );
\LOCKSTEP_Out_reg[228]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(228),
      R => Reset
    );
\LOCKSTEP_Out_reg[2290]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2290),
      R => Reset
    );
\LOCKSTEP_Out_reg[2291]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2291),
      R => Reset
    );
\LOCKSTEP_Out_reg[2292]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2292),
      R => Reset
    );
\LOCKSTEP_Out_reg[2293]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2293),
      R => Reset
    );
\LOCKSTEP_Out_reg[2294]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2294),
      R => Reset
    );
\LOCKSTEP_Out_reg[2295]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2295),
      R => Reset
    );
\LOCKSTEP_Out_reg[2296]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2296),
      R => Reset
    );
\LOCKSTEP_Out_reg[2297]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2297),
      R => Reset
    );
\LOCKSTEP_Out_reg[2298]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2298),
      R => Reset
    );
\LOCKSTEP_Out_reg[2299]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2299),
      R => Reset
    );
\LOCKSTEP_Out_reg[229]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(229),
      R => Reset
    );
\LOCKSTEP_Out_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(18),
      Q => LOCKSTEP_Out(22),
      R => Reset
    );
\LOCKSTEP_Out_reg[2300]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2300),
      R => Reset
    );
\LOCKSTEP_Out_reg[2301]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2301),
      R => Reset
    );
\LOCKSTEP_Out_reg[2302]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2302),
      R => Reset
    );
\LOCKSTEP_Out_reg[2303]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2303),
      R => Reset
    );
\LOCKSTEP_Out_reg[2304]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2304),
      R => Reset
    );
\LOCKSTEP_Out_reg[2305]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2305),
      R => Reset
    );
\LOCKSTEP_Out_reg[2306]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2306),
      R => Reset
    );
\LOCKSTEP_Out_reg[2307]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2307),
      R => Reset
    );
\LOCKSTEP_Out_reg[2308]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2308),
      R => Reset
    );
\LOCKSTEP_Out_reg[2309]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2309),
      R => Reset
    );
\LOCKSTEP_Out_reg[230]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(230),
      R => Reset
    );
\LOCKSTEP_Out_reg[2310]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2310),
      R => Reset
    );
\LOCKSTEP_Out_reg[2311]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2311),
      R => Reset
    );
\LOCKSTEP_Out_reg[2312]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2312),
      R => Reset
    );
\LOCKSTEP_Out_reg[2313]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2313),
      R => Reset
    );
\LOCKSTEP_Out_reg[2314]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2314),
      R => Reset
    );
\LOCKSTEP_Out_reg[2315]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2315),
      R => Reset
    );
\LOCKSTEP_Out_reg[2316]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2316),
      R => Reset
    );
\LOCKSTEP_Out_reg[2317]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2317),
      R => Reset
    );
\LOCKSTEP_Out_reg[2318]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2318),
      R => Reset
    );
\LOCKSTEP_Out_reg[2319]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2319),
      R => Reset
    );
\LOCKSTEP_Out_reg[231]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(231),
      R => Reset
    );
\LOCKSTEP_Out_reg[2320]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2320),
      R => Reset
    );
\LOCKSTEP_Out_reg[2321]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2321),
      R => Reset
    );
\LOCKSTEP_Out_reg[2322]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2322),
      R => Reset
    );
\LOCKSTEP_Out_reg[2323]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2323),
      R => Reset
    );
\LOCKSTEP_Out_reg[2324]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2324),
      R => Reset
    );
\LOCKSTEP_Out_reg[2325]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2325),
      R => Reset
    );
\LOCKSTEP_Out_reg[2326]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2326),
      R => Reset
    );
\LOCKSTEP_Out_reg[2327]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2327),
      R => Reset
    );
\LOCKSTEP_Out_reg[2328]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2328),
      R => Reset
    );
\LOCKSTEP_Out_reg[2329]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2329),
      R => Reset
    );
\LOCKSTEP_Out_reg[232]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(232),
      R => Reset
    );
\LOCKSTEP_Out_reg[2330]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2330),
      R => Reset
    );
\LOCKSTEP_Out_reg[2331]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2331),
      R => Reset
    );
\LOCKSTEP_Out_reg[2332]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2332),
      R => Reset
    );
\LOCKSTEP_Out_reg[2333]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2333),
      R => Reset
    );
\LOCKSTEP_Out_reg[2334]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2334),
      R => Reset
    );
\LOCKSTEP_Out_reg[2335]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2335),
      R => Reset
    );
\LOCKSTEP_Out_reg[2336]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2336),
      R => Reset
    );
\LOCKSTEP_Out_reg[2337]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2337),
      R => Reset
    );
\LOCKSTEP_Out_reg[2338]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2338),
      R => Reset
    );
\LOCKSTEP_Out_reg[2339]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2339),
      R => Reset
    );
\LOCKSTEP_Out_reg[233]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(233),
      R => Reset
    );
\LOCKSTEP_Out_reg[2340]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2340),
      R => Reset
    );
\LOCKSTEP_Out_reg[2341]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2341),
      R => Reset
    );
\LOCKSTEP_Out_reg[2342]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2342),
      R => Reset
    );
\LOCKSTEP_Out_reg[2343]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2343),
      R => Reset
    );
\LOCKSTEP_Out_reg[2344]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2344),
      R => Reset
    );
\LOCKSTEP_Out_reg[2345]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2345),
      R => Reset
    );
\LOCKSTEP_Out_reg[2346]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2346),
      R => Reset
    );
\LOCKSTEP_Out_reg[2347]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2347),
      R => Reset
    );
\LOCKSTEP_Out_reg[2348]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2348),
      R => Reset
    );
\LOCKSTEP_Out_reg[2349]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2349),
      R => Reset
    );
\LOCKSTEP_Out_reg[234]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(234),
      R => Reset
    );
\LOCKSTEP_Out_reg[2350]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2350),
      R => Reset
    );
\LOCKSTEP_Out_reg[2351]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2351),
      R => Reset
    );
\LOCKSTEP_Out_reg[2352]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2352),
      R => Reset
    );
\LOCKSTEP_Out_reg[2353]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2353),
      R => Reset
    );
\LOCKSTEP_Out_reg[2354]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2354),
      R => Reset
    );
\LOCKSTEP_Out_reg[2355]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2355),
      R => Reset
    );
\LOCKSTEP_Out_reg[2356]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2356),
      R => Reset
    );
\LOCKSTEP_Out_reg[2357]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2357),
      R => Reset
    );
\LOCKSTEP_Out_reg[2358]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2358),
      R => Reset
    );
\LOCKSTEP_Out_reg[2359]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2359),
      R => Reset
    );
\LOCKSTEP_Out_reg[235]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(235),
      R => Reset
    );
\LOCKSTEP_Out_reg[2360]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2360),
      R => Reset
    );
\LOCKSTEP_Out_reg[2361]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2361),
      R => Reset
    );
\LOCKSTEP_Out_reg[2362]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2362),
      R => Reset
    );
\LOCKSTEP_Out_reg[2363]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2363),
      R => Reset
    );
\LOCKSTEP_Out_reg[2364]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2364),
      R => Reset
    );
\LOCKSTEP_Out_reg[2365]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2365),
      R => Reset
    );
\LOCKSTEP_Out_reg[2366]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2366),
      R => Reset
    );
\LOCKSTEP_Out_reg[2367]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2367),
      R => Reset
    );
\LOCKSTEP_Out_reg[2368]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2368),
      R => Reset
    );
\LOCKSTEP_Out_reg[2369]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2369),
      R => Reset
    );
\LOCKSTEP_Out_reg[236]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(236),
      R => Reset
    );
\LOCKSTEP_Out_reg[2370]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2370),
      R => Reset
    );
\LOCKSTEP_Out_reg[2371]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2371),
      R => Reset
    );
\LOCKSTEP_Out_reg[2372]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2372),
      R => Reset
    );
\LOCKSTEP_Out_reg[2373]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2373),
      R => Reset
    );
\LOCKSTEP_Out_reg[2374]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2374),
      R => Reset
    );
\LOCKSTEP_Out_reg[2375]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2375),
      R => Reset
    );
\LOCKSTEP_Out_reg[2376]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2376),
      R => Reset
    );
\LOCKSTEP_Out_reg[2377]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2377),
      R => Reset
    );
\LOCKSTEP_Out_reg[2378]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2378),
      R => Reset
    );
\LOCKSTEP_Out_reg[2379]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2379),
      R => Reset
    );
\LOCKSTEP_Out_reg[237]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(237),
      R => Reset
    );
\LOCKSTEP_Out_reg[2380]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2380),
      R => Reset
    );
\LOCKSTEP_Out_reg[2381]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2381),
      R => Reset
    );
\LOCKSTEP_Out_reg[2382]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2382),
      R => Reset
    );
\LOCKSTEP_Out_reg[2383]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2383),
      R => Reset
    );
\LOCKSTEP_Out_reg[2384]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2384),
      R => Reset
    );
\LOCKSTEP_Out_reg[2385]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2385),
      R => Reset
    );
\LOCKSTEP_Out_reg[2386]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2386),
      R => Reset
    );
\LOCKSTEP_Out_reg[2387]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2387),
      R => Reset
    );
\LOCKSTEP_Out_reg[2388]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2388),
      R => Reset
    );
\LOCKSTEP_Out_reg[2389]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2389),
      R => Reset
    );
\LOCKSTEP_Out_reg[238]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(238),
      R => Reset
    );
\LOCKSTEP_Out_reg[2390]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2390),
      R => Reset
    );
\LOCKSTEP_Out_reg[2391]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2391),
      R => Reset
    );
\LOCKSTEP_Out_reg[2392]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2392),
      R => Reset
    );
\LOCKSTEP_Out_reg[2393]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2393),
      R => Reset
    );
\LOCKSTEP_Out_reg[2394]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2394),
      R => Reset
    );
\LOCKSTEP_Out_reg[2395]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2395),
      R => Reset
    );
\LOCKSTEP_Out_reg[2396]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2396),
      R => Reset
    );
\LOCKSTEP_Out_reg[2397]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2397),
      R => Reset
    );
\LOCKSTEP_Out_reg[2398]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2398),
      R => Reset
    );
\LOCKSTEP_Out_reg[2399]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2399),
      R => Reset
    );
\LOCKSTEP_Out_reg[239]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(239),
      R => Reset
    );
\LOCKSTEP_Out_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(19),
      Q => LOCKSTEP_Out(23),
      R => Reset
    );
\LOCKSTEP_Out_reg[2400]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2400),
      R => Reset
    );
\LOCKSTEP_Out_reg[2401]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2401),
      R => Reset
    );
\LOCKSTEP_Out_reg[2402]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2402),
      R => Reset
    );
\LOCKSTEP_Out_reg[2403]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2403),
      R => Reset
    );
\LOCKSTEP_Out_reg[2404]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2404),
      R => Reset
    );
\LOCKSTEP_Out_reg[2405]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2405),
      R => Reset
    );
\LOCKSTEP_Out_reg[2406]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2406),
      R => Reset
    );
\LOCKSTEP_Out_reg[2407]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2407),
      R => Reset
    );
\LOCKSTEP_Out_reg[2408]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2408),
      R => Reset
    );
\LOCKSTEP_Out_reg[2409]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2409),
      R => Reset
    );
\LOCKSTEP_Out_reg[240]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(240),
      R => Reset
    );
\LOCKSTEP_Out_reg[2410]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2410),
      R => Reset
    );
\LOCKSTEP_Out_reg[2411]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2411),
      R => Reset
    );
\LOCKSTEP_Out_reg[2412]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2412),
      R => Reset
    );
\LOCKSTEP_Out_reg[2413]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2413),
      R => Reset
    );
\LOCKSTEP_Out_reg[2414]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2414),
      R => Reset
    );
\LOCKSTEP_Out_reg[2415]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2415),
      R => Reset
    );
\LOCKSTEP_Out_reg[2416]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2416),
      R => Reset
    );
\LOCKSTEP_Out_reg[2417]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2417),
      R => Reset
    );
\LOCKSTEP_Out_reg[2418]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2418),
      R => Reset
    );
\LOCKSTEP_Out_reg[2419]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2419),
      R => Reset
    );
\LOCKSTEP_Out_reg[241]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(241),
      R => Reset
    );
\LOCKSTEP_Out_reg[2420]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2420),
      R => Reset
    );
\LOCKSTEP_Out_reg[2421]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2421),
      R => Reset
    );
\LOCKSTEP_Out_reg[2422]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2422),
      R => Reset
    );
\LOCKSTEP_Out_reg[2423]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2423),
      R => Reset
    );
\LOCKSTEP_Out_reg[2424]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2424),
      R => Reset
    );
\LOCKSTEP_Out_reg[2425]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2425),
      R => Reset
    );
\LOCKSTEP_Out_reg[2426]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2426),
      R => Reset
    );
\LOCKSTEP_Out_reg[2427]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2427),
      R => Reset
    );
\LOCKSTEP_Out_reg[2428]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2428),
      R => Reset
    );
\LOCKSTEP_Out_reg[2429]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2429),
      R => Reset
    );
\LOCKSTEP_Out_reg[242]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(242),
      R => Reset
    );
\LOCKSTEP_Out_reg[2430]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2430),
      R => Reset
    );
\LOCKSTEP_Out_reg[2431]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2431),
      R => Reset
    );
\LOCKSTEP_Out_reg[2432]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2432),
      R => Reset
    );
\LOCKSTEP_Out_reg[2433]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2433),
      R => Reset
    );
\LOCKSTEP_Out_reg[2434]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2434),
      R => Reset
    );
\LOCKSTEP_Out_reg[2435]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2435),
      R => Reset
    );
\LOCKSTEP_Out_reg[2436]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2436),
      R => Reset
    );
\LOCKSTEP_Out_reg[2437]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2437),
      R => Reset
    );
\LOCKSTEP_Out_reg[2438]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2438),
      R => Reset
    );
\LOCKSTEP_Out_reg[2439]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2439),
      R => Reset
    );
\LOCKSTEP_Out_reg[243]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(243),
      R => Reset
    );
\LOCKSTEP_Out_reg[2440]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2440),
      R => Reset
    );
\LOCKSTEP_Out_reg[2441]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2441),
      R => Reset
    );
\LOCKSTEP_Out_reg[2442]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2442),
      R => Reset
    );
\LOCKSTEP_Out_reg[2443]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2443),
      R => Reset
    );
\LOCKSTEP_Out_reg[2444]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2444),
      R => Reset
    );
\LOCKSTEP_Out_reg[2445]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2445),
      R => Reset
    );
\LOCKSTEP_Out_reg[2446]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2446),
      R => Reset
    );
\LOCKSTEP_Out_reg[2447]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2447),
      R => Reset
    );
\LOCKSTEP_Out_reg[2448]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2448),
      R => Reset
    );
\LOCKSTEP_Out_reg[2449]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2449),
      R => Reset
    );
\LOCKSTEP_Out_reg[244]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(244),
      R => Reset
    );
\LOCKSTEP_Out_reg[2450]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2450),
      R => Reset
    );
\LOCKSTEP_Out_reg[2451]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2451),
      R => Reset
    );
\LOCKSTEP_Out_reg[2452]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2452),
      R => Reset
    );
\LOCKSTEP_Out_reg[2453]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2453),
      R => Reset
    );
\LOCKSTEP_Out_reg[2454]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2454),
      R => Reset
    );
\LOCKSTEP_Out_reg[2455]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2455),
      R => Reset
    );
\LOCKSTEP_Out_reg[2456]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2456),
      R => Reset
    );
\LOCKSTEP_Out_reg[2457]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2457),
      R => Reset
    );
\LOCKSTEP_Out_reg[2458]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2458),
      R => Reset
    );
\LOCKSTEP_Out_reg[2459]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2459),
      R => Reset
    );
\LOCKSTEP_Out_reg[245]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(245),
      R => Reset
    );
\LOCKSTEP_Out_reg[2460]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2460),
      R => Reset
    );
\LOCKSTEP_Out_reg[2461]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2461),
      R => Reset
    );
\LOCKSTEP_Out_reg[2462]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2462),
      R => Reset
    );
\LOCKSTEP_Out_reg[2463]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2463),
      R => Reset
    );
\LOCKSTEP_Out_reg[2464]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2464),
      R => Reset
    );
\LOCKSTEP_Out_reg[2465]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2465),
      R => Reset
    );
\LOCKSTEP_Out_reg[2466]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2466),
      R => Reset
    );
\LOCKSTEP_Out_reg[2467]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2467),
      R => Reset
    );
\LOCKSTEP_Out_reg[2468]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2468),
      R => Reset
    );
\LOCKSTEP_Out_reg[2469]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2469),
      R => Reset
    );
\LOCKSTEP_Out_reg[246]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(246),
      R => Reset
    );
\LOCKSTEP_Out_reg[2470]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2470),
      R => Reset
    );
\LOCKSTEP_Out_reg[2471]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2471),
      R => Reset
    );
\LOCKSTEP_Out_reg[2472]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2472),
      R => Reset
    );
\LOCKSTEP_Out_reg[2473]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2473),
      R => Reset
    );
\LOCKSTEP_Out_reg[2474]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2474),
      R => Reset
    );
\LOCKSTEP_Out_reg[2475]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2475),
      R => Reset
    );
\LOCKSTEP_Out_reg[2476]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2476),
      R => Reset
    );
\LOCKSTEP_Out_reg[2477]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2477),
      R => Reset
    );
\LOCKSTEP_Out_reg[2478]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2478),
      R => Reset
    );
\LOCKSTEP_Out_reg[2479]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2479),
      R => Reset
    );
\LOCKSTEP_Out_reg[247]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(247),
      R => Reset
    );
\LOCKSTEP_Out_reg[2480]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2480),
      R => Reset
    );
\LOCKSTEP_Out_reg[2481]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2481),
      R => Reset
    );
\LOCKSTEP_Out_reg[2482]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2482),
      R => Reset
    );
\LOCKSTEP_Out_reg[2483]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2483),
      R => Reset
    );
\LOCKSTEP_Out_reg[2484]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2484),
      R => Reset
    );
\LOCKSTEP_Out_reg[2485]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2485),
      R => Reset
    );
\LOCKSTEP_Out_reg[2486]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2486),
      R => Reset
    );
\LOCKSTEP_Out_reg[2487]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2487),
      R => Reset
    );
\LOCKSTEP_Out_reg[2488]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2488),
      R => Reset
    );
\LOCKSTEP_Out_reg[2489]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2489),
      R => Reset
    );
\LOCKSTEP_Out_reg[248]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(248),
      R => Reset
    );
\LOCKSTEP_Out_reg[2490]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2490),
      R => Reset
    );
\LOCKSTEP_Out_reg[2491]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2491),
      R => Reset
    );
\LOCKSTEP_Out_reg[2492]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2492),
      R => Reset
    );
\LOCKSTEP_Out_reg[2493]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2493),
      R => Reset
    );
\LOCKSTEP_Out_reg[2494]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2494),
      R => Reset
    );
\LOCKSTEP_Out_reg[2495]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2495),
      R => Reset
    );
\LOCKSTEP_Out_reg[2496]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2496),
      R => Reset
    );
\LOCKSTEP_Out_reg[2497]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2497),
      R => Reset
    );
\LOCKSTEP_Out_reg[2498]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2498),
      R => Reset
    );
\LOCKSTEP_Out_reg[2499]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2499),
      R => Reset
    );
\LOCKSTEP_Out_reg[249]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(249),
      R => Reset
    );
\LOCKSTEP_Out_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(20),
      Q => LOCKSTEP_Out(24),
      R => Reset
    );
\LOCKSTEP_Out_reg[2500]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2500),
      R => Reset
    );
\LOCKSTEP_Out_reg[2501]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2501),
      R => Reset
    );
\LOCKSTEP_Out_reg[2502]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2502),
      R => Reset
    );
\LOCKSTEP_Out_reg[2503]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2503),
      R => Reset
    );
\LOCKSTEP_Out_reg[2504]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2504),
      R => Reset
    );
\LOCKSTEP_Out_reg[2505]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2505),
      R => Reset
    );
\LOCKSTEP_Out_reg[2506]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2506),
      R => Reset
    );
\LOCKSTEP_Out_reg[2507]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2507),
      R => Reset
    );
\LOCKSTEP_Out_reg[2508]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2508),
      R => Reset
    );
\LOCKSTEP_Out_reg[2509]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2509),
      R => Reset
    );
\LOCKSTEP_Out_reg[250]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(250),
      R => Reset
    );
\LOCKSTEP_Out_reg[2510]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2510),
      R => Reset
    );
\LOCKSTEP_Out_reg[2511]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2511),
      R => Reset
    );
\LOCKSTEP_Out_reg[2512]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2512),
      R => Reset
    );
\LOCKSTEP_Out_reg[2513]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2513),
      R => Reset
    );
\LOCKSTEP_Out_reg[2514]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2514),
      R => Reset
    );
\LOCKSTEP_Out_reg[2515]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2515),
      R => Reset
    );
\LOCKSTEP_Out_reg[2516]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2516),
      R => Reset
    );
\LOCKSTEP_Out_reg[2517]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2517),
      R => Reset
    );
\LOCKSTEP_Out_reg[2518]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2518),
      R => Reset
    );
\LOCKSTEP_Out_reg[2519]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2519),
      R => Reset
    );
\LOCKSTEP_Out_reg[251]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(251),
      R => Reset
    );
\LOCKSTEP_Out_reg[2520]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2520),
      R => Reset
    );
\LOCKSTEP_Out_reg[2521]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2521),
      R => Reset
    );
\LOCKSTEP_Out_reg[2522]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2522),
      R => Reset
    );
\LOCKSTEP_Out_reg[2523]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2523),
      R => Reset
    );
\LOCKSTEP_Out_reg[2524]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2524),
      R => Reset
    );
\LOCKSTEP_Out_reg[2525]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2525),
      R => Reset
    );
\LOCKSTEP_Out_reg[2526]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2526),
      R => Reset
    );
\LOCKSTEP_Out_reg[2527]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2527),
      R => Reset
    );
\LOCKSTEP_Out_reg[2528]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2528),
      R => Reset
    );
\LOCKSTEP_Out_reg[2529]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2529),
      R => Reset
    );
\LOCKSTEP_Out_reg[252]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(252),
      R => Reset
    );
\LOCKSTEP_Out_reg[2530]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2530),
      R => Reset
    );
\LOCKSTEP_Out_reg[2531]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2531),
      R => Reset
    );
\LOCKSTEP_Out_reg[2532]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2532),
      R => Reset
    );
\LOCKSTEP_Out_reg[2533]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2533),
      R => Reset
    );
\LOCKSTEP_Out_reg[2534]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2534),
      R => Reset
    );
\LOCKSTEP_Out_reg[2535]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2535),
      R => Reset
    );
\LOCKSTEP_Out_reg[2536]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2536),
      R => Reset
    );
\LOCKSTEP_Out_reg[2537]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2537),
      R => Reset
    );
\LOCKSTEP_Out_reg[2538]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2538),
      R => Reset
    );
\LOCKSTEP_Out_reg[2539]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2539),
      R => Reset
    );
\LOCKSTEP_Out_reg[253]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(253),
      R => Reset
    );
\LOCKSTEP_Out_reg[2540]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2540),
      R => Reset
    );
\LOCKSTEP_Out_reg[2541]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2541),
      R => Reset
    );
\LOCKSTEP_Out_reg[2542]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2542),
      R => Reset
    );
\LOCKSTEP_Out_reg[2543]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2543),
      R => Reset
    );
\LOCKSTEP_Out_reg[2544]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2544),
      R => Reset
    );
\LOCKSTEP_Out_reg[2545]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2545),
      R => Reset
    );
\LOCKSTEP_Out_reg[2546]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2546),
      R => Reset
    );
\LOCKSTEP_Out_reg[2547]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2547),
      R => Reset
    );
\LOCKSTEP_Out_reg[2548]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2548),
      R => Reset
    );
\LOCKSTEP_Out_reg[2549]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2549),
      R => Reset
    );
\LOCKSTEP_Out_reg[254]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(254),
      R => Reset
    );
\LOCKSTEP_Out_reg[2550]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2550),
      R => Reset
    );
\LOCKSTEP_Out_reg[2551]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2551),
      R => Reset
    );
\LOCKSTEP_Out_reg[2552]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2552),
      R => Reset
    );
\LOCKSTEP_Out_reg[2553]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2553),
      R => Reset
    );
\LOCKSTEP_Out_reg[2554]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2554),
      R => Reset
    );
\LOCKSTEP_Out_reg[2555]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2555),
      R => Reset
    );
\LOCKSTEP_Out_reg[2556]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2556),
      R => Reset
    );
\LOCKSTEP_Out_reg[2557]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2557),
      R => Reset
    );
\LOCKSTEP_Out_reg[2558]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2558),
      R => Reset
    );
\LOCKSTEP_Out_reg[2559]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2559),
      R => Reset
    );
\LOCKSTEP_Out_reg[255]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(255),
      R => Reset
    );
\LOCKSTEP_Out_reg[2560]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2560),
      R => Reset
    );
\LOCKSTEP_Out_reg[2561]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2561),
      R => Reset
    );
\LOCKSTEP_Out_reg[2562]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2562),
      R => Reset
    );
\LOCKSTEP_Out_reg[2563]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2563),
      R => Reset
    );
\LOCKSTEP_Out_reg[2564]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2564),
      R => Reset
    );
\LOCKSTEP_Out_reg[2565]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2565),
      R => Reset
    );
\LOCKSTEP_Out_reg[2566]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2566),
      R => Reset
    );
\LOCKSTEP_Out_reg[2567]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2567),
      R => Reset
    );
\LOCKSTEP_Out_reg[2568]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2568),
      R => Reset
    );
\LOCKSTEP_Out_reg[2569]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2569),
      R => Reset
    );
\LOCKSTEP_Out_reg[256]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(256),
      R => Reset
    );
\LOCKSTEP_Out_reg[2570]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2570),
      R => Reset
    );
\LOCKSTEP_Out_reg[2571]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2571),
      R => Reset
    );
\LOCKSTEP_Out_reg[2572]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2572),
      R => Reset
    );
\LOCKSTEP_Out_reg[2573]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2573),
      R => Reset
    );
\LOCKSTEP_Out_reg[2574]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2574),
      R => Reset
    );
\LOCKSTEP_Out_reg[2575]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2575),
      R => Reset
    );
\LOCKSTEP_Out_reg[2576]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2576),
      R => Reset
    );
\LOCKSTEP_Out_reg[2577]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2577),
      R => Reset
    );
\LOCKSTEP_Out_reg[2578]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2578),
      R => Reset
    );
\LOCKSTEP_Out_reg[2579]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2579),
      R => Reset
    );
\LOCKSTEP_Out_reg[257]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(257),
      R => Reset
    );
\LOCKSTEP_Out_reg[2580]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2580),
      R => Reset
    );
\LOCKSTEP_Out_reg[2581]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2581),
      R => Reset
    );
\LOCKSTEP_Out_reg[2582]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2582),
      R => Reset
    );
\LOCKSTEP_Out_reg[2583]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2583),
      R => Reset
    );
\LOCKSTEP_Out_reg[2584]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2584),
      R => Reset
    );
\LOCKSTEP_Out_reg[2585]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2585),
      R => Reset
    );
\LOCKSTEP_Out_reg[2586]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2586),
      R => Reset
    );
\LOCKSTEP_Out_reg[2587]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2587),
      R => Reset
    );
\LOCKSTEP_Out_reg[2588]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2588),
      R => Reset
    );
\LOCKSTEP_Out_reg[2589]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2589),
      R => Reset
    );
\LOCKSTEP_Out_reg[258]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(258),
      R => Reset
    );
\LOCKSTEP_Out_reg[2590]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2590),
      R => Reset
    );
\LOCKSTEP_Out_reg[2591]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2591),
      R => Reset
    );
\LOCKSTEP_Out_reg[2592]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2592),
      R => Reset
    );
\LOCKSTEP_Out_reg[2593]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2593),
      R => Reset
    );
\LOCKSTEP_Out_reg[2594]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2594),
      R => Reset
    );
\LOCKSTEP_Out_reg[2595]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2595),
      R => Reset
    );
\LOCKSTEP_Out_reg[2596]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2596),
      R => Reset
    );
\LOCKSTEP_Out_reg[2597]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2597),
      R => Reset
    );
\LOCKSTEP_Out_reg[2598]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2598),
      R => Reset
    );
\LOCKSTEP_Out_reg[2599]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2599),
      R => Reset
    );
\LOCKSTEP_Out_reg[259]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(259),
      R => Reset
    );
\LOCKSTEP_Out_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(21),
      Q => LOCKSTEP_Out(25),
      R => Reset
    );
\LOCKSTEP_Out_reg[2600]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2600),
      R => Reset
    );
\LOCKSTEP_Out_reg[2601]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2601),
      R => Reset
    );
\LOCKSTEP_Out_reg[2602]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2602),
      R => Reset
    );
\LOCKSTEP_Out_reg[2603]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2603),
      R => Reset
    );
\LOCKSTEP_Out_reg[2604]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2604),
      R => Reset
    );
\LOCKSTEP_Out_reg[2605]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2605),
      R => Reset
    );
\LOCKSTEP_Out_reg[2606]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2606),
      R => Reset
    );
\LOCKSTEP_Out_reg[2607]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2607),
      R => Reset
    );
\LOCKSTEP_Out_reg[2608]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2608),
      R => Reset
    );
\LOCKSTEP_Out_reg[2609]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2609),
      R => Reset
    );
\LOCKSTEP_Out_reg[260]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(260),
      R => Reset
    );
\LOCKSTEP_Out_reg[2610]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2610),
      R => Reset
    );
\LOCKSTEP_Out_reg[2611]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2611),
      R => Reset
    );
\LOCKSTEP_Out_reg[2612]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2612),
      R => Reset
    );
\LOCKSTEP_Out_reg[2613]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2613),
      R => Reset
    );
\LOCKSTEP_Out_reg[2614]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2614),
      R => Reset
    );
\LOCKSTEP_Out_reg[2615]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2615),
      R => Reset
    );
\LOCKSTEP_Out_reg[2616]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2616),
      R => Reset
    );
\LOCKSTEP_Out_reg[2617]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2617),
      R => Reset
    );
\LOCKSTEP_Out_reg[2618]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2618),
      R => Reset
    );
\LOCKSTEP_Out_reg[2619]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2619),
      R => Reset
    );
\LOCKSTEP_Out_reg[261]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(261),
      R => Reset
    );
\LOCKSTEP_Out_reg[2620]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2620),
      R => Reset
    );
\LOCKSTEP_Out_reg[2621]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2621),
      R => Reset
    );
\LOCKSTEP_Out_reg[2622]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2622),
      R => Reset
    );
\LOCKSTEP_Out_reg[2623]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2623),
      R => Reset
    );
\LOCKSTEP_Out_reg[2624]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2624),
      R => Reset
    );
\LOCKSTEP_Out_reg[2625]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2625),
      R => Reset
    );
\LOCKSTEP_Out_reg[2626]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2626),
      R => Reset
    );
\LOCKSTEP_Out_reg[2627]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2627),
      R => Reset
    );
\LOCKSTEP_Out_reg[2628]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2628),
      R => Reset
    );
\LOCKSTEP_Out_reg[2629]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2629),
      R => Reset
    );
\LOCKSTEP_Out_reg[262]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(262),
      R => Reset
    );
\LOCKSTEP_Out_reg[2630]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2630),
      R => Reset
    );
\LOCKSTEP_Out_reg[2631]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2631),
      R => Reset
    );
\LOCKSTEP_Out_reg[2632]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2632),
      R => Reset
    );
\LOCKSTEP_Out_reg[2633]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2633),
      R => Reset
    );
\LOCKSTEP_Out_reg[2634]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2634),
      R => Reset
    );
\LOCKSTEP_Out_reg[2635]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2635),
      R => Reset
    );
\LOCKSTEP_Out_reg[2636]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2636),
      R => Reset
    );
\LOCKSTEP_Out_reg[2637]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2637),
      R => Reset
    );
\LOCKSTEP_Out_reg[2638]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2638),
      R => Reset
    );
\LOCKSTEP_Out_reg[2639]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2639),
      R => Reset
    );
\LOCKSTEP_Out_reg[263]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(263),
      R => Reset
    );
\LOCKSTEP_Out_reg[2640]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2640),
      R => Reset
    );
\LOCKSTEP_Out_reg[2641]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2641),
      R => Reset
    );
\LOCKSTEP_Out_reg[2642]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2642),
      R => Reset
    );
\LOCKSTEP_Out_reg[2643]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2643),
      R => Reset
    );
\LOCKSTEP_Out_reg[2644]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2644),
      R => Reset
    );
\LOCKSTEP_Out_reg[2645]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2645),
      R => Reset
    );
\LOCKSTEP_Out_reg[2646]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2646),
      R => Reset
    );
\LOCKSTEP_Out_reg[2647]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2647),
      R => Reset
    );
\LOCKSTEP_Out_reg[2648]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2648),
      R => Reset
    );
\LOCKSTEP_Out_reg[2649]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2649),
      R => Reset
    );
\LOCKSTEP_Out_reg[264]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(264),
      R => Reset
    );
\LOCKSTEP_Out_reg[2650]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2650),
      R => Reset
    );
\LOCKSTEP_Out_reg[2651]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2651),
      R => Reset
    );
\LOCKSTEP_Out_reg[2652]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2652),
      R => Reset
    );
\LOCKSTEP_Out_reg[2653]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2653),
      R => Reset
    );
\LOCKSTEP_Out_reg[2654]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2654),
      R => Reset
    );
\LOCKSTEP_Out_reg[2655]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2655),
      R => Reset
    );
\LOCKSTEP_Out_reg[2656]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2656),
      R => Reset
    );
\LOCKSTEP_Out_reg[2657]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2657),
      R => Reset
    );
\LOCKSTEP_Out_reg[2658]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2658),
      R => Reset
    );
\LOCKSTEP_Out_reg[2659]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2659),
      R => Reset
    );
\LOCKSTEP_Out_reg[265]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(265),
      R => Reset
    );
\LOCKSTEP_Out_reg[2660]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2660),
      R => Reset
    );
\LOCKSTEP_Out_reg[2661]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2661),
      R => Reset
    );
\LOCKSTEP_Out_reg[2662]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2662),
      R => Reset
    );
\LOCKSTEP_Out_reg[2663]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2663),
      R => Reset
    );
\LOCKSTEP_Out_reg[2664]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2664),
      R => Reset
    );
\LOCKSTEP_Out_reg[2665]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2665),
      R => Reset
    );
\LOCKSTEP_Out_reg[2666]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2666),
      R => Reset
    );
\LOCKSTEP_Out_reg[2667]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2667),
      R => Reset
    );
\LOCKSTEP_Out_reg[2668]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2668),
      R => Reset
    );
\LOCKSTEP_Out_reg[2669]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2669),
      R => Reset
    );
\LOCKSTEP_Out_reg[266]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(266),
      R => Reset
    );
\LOCKSTEP_Out_reg[2670]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2670),
      R => Reset
    );
\LOCKSTEP_Out_reg[2671]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2671),
      R => Reset
    );
\LOCKSTEP_Out_reg[2672]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2672),
      R => Reset
    );
\LOCKSTEP_Out_reg[2673]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2673),
      R => Reset
    );
\LOCKSTEP_Out_reg[2674]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2674),
      R => Reset
    );
\LOCKSTEP_Out_reg[2675]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2675),
      R => Reset
    );
\LOCKSTEP_Out_reg[2676]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2676),
      R => Reset
    );
\LOCKSTEP_Out_reg[2677]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2677),
      R => Reset
    );
\LOCKSTEP_Out_reg[2678]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2678),
      R => Reset
    );
\LOCKSTEP_Out_reg[2679]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2679),
      R => Reset
    );
\LOCKSTEP_Out_reg[267]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(267),
      R => Reset
    );
\LOCKSTEP_Out_reg[2680]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2680),
      R => Reset
    );
\LOCKSTEP_Out_reg[2681]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2681),
      R => Reset
    );
\LOCKSTEP_Out_reg[2682]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2682),
      R => Reset
    );
\LOCKSTEP_Out_reg[2683]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2683),
      R => Reset
    );
\LOCKSTEP_Out_reg[2684]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2684),
      R => Reset
    );
\LOCKSTEP_Out_reg[2685]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2685),
      R => Reset
    );
\LOCKSTEP_Out_reg[2686]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2686),
      R => Reset
    );
\LOCKSTEP_Out_reg[2687]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2687),
      R => Reset
    );
\LOCKSTEP_Out_reg[2688]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2688),
      R => Reset
    );
\LOCKSTEP_Out_reg[2689]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2689),
      R => Reset
    );
\LOCKSTEP_Out_reg[268]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(268),
      R => Reset
    );
\LOCKSTEP_Out_reg[2690]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2690),
      R => Reset
    );
\LOCKSTEP_Out_reg[2691]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2691),
      R => Reset
    );
\LOCKSTEP_Out_reg[2692]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2692),
      R => Reset
    );
\LOCKSTEP_Out_reg[2693]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2693),
      R => Reset
    );
\LOCKSTEP_Out_reg[2694]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2694),
      R => Reset
    );
\LOCKSTEP_Out_reg[2695]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2695),
      R => Reset
    );
\LOCKSTEP_Out_reg[2696]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2696),
      R => Reset
    );
\LOCKSTEP_Out_reg[2697]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2697),
      R => Reset
    );
\LOCKSTEP_Out_reg[2698]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2698),
      R => Reset
    );
\LOCKSTEP_Out_reg[2699]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2699),
      R => Reset
    );
\LOCKSTEP_Out_reg[269]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(269),
      R => Reset
    );
\LOCKSTEP_Out_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(22),
      Q => LOCKSTEP_Out(26),
      R => Reset
    );
\LOCKSTEP_Out_reg[2700]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2700),
      R => Reset
    );
\LOCKSTEP_Out_reg[2701]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2701),
      R => Reset
    );
\LOCKSTEP_Out_reg[2702]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2702),
      R => Reset
    );
\LOCKSTEP_Out_reg[2703]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2703),
      R => Reset
    );
\LOCKSTEP_Out_reg[2704]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2704),
      R => Reset
    );
\LOCKSTEP_Out_reg[2705]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2705),
      R => Reset
    );
\LOCKSTEP_Out_reg[2706]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2706),
      R => Reset
    );
\LOCKSTEP_Out_reg[2707]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2707),
      R => Reset
    );
\LOCKSTEP_Out_reg[2708]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2708),
      R => Reset
    );
\LOCKSTEP_Out_reg[2709]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2709),
      R => Reset
    );
\LOCKSTEP_Out_reg[270]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(270),
      R => Reset
    );
\LOCKSTEP_Out_reg[2710]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2710),
      R => Reset
    );
\LOCKSTEP_Out_reg[2711]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2711),
      R => Reset
    );
\LOCKSTEP_Out_reg[2712]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2712),
      R => Reset
    );
\LOCKSTEP_Out_reg[2713]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2713),
      R => Reset
    );
\LOCKSTEP_Out_reg[2714]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2714),
      R => Reset
    );
\LOCKSTEP_Out_reg[2715]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2715),
      R => Reset
    );
\LOCKSTEP_Out_reg[2716]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2716),
      R => Reset
    );
\LOCKSTEP_Out_reg[2717]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2717),
      R => Reset
    );
\LOCKSTEP_Out_reg[2718]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2718),
      R => Reset
    );
\LOCKSTEP_Out_reg[2719]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2719),
      R => Reset
    );
\LOCKSTEP_Out_reg[271]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(271),
      R => Reset
    );
\LOCKSTEP_Out_reg[2720]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2720),
      R => Reset
    );
\LOCKSTEP_Out_reg[2721]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2721),
      R => Reset
    );
\LOCKSTEP_Out_reg[2722]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2722),
      R => Reset
    );
\LOCKSTEP_Out_reg[2723]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2723),
      R => Reset
    );
\LOCKSTEP_Out_reg[2724]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2724),
      R => Reset
    );
\LOCKSTEP_Out_reg[2725]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2725),
      R => Reset
    );
\LOCKSTEP_Out_reg[2726]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2726),
      R => Reset
    );
\LOCKSTEP_Out_reg[2727]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2727),
      R => Reset
    );
\LOCKSTEP_Out_reg[2728]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2728),
      R => Reset
    );
\LOCKSTEP_Out_reg[2729]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2729),
      R => Reset
    );
\LOCKSTEP_Out_reg[272]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(272),
      R => Reset
    );
\LOCKSTEP_Out_reg[2730]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2730),
      R => Reset
    );
\LOCKSTEP_Out_reg[2731]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2731),
      R => Reset
    );
\LOCKSTEP_Out_reg[2732]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2732),
      R => Reset
    );
\LOCKSTEP_Out_reg[2733]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2733),
      R => Reset
    );
\LOCKSTEP_Out_reg[2734]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2734),
      R => Reset
    );
\LOCKSTEP_Out_reg[2735]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2735),
      R => Reset
    );
\LOCKSTEP_Out_reg[2736]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2736),
      R => Reset
    );
\LOCKSTEP_Out_reg[2737]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2737),
      R => Reset
    );
\LOCKSTEP_Out_reg[2738]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2738),
      R => Reset
    );
\LOCKSTEP_Out_reg[2739]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2739),
      R => Reset
    );
\LOCKSTEP_Out_reg[273]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(273),
      R => Reset
    );
\LOCKSTEP_Out_reg[2740]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2740),
      R => Reset
    );
\LOCKSTEP_Out_reg[2741]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2741),
      R => Reset
    );
\LOCKSTEP_Out_reg[2742]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2742),
      R => Reset
    );
\LOCKSTEP_Out_reg[2743]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2743),
      R => Reset
    );
\LOCKSTEP_Out_reg[2744]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2744),
      R => Reset
    );
\LOCKSTEP_Out_reg[2745]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2745),
      R => Reset
    );
\LOCKSTEP_Out_reg[2746]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2746),
      R => Reset
    );
\LOCKSTEP_Out_reg[2747]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2747),
      R => Reset
    );
\LOCKSTEP_Out_reg[2748]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2748),
      R => Reset
    );
\LOCKSTEP_Out_reg[2749]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2749),
      R => Reset
    );
\LOCKSTEP_Out_reg[274]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(274),
      R => Reset
    );
\LOCKSTEP_Out_reg[2750]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2750),
      R => Reset
    );
\LOCKSTEP_Out_reg[2751]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2751),
      R => Reset
    );
\LOCKSTEP_Out_reg[2752]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2752),
      R => Reset
    );
\LOCKSTEP_Out_reg[2753]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2753),
      R => Reset
    );
\LOCKSTEP_Out_reg[2754]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2754),
      R => Reset
    );
\LOCKSTEP_Out_reg[2755]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2755),
      R => Reset
    );
\LOCKSTEP_Out_reg[2756]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2756),
      R => Reset
    );
\LOCKSTEP_Out_reg[2757]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2757),
      R => Reset
    );
\LOCKSTEP_Out_reg[2758]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2758),
      R => Reset
    );
\LOCKSTEP_Out_reg[2759]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2759),
      R => Reset
    );
\LOCKSTEP_Out_reg[275]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(275),
      R => Reset
    );
\LOCKSTEP_Out_reg[2760]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2760),
      R => Reset
    );
\LOCKSTEP_Out_reg[2761]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2761),
      R => Reset
    );
\LOCKSTEP_Out_reg[2762]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2762),
      R => Reset
    );
\LOCKSTEP_Out_reg[2763]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2763),
      R => Reset
    );
\LOCKSTEP_Out_reg[2764]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2764),
      R => Reset
    );
\LOCKSTEP_Out_reg[2765]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2765),
      R => Reset
    );
\LOCKSTEP_Out_reg[2766]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2766),
      R => Reset
    );
\LOCKSTEP_Out_reg[2767]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2767),
      R => Reset
    );
\LOCKSTEP_Out_reg[2768]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2768),
      R => Reset
    );
\LOCKSTEP_Out_reg[2769]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2769),
      R => Reset
    );
\LOCKSTEP_Out_reg[276]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(276),
      R => Reset
    );
\LOCKSTEP_Out_reg[2770]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2770),
      R => Reset
    );
\LOCKSTEP_Out_reg[2771]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2771),
      R => Reset
    );
\LOCKSTEP_Out_reg[2772]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2772),
      R => Reset
    );
\LOCKSTEP_Out_reg[2773]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2773),
      R => Reset
    );
\LOCKSTEP_Out_reg[2774]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2774),
      R => Reset
    );
\LOCKSTEP_Out_reg[2775]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2775),
      R => Reset
    );
\LOCKSTEP_Out_reg[2776]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2776),
      R => Reset
    );
\LOCKSTEP_Out_reg[2777]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2777),
      R => Reset
    );
\LOCKSTEP_Out_reg[2778]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2778),
      R => Reset
    );
\LOCKSTEP_Out_reg[2779]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2779),
      R => Reset
    );
\LOCKSTEP_Out_reg[277]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(277),
      R => Reset
    );
\LOCKSTEP_Out_reg[2780]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2780),
      R => Reset
    );
\LOCKSTEP_Out_reg[2781]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2781),
      R => Reset
    );
\LOCKSTEP_Out_reg[2782]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2782),
      R => Reset
    );
\LOCKSTEP_Out_reg[2783]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2783),
      R => Reset
    );
\LOCKSTEP_Out_reg[2784]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2784),
      R => Reset
    );
\LOCKSTEP_Out_reg[2785]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2785),
      R => Reset
    );
\LOCKSTEP_Out_reg[2786]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2786),
      R => Reset
    );
\LOCKSTEP_Out_reg[2787]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2787),
      R => Reset
    );
\LOCKSTEP_Out_reg[2788]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2788),
      R => Reset
    );
\LOCKSTEP_Out_reg[2789]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2789),
      R => Reset
    );
\LOCKSTEP_Out_reg[278]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(278),
      R => Reset
    );
\LOCKSTEP_Out_reg[2790]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2790),
      R => Reset
    );
\LOCKSTEP_Out_reg[2791]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2791),
      R => Reset
    );
\LOCKSTEP_Out_reg[2792]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2792),
      R => Reset
    );
\LOCKSTEP_Out_reg[2793]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2793),
      R => Reset
    );
\LOCKSTEP_Out_reg[2794]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2794),
      R => Reset
    );
\LOCKSTEP_Out_reg[2795]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2795),
      R => Reset
    );
\LOCKSTEP_Out_reg[2796]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2796),
      R => Reset
    );
\LOCKSTEP_Out_reg[2797]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2797),
      R => Reset
    );
\LOCKSTEP_Out_reg[2798]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2798),
      R => Reset
    );
\LOCKSTEP_Out_reg[2799]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2799),
      R => Reset
    );
\LOCKSTEP_Out_reg[279]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(279),
      R => Reset
    );
\LOCKSTEP_Out_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(23),
      Q => LOCKSTEP_Out(27),
      R => Reset
    );
\LOCKSTEP_Out_reg[2800]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2800),
      R => Reset
    );
\LOCKSTEP_Out_reg[2801]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2801),
      R => Reset
    );
\LOCKSTEP_Out_reg[2802]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2802),
      R => Reset
    );
\LOCKSTEP_Out_reg[2803]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2803),
      R => Reset
    );
\LOCKSTEP_Out_reg[2804]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2804),
      R => Reset
    );
\LOCKSTEP_Out_reg[2805]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2805),
      R => Reset
    );
\LOCKSTEP_Out_reg[2806]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2806),
      R => Reset
    );
\LOCKSTEP_Out_reg[2807]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2807),
      R => Reset
    );
\LOCKSTEP_Out_reg[2808]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2808),
      R => Reset
    );
\LOCKSTEP_Out_reg[2809]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2809),
      R => Reset
    );
\LOCKSTEP_Out_reg[280]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(280),
      R => Reset
    );
\LOCKSTEP_Out_reg[2810]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2810),
      R => Reset
    );
\LOCKSTEP_Out_reg[2811]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2811),
      R => Reset
    );
\LOCKSTEP_Out_reg[2812]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2812),
      R => Reset
    );
\LOCKSTEP_Out_reg[2813]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2813),
      R => Reset
    );
\LOCKSTEP_Out_reg[2814]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2814),
      R => Reset
    );
\LOCKSTEP_Out_reg[2815]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2815),
      R => Reset
    );
\LOCKSTEP_Out_reg[2816]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2816),
      R => Reset
    );
\LOCKSTEP_Out_reg[2817]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2817),
      R => Reset
    );
\LOCKSTEP_Out_reg[2818]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2818),
      R => Reset
    );
\LOCKSTEP_Out_reg[2819]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2819),
      R => Reset
    );
\LOCKSTEP_Out_reg[281]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(281),
      R => Reset
    );
\LOCKSTEP_Out_reg[2820]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2820),
      R => Reset
    );
\LOCKSTEP_Out_reg[2821]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2821),
      R => Reset
    );
\LOCKSTEP_Out_reg[2822]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2822),
      R => Reset
    );
\LOCKSTEP_Out_reg[2823]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2823),
      R => Reset
    );
\LOCKSTEP_Out_reg[2824]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2824),
      R => Reset
    );
\LOCKSTEP_Out_reg[2825]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2825),
      R => Reset
    );
\LOCKSTEP_Out_reg[2826]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2826),
      R => Reset
    );
\LOCKSTEP_Out_reg[2827]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2827),
      R => Reset
    );
\LOCKSTEP_Out_reg[2828]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2828),
      R => Reset
    );
\LOCKSTEP_Out_reg[2829]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2829),
      R => Reset
    );
\LOCKSTEP_Out_reg[282]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(282),
      R => Reset
    );
\LOCKSTEP_Out_reg[2830]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2830),
      R => Reset
    );
\LOCKSTEP_Out_reg[2831]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2831),
      R => Reset
    );
\LOCKSTEP_Out_reg[2832]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2832),
      R => Reset
    );
\LOCKSTEP_Out_reg[2833]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2833),
      R => Reset
    );
\LOCKSTEP_Out_reg[2834]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2834),
      R => Reset
    );
\LOCKSTEP_Out_reg[2835]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2835),
      R => Reset
    );
\LOCKSTEP_Out_reg[2836]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2836),
      R => Reset
    );
\LOCKSTEP_Out_reg[2837]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2837),
      R => Reset
    );
\LOCKSTEP_Out_reg[2838]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2838),
      R => Reset
    );
\LOCKSTEP_Out_reg[2839]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2839),
      R => Reset
    );
\LOCKSTEP_Out_reg[283]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(283),
      R => Reset
    );
\LOCKSTEP_Out_reg[2840]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2840),
      R => Reset
    );
\LOCKSTEP_Out_reg[2841]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2841),
      R => Reset
    );
\LOCKSTEP_Out_reg[2842]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2842),
      R => Reset
    );
\LOCKSTEP_Out_reg[2843]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2843),
      R => Reset
    );
\LOCKSTEP_Out_reg[2844]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2844),
      R => Reset
    );
\LOCKSTEP_Out_reg[2845]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2845),
      R => Reset
    );
\LOCKSTEP_Out_reg[2846]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2846),
      R => Reset
    );
\LOCKSTEP_Out_reg[2847]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2847),
      R => Reset
    );
\LOCKSTEP_Out_reg[2848]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2848),
      R => Reset
    );
\LOCKSTEP_Out_reg[2849]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2849),
      R => Reset
    );
\LOCKSTEP_Out_reg[284]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(284),
      R => Reset
    );
\LOCKSTEP_Out_reg[2850]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2850),
      R => Reset
    );
\LOCKSTEP_Out_reg[2851]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2851),
      R => Reset
    );
\LOCKSTEP_Out_reg[2852]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2852),
      R => Reset
    );
\LOCKSTEP_Out_reg[2853]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2853),
      R => Reset
    );
\LOCKSTEP_Out_reg[2854]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2854),
      R => Reset
    );
\LOCKSTEP_Out_reg[2855]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2855),
      R => Reset
    );
\LOCKSTEP_Out_reg[2856]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2856),
      R => Reset
    );
\LOCKSTEP_Out_reg[2857]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2857),
      R => Reset
    );
\LOCKSTEP_Out_reg[2858]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2858),
      R => Reset
    );
\LOCKSTEP_Out_reg[2859]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2859),
      R => Reset
    );
\LOCKSTEP_Out_reg[285]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(285),
      R => Reset
    );
\LOCKSTEP_Out_reg[2860]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2860),
      R => Reset
    );
\LOCKSTEP_Out_reg[2861]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2861),
      R => Reset
    );
\LOCKSTEP_Out_reg[2862]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2862),
      R => Reset
    );
\LOCKSTEP_Out_reg[2863]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2863),
      R => Reset
    );
\LOCKSTEP_Out_reg[2864]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2864),
      R => Reset
    );
\LOCKSTEP_Out_reg[2865]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2865),
      R => Reset
    );
\LOCKSTEP_Out_reg[2866]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2866),
      R => Reset
    );
\LOCKSTEP_Out_reg[2867]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2867),
      R => Reset
    );
\LOCKSTEP_Out_reg[2868]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2868),
      R => Reset
    );
\LOCKSTEP_Out_reg[2869]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2869),
      R => Reset
    );
\LOCKSTEP_Out_reg[286]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(286),
      R => Reset
    );
\LOCKSTEP_Out_reg[2870]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2870),
      R => Reset
    );
\LOCKSTEP_Out_reg[2871]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2871),
      R => Reset
    );
\LOCKSTEP_Out_reg[2872]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2872),
      R => Reset
    );
\LOCKSTEP_Out_reg[2873]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2873),
      R => Reset
    );
\LOCKSTEP_Out_reg[2874]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2874),
      R => Reset
    );
\LOCKSTEP_Out_reg[2875]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2875),
      R => Reset
    );
\LOCKSTEP_Out_reg[2876]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2876),
      R => Reset
    );
\LOCKSTEP_Out_reg[2877]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2877),
      R => Reset
    );
\LOCKSTEP_Out_reg[2878]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2878),
      R => Reset
    );
\LOCKSTEP_Out_reg[2879]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2879),
      R => Reset
    );
\LOCKSTEP_Out_reg[287]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(287),
      R => Reset
    );
\LOCKSTEP_Out_reg[2880]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2880),
      R => Reset
    );
\LOCKSTEP_Out_reg[2881]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2881),
      R => Reset
    );
\LOCKSTEP_Out_reg[2882]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2882),
      R => Reset
    );
\LOCKSTEP_Out_reg[2883]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2883),
      R => Reset
    );
\LOCKSTEP_Out_reg[2884]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2884),
      R => Reset
    );
\LOCKSTEP_Out_reg[2885]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2885),
      R => Reset
    );
\LOCKSTEP_Out_reg[2886]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2886),
      R => Reset
    );
\LOCKSTEP_Out_reg[2887]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2887),
      R => Reset
    );
\LOCKSTEP_Out_reg[2888]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2888),
      R => Reset
    );
\LOCKSTEP_Out_reg[2889]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2889),
      R => Reset
    );
\LOCKSTEP_Out_reg[288]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(288),
      R => Reset
    );
\LOCKSTEP_Out_reg[2890]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2890),
      R => Reset
    );
\LOCKSTEP_Out_reg[2891]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2891),
      R => Reset
    );
\LOCKSTEP_Out_reg[2892]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2892),
      R => Reset
    );
\LOCKSTEP_Out_reg[2893]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2893),
      R => Reset
    );
\LOCKSTEP_Out_reg[2894]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2894),
      R => Reset
    );
\LOCKSTEP_Out_reg[2895]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2895),
      R => Reset
    );
\LOCKSTEP_Out_reg[2896]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2896),
      R => Reset
    );
\LOCKSTEP_Out_reg[2897]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2897),
      R => Reset
    );
\LOCKSTEP_Out_reg[2898]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2898),
      R => Reset
    );
\LOCKSTEP_Out_reg[2899]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2899),
      R => Reset
    );
\LOCKSTEP_Out_reg[289]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(289),
      R => Reset
    );
\LOCKSTEP_Out_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(24),
      Q => LOCKSTEP_Out(28),
      R => Reset
    );
\LOCKSTEP_Out_reg[2900]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2900),
      R => Reset
    );
\LOCKSTEP_Out_reg[2901]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2901),
      R => Reset
    );
\LOCKSTEP_Out_reg[2902]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2902),
      R => Reset
    );
\LOCKSTEP_Out_reg[2903]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2903),
      R => Reset
    );
\LOCKSTEP_Out_reg[2904]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2904),
      R => Reset
    );
\LOCKSTEP_Out_reg[2905]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2905),
      R => Reset
    );
\LOCKSTEP_Out_reg[2906]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2906),
      R => Reset
    );
\LOCKSTEP_Out_reg[2907]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2907),
      R => Reset
    );
\LOCKSTEP_Out_reg[2908]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2908),
      R => Reset
    );
\LOCKSTEP_Out_reg[2909]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2909),
      R => Reset
    );
\LOCKSTEP_Out_reg[290]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(290),
      R => Reset
    );
\LOCKSTEP_Out_reg[2910]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2910),
      R => Reset
    );
\LOCKSTEP_Out_reg[2911]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2911),
      R => Reset
    );
\LOCKSTEP_Out_reg[2912]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2912),
      R => Reset
    );
\LOCKSTEP_Out_reg[2913]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2913),
      R => Reset
    );
\LOCKSTEP_Out_reg[2914]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2914),
      R => Reset
    );
\LOCKSTEP_Out_reg[2915]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2915),
      R => Reset
    );
\LOCKSTEP_Out_reg[2916]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2916),
      R => Reset
    );
\LOCKSTEP_Out_reg[2917]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2917),
      R => Reset
    );
\LOCKSTEP_Out_reg[2918]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2918),
      R => Reset
    );
\LOCKSTEP_Out_reg[2919]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2919),
      R => Reset
    );
\LOCKSTEP_Out_reg[291]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(291),
      R => Reset
    );
\LOCKSTEP_Out_reg[2920]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2920),
      R => Reset
    );
\LOCKSTEP_Out_reg[2921]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2921),
      R => Reset
    );
\LOCKSTEP_Out_reg[2922]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2922),
      R => Reset
    );
\LOCKSTEP_Out_reg[2923]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2923),
      R => Reset
    );
\LOCKSTEP_Out_reg[2924]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2924),
      R => Reset
    );
\LOCKSTEP_Out_reg[2925]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2925),
      R => Reset
    );
\LOCKSTEP_Out_reg[2926]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2926),
      R => Reset
    );
\LOCKSTEP_Out_reg[2927]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2927),
      R => Reset
    );
\LOCKSTEP_Out_reg[2928]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2928),
      R => Reset
    );
\LOCKSTEP_Out_reg[2929]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2929),
      R => Reset
    );
\LOCKSTEP_Out_reg[292]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(292),
      R => Reset
    );
\LOCKSTEP_Out_reg[2930]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2930),
      R => Reset
    );
\LOCKSTEP_Out_reg[2931]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2931),
      R => Reset
    );
\LOCKSTEP_Out_reg[2932]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2932),
      R => Reset
    );
\LOCKSTEP_Out_reg[2933]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2933),
      R => Reset
    );
\LOCKSTEP_Out_reg[2934]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2934),
      R => Reset
    );
\LOCKSTEP_Out_reg[2935]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2935),
      R => Reset
    );
\LOCKSTEP_Out_reg[2936]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2936),
      R => Reset
    );
\LOCKSTEP_Out_reg[2937]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2937),
      R => Reset
    );
\LOCKSTEP_Out_reg[2938]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2938),
      R => Reset
    );
\LOCKSTEP_Out_reg[2939]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2939),
      R => Reset
    );
\LOCKSTEP_Out_reg[293]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(293),
      R => Reset
    );
\LOCKSTEP_Out_reg[2940]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2940),
      R => Reset
    );
\LOCKSTEP_Out_reg[2941]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2941),
      R => Reset
    );
\LOCKSTEP_Out_reg[2942]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2942),
      R => Reset
    );
\LOCKSTEP_Out_reg[2943]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2943),
      R => Reset
    );
\LOCKSTEP_Out_reg[2944]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2944),
      R => Reset
    );
\LOCKSTEP_Out_reg[2945]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2945),
      R => Reset
    );
\LOCKSTEP_Out_reg[2946]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2946),
      R => Reset
    );
\LOCKSTEP_Out_reg[2947]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2947),
      R => Reset
    );
\LOCKSTEP_Out_reg[2948]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2948),
      R => Reset
    );
\LOCKSTEP_Out_reg[2949]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2949),
      R => Reset
    );
\LOCKSTEP_Out_reg[294]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(294),
      R => Reset
    );
\LOCKSTEP_Out_reg[2950]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2950),
      R => Reset
    );
\LOCKSTEP_Out_reg[2951]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2951),
      R => Reset
    );
\LOCKSTEP_Out_reg[2952]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2952),
      R => Reset
    );
\LOCKSTEP_Out_reg[2953]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2953),
      R => Reset
    );
\LOCKSTEP_Out_reg[2954]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2954),
      R => Reset
    );
\LOCKSTEP_Out_reg[2955]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2955),
      R => Reset
    );
\LOCKSTEP_Out_reg[2956]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2956),
      R => Reset
    );
\LOCKSTEP_Out_reg[2957]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2957),
      R => Reset
    );
\LOCKSTEP_Out_reg[2958]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2958),
      R => Reset
    );
\LOCKSTEP_Out_reg[2959]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2959),
      R => Reset
    );
\LOCKSTEP_Out_reg[295]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(295),
      R => Reset
    );
\LOCKSTEP_Out_reg[2960]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2960),
      R => Reset
    );
\LOCKSTEP_Out_reg[2961]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2961),
      R => Reset
    );
\LOCKSTEP_Out_reg[2962]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2962),
      R => Reset
    );
\LOCKSTEP_Out_reg[2963]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2963),
      R => Reset
    );
\LOCKSTEP_Out_reg[2964]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2964),
      R => Reset
    );
\LOCKSTEP_Out_reg[2965]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2965),
      R => Reset
    );
\LOCKSTEP_Out_reg[2966]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2966),
      R => Reset
    );
\LOCKSTEP_Out_reg[2967]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2967),
      R => Reset
    );
\LOCKSTEP_Out_reg[2968]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2968),
      R => Reset
    );
\LOCKSTEP_Out_reg[2969]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2969),
      R => Reset
    );
\LOCKSTEP_Out_reg[296]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(296),
      R => Reset
    );
\LOCKSTEP_Out_reg[2970]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2970),
      R => Reset
    );
\LOCKSTEP_Out_reg[2971]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2971),
      R => Reset
    );
\LOCKSTEP_Out_reg[2972]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2972),
      R => Reset
    );
\LOCKSTEP_Out_reg[2973]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2973),
      R => Reset
    );
\LOCKSTEP_Out_reg[2974]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2974),
      R => Reset
    );
\LOCKSTEP_Out_reg[2975]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2975),
      R => Reset
    );
\LOCKSTEP_Out_reg[2976]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2976),
      R => Reset
    );
\LOCKSTEP_Out_reg[2977]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2977),
      R => Reset
    );
\LOCKSTEP_Out_reg[2978]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2978),
      R => Reset
    );
\LOCKSTEP_Out_reg[2979]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2979),
      R => Reset
    );
\LOCKSTEP_Out_reg[297]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(297),
      R => Reset
    );
\LOCKSTEP_Out_reg[2980]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2980),
      R => Reset
    );
\LOCKSTEP_Out_reg[2981]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2981),
      R => Reset
    );
\LOCKSTEP_Out_reg[2982]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2982),
      R => Reset
    );
\LOCKSTEP_Out_reg[2983]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2983),
      R => Reset
    );
\LOCKSTEP_Out_reg[2984]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2984),
      R => Reset
    );
\LOCKSTEP_Out_reg[2985]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2985),
      R => Reset
    );
\LOCKSTEP_Out_reg[2986]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2986),
      R => Reset
    );
\LOCKSTEP_Out_reg[2987]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2987),
      R => Reset
    );
\LOCKSTEP_Out_reg[2988]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2988),
      R => Reset
    );
\LOCKSTEP_Out_reg[2989]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2989),
      R => Reset
    );
\LOCKSTEP_Out_reg[298]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(298),
      R => Reset
    );
\LOCKSTEP_Out_reg[2990]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2990),
      R => Reset
    );
\LOCKSTEP_Out_reg[2991]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2991),
      R => Reset
    );
\LOCKSTEP_Out_reg[2992]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2992),
      R => Reset
    );
\LOCKSTEP_Out_reg[2993]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2993),
      R => Reset
    );
\LOCKSTEP_Out_reg[2994]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2994),
      R => Reset
    );
\LOCKSTEP_Out_reg[2995]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2995),
      R => Reset
    );
\LOCKSTEP_Out_reg[2996]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2996),
      R => Reset
    );
\LOCKSTEP_Out_reg[2997]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2997),
      R => Reset
    );
\LOCKSTEP_Out_reg[2998]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2998),
      R => Reset
    );
\LOCKSTEP_Out_reg[2999]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(2999),
      R => Reset
    );
\LOCKSTEP_Out_reg[299]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(299),
      R => Reset
    );
\LOCKSTEP_Out_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(25),
      Q => LOCKSTEP_Out(29),
      R => Reset
    );
\LOCKSTEP_Out_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^ifetch\,
      Q => LOCKSTEP_Out(2),
      R => Reset
    );
\LOCKSTEP_Out_reg[3000]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3000),
      R => Reset
    );
\LOCKSTEP_Out_reg[3001]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3001),
      R => Reset
    );
\LOCKSTEP_Out_reg[3002]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3002),
      R => Reset
    );
\LOCKSTEP_Out_reg[3003]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3003),
      R => Reset
    );
\LOCKSTEP_Out_reg[3004]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3004),
      R => Reset
    );
\LOCKSTEP_Out_reg[3005]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3005),
      R => Reset
    );
\LOCKSTEP_Out_reg[3006]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3006),
      R => Reset
    );
\LOCKSTEP_Out_reg[3007]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3007),
      R => Reset
    );
\LOCKSTEP_Out_reg[3008]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3008),
      R => Reset
    );
\LOCKSTEP_Out_reg[3009]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3009),
      R => Reset
    );
\LOCKSTEP_Out_reg[300]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(300),
      R => Reset
    );
\LOCKSTEP_Out_reg[3010]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3010),
      R => Reset
    );
\LOCKSTEP_Out_reg[3011]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3011),
      R => Reset
    );
\LOCKSTEP_Out_reg[3012]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3012),
      R => Reset
    );
\LOCKSTEP_Out_reg[3013]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3013),
      R => Reset
    );
\LOCKSTEP_Out_reg[3014]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3014),
      R => Reset
    );
\LOCKSTEP_Out_reg[3015]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3015),
      R => Reset
    );
\LOCKSTEP_Out_reg[3016]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3016),
      R => Reset
    );
\LOCKSTEP_Out_reg[3017]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3017),
      R => Reset
    );
\LOCKSTEP_Out_reg[3018]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3018),
      R => Reset
    );
\LOCKSTEP_Out_reg[3019]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3019),
      R => Reset
    );
\LOCKSTEP_Out_reg[301]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(301),
      R => Reset
    );
\LOCKSTEP_Out_reg[3020]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3020),
      R => Reset
    );
\LOCKSTEP_Out_reg[3021]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3021),
      R => Reset
    );
\LOCKSTEP_Out_reg[3022]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3022),
      R => Reset
    );
\LOCKSTEP_Out_reg[3023]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3023),
      R => Reset
    );
\LOCKSTEP_Out_reg[3024]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3024),
      R => Reset
    );
\LOCKSTEP_Out_reg[3025]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3025),
      R => Reset
    );
\LOCKSTEP_Out_reg[3026]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3026),
      R => Reset
    );
\LOCKSTEP_Out_reg[3027]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3027),
      R => Reset
    );
\LOCKSTEP_Out_reg[3028]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3028),
      R => Reset
    );
\LOCKSTEP_Out_reg[3029]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3029),
      R => Reset
    );
\LOCKSTEP_Out_reg[302]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(302),
      R => Reset
    );
\LOCKSTEP_Out_reg[3030]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3030),
      R => Reset
    );
\LOCKSTEP_Out_reg[3031]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3031),
      R => Reset
    );
\LOCKSTEP_Out_reg[3032]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3032),
      R => Reset
    );
\LOCKSTEP_Out_reg[3033]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3033),
      R => Reset
    );
\LOCKSTEP_Out_reg[3034]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3034),
      R => Reset
    );
\LOCKSTEP_Out_reg[3035]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3035),
      R => Reset
    );
\LOCKSTEP_Out_reg[3036]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3036),
      R => Reset
    );
\LOCKSTEP_Out_reg[3037]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3037),
      R => Reset
    );
\LOCKSTEP_Out_reg[3038]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3038),
      R => Reset
    );
\LOCKSTEP_Out_reg[3039]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3039),
      R => Reset
    );
\LOCKSTEP_Out_reg[303]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(303),
      R => Reset
    );
\LOCKSTEP_Out_reg[3040]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3040),
      R => Reset
    );
\LOCKSTEP_Out_reg[3041]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3041),
      R => Reset
    );
\LOCKSTEP_Out_reg[3042]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3042),
      R => Reset
    );
\LOCKSTEP_Out_reg[3043]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3043),
      R => Reset
    );
\LOCKSTEP_Out_reg[3044]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3044),
      R => Reset
    );
\LOCKSTEP_Out_reg[3045]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3045),
      R => Reset
    );
\LOCKSTEP_Out_reg[3046]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3046),
      R => Reset
    );
\LOCKSTEP_Out_reg[3047]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3047),
      R => Reset
    );
\LOCKSTEP_Out_reg[3048]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3048),
      R => Reset
    );
\LOCKSTEP_Out_reg[3049]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3049),
      R => Reset
    );
\LOCKSTEP_Out_reg[304]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(304),
      R => Reset
    );
\LOCKSTEP_Out_reg[3050]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3050),
      R => Reset
    );
\LOCKSTEP_Out_reg[3051]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3051),
      R => Reset
    );
\LOCKSTEP_Out_reg[3052]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3052),
      R => Reset
    );
\LOCKSTEP_Out_reg[3053]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3053),
      R => Reset
    );
\LOCKSTEP_Out_reg[3054]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3054),
      R => Reset
    );
\LOCKSTEP_Out_reg[3055]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3055),
      R => Reset
    );
\LOCKSTEP_Out_reg[3056]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3056),
      R => Reset
    );
\LOCKSTEP_Out_reg[3057]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3057),
      R => Reset
    );
\LOCKSTEP_Out_reg[3058]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3058),
      R => Reset
    );
\LOCKSTEP_Out_reg[3059]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3059),
      R => Reset
    );
\LOCKSTEP_Out_reg[305]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(305),
      R => Reset
    );
\LOCKSTEP_Out_reg[3060]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3060),
      R => Reset
    );
\LOCKSTEP_Out_reg[3061]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3061),
      R => Reset
    );
\LOCKSTEP_Out_reg[3062]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3062),
      R => Reset
    );
\LOCKSTEP_Out_reg[3063]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3063),
      R => Reset
    );
\LOCKSTEP_Out_reg[3064]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3064),
      R => Reset
    );
\LOCKSTEP_Out_reg[3065]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3065),
      R => Reset
    );
\LOCKSTEP_Out_reg[3066]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3066),
      R => Reset
    );
\LOCKSTEP_Out_reg[3067]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3067),
      R => Reset
    );
\LOCKSTEP_Out_reg[3068]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3068),
      R => Reset
    );
\LOCKSTEP_Out_reg[3069]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3069),
      R => Reset
    );
\LOCKSTEP_Out_reg[306]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(306),
      R => Reset
    );
\LOCKSTEP_Out_reg[3070]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3070),
      R => Reset
    );
\LOCKSTEP_Out_reg[3071]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3071),
      R => Reset
    );
\LOCKSTEP_Out_reg[3072]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3072),
      R => Reset
    );
\LOCKSTEP_Out_reg[3073]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3073),
      R => Reset
    );
\LOCKSTEP_Out_reg[3074]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3074),
      R => Reset
    );
\LOCKSTEP_Out_reg[3075]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3075),
      R => Reset
    );
\LOCKSTEP_Out_reg[3076]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3076),
      R => Reset
    );
\LOCKSTEP_Out_reg[3077]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3077),
      R => Reset
    );
\LOCKSTEP_Out_reg[3078]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3078),
      R => Reset
    );
\LOCKSTEP_Out_reg[3079]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3079),
      R => Reset
    );
\LOCKSTEP_Out_reg[307]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(307),
      R => Reset
    );
\LOCKSTEP_Out_reg[3080]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3080),
      R => Reset
    );
\LOCKSTEP_Out_reg[3081]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3081),
      R => Reset
    );
\LOCKSTEP_Out_reg[3082]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3082),
      R => Reset
    );
\LOCKSTEP_Out_reg[3083]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3083),
      R => Reset
    );
\LOCKSTEP_Out_reg[3084]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3084),
      R => Reset
    );
\LOCKSTEP_Out_reg[3085]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3085),
      R => Reset
    );
\LOCKSTEP_Out_reg[3086]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3086),
      R => Reset
    );
\LOCKSTEP_Out_reg[3087]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3087),
      R => Reset
    );
\LOCKSTEP_Out_reg[3088]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3088),
      R => Reset
    );
\LOCKSTEP_Out_reg[3089]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3089),
      R => Reset
    );
\LOCKSTEP_Out_reg[308]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(308),
      R => Reset
    );
\LOCKSTEP_Out_reg[3090]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3090),
      R => Reset
    );
\LOCKSTEP_Out_reg[3091]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3091),
      R => Reset
    );
\LOCKSTEP_Out_reg[3092]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3092),
      R => Reset
    );
\LOCKSTEP_Out_reg[3093]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3093),
      R => Reset
    );
\LOCKSTEP_Out_reg[3094]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3094),
      R => Reset
    );
\LOCKSTEP_Out_reg[3095]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3095),
      R => Reset
    );
\LOCKSTEP_Out_reg[3096]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3096),
      R => Reset
    );
\LOCKSTEP_Out_reg[3097]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3097),
      R => Reset
    );
\LOCKSTEP_Out_reg[3098]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3098),
      R => Reset
    );
\LOCKSTEP_Out_reg[3099]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3099),
      R => Reset
    );
\LOCKSTEP_Out_reg[309]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(309),
      R => Reset
    );
\LOCKSTEP_Out_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(26),
      Q => LOCKSTEP_Out(30),
      R => Reset
    );
\LOCKSTEP_Out_reg[3100]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3100),
      R => Reset
    );
\LOCKSTEP_Out_reg[3101]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3101),
      R => Reset
    );
\LOCKSTEP_Out_reg[3102]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3102),
      R => Reset
    );
\LOCKSTEP_Out_reg[3103]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3103),
      R => Reset
    );
\LOCKSTEP_Out_reg[3104]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3104),
      R => Reset
    );
\LOCKSTEP_Out_reg[3105]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3105),
      R => Reset
    );
\LOCKSTEP_Out_reg[3106]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3106),
      R => Reset
    );
\LOCKSTEP_Out_reg[3107]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3107),
      R => Reset
    );
\LOCKSTEP_Out_reg[3108]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3108),
      R => Reset
    );
\LOCKSTEP_Out_reg[3109]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3109),
      R => Reset
    );
\LOCKSTEP_Out_reg[310]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(310),
      R => Reset
    );
\LOCKSTEP_Out_reg[3110]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3110),
      R => Reset
    );
\LOCKSTEP_Out_reg[3111]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3111),
      R => Reset
    );
\LOCKSTEP_Out_reg[3112]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3112),
      R => Reset
    );
\LOCKSTEP_Out_reg[3113]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3113),
      R => Reset
    );
\LOCKSTEP_Out_reg[3114]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3114),
      R => Reset
    );
\LOCKSTEP_Out_reg[3115]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3115),
      R => Reset
    );
\LOCKSTEP_Out_reg[3116]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3116),
      R => Reset
    );
\LOCKSTEP_Out_reg[3117]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3117),
      R => Reset
    );
\LOCKSTEP_Out_reg[3118]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3118),
      R => Reset
    );
\LOCKSTEP_Out_reg[3119]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3119),
      R => Reset
    );
\LOCKSTEP_Out_reg[311]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(311),
      R => Reset
    );
\LOCKSTEP_Out_reg[3120]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3120),
      R => Reset
    );
\LOCKSTEP_Out_reg[3121]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3121),
      R => Reset
    );
\LOCKSTEP_Out_reg[3122]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3122),
      R => Reset
    );
\LOCKSTEP_Out_reg[3123]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3123),
      R => Reset
    );
\LOCKSTEP_Out_reg[3124]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3124),
      R => Reset
    );
\LOCKSTEP_Out_reg[3125]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3125),
      R => Reset
    );
\LOCKSTEP_Out_reg[3126]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3126),
      R => Reset
    );
\LOCKSTEP_Out_reg[3127]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3127),
      R => Reset
    );
\LOCKSTEP_Out_reg[3128]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3128),
      R => Reset
    );
\LOCKSTEP_Out_reg[3129]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3129),
      R => Reset
    );
\LOCKSTEP_Out_reg[312]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(312),
      R => Reset
    );
\LOCKSTEP_Out_reg[3130]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3130),
      R => Reset
    );
\LOCKSTEP_Out_reg[3131]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3131),
      R => Reset
    );
\LOCKSTEP_Out_reg[3132]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3132),
      R => Reset
    );
\LOCKSTEP_Out_reg[3133]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3133),
      R => Reset
    );
\LOCKSTEP_Out_reg[3134]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3134),
      R => Reset
    );
\LOCKSTEP_Out_reg[3135]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3135),
      R => Reset
    );
\LOCKSTEP_Out_reg[3136]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3136),
      R => Reset
    );
\LOCKSTEP_Out_reg[3137]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3137),
      R => Reset
    );
\LOCKSTEP_Out_reg[3138]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3138),
      R => Reset
    );
\LOCKSTEP_Out_reg[3139]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3139),
      R => Reset
    );
\LOCKSTEP_Out_reg[313]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(313),
      R => Reset
    );
\LOCKSTEP_Out_reg[3140]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3140),
      R => Reset
    );
\LOCKSTEP_Out_reg[3141]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3141),
      R => Reset
    );
\LOCKSTEP_Out_reg[3142]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3142),
      R => Reset
    );
\LOCKSTEP_Out_reg[3143]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3143),
      R => Reset
    );
\LOCKSTEP_Out_reg[3144]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3144),
      R => Reset
    );
\LOCKSTEP_Out_reg[3145]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3145),
      R => Reset
    );
\LOCKSTEP_Out_reg[3146]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3146),
      R => Reset
    );
\LOCKSTEP_Out_reg[3147]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3147),
      R => Reset
    );
\LOCKSTEP_Out_reg[3148]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3148),
      R => Reset
    );
\LOCKSTEP_Out_reg[3149]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3149),
      R => Reset
    );
\LOCKSTEP_Out_reg[314]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(314),
      R => Reset
    );
\LOCKSTEP_Out_reg[3150]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3150),
      R => Reset
    );
\LOCKSTEP_Out_reg[3151]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3151),
      R => Reset
    );
\LOCKSTEP_Out_reg[3152]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3152),
      R => Reset
    );
\LOCKSTEP_Out_reg[3153]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3153),
      R => Reset
    );
\LOCKSTEP_Out_reg[3154]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3154),
      R => Reset
    );
\LOCKSTEP_Out_reg[3155]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3155),
      R => Reset
    );
\LOCKSTEP_Out_reg[3156]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3156),
      R => Reset
    );
\LOCKSTEP_Out_reg[3157]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3157),
      R => Reset
    );
\LOCKSTEP_Out_reg[3158]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3158),
      R => Reset
    );
\LOCKSTEP_Out_reg[3159]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3159),
      R => Reset
    );
\LOCKSTEP_Out_reg[315]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(315),
      R => Reset
    );
\LOCKSTEP_Out_reg[3160]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3160),
      R => Reset
    );
\LOCKSTEP_Out_reg[3161]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3161),
      R => Reset
    );
\LOCKSTEP_Out_reg[3162]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3162),
      R => Reset
    );
\LOCKSTEP_Out_reg[3163]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3163),
      R => Reset
    );
\LOCKSTEP_Out_reg[3164]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3164),
      R => Reset
    );
\LOCKSTEP_Out_reg[3165]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3165),
      R => Reset
    );
\LOCKSTEP_Out_reg[3166]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3166),
      R => Reset
    );
\LOCKSTEP_Out_reg[3167]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3167),
      R => Reset
    );
\LOCKSTEP_Out_reg[3168]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3168),
      R => Reset
    );
\LOCKSTEP_Out_reg[3169]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3169),
      R => Reset
    );
\LOCKSTEP_Out_reg[316]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(316),
      R => Reset
    );
\LOCKSTEP_Out_reg[3170]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3170),
      R => Reset
    );
\LOCKSTEP_Out_reg[3171]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3171),
      R => Reset
    );
\LOCKSTEP_Out_reg[3172]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3172),
      R => Reset
    );
\LOCKSTEP_Out_reg[3173]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3173),
      R => Reset
    );
\LOCKSTEP_Out_reg[3174]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3174),
      R => Reset
    );
\LOCKSTEP_Out_reg[3175]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3175),
      R => Reset
    );
\LOCKSTEP_Out_reg[3176]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3176),
      R => Reset
    );
\LOCKSTEP_Out_reg[3177]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3177),
      R => Reset
    );
\LOCKSTEP_Out_reg[3178]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3178),
      R => Reset
    );
\LOCKSTEP_Out_reg[3179]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3179),
      R => Reset
    );
\LOCKSTEP_Out_reg[317]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(317),
      R => Reset
    );
\LOCKSTEP_Out_reg[3180]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3180),
      R => Reset
    );
\LOCKSTEP_Out_reg[3181]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3181),
      R => Reset
    );
\LOCKSTEP_Out_reg[3182]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3182),
      R => Reset
    );
\LOCKSTEP_Out_reg[3183]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3183),
      R => Reset
    );
\LOCKSTEP_Out_reg[3184]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3184),
      R => Reset
    );
\LOCKSTEP_Out_reg[3185]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3185),
      R => Reset
    );
\LOCKSTEP_Out_reg[3186]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3186),
      R => Reset
    );
\LOCKSTEP_Out_reg[3187]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3187),
      R => Reset
    );
\LOCKSTEP_Out_reg[3188]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3188),
      R => Reset
    );
\LOCKSTEP_Out_reg[3189]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3189),
      R => Reset
    );
\LOCKSTEP_Out_reg[318]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(318),
      R => Reset
    );
\LOCKSTEP_Out_reg[3190]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3190),
      R => Reset
    );
\LOCKSTEP_Out_reg[3191]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3191),
      R => Reset
    );
\LOCKSTEP_Out_reg[3192]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3192),
      R => Reset
    );
\LOCKSTEP_Out_reg[3193]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3193),
      R => Reset
    );
\LOCKSTEP_Out_reg[3194]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3194),
      R => Reset
    );
\LOCKSTEP_Out_reg[3195]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3195),
      R => Reset
    );
\LOCKSTEP_Out_reg[3196]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3196),
      R => Reset
    );
\LOCKSTEP_Out_reg[3197]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3197),
      R => Reset
    );
\LOCKSTEP_Out_reg[3198]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3198),
      R => Reset
    );
\LOCKSTEP_Out_reg[3199]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3199),
      R => Reset
    );
\LOCKSTEP_Out_reg[319]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(319),
      R => Reset
    );
\LOCKSTEP_Out_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(27),
      Q => LOCKSTEP_Out(31),
      R => Reset
    );
\LOCKSTEP_Out_reg[3200]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3200),
      R => Reset
    );
\LOCKSTEP_Out_reg[3201]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3201),
      R => Reset
    );
\LOCKSTEP_Out_reg[3202]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3202),
      R => Reset
    );
\LOCKSTEP_Out_reg[3203]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3203),
      R => Reset
    );
\LOCKSTEP_Out_reg[3204]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3204),
      R => Reset
    );
\LOCKSTEP_Out_reg[3205]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3205),
      R => Reset
    );
\LOCKSTEP_Out_reg[3206]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3206),
      R => Reset
    );
\LOCKSTEP_Out_reg[3207]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3207),
      R => Reset
    );
\LOCKSTEP_Out_reg[3208]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3208),
      R => Reset
    );
\LOCKSTEP_Out_reg[3209]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3209),
      R => Reset
    );
\LOCKSTEP_Out_reg[320]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(320),
      R => Reset
    );
\LOCKSTEP_Out_reg[3210]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3210),
      R => Reset
    );
\LOCKSTEP_Out_reg[3211]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3211),
      R => Reset
    );
\LOCKSTEP_Out_reg[3212]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3212),
      R => Reset
    );
\LOCKSTEP_Out_reg[3213]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3213),
      R => Reset
    );
\LOCKSTEP_Out_reg[3214]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3214),
      R => Reset
    );
\LOCKSTEP_Out_reg[3215]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3215),
      R => Reset
    );
\LOCKSTEP_Out_reg[3216]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3216),
      R => Reset
    );
\LOCKSTEP_Out_reg[3217]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3217),
      R => Reset
    );
\LOCKSTEP_Out_reg[3218]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3218),
      R => Reset
    );
\LOCKSTEP_Out_reg[3219]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3219),
      R => Reset
    );
\LOCKSTEP_Out_reg[321]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(321),
      R => Reset
    );
\LOCKSTEP_Out_reg[3220]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3220),
      R => Reset
    );
\LOCKSTEP_Out_reg[3221]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3221),
      R => Reset
    );
\LOCKSTEP_Out_reg[3222]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3222),
      R => Reset
    );
\LOCKSTEP_Out_reg[3223]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3223),
      R => Reset
    );
\LOCKSTEP_Out_reg[3224]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3224),
      R => Reset
    );
\LOCKSTEP_Out_reg[3225]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3225),
      R => Reset
    );
\LOCKSTEP_Out_reg[3226]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3226),
      R => Reset
    );
\LOCKSTEP_Out_reg[3227]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3227),
      R => Reset
    );
\LOCKSTEP_Out_reg[3228]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3228),
      R => Reset
    );
\LOCKSTEP_Out_reg[3229]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3229),
      R => Reset
    );
\LOCKSTEP_Out_reg[322]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(322),
      R => Reset
    );
\LOCKSTEP_Out_reg[3230]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3230),
      R => Reset
    );
\LOCKSTEP_Out_reg[3231]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3231),
      R => Reset
    );
\LOCKSTEP_Out_reg[3232]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3232),
      R => Reset
    );
\LOCKSTEP_Out_reg[3233]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3233),
      R => Reset
    );
\LOCKSTEP_Out_reg[3234]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3234),
      R => Reset
    );
\LOCKSTEP_Out_reg[3235]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3235),
      R => Reset
    );
\LOCKSTEP_Out_reg[3236]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3236),
      R => Reset
    );
\LOCKSTEP_Out_reg[3237]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3237),
      R => Reset
    );
\LOCKSTEP_Out_reg[3238]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3238),
      R => Reset
    );
\LOCKSTEP_Out_reg[3239]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3239),
      R => Reset
    );
\LOCKSTEP_Out_reg[323]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(323),
      R => Reset
    );
\LOCKSTEP_Out_reg[3240]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3240),
      R => Reset
    );
\LOCKSTEP_Out_reg[3241]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3241),
      R => Reset
    );
\LOCKSTEP_Out_reg[3242]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3242),
      R => Reset
    );
\LOCKSTEP_Out_reg[3243]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3243),
      R => Reset
    );
\LOCKSTEP_Out_reg[3244]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3244),
      R => Reset
    );
\LOCKSTEP_Out_reg[3245]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3245),
      R => Reset
    );
\LOCKSTEP_Out_reg[3246]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3246),
      R => Reset
    );
\LOCKSTEP_Out_reg[3247]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3247),
      R => Reset
    );
\LOCKSTEP_Out_reg[3248]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3248),
      R => Reset
    );
\LOCKSTEP_Out_reg[3249]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3249),
      R => Reset
    );
\LOCKSTEP_Out_reg[324]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(324),
      R => Reset
    );
\LOCKSTEP_Out_reg[3250]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3250),
      R => Reset
    );
\LOCKSTEP_Out_reg[3251]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3251),
      R => Reset
    );
\LOCKSTEP_Out_reg[3252]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3252),
      R => Reset
    );
\LOCKSTEP_Out_reg[3253]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3253),
      R => Reset
    );
\LOCKSTEP_Out_reg[3254]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3254),
      R => Reset
    );
\LOCKSTEP_Out_reg[3255]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3255),
      R => Reset
    );
\LOCKSTEP_Out_reg[3256]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3256),
      R => Reset
    );
\LOCKSTEP_Out_reg[3257]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3257),
      R => Reset
    );
\LOCKSTEP_Out_reg[3258]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3258),
      R => Reset
    );
\LOCKSTEP_Out_reg[3259]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3259),
      R => Reset
    );
\LOCKSTEP_Out_reg[325]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(325),
      R => Reset
    );
\LOCKSTEP_Out_reg[3260]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3260),
      R => Reset
    );
\LOCKSTEP_Out_reg[3261]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3261),
      R => Reset
    );
\LOCKSTEP_Out_reg[3262]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3262),
      R => Reset
    );
\LOCKSTEP_Out_reg[3263]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3263),
      R => Reset
    );
\LOCKSTEP_Out_reg[3264]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3264),
      R => Reset
    );
\LOCKSTEP_Out_reg[3265]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3265),
      R => Reset
    );
\LOCKSTEP_Out_reg[3266]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3266),
      R => Reset
    );
\LOCKSTEP_Out_reg[3267]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3267),
      R => Reset
    );
\LOCKSTEP_Out_reg[3268]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3268),
      R => Reset
    );
\LOCKSTEP_Out_reg[3269]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3269),
      R => Reset
    );
\LOCKSTEP_Out_reg[326]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(326),
      R => Reset
    );
\LOCKSTEP_Out_reg[3270]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3270),
      R => Reset
    );
\LOCKSTEP_Out_reg[3271]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3271),
      R => Reset
    );
\LOCKSTEP_Out_reg[3272]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3272),
      R => Reset
    );
\LOCKSTEP_Out_reg[3273]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3273),
      R => Reset
    );
\LOCKSTEP_Out_reg[3274]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3274),
      R => Reset
    );
\LOCKSTEP_Out_reg[3275]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3275),
      R => Reset
    );
\LOCKSTEP_Out_reg[3276]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3276),
      R => Reset
    );
\LOCKSTEP_Out_reg[3277]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3277),
      R => Reset
    );
\LOCKSTEP_Out_reg[3278]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3278),
      R => Reset
    );
\LOCKSTEP_Out_reg[3279]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3279),
      R => Reset
    );
\LOCKSTEP_Out_reg[327]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(327),
      R => Reset
    );
\LOCKSTEP_Out_reg[3280]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3280),
      R => Reset
    );
\LOCKSTEP_Out_reg[3281]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3281),
      R => Reset
    );
\LOCKSTEP_Out_reg[3282]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3282),
      R => Reset
    );
\LOCKSTEP_Out_reg[3283]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3283),
      R => Reset
    );
\LOCKSTEP_Out_reg[3284]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3284),
      R => Reset
    );
\LOCKSTEP_Out_reg[3285]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3285),
      R => Reset
    );
\LOCKSTEP_Out_reg[3286]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3286),
      R => Reset
    );
\LOCKSTEP_Out_reg[3287]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3287),
      R => Reset
    );
\LOCKSTEP_Out_reg[3288]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3288),
      R => Reset
    );
\LOCKSTEP_Out_reg[3289]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3289),
      R => Reset
    );
\LOCKSTEP_Out_reg[328]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(328),
      R => Reset
    );
\LOCKSTEP_Out_reg[3290]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3290),
      R => Reset
    );
\LOCKSTEP_Out_reg[3291]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3291),
      R => Reset
    );
\LOCKSTEP_Out_reg[3292]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3292),
      R => Reset
    );
\LOCKSTEP_Out_reg[3293]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3293),
      R => Reset
    );
\LOCKSTEP_Out_reg[3294]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3294),
      R => Reset
    );
\LOCKSTEP_Out_reg[3295]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3295),
      R => Reset
    );
\LOCKSTEP_Out_reg[3296]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3296),
      R => Reset
    );
\LOCKSTEP_Out_reg[3297]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3297),
      R => Reset
    );
\LOCKSTEP_Out_reg[3298]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3298),
      R => Reset
    );
\LOCKSTEP_Out_reg[3299]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3299),
      R => Reset
    );
\LOCKSTEP_Out_reg[329]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(329),
      R => Reset
    );
\LOCKSTEP_Out_reg[32]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(28),
      Q => LOCKSTEP_Out(32),
      R => Reset
    );
\LOCKSTEP_Out_reg[3300]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3300),
      R => Reset
    );
\LOCKSTEP_Out_reg[3301]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3301),
      R => Reset
    );
\LOCKSTEP_Out_reg[3302]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3302),
      R => Reset
    );
\LOCKSTEP_Out_reg[3303]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3303),
      R => Reset
    );
\LOCKSTEP_Out_reg[3304]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3304),
      R => Reset
    );
\LOCKSTEP_Out_reg[3305]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3305),
      R => Reset
    );
\LOCKSTEP_Out_reg[3306]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3306),
      R => Reset
    );
\LOCKSTEP_Out_reg[3307]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3307),
      R => Reset
    );
\LOCKSTEP_Out_reg[3308]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3308),
      R => Reset
    );
\LOCKSTEP_Out_reg[3309]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3309),
      R => Reset
    );
\LOCKSTEP_Out_reg[330]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(330),
      R => Reset
    );
\LOCKSTEP_Out_reg[3310]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3310),
      R => Reset
    );
\LOCKSTEP_Out_reg[3311]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3311),
      R => Reset
    );
\LOCKSTEP_Out_reg[3312]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3312),
      R => Reset
    );
\LOCKSTEP_Out_reg[3313]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3313),
      R => Reset
    );
\LOCKSTEP_Out_reg[3314]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3314),
      R => Reset
    );
\LOCKSTEP_Out_reg[3315]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3315),
      R => Reset
    );
\LOCKSTEP_Out_reg[3316]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3316),
      R => Reset
    );
\LOCKSTEP_Out_reg[3317]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3317),
      R => Reset
    );
\LOCKSTEP_Out_reg[3318]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3318),
      R => Reset
    );
\LOCKSTEP_Out_reg[3319]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3319),
      R => Reset
    );
\LOCKSTEP_Out_reg[331]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(331),
      R => Reset
    );
\LOCKSTEP_Out_reg[3320]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3320),
      R => Reset
    );
\LOCKSTEP_Out_reg[3321]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3321),
      R => Reset
    );
\LOCKSTEP_Out_reg[3322]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3322),
      R => Reset
    );
\LOCKSTEP_Out_reg[3323]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3323),
      R => Reset
    );
\LOCKSTEP_Out_reg[3324]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3324),
      R => Reset
    );
\LOCKSTEP_Out_reg[3325]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3325),
      R => Reset
    );
\LOCKSTEP_Out_reg[3326]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3326),
      R => Reset
    );
\LOCKSTEP_Out_reg[3327]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3327),
      R => Reset
    );
\LOCKSTEP_Out_reg[3328]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3328),
      R => Reset
    );
\LOCKSTEP_Out_reg[3329]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3329),
      R => Reset
    );
\LOCKSTEP_Out_reg[332]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(332),
      R => Reset
    );
\LOCKSTEP_Out_reg[3330]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3330),
      R => Reset
    );
\LOCKSTEP_Out_reg[3331]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3331),
      R => Reset
    );
\LOCKSTEP_Out_reg[3332]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3332),
      R => Reset
    );
\LOCKSTEP_Out_reg[3333]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3333),
      R => Reset
    );
\LOCKSTEP_Out_reg[3334]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3334),
      R => Reset
    );
\LOCKSTEP_Out_reg[3335]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3335),
      R => Reset
    );
\LOCKSTEP_Out_reg[3336]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3336),
      R => Reset
    );
\LOCKSTEP_Out_reg[3337]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3337),
      R => Reset
    );
\LOCKSTEP_Out_reg[3338]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3338),
      R => Reset
    );
\LOCKSTEP_Out_reg[3339]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3339),
      R => Reset
    );
\LOCKSTEP_Out_reg[333]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(333),
      R => Reset
    );
\LOCKSTEP_Out_reg[3340]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3340),
      R => Reset
    );
\LOCKSTEP_Out_reg[3341]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3341),
      R => Reset
    );
\LOCKSTEP_Out_reg[3342]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3342),
      R => Reset
    );
\LOCKSTEP_Out_reg[3343]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3343),
      R => Reset
    );
\LOCKSTEP_Out_reg[3344]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3344),
      R => Reset
    );
\LOCKSTEP_Out_reg[3345]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3345),
      R => Reset
    );
\LOCKSTEP_Out_reg[3346]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3346),
      R => Reset
    );
\LOCKSTEP_Out_reg[3347]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3347),
      R => Reset
    );
\LOCKSTEP_Out_reg[3348]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3348),
      R => Reset
    );
\LOCKSTEP_Out_reg[3349]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3349),
      R => Reset
    );
\LOCKSTEP_Out_reg[334]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(334),
      R => Reset
    );
\LOCKSTEP_Out_reg[3350]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3350),
      R => Reset
    );
\LOCKSTEP_Out_reg[3351]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3351),
      R => Reset
    );
\LOCKSTEP_Out_reg[3352]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3352),
      R => Reset
    );
\LOCKSTEP_Out_reg[3353]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3353),
      R => Reset
    );
\LOCKSTEP_Out_reg[3354]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3354),
      R => Reset
    );
\LOCKSTEP_Out_reg[3355]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3355),
      R => Reset
    );
\LOCKSTEP_Out_reg[3356]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3356),
      R => Reset
    );
\LOCKSTEP_Out_reg[3357]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3357),
      R => Reset
    );
\LOCKSTEP_Out_reg[3358]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3358),
      R => Reset
    );
\LOCKSTEP_Out_reg[3359]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3359),
      R => Reset
    );
\LOCKSTEP_Out_reg[335]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(335),
      R => Reset
    );
\LOCKSTEP_Out_reg[3360]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3360),
      R => Reset
    );
\LOCKSTEP_Out_reg[3361]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3361),
      R => Reset
    );
\LOCKSTEP_Out_reg[3362]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3362),
      R => Reset
    );
\LOCKSTEP_Out_reg[3363]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3363),
      R => Reset
    );
\LOCKSTEP_Out_reg[3364]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3364),
      R => Reset
    );
\LOCKSTEP_Out_reg[3365]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3365),
      R => Reset
    );
\LOCKSTEP_Out_reg[3366]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3366),
      R => Reset
    );
\LOCKSTEP_Out_reg[3367]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3367),
      R => Reset
    );
\LOCKSTEP_Out_reg[3368]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3368),
      R => Reset
    );
\LOCKSTEP_Out_reg[3369]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3369),
      R => Reset
    );
\LOCKSTEP_Out_reg[336]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(336),
      R => Reset
    );
\LOCKSTEP_Out_reg[3370]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3370),
      R => Reset
    );
\LOCKSTEP_Out_reg[3371]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3371),
      R => Reset
    );
\LOCKSTEP_Out_reg[3372]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3372),
      R => Reset
    );
\LOCKSTEP_Out_reg[3373]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3373),
      R => Reset
    );
\LOCKSTEP_Out_reg[3374]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3374),
      R => Reset
    );
\LOCKSTEP_Out_reg[3375]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3375),
      R => Reset
    );
\LOCKSTEP_Out_reg[3376]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3376),
      R => Reset
    );
\LOCKSTEP_Out_reg[3377]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3377),
      R => Reset
    );
\LOCKSTEP_Out_reg[3378]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3378),
      R => Reset
    );
\LOCKSTEP_Out_reg[3379]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3379),
      R => Reset
    );
\LOCKSTEP_Out_reg[337]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(337),
      R => Reset
    );
\LOCKSTEP_Out_reg[3380]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3380),
      R => Reset
    );
\LOCKSTEP_Out_reg[3381]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3381),
      R => Reset
    );
\LOCKSTEP_Out_reg[3382]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3382),
      R => Reset
    );
\LOCKSTEP_Out_reg[3383]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3383),
      R => Reset
    );
\LOCKSTEP_Out_reg[3384]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3384),
      R => Reset
    );
\LOCKSTEP_Out_reg[3385]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3385),
      R => Reset
    );
\LOCKSTEP_Out_reg[3386]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3386),
      R => Reset
    );
\LOCKSTEP_Out_reg[3387]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3387),
      R => Reset
    );
\LOCKSTEP_Out_reg[3388]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3388),
      R => Reset
    );
\LOCKSTEP_Out_reg[3389]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3389),
      R => Reset
    );
\LOCKSTEP_Out_reg[338]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(338),
      R => Reset
    );
\LOCKSTEP_Out_reg[3390]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3390),
      R => Reset
    );
\LOCKSTEP_Out_reg[3391]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3391),
      R => Reset
    );
\LOCKSTEP_Out_reg[3392]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3392),
      R => Reset
    );
\LOCKSTEP_Out_reg[3393]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3393),
      R => Reset
    );
\LOCKSTEP_Out_reg[3394]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3394),
      R => Reset
    );
\LOCKSTEP_Out_reg[3395]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3395),
      R => Reset
    );
\LOCKSTEP_Out_reg[3396]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3396),
      R => Reset
    );
\LOCKSTEP_Out_reg[3397]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3397),
      R => Reset
    );
\LOCKSTEP_Out_reg[3398]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3398),
      R => Reset
    );
\LOCKSTEP_Out_reg[3399]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3399),
      R => Reset
    );
\LOCKSTEP_Out_reg[339]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(339),
      R => Reset
    );
\LOCKSTEP_Out_reg[33]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(29),
      Q => LOCKSTEP_Out(33),
      R => Reset
    );
\LOCKSTEP_Out_reg[3400]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3400),
      R => Reset
    );
\LOCKSTEP_Out_reg[3401]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3401),
      R => Reset
    );
\LOCKSTEP_Out_reg[3402]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3402),
      R => Reset
    );
\LOCKSTEP_Out_reg[3403]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3403),
      R => Reset
    );
\LOCKSTEP_Out_reg[3404]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3404),
      R => Reset
    );
\LOCKSTEP_Out_reg[3405]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3405),
      R => Reset
    );
\LOCKSTEP_Out_reg[3406]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3406),
      R => Reset
    );
\LOCKSTEP_Out_reg[3407]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3407),
      R => Reset
    );
\LOCKSTEP_Out_reg[3408]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3408),
      R => Reset
    );
\LOCKSTEP_Out_reg[3409]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3409),
      R => Reset
    );
\LOCKSTEP_Out_reg[340]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(340),
      R => Reset
    );
\LOCKSTEP_Out_reg[3410]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3410),
      R => Reset
    );
\LOCKSTEP_Out_reg[3411]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3411),
      R => Reset
    );
\LOCKSTEP_Out_reg[3412]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3412),
      R => Reset
    );
\LOCKSTEP_Out_reg[3413]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3413),
      R => Reset
    );
\LOCKSTEP_Out_reg[3414]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3414),
      R => Reset
    );
\LOCKSTEP_Out_reg[3415]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3415),
      R => Reset
    );
\LOCKSTEP_Out_reg[3416]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3416),
      R => Reset
    );
\LOCKSTEP_Out_reg[3417]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3417),
      R => Reset
    );
\LOCKSTEP_Out_reg[3418]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3418),
      R => Reset
    );
\LOCKSTEP_Out_reg[3419]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3419),
      R => Reset
    );
\LOCKSTEP_Out_reg[341]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(341),
      R => Reset
    );
\LOCKSTEP_Out_reg[3420]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3420),
      R => Reset
    );
\LOCKSTEP_Out_reg[3421]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3421),
      R => Reset
    );
\LOCKSTEP_Out_reg[3422]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3422),
      R => Reset
    );
\LOCKSTEP_Out_reg[3423]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3423),
      R => Reset
    );
\LOCKSTEP_Out_reg[3424]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3424),
      R => Reset
    );
\LOCKSTEP_Out_reg[3425]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3425),
      R => Reset
    );
\LOCKSTEP_Out_reg[3426]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3426),
      R => Reset
    );
\LOCKSTEP_Out_reg[3427]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3427),
      R => Reset
    );
\LOCKSTEP_Out_reg[3428]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3428),
      R => Reset
    );
\LOCKSTEP_Out_reg[3429]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3429),
      R => Reset
    );
\LOCKSTEP_Out_reg[342]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(342),
      R => Reset
    );
\LOCKSTEP_Out_reg[3430]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3430),
      R => Reset
    );
\LOCKSTEP_Out_reg[3431]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3431),
      R => Reset
    );
\LOCKSTEP_Out_reg[3432]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3432),
      R => Reset
    );
\LOCKSTEP_Out_reg[3433]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3433),
      R => Reset
    );
\LOCKSTEP_Out_reg[3434]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3434),
      R => Reset
    );
\LOCKSTEP_Out_reg[3435]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3435),
      R => Reset
    );
\LOCKSTEP_Out_reg[3436]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3436),
      R => Reset
    );
\LOCKSTEP_Out_reg[3437]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3437),
      R => Reset
    );
\LOCKSTEP_Out_reg[3438]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3438),
      R => Reset
    );
\LOCKSTEP_Out_reg[3439]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3439),
      R => Reset
    );
\LOCKSTEP_Out_reg[343]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(343),
      R => Reset
    );
\LOCKSTEP_Out_reg[3440]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3440),
      R => Reset
    );
\LOCKSTEP_Out_reg[3441]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3441),
      R => Reset
    );
\LOCKSTEP_Out_reg[3442]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3442),
      R => Reset
    );
\LOCKSTEP_Out_reg[3443]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3443),
      R => Reset
    );
\LOCKSTEP_Out_reg[3444]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3444),
      R => Reset
    );
\LOCKSTEP_Out_reg[3445]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3445),
      R => Reset
    );
\LOCKSTEP_Out_reg[3446]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3446),
      R => Reset
    );
\LOCKSTEP_Out_reg[3447]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3447),
      R => Reset
    );
\LOCKSTEP_Out_reg[3448]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3448),
      R => Reset
    );
\LOCKSTEP_Out_reg[3449]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3449),
      R => Reset
    );
\LOCKSTEP_Out_reg[344]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(344),
      R => Reset
    );
\LOCKSTEP_Out_reg[3450]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3450),
      R => Reset
    );
\LOCKSTEP_Out_reg[3451]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3451),
      R => Reset
    );
\LOCKSTEP_Out_reg[3452]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3452),
      R => Reset
    );
\LOCKSTEP_Out_reg[3453]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3453),
      R => Reset
    );
\LOCKSTEP_Out_reg[3454]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3454),
      R => Reset
    );
\LOCKSTEP_Out_reg[3455]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3455),
      R => Reset
    );
\LOCKSTEP_Out_reg[3456]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3456),
      R => Reset
    );
\LOCKSTEP_Out_reg[3457]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3457),
      R => Reset
    );
\LOCKSTEP_Out_reg[3458]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3458),
      R => Reset
    );
\LOCKSTEP_Out_reg[3459]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3459),
      R => Reset
    );
\LOCKSTEP_Out_reg[345]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(345),
      R => Reset
    );
\LOCKSTEP_Out_reg[3460]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3460),
      R => Reset
    );
\LOCKSTEP_Out_reg[3461]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3461),
      R => Reset
    );
\LOCKSTEP_Out_reg[3462]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3462),
      R => Reset
    );
\LOCKSTEP_Out_reg[3463]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3463),
      R => Reset
    );
\LOCKSTEP_Out_reg[3464]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3464),
      R => Reset
    );
\LOCKSTEP_Out_reg[3465]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3465),
      R => Reset
    );
\LOCKSTEP_Out_reg[3466]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3466),
      R => Reset
    );
\LOCKSTEP_Out_reg[3467]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3467),
      R => Reset
    );
\LOCKSTEP_Out_reg[3468]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3468),
      R => Reset
    );
\LOCKSTEP_Out_reg[3469]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3469),
      R => Reset
    );
\LOCKSTEP_Out_reg[346]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(346),
      R => Reset
    );
\LOCKSTEP_Out_reg[3470]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3470),
      R => Reset
    );
\LOCKSTEP_Out_reg[3471]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3471),
      R => Reset
    );
\LOCKSTEP_Out_reg[3472]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3472),
      R => Reset
    );
\LOCKSTEP_Out_reg[3473]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3473),
      R => Reset
    );
\LOCKSTEP_Out_reg[3474]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3474),
      R => Reset
    );
\LOCKSTEP_Out_reg[3475]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3475),
      R => Reset
    );
\LOCKSTEP_Out_reg[3476]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3476),
      R => Reset
    );
\LOCKSTEP_Out_reg[3477]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3477),
      R => Reset
    );
\LOCKSTEP_Out_reg[3478]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3478),
      R => Reset
    );
\LOCKSTEP_Out_reg[3479]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3479),
      R => Reset
    );
\LOCKSTEP_Out_reg[347]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(347),
      R => Reset
    );
\LOCKSTEP_Out_reg[3480]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3480),
      R => Reset
    );
\LOCKSTEP_Out_reg[3481]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3481),
      R => Reset
    );
\LOCKSTEP_Out_reg[3482]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3482),
      R => Reset
    );
\LOCKSTEP_Out_reg[3483]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3483),
      R => Reset
    );
\LOCKSTEP_Out_reg[3484]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3484),
      R => Reset
    );
\LOCKSTEP_Out_reg[3485]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3485),
      R => Reset
    );
\LOCKSTEP_Out_reg[3486]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3486),
      R => Reset
    );
\LOCKSTEP_Out_reg[3487]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3487),
      R => Reset
    );
\LOCKSTEP_Out_reg[3488]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3488),
      R => Reset
    );
\LOCKSTEP_Out_reg[3489]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3489),
      R => Reset
    );
\LOCKSTEP_Out_reg[348]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(348),
      R => Reset
    );
\LOCKSTEP_Out_reg[3490]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3490),
      R => Reset
    );
\LOCKSTEP_Out_reg[3491]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3491),
      R => Reset
    );
\LOCKSTEP_Out_reg[3492]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3492),
      R => Reset
    );
\LOCKSTEP_Out_reg[3493]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3493),
      R => Reset
    );
\LOCKSTEP_Out_reg[3494]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3494),
      R => Reset
    );
\LOCKSTEP_Out_reg[3495]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3495),
      R => Reset
    );
\LOCKSTEP_Out_reg[3496]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3496),
      R => Reset
    );
\LOCKSTEP_Out_reg[3497]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3497),
      R => Reset
    );
\LOCKSTEP_Out_reg[3498]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3498),
      R => Reset
    );
\LOCKSTEP_Out_reg[3499]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3499),
      R => Reset
    );
\LOCKSTEP_Out_reg[349]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(349),
      R => Reset
    );
\LOCKSTEP_Out_reg[34]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(30),
      Q => LOCKSTEP_Out(34),
      R => Reset
    );
\LOCKSTEP_Out_reg[3500]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3500),
      R => Reset
    );
\LOCKSTEP_Out_reg[3501]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3501),
      R => Reset
    );
\LOCKSTEP_Out_reg[3502]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3502),
      R => Reset
    );
\LOCKSTEP_Out_reg[3503]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3503),
      R => Reset
    );
\LOCKSTEP_Out_reg[3504]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3504),
      R => Reset
    );
\LOCKSTEP_Out_reg[3505]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3505),
      R => Reset
    );
\LOCKSTEP_Out_reg[3506]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3506),
      R => Reset
    );
\LOCKSTEP_Out_reg[3507]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3507),
      R => Reset
    );
\LOCKSTEP_Out_reg[3508]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3508),
      R => Reset
    );
\LOCKSTEP_Out_reg[3509]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3509),
      R => Reset
    );
\LOCKSTEP_Out_reg[350]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(350),
      R => Reset
    );
\LOCKSTEP_Out_reg[3510]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3510),
      R => Reset
    );
\LOCKSTEP_Out_reg[3511]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3511),
      R => Reset
    );
\LOCKSTEP_Out_reg[3512]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3512),
      R => Reset
    );
\LOCKSTEP_Out_reg[3513]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3513),
      R => Reset
    );
\LOCKSTEP_Out_reg[3514]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3514),
      R => Reset
    );
\LOCKSTEP_Out_reg[3515]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3515),
      R => Reset
    );
\LOCKSTEP_Out_reg[3516]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3516),
      R => Reset
    );
\LOCKSTEP_Out_reg[3517]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3517),
      R => Reset
    );
\LOCKSTEP_Out_reg[3518]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3518),
      R => Reset
    );
\LOCKSTEP_Out_reg[3519]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3519),
      R => Reset
    );
\LOCKSTEP_Out_reg[351]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(351),
      R => Reset
    );
\LOCKSTEP_Out_reg[3520]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3520),
      R => Reset
    );
\LOCKSTEP_Out_reg[3521]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3521),
      R => Reset
    );
\LOCKSTEP_Out_reg[3522]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3522),
      R => Reset
    );
\LOCKSTEP_Out_reg[3523]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3523),
      R => Reset
    );
\LOCKSTEP_Out_reg[3524]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3524),
      R => Reset
    );
\LOCKSTEP_Out_reg[3525]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3525),
      R => Reset
    );
\LOCKSTEP_Out_reg[3526]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3526),
      R => Reset
    );
\LOCKSTEP_Out_reg[3527]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3527),
      R => Reset
    );
\LOCKSTEP_Out_reg[3528]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3528),
      R => Reset
    );
\LOCKSTEP_Out_reg[3529]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3529),
      R => Reset
    );
\LOCKSTEP_Out_reg[352]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(352),
      R => Reset
    );
\LOCKSTEP_Out_reg[3530]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3530),
      R => Reset
    );
\LOCKSTEP_Out_reg[3531]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3531),
      R => Reset
    );
\LOCKSTEP_Out_reg[3532]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3532),
      R => Reset
    );
\LOCKSTEP_Out_reg[3533]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3533),
      R => Reset
    );
\LOCKSTEP_Out_reg[3534]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3534),
      R => Reset
    );
\LOCKSTEP_Out_reg[3535]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3535),
      R => Reset
    );
\LOCKSTEP_Out_reg[3536]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3536),
      R => Reset
    );
\LOCKSTEP_Out_reg[3537]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3537),
      R => Reset
    );
\LOCKSTEP_Out_reg[3538]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3538),
      R => Reset
    );
\LOCKSTEP_Out_reg[3539]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3539),
      R => Reset
    );
\LOCKSTEP_Out_reg[353]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(353),
      R => Reset
    );
\LOCKSTEP_Out_reg[3540]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3540),
      R => Reset
    );
\LOCKSTEP_Out_reg[3541]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3541),
      R => Reset
    );
\LOCKSTEP_Out_reg[3542]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3542),
      R => Reset
    );
\LOCKSTEP_Out_reg[3543]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3543),
      R => Reset
    );
\LOCKSTEP_Out_reg[3544]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3544),
      R => Reset
    );
\LOCKSTEP_Out_reg[3545]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3545),
      R => Reset
    );
\LOCKSTEP_Out_reg[3546]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3546),
      R => Reset
    );
\LOCKSTEP_Out_reg[3547]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3547),
      R => Reset
    );
\LOCKSTEP_Out_reg[3548]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3548),
      R => Reset
    );
\LOCKSTEP_Out_reg[3549]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3549),
      R => Reset
    );
\LOCKSTEP_Out_reg[354]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(354),
      R => Reset
    );
\LOCKSTEP_Out_reg[3550]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3550),
      R => Reset
    );
\LOCKSTEP_Out_reg[3551]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3551),
      R => Reset
    );
\LOCKSTEP_Out_reg[3552]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3552),
      R => Reset
    );
\LOCKSTEP_Out_reg[3553]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3553),
      R => Reset
    );
\LOCKSTEP_Out_reg[3554]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3554),
      R => Reset
    );
\LOCKSTEP_Out_reg[3555]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3555),
      R => Reset
    );
\LOCKSTEP_Out_reg[3556]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3556),
      R => Reset
    );
\LOCKSTEP_Out_reg[3557]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3557),
      R => Reset
    );
\LOCKSTEP_Out_reg[3558]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3558),
      R => Reset
    );
\LOCKSTEP_Out_reg[3559]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3559),
      R => Reset
    );
\LOCKSTEP_Out_reg[355]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(355),
      R => Reset
    );
\LOCKSTEP_Out_reg[3560]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3560),
      R => Reset
    );
\LOCKSTEP_Out_reg[3561]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3561),
      R => Reset
    );
\LOCKSTEP_Out_reg[3562]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3562),
      R => Reset
    );
\LOCKSTEP_Out_reg[3563]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3563),
      R => Reset
    );
\LOCKSTEP_Out_reg[3564]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3564),
      R => Reset
    );
\LOCKSTEP_Out_reg[3565]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3565),
      R => Reset
    );
\LOCKSTEP_Out_reg[3566]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3566),
      R => Reset
    );
\LOCKSTEP_Out_reg[3567]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3567),
      R => Reset
    );
\LOCKSTEP_Out_reg[3568]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3568),
      R => Reset
    );
\LOCKSTEP_Out_reg[3569]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3569),
      R => Reset
    );
\LOCKSTEP_Out_reg[356]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(356),
      R => Reset
    );
\LOCKSTEP_Out_reg[3570]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3570),
      R => Reset
    );
\LOCKSTEP_Out_reg[3571]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3571),
      R => Reset
    );
\LOCKSTEP_Out_reg[3572]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3572),
      R => Reset
    );
\LOCKSTEP_Out_reg[3573]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3573),
      R => Reset
    );
\LOCKSTEP_Out_reg[3574]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3574),
      R => Reset
    );
\LOCKSTEP_Out_reg[3575]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3575),
      R => Reset
    );
\LOCKSTEP_Out_reg[3576]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3576),
      R => Reset
    );
\LOCKSTEP_Out_reg[3577]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3577),
      R => Reset
    );
\LOCKSTEP_Out_reg[3578]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3578),
      R => Reset
    );
\LOCKSTEP_Out_reg[3579]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3579),
      R => Reset
    );
\LOCKSTEP_Out_reg[357]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(357),
      R => Reset
    );
\LOCKSTEP_Out_reg[3580]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3580),
      R => Reset
    );
\LOCKSTEP_Out_reg[3581]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3581),
      R => Reset
    );
\LOCKSTEP_Out_reg[3582]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3582),
      R => Reset
    );
\LOCKSTEP_Out_reg[3583]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3583),
      R => Reset
    );
\LOCKSTEP_Out_reg[3584]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3584),
      R => Reset
    );
\LOCKSTEP_Out_reg[3585]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3585),
      R => Reset
    );
\LOCKSTEP_Out_reg[3586]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3586),
      R => Reset
    );
\LOCKSTEP_Out_reg[3587]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3587),
      R => Reset
    );
\LOCKSTEP_Out_reg[3588]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3588),
      R => Reset
    );
\LOCKSTEP_Out_reg[3589]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3589),
      R => Reset
    );
\LOCKSTEP_Out_reg[358]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(358),
      R => Reset
    );
\LOCKSTEP_Out_reg[3590]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3590),
      R => Reset
    );
\LOCKSTEP_Out_reg[3591]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3591),
      R => Reset
    );
\LOCKSTEP_Out_reg[3592]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3592),
      R => Reset
    );
\LOCKSTEP_Out_reg[3593]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3593),
      R => Reset
    );
\LOCKSTEP_Out_reg[3594]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3594),
      R => Reset
    );
\LOCKSTEP_Out_reg[3595]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3595),
      R => Reset
    );
\LOCKSTEP_Out_reg[3596]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3596),
      R => Reset
    );
\LOCKSTEP_Out_reg[3597]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3597),
      R => Reset
    );
\LOCKSTEP_Out_reg[3598]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3598),
      R => Reset
    );
\LOCKSTEP_Out_reg[3599]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3599),
      R => Reset
    );
\LOCKSTEP_Out_reg[359]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(359),
      R => Reset
    );
\LOCKSTEP_Out_reg[35]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(31),
      Q => LOCKSTEP_Out(35),
      R => Reset
    );
\LOCKSTEP_Out_reg[3600]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3600),
      R => Reset
    );
\LOCKSTEP_Out_reg[3601]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3601),
      R => Reset
    );
\LOCKSTEP_Out_reg[3602]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3602),
      R => Reset
    );
\LOCKSTEP_Out_reg[3603]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3603),
      R => Reset
    );
\LOCKSTEP_Out_reg[3604]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3604),
      R => Reset
    );
\LOCKSTEP_Out_reg[3605]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3605),
      R => Reset
    );
\LOCKSTEP_Out_reg[3606]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3606),
      R => Reset
    );
\LOCKSTEP_Out_reg[3607]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3607),
      R => Reset
    );
\LOCKSTEP_Out_reg[3608]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3608),
      R => Reset
    );
\LOCKSTEP_Out_reg[3609]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3609),
      R => Reset
    );
\LOCKSTEP_Out_reg[360]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(360),
      R => Reset
    );
\LOCKSTEP_Out_reg[3610]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3610),
      R => Reset
    );
\LOCKSTEP_Out_reg[3611]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3611),
      R => Reset
    );
\LOCKSTEP_Out_reg[3612]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3612),
      R => Reset
    );
\LOCKSTEP_Out_reg[3613]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3613),
      R => Reset
    );
\LOCKSTEP_Out_reg[3614]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3614),
      R => Reset
    );
\LOCKSTEP_Out_reg[3615]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3615),
      R => Reset
    );
\LOCKSTEP_Out_reg[3616]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3616),
      R => Reset
    );
\LOCKSTEP_Out_reg[3617]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3617),
      R => Reset
    );
\LOCKSTEP_Out_reg[3618]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3618),
      R => Reset
    );
\LOCKSTEP_Out_reg[3619]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3619),
      R => Reset
    );
\LOCKSTEP_Out_reg[361]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(361),
      R => Reset
    );
\LOCKSTEP_Out_reg[3620]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3620),
      R => Reset
    );
\LOCKSTEP_Out_reg[3621]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3621),
      R => Reset
    );
\LOCKSTEP_Out_reg[3622]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3622),
      R => Reset
    );
\LOCKSTEP_Out_reg[3623]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3623),
      R => Reset
    );
\LOCKSTEP_Out_reg[3624]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3624),
      R => Reset
    );
\LOCKSTEP_Out_reg[3625]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3625),
      R => Reset
    );
\LOCKSTEP_Out_reg[3626]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3626),
      R => Reset
    );
\LOCKSTEP_Out_reg[3627]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3627),
      R => Reset
    );
\LOCKSTEP_Out_reg[3628]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3628),
      R => Reset
    );
\LOCKSTEP_Out_reg[3629]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3629),
      R => Reset
    );
\LOCKSTEP_Out_reg[362]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(362),
      R => Reset
    );
\LOCKSTEP_Out_reg[3630]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3630),
      R => Reset
    );
\LOCKSTEP_Out_reg[3631]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3631),
      R => Reset
    );
\LOCKSTEP_Out_reg[3632]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3632),
      R => Reset
    );
\LOCKSTEP_Out_reg[3633]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3633),
      R => Reset
    );
\LOCKSTEP_Out_reg[3634]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3634),
      R => Reset
    );
\LOCKSTEP_Out_reg[3635]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3635),
      R => Reset
    );
\LOCKSTEP_Out_reg[3636]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3636),
      R => Reset
    );
\LOCKSTEP_Out_reg[3637]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3637),
      R => Reset
    );
\LOCKSTEP_Out_reg[3638]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3638),
      R => Reset
    );
\LOCKSTEP_Out_reg[3639]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3639),
      R => Reset
    );
\LOCKSTEP_Out_reg[363]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(363),
      R => Reset
    );
\LOCKSTEP_Out_reg[3640]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3640),
      R => Reset
    );
\LOCKSTEP_Out_reg[3641]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3641),
      R => Reset
    );
\LOCKSTEP_Out_reg[3642]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3642),
      R => Reset
    );
\LOCKSTEP_Out_reg[3643]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3643),
      R => Reset
    );
\LOCKSTEP_Out_reg[3644]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3644),
      R => Reset
    );
\LOCKSTEP_Out_reg[3645]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3645),
      R => Reset
    );
\LOCKSTEP_Out_reg[3646]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3646),
      R => Reset
    );
\LOCKSTEP_Out_reg[3647]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3647),
      R => Reset
    );
\LOCKSTEP_Out_reg[3648]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3648),
      R => Reset
    );
\LOCKSTEP_Out_reg[3649]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3649),
      R => Reset
    );
\LOCKSTEP_Out_reg[364]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(364),
      R => Reset
    );
\LOCKSTEP_Out_reg[3650]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3650),
      R => Reset
    );
\LOCKSTEP_Out_reg[3651]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3651),
      R => Reset
    );
\LOCKSTEP_Out_reg[3652]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3652),
      R => Reset
    );
\LOCKSTEP_Out_reg[3653]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3653),
      R => Reset
    );
\LOCKSTEP_Out_reg[3654]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3654),
      R => Reset
    );
\LOCKSTEP_Out_reg[3655]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3655),
      R => Reset
    );
\LOCKSTEP_Out_reg[3656]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3656),
      R => Reset
    );
\LOCKSTEP_Out_reg[3657]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3657),
      R => Reset
    );
\LOCKSTEP_Out_reg[3658]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3658),
      R => Reset
    );
\LOCKSTEP_Out_reg[3659]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3659),
      R => Reset
    );
\LOCKSTEP_Out_reg[365]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(365),
      R => Reset
    );
\LOCKSTEP_Out_reg[3660]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3660),
      R => Reset
    );
\LOCKSTEP_Out_reg[3661]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3661),
      R => Reset
    );
\LOCKSTEP_Out_reg[3662]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3662),
      R => Reset
    );
\LOCKSTEP_Out_reg[3663]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3663),
      R => Reset
    );
\LOCKSTEP_Out_reg[3664]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3664),
      R => Reset
    );
\LOCKSTEP_Out_reg[3665]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3665),
      R => Reset
    );
\LOCKSTEP_Out_reg[3666]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3666),
      R => Reset
    );
\LOCKSTEP_Out_reg[3667]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3667),
      R => Reset
    );
\LOCKSTEP_Out_reg[3668]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3668),
      R => Reset
    );
\LOCKSTEP_Out_reg[3669]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3669),
      R => Reset
    );
\LOCKSTEP_Out_reg[366]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(366),
      R => Reset
    );
\LOCKSTEP_Out_reg[3670]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3670),
      R => Reset
    );
\LOCKSTEP_Out_reg[3671]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3671),
      R => Reset
    );
\LOCKSTEP_Out_reg[3672]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3672),
      R => Reset
    );
\LOCKSTEP_Out_reg[3673]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3673),
      R => Reset
    );
\LOCKSTEP_Out_reg[3674]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3674),
      R => Reset
    );
\LOCKSTEP_Out_reg[3675]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(0),
      Q => LOCKSTEP_Out(3675),
      R => Reset
    );
\LOCKSTEP_Out_reg[3676]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(1),
      Q => LOCKSTEP_Out(3676),
      R => Reset
    );
\LOCKSTEP_Out_reg[3677]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(2),
      Q => LOCKSTEP_Out(3677),
      R => Reset
    );
\LOCKSTEP_Out_reg[3678]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(3),
      Q => LOCKSTEP_Out(3678),
      R => Reset
    );
\LOCKSTEP_Out_reg[3679]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(4),
      Q => LOCKSTEP_Out(3679),
      R => Reset
    );
\LOCKSTEP_Out_reg[367]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(367),
      R => Reset
    );
\LOCKSTEP_Out_reg[3680]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(5),
      Q => LOCKSTEP_Out(3680),
      R => Reset
    );
\LOCKSTEP_Out_reg[3681]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(6),
      Q => LOCKSTEP_Out(3681),
      R => Reset
    );
\LOCKSTEP_Out_reg[3682]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(7),
      Q => LOCKSTEP_Out(3682),
      R => Reset
    );
\LOCKSTEP_Out_reg[3683]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(8),
      Q => LOCKSTEP_Out(3683),
      R => Reset
    );
\LOCKSTEP_Out_reg[3684]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(9),
      Q => LOCKSTEP_Out(3684),
      R => Reset
    );
\LOCKSTEP_Out_reg[3685]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(10),
      Q => LOCKSTEP_Out(3685),
      R => Reset
    );
\LOCKSTEP_Out_reg[3686]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(11),
      Q => LOCKSTEP_Out(3686),
      R => Reset
    );
\LOCKSTEP_Out_reg[3687]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(12),
      Q => LOCKSTEP_Out(3687),
      R => Reset
    );
\LOCKSTEP_Out_reg[3688]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(13),
      Q => LOCKSTEP_Out(3688),
      R => Reset
    );
\LOCKSTEP_Out_reg[3689]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(14),
      Q => LOCKSTEP_Out(3689),
      R => Reset
    );
\LOCKSTEP_Out_reg[368]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(368),
      R => Reset
    );
\LOCKSTEP_Out_reg[3690]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(15),
      Q => LOCKSTEP_Out(3690),
      R => Reset
    );
\LOCKSTEP_Out_reg[3691]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(16),
      Q => LOCKSTEP_Out(3691),
      R => Reset
    );
\LOCKSTEP_Out_reg[3692]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(17),
      Q => LOCKSTEP_Out(3692),
      R => Reset
    );
\LOCKSTEP_Out_reg[3693]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(18),
      Q => LOCKSTEP_Out(3693),
      R => Reset
    );
\LOCKSTEP_Out_reg[3694]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(19),
      Q => LOCKSTEP_Out(3694),
      R => Reset
    );
\LOCKSTEP_Out_reg[3695]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(20),
      Q => LOCKSTEP_Out(3695),
      R => Reset
    );
\LOCKSTEP_Out_reg[3696]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(21),
      Q => LOCKSTEP_Out(3696),
      R => Reset
    );
\LOCKSTEP_Out_reg[3697]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(22),
      Q => LOCKSTEP_Out(3697),
      R => Reset
    );
\LOCKSTEP_Out_reg[3698]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(23),
      Q => LOCKSTEP_Out(3698),
      R => Reset
    );
\LOCKSTEP_Out_reg[3699]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(24),
      Q => LOCKSTEP_Out(3699),
      R => Reset
    );
\LOCKSTEP_Out_reg[369]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(369),
      R => Reset
    );
\LOCKSTEP_Out_reg[36]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(0),
      Q => LOCKSTEP_Out(36),
      R => Reset
    );
\LOCKSTEP_Out_reg[3700]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(25),
      Q => LOCKSTEP_Out(3700),
      R => Reset
    );
\LOCKSTEP_Out_reg[3701]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(26),
      Q => LOCKSTEP_Out(3701),
      R => Reset
    );
\LOCKSTEP_Out_reg[3702]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(27),
      Q => LOCKSTEP_Out(3702),
      R => Reset
    );
\LOCKSTEP_Out_reg[3703]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(28),
      Q => LOCKSTEP_Out(3703),
      R => Reset
    );
\LOCKSTEP_Out_reg[3704]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(29),
      Q => LOCKSTEP_Out(3704),
      R => Reset
    );
\LOCKSTEP_Out_reg[3705]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(30),
      Q => LOCKSTEP_Out(3705),
      R => Reset
    );
\LOCKSTEP_Out_reg[3706]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(31),
      Q => LOCKSTEP_Out(3706),
      R => Reset
    );
\LOCKSTEP_Out_reg[3707]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_valid_instr\,
      Q => LOCKSTEP_Out(3707),
      R => Reset
    );
\LOCKSTEP_Out_reg[3708]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(0),
      Q => LOCKSTEP_Out(3708),
      R => Reset
    );
\LOCKSTEP_Out_reg[3709]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(1),
      Q => LOCKSTEP_Out(3709),
      R => Reset
    );
\LOCKSTEP_Out_reg[370]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(370),
      R => Reset
    );
\LOCKSTEP_Out_reg[3710]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(2),
      Q => LOCKSTEP_Out(3710),
      R => Reset
    );
\LOCKSTEP_Out_reg[3711]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(3),
      Q => LOCKSTEP_Out(3711),
      R => Reset
    );
\LOCKSTEP_Out_reg[3712]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(4),
      Q => LOCKSTEP_Out(3712),
      R => Reset
    );
\LOCKSTEP_Out_reg[3713]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(5),
      Q => LOCKSTEP_Out(3713),
      R => Reset
    );
\LOCKSTEP_Out_reg[3714]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(6),
      Q => LOCKSTEP_Out(3714),
      R => Reset
    );
\LOCKSTEP_Out_reg[3715]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(7),
      Q => LOCKSTEP_Out(3715),
      R => Reset
    );
\LOCKSTEP_Out_reg[3716]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(8),
      Q => LOCKSTEP_Out(3716),
      R => Reset
    );
\LOCKSTEP_Out_reg[3717]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(9),
      Q => LOCKSTEP_Out(3717),
      R => Reset
    );
\LOCKSTEP_Out_reg[3718]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(10),
      Q => LOCKSTEP_Out(3718),
      R => Reset
    );
\LOCKSTEP_Out_reg[3719]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(11),
      Q => LOCKSTEP_Out(3719),
      R => Reset
    );
\LOCKSTEP_Out_reg[371]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(371),
      R => Reset
    );
\LOCKSTEP_Out_reg[3720]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(12),
      Q => LOCKSTEP_Out(3720),
      R => Reset
    );
\LOCKSTEP_Out_reg[3721]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(13),
      Q => LOCKSTEP_Out(3721),
      R => Reset
    );
\LOCKSTEP_Out_reg[3722]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(14),
      Q => LOCKSTEP_Out(3722),
      R => Reset
    );
\LOCKSTEP_Out_reg[3723]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(15),
      Q => LOCKSTEP_Out(3723),
      R => Reset
    );
\LOCKSTEP_Out_reg[3724]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(16),
      Q => LOCKSTEP_Out(3724),
      R => Reset
    );
\LOCKSTEP_Out_reg[3725]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(17),
      Q => LOCKSTEP_Out(3725),
      R => Reset
    );
\LOCKSTEP_Out_reg[3726]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(18),
      Q => LOCKSTEP_Out(3726),
      R => Reset
    );
\LOCKSTEP_Out_reg[3727]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(19),
      Q => LOCKSTEP_Out(3727),
      R => Reset
    );
\LOCKSTEP_Out_reg[3728]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(20),
      Q => LOCKSTEP_Out(3728),
      R => Reset
    );
\LOCKSTEP_Out_reg[3729]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(21),
      Q => LOCKSTEP_Out(3729),
      R => Reset
    );
\LOCKSTEP_Out_reg[372]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(372),
      R => Reset
    );
\LOCKSTEP_Out_reg[3730]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(22),
      Q => LOCKSTEP_Out(3730),
      R => Reset
    );
\LOCKSTEP_Out_reg[3731]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(23),
      Q => LOCKSTEP_Out(3731),
      R => Reset
    );
\LOCKSTEP_Out_reg[3732]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(24),
      Q => LOCKSTEP_Out(3732),
      R => Reset
    );
\LOCKSTEP_Out_reg[3733]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(25),
      Q => LOCKSTEP_Out(3733),
      R => Reset
    );
\LOCKSTEP_Out_reg[3734]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(26),
      Q => LOCKSTEP_Out(3734),
      R => Reset
    );
\LOCKSTEP_Out_reg[3735]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(27),
      Q => LOCKSTEP_Out(3735),
      R => Reset
    );
\LOCKSTEP_Out_reg[3736]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(28),
      Q => LOCKSTEP_Out(3736),
      R => Reset
    );
\LOCKSTEP_Out_reg[3737]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(29),
      Q => LOCKSTEP_Out(3737),
      R => Reset
    );
\LOCKSTEP_Out_reg[3738]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(30),
      Q => LOCKSTEP_Out(3738),
      R => Reset
    );
\LOCKSTEP_Out_reg[3739]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(31),
      Q => LOCKSTEP_Out(3739),
      R => Reset
    );
\LOCKSTEP_Out_reg[373]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(373),
      R => Reset
    );
\LOCKSTEP_Out_reg[3740]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_write\,
      Q => LOCKSTEP_Out(3740),
      R => Reset
    );
\LOCKSTEP_Out_reg[3741]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(0),
      Q => LOCKSTEP_Out(3741),
      R => Reset
    );
\LOCKSTEP_Out_reg[3742]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(1),
      Q => LOCKSTEP_Out(3742),
      R => Reset
    );
\LOCKSTEP_Out_reg[3743]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(2),
      Q => LOCKSTEP_Out(3743),
      R => Reset
    );
\LOCKSTEP_Out_reg[3744]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(3),
      Q => LOCKSTEP_Out(3744),
      R => Reset
    );
\LOCKSTEP_Out_reg[3745]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(4),
      Q => LOCKSTEP_Out(3745),
      R => Reset
    );
\LOCKSTEP_Out_reg[3746]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3746),
      R => Reset
    );
\LOCKSTEP_Out_reg[3747]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3747),
      R => Reset
    );
\LOCKSTEP_Out_reg[3748]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3748),
      R => Reset
    );
\LOCKSTEP_Out_reg[3749]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3749),
      R => Reset
    );
\LOCKSTEP_Out_reg[374]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(374),
      R => Reset
    );
\LOCKSTEP_Out_reg[3750]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3750),
      R => Reset
    );
\LOCKSTEP_Out_reg[3751]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3751),
      R => Reset
    );
\LOCKSTEP_Out_reg[3752]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3752),
      R => Reset
    );
\LOCKSTEP_Out_reg[3753]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3753),
      R => Reset
    );
\LOCKSTEP_Out_reg[3754]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3754),
      R => Reset
    );
\LOCKSTEP_Out_reg[3755]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3755),
      R => Reset
    );
\LOCKSTEP_Out_reg[3756]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3756),
      R => Reset
    );
\LOCKSTEP_Out_reg[3757]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_msr_reg\(11),
      Q => LOCKSTEP_Out(3757),
      R => Reset
    );
\LOCKSTEP_Out_reg[3758]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_msr_reg\(12),
      Q => LOCKSTEP_Out(3758),
      R => Reset
    );
\LOCKSTEP_Out_reg[3759]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_msr_reg\(13),
      Q => LOCKSTEP_Out(3759),
      R => Reset
    );
\LOCKSTEP_Out_reg[375]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(375),
      R => Reset
    );
\LOCKSTEP_Out_reg[3760]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3760),
      R => Reset
    );
\LOCKSTEP_Out_reg[3761]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3761),
      R => Reset
    );
\LOCKSTEP_Out_reg[3762]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3762),
      R => Reset
    );
\LOCKSTEP_Out_reg[3763]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3763),
      R => Reset
    );
\LOCKSTEP_Out_reg[3764]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3764),
      R => Reset
    );
\LOCKSTEP_Out_reg[3765]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3765),
      R => Reset
    );
\LOCKSTEP_Out_reg[3766]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3766),
      R => Reset
    );
\LOCKSTEP_Out_reg[3767]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3767),
      R => Reset
    );
\LOCKSTEP_Out_reg[3768]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3768),
      R => Reset
    );
\LOCKSTEP_Out_reg[3769]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(0),
      Q => LOCKSTEP_Out(3769),
      R => Reset
    );
\LOCKSTEP_Out_reg[376]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(376),
      R => Reset
    );
\LOCKSTEP_Out_reg[3770]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(1),
      Q => LOCKSTEP_Out(3770),
      R => Reset
    );
\LOCKSTEP_Out_reg[3771]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(2),
      Q => LOCKSTEP_Out(3771),
      R => Reset
    );
\LOCKSTEP_Out_reg[3772]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(3),
      Q => LOCKSTEP_Out(3772),
      R => Reset
    );
\LOCKSTEP_Out_reg[3773]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(4),
      Q => LOCKSTEP_Out(3773),
      R => Reset
    );
\LOCKSTEP_Out_reg[3774]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(5),
      Q => LOCKSTEP_Out(3774),
      R => Reset
    );
\LOCKSTEP_Out_reg[3775]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(6),
      Q => LOCKSTEP_Out(3775),
      R => Reset
    );
\LOCKSTEP_Out_reg[3776]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(7),
      Q => LOCKSTEP_Out(3776),
      R => Reset
    );
\LOCKSTEP_Out_reg[3777]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(8),
      Q => LOCKSTEP_Out(3777),
      R => Reset
    );
\LOCKSTEP_Out_reg[3778]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(9),
      Q => LOCKSTEP_Out(3778),
      R => Reset
    );
\LOCKSTEP_Out_reg[3779]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(10),
      Q => LOCKSTEP_Out(3779),
      R => Reset
    );
\LOCKSTEP_Out_reg[377]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(377),
      R => Reset
    );
\LOCKSTEP_Out_reg[3780]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(11),
      Q => LOCKSTEP_Out(3780),
      R => Reset
    );
\LOCKSTEP_Out_reg[3781]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(12),
      Q => LOCKSTEP_Out(3781),
      R => Reset
    );
\LOCKSTEP_Out_reg[3782]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(13),
      Q => LOCKSTEP_Out(3782),
      R => Reset
    );
\LOCKSTEP_Out_reg[3783]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(14),
      Q => LOCKSTEP_Out(3783),
      R => Reset
    );
\LOCKSTEP_Out_reg[3784]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(15),
      Q => LOCKSTEP_Out(3784),
      R => Reset
    );
\LOCKSTEP_Out_reg[3785]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(16),
      Q => LOCKSTEP_Out(3785),
      R => Reset
    );
\LOCKSTEP_Out_reg[3786]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(17),
      Q => LOCKSTEP_Out(3786),
      R => Reset
    );
\LOCKSTEP_Out_reg[3787]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(18),
      Q => LOCKSTEP_Out(3787),
      R => Reset
    );
\LOCKSTEP_Out_reg[3788]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(19),
      Q => LOCKSTEP_Out(3788),
      R => Reset
    );
\LOCKSTEP_Out_reg[3789]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(20),
      Q => LOCKSTEP_Out(3789),
      R => Reset
    );
\LOCKSTEP_Out_reg[378]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(378),
      R => Reset
    );
\LOCKSTEP_Out_reg[3790]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(21),
      Q => LOCKSTEP_Out(3790),
      R => Reset
    );
\LOCKSTEP_Out_reg[3791]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(22),
      Q => LOCKSTEP_Out(3791),
      R => Reset
    );
\LOCKSTEP_Out_reg[3792]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(23),
      Q => LOCKSTEP_Out(3792),
      R => Reset
    );
\LOCKSTEP_Out_reg[3793]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(24),
      Q => LOCKSTEP_Out(3793),
      R => Reset
    );
\LOCKSTEP_Out_reg[3794]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(25),
      Q => LOCKSTEP_Out(3794),
      R => Reset
    );
\LOCKSTEP_Out_reg[3795]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(26),
      Q => LOCKSTEP_Out(3795),
      R => Reset
    );
\LOCKSTEP_Out_reg[3796]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(27),
      Q => LOCKSTEP_Out(3796),
      R => Reset
    );
\LOCKSTEP_Out_reg[3797]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(28),
      Q => LOCKSTEP_Out(3797),
      R => Reset
    );
\LOCKSTEP_Out_reg[3798]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(29),
      Q => LOCKSTEP_Out(3798),
      R => Reset
    );
\LOCKSTEP_Out_reg[3799]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(30),
      Q => LOCKSTEP_Out(3799),
      R => Reset
    );
\LOCKSTEP_Out_reg[379]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(379),
      R => Reset
    );
\LOCKSTEP_Out_reg[37]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(1),
      Q => LOCKSTEP_Out(37),
      R => Reset
    );
\LOCKSTEP_Out_reg[3800]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(31),
      Q => LOCKSTEP_Out(3800),
      R => Reset
    );
\LOCKSTEP_Out_reg[3801]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_exception_taken\,
      Q => LOCKSTEP_Out(3801),
      R => Reset
    );
\LOCKSTEP_Out_reg[3802]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_exception_kind\(0),
      Q => LOCKSTEP_Out(3802),
      R => Reset
    );
\LOCKSTEP_Out_reg[3803]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_exception_kind\(1),
      Q => LOCKSTEP_Out(3803),
      R => Reset
    );
\LOCKSTEP_Out_reg[3804]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_exception_kind\(2),
      Q => LOCKSTEP_Out(3804),
      R => Reset
    );
\LOCKSTEP_Out_reg[3805]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_exception_kind\(3),
      Q => LOCKSTEP_Out(3805),
      R => Reset
    );
\LOCKSTEP_Out_reg[3806]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_exception_kind\(4),
      Q => LOCKSTEP_Out(3806),
      R => Reset
    );
\LOCKSTEP_Out_reg[3807]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_jump_taken\,
      Q => LOCKSTEP_Out(3807),
      R => Reset
    );
\LOCKSTEP_Out_reg[3808]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_delay_slot\,
      Q => LOCKSTEP_Out(3808),
      R => Reset
    );
\LOCKSTEP_Out_reg[3809]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(0),
      Q => LOCKSTEP_Out(3809),
      R => Reset
    );
\LOCKSTEP_Out_reg[380]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(380),
      R => Reset
    );
\LOCKSTEP_Out_reg[3810]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(1),
      Q => LOCKSTEP_Out(3810),
      R => Reset
    );
\LOCKSTEP_Out_reg[3811]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(2),
      Q => LOCKSTEP_Out(3811),
      R => Reset
    );
\LOCKSTEP_Out_reg[3812]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(3),
      Q => LOCKSTEP_Out(3812),
      R => Reset
    );
\LOCKSTEP_Out_reg[3813]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(4),
      Q => LOCKSTEP_Out(3813),
      R => Reset
    );
\LOCKSTEP_Out_reg[3814]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(5),
      Q => LOCKSTEP_Out(3814),
      R => Reset
    );
\LOCKSTEP_Out_reg[3815]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(6),
      Q => LOCKSTEP_Out(3815),
      R => Reset
    );
\LOCKSTEP_Out_reg[3816]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(7),
      Q => LOCKSTEP_Out(3816),
      R => Reset
    );
\LOCKSTEP_Out_reg[3817]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(8),
      Q => LOCKSTEP_Out(3817),
      R => Reset
    );
\LOCKSTEP_Out_reg[3818]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(9),
      Q => LOCKSTEP_Out(3818),
      R => Reset
    );
\LOCKSTEP_Out_reg[3819]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(10),
      Q => LOCKSTEP_Out(3819),
      R => Reset
    );
\LOCKSTEP_Out_reg[381]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(381),
      R => Reset
    );
\LOCKSTEP_Out_reg[3820]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(11),
      Q => LOCKSTEP_Out(3820),
      R => Reset
    );
\LOCKSTEP_Out_reg[3821]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(12),
      Q => LOCKSTEP_Out(3821),
      R => Reset
    );
\LOCKSTEP_Out_reg[3822]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(13),
      Q => LOCKSTEP_Out(3822),
      R => Reset
    );
\LOCKSTEP_Out_reg[3823]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(14),
      Q => LOCKSTEP_Out(3823),
      R => Reset
    );
\LOCKSTEP_Out_reg[3824]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(15),
      Q => LOCKSTEP_Out(3824),
      R => Reset
    );
\LOCKSTEP_Out_reg[3825]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(16),
      Q => LOCKSTEP_Out(3825),
      R => Reset
    );
\LOCKSTEP_Out_reg[3826]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(17),
      Q => LOCKSTEP_Out(3826),
      R => Reset
    );
\LOCKSTEP_Out_reg[3827]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(18),
      Q => LOCKSTEP_Out(3827),
      R => Reset
    );
\LOCKSTEP_Out_reg[3828]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(19),
      Q => LOCKSTEP_Out(3828),
      R => Reset
    );
\LOCKSTEP_Out_reg[3829]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(20),
      Q => LOCKSTEP_Out(3829),
      R => Reset
    );
\LOCKSTEP_Out_reg[382]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(382),
      R => Reset
    );
\LOCKSTEP_Out_reg[3830]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(21),
      Q => LOCKSTEP_Out(3830),
      R => Reset
    );
\LOCKSTEP_Out_reg[3831]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(22),
      Q => LOCKSTEP_Out(3831),
      R => Reset
    );
\LOCKSTEP_Out_reg[3832]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(23),
      Q => LOCKSTEP_Out(3832),
      R => Reset
    );
\LOCKSTEP_Out_reg[3833]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(24),
      Q => LOCKSTEP_Out(3833),
      R => Reset
    );
\LOCKSTEP_Out_reg[3834]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(25),
      Q => LOCKSTEP_Out(3834),
      R => Reset
    );
\LOCKSTEP_Out_reg[3835]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(26),
      Q => LOCKSTEP_Out(3835),
      R => Reset
    );
\LOCKSTEP_Out_reg[3836]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(27),
      Q => LOCKSTEP_Out(3836),
      R => Reset
    );
\LOCKSTEP_Out_reg[3837]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(28),
      Q => LOCKSTEP_Out(3837),
      R => Reset
    );
\LOCKSTEP_Out_reg[3838]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(29),
      Q => LOCKSTEP_Out(3838),
      R => Reset
    );
\LOCKSTEP_Out_reg[3839]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(30),
      Q => LOCKSTEP_Out(3839),
      R => Reset
    );
\LOCKSTEP_Out_reg[383]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(383),
      R => Reset
    );
\LOCKSTEP_Out_reg[3840]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(31),
      Q => LOCKSTEP_Out(3840),
      R => Reset
    );
\LOCKSTEP_Out_reg[3841]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(0),
      Q => LOCKSTEP_Out(3841),
      R => Reset
    );
\LOCKSTEP_Out_reg[3842]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(1),
      Q => LOCKSTEP_Out(3842),
      R => Reset
    );
\LOCKSTEP_Out_reg[3843]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(2),
      Q => LOCKSTEP_Out(3843),
      R => Reset
    );
\LOCKSTEP_Out_reg[3844]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(3),
      Q => LOCKSTEP_Out(3844),
      R => Reset
    );
\LOCKSTEP_Out_reg[3845]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(4),
      Q => LOCKSTEP_Out(3845),
      R => Reset
    );
\LOCKSTEP_Out_reg[3846]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(5),
      Q => LOCKSTEP_Out(3846),
      R => Reset
    );
\LOCKSTEP_Out_reg[3847]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(6),
      Q => LOCKSTEP_Out(3847),
      R => Reset
    );
\LOCKSTEP_Out_reg[3848]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(7),
      Q => LOCKSTEP_Out(3848),
      R => Reset
    );
\LOCKSTEP_Out_reg[3849]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(8),
      Q => LOCKSTEP_Out(3849),
      R => Reset
    );
\LOCKSTEP_Out_reg[384]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(384),
      R => Reset
    );
\LOCKSTEP_Out_reg[3850]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(9),
      Q => LOCKSTEP_Out(3850),
      R => Reset
    );
\LOCKSTEP_Out_reg[3851]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(10),
      Q => LOCKSTEP_Out(3851),
      R => Reset
    );
\LOCKSTEP_Out_reg[3852]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(11),
      Q => LOCKSTEP_Out(3852),
      R => Reset
    );
\LOCKSTEP_Out_reg[3853]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(12),
      Q => LOCKSTEP_Out(3853),
      R => Reset
    );
\LOCKSTEP_Out_reg[3854]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(13),
      Q => LOCKSTEP_Out(3854),
      R => Reset
    );
\LOCKSTEP_Out_reg[3855]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(14),
      Q => LOCKSTEP_Out(3855),
      R => Reset
    );
\LOCKSTEP_Out_reg[3856]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(15),
      Q => LOCKSTEP_Out(3856),
      R => Reset
    );
\LOCKSTEP_Out_reg[3857]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(16),
      Q => LOCKSTEP_Out(3857),
      R => Reset
    );
\LOCKSTEP_Out_reg[3858]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(17),
      Q => LOCKSTEP_Out(3858),
      R => Reset
    );
\LOCKSTEP_Out_reg[3859]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(18),
      Q => LOCKSTEP_Out(3859),
      R => Reset
    );
\LOCKSTEP_Out_reg[385]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(385),
      R => Reset
    );
\LOCKSTEP_Out_reg[3860]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(19),
      Q => LOCKSTEP_Out(3860),
      R => Reset
    );
\LOCKSTEP_Out_reg[3861]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(20),
      Q => LOCKSTEP_Out(3861),
      R => Reset
    );
\LOCKSTEP_Out_reg[3862]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(21),
      Q => LOCKSTEP_Out(3862),
      R => Reset
    );
\LOCKSTEP_Out_reg[3863]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(22),
      Q => LOCKSTEP_Out(3863),
      R => Reset
    );
\LOCKSTEP_Out_reg[3864]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(23),
      Q => LOCKSTEP_Out(3864),
      R => Reset
    );
\LOCKSTEP_Out_reg[3865]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(24),
      Q => LOCKSTEP_Out(3865),
      R => Reset
    );
\LOCKSTEP_Out_reg[3866]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(25),
      Q => LOCKSTEP_Out(3866),
      R => Reset
    );
\LOCKSTEP_Out_reg[3867]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(26),
      Q => LOCKSTEP_Out(3867),
      R => Reset
    );
\LOCKSTEP_Out_reg[3868]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(27),
      Q => LOCKSTEP_Out(3868),
      R => Reset
    );
\LOCKSTEP_Out_reg[3869]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(28),
      Q => LOCKSTEP_Out(3869),
      R => Reset
    );
\LOCKSTEP_Out_reg[386]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(386),
      R => Reset
    );
\LOCKSTEP_Out_reg[3870]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(29),
      Q => LOCKSTEP_Out(3870),
      R => Reset
    );
\LOCKSTEP_Out_reg[3871]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(30),
      Q => LOCKSTEP_Out(3871),
      R => Reset
    );
\LOCKSTEP_Out_reg[3872]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(31),
      Q => LOCKSTEP_Out(3872),
      R => Reset
    );
\LOCKSTEP_Out_reg[3873]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_byte_enable\(0),
      Q => LOCKSTEP_Out(3873),
      R => Reset
    );
\LOCKSTEP_Out_reg[3874]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_byte_enable\(1),
      Q => LOCKSTEP_Out(3874),
      R => Reset
    );
\LOCKSTEP_Out_reg[3875]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_byte_enable\(2),
      Q => LOCKSTEP_Out(3875),
      R => Reset
    );
\LOCKSTEP_Out_reg[3876]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_byte_enable\(3),
      Q => LOCKSTEP_Out(3876),
      R => Reset
    );
\LOCKSTEP_Out_reg[3877]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_access\,
      Q => LOCKSTEP_Out(3877),
      R => Reset
    );
\LOCKSTEP_Out_reg[3878]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_read\,
      Q => LOCKSTEP_Out(3878),
      R => Reset
    );
\LOCKSTEP_Out_reg[3879]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write\,
      Q => LOCKSTEP_Out(3879),
      R => Reset
    );
\LOCKSTEP_Out_reg[387]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(387),
      R => Reset
    );
\LOCKSTEP_Out_reg[3880]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3880),
      R => Reset
    );
\LOCKSTEP_Out_reg[3881]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3881),
      R => Reset
    );
\LOCKSTEP_Out_reg[3882]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3882),
      R => Reset
    );
\LOCKSTEP_Out_reg[3883]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3883),
      R => Reset
    );
\LOCKSTEP_Out_reg[3884]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3884),
      R => Reset
    );
\LOCKSTEP_Out_reg[3885]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3885),
      R => Reset
    );
\LOCKSTEP_Out_reg[3886]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3886),
      R => Reset
    );
\LOCKSTEP_Out_reg[3887]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_of_piperun\,
      Q => LOCKSTEP_Out(3887),
      R => Reset
    );
\LOCKSTEP_Out_reg[3888]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_ex_piperun\,
      Q => LOCKSTEP_Out(3888),
      R => Reset
    );
\LOCKSTEP_Out_reg[3889]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_mem_piperun\,
      Q => LOCKSTEP_Out(3889),
      R => Reset
    );
\LOCKSTEP_Out_reg[388]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(388),
      R => Reset
    );
\LOCKSTEP_Out_reg[3890]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^lockstep_master_out\(10),
      Q => LOCKSTEP_Out(3890),
      R => Reset
    );
\LOCKSTEP_Out_reg[3891]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_jump_hit\,
      Q => LOCKSTEP_Out(3891),
      R => Reset
    );
\LOCKSTEP_Out_reg[3892]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3892),
      R => '0'
    );
\LOCKSTEP_Out_reg[3893]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3893),
      R => '0'
    );
\LOCKSTEP_Out_reg[3894]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3894),
      R => '0'
    );
\LOCKSTEP_Out_reg[3895]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3895),
      R => '0'
    );
\LOCKSTEP_Out_reg[3896]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3896),
      R => '0'
    );
\LOCKSTEP_Out_reg[3897]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3897),
      R => '0'
    );
\LOCKSTEP_Out_reg[3898]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3898),
      R => '0'
    );
\LOCKSTEP_Out_reg[3899]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3899),
      R => '0'
    );
\LOCKSTEP_Out_reg[389]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(389),
      R => Reset
    );
\LOCKSTEP_Out_reg[38]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(2),
      Q => LOCKSTEP_Out(38),
      R => Reset
    );
\LOCKSTEP_Out_reg[3900]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3900),
      R => '0'
    );
\LOCKSTEP_Out_reg[3901]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3901),
      R => '0'
    );
\LOCKSTEP_Out_reg[3902]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3902),
      R => '0'
    );
\LOCKSTEP_Out_reg[3903]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3903),
      R => '0'
    );
\LOCKSTEP_Out_reg[3904]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3904),
      R => '0'
    );
\LOCKSTEP_Out_reg[3905]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3905),
      R => '0'
    );
\LOCKSTEP_Out_reg[3906]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3906),
      R => '0'
    );
\LOCKSTEP_Out_reg[3907]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3907),
      R => '0'
    );
\LOCKSTEP_Out_reg[3908]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3908),
      R => '0'
    );
\LOCKSTEP_Out_reg[3909]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3909),
      R => '0'
    );
\LOCKSTEP_Out_reg[390]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(390),
      R => Reset
    );
\LOCKSTEP_Out_reg[3910]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3910),
      R => '0'
    );
\LOCKSTEP_Out_reg[3911]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3911),
      R => '0'
    );
\LOCKSTEP_Out_reg[3912]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3912),
      R => '0'
    );
\LOCKSTEP_Out_reg[3913]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3913),
      R => '0'
    );
\LOCKSTEP_Out_reg[3914]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3914),
      R => '0'
    );
\LOCKSTEP_Out_reg[3915]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3915),
      R => '0'
    );
\LOCKSTEP_Out_reg[3916]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3916),
      R => '0'
    );
\LOCKSTEP_Out_reg[3917]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3917),
      R => '0'
    );
\LOCKSTEP_Out_reg[3918]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3918),
      R => '0'
    );
\LOCKSTEP_Out_reg[3919]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3919),
      R => '0'
    );
\LOCKSTEP_Out_reg[391]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(391),
      R => Reset
    );
\LOCKSTEP_Out_reg[3920]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3920),
      R => '0'
    );
\LOCKSTEP_Out_reg[3921]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3921),
      R => '0'
    );
\LOCKSTEP_Out_reg[3922]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3922),
      R => '0'
    );
\LOCKSTEP_Out_reg[3923]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3923),
      R => '0'
    );
\LOCKSTEP_Out_reg[3924]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3924),
      R => '0'
    );
\LOCKSTEP_Out_reg[3925]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3925),
      R => '0'
    );
\LOCKSTEP_Out_reg[3926]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3926),
      R => '0'
    );
\LOCKSTEP_Out_reg[3927]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3927),
      R => '0'
    );
\LOCKSTEP_Out_reg[3928]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3928),
      R => '0'
    );
\LOCKSTEP_Out_reg[3929]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3929),
      R => '0'
    );
\LOCKSTEP_Out_reg[392]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(392),
      R => Reset
    );
\LOCKSTEP_Out_reg[3930]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3930),
      R => '0'
    );
\LOCKSTEP_Out_reg[3931]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3931),
      R => '0'
    );
\LOCKSTEP_Out_reg[3932]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3932),
      R => '0'
    );
\LOCKSTEP_Out_reg[3933]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3933),
      R => '0'
    );
\LOCKSTEP_Out_reg[3934]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3934),
      R => '0'
    );
\LOCKSTEP_Out_reg[3935]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3935),
      R => '0'
    );
\LOCKSTEP_Out_reg[3936]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3936),
      R => '0'
    );
\LOCKSTEP_Out_reg[3937]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3937),
      R => '0'
    );
\LOCKSTEP_Out_reg[3938]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3938),
      R => '0'
    );
\LOCKSTEP_Out_reg[3939]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3939),
      R => '0'
    );
\LOCKSTEP_Out_reg[393]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(393),
      R => Reset
    );
\LOCKSTEP_Out_reg[3940]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3940),
      R => '0'
    );
\LOCKSTEP_Out_reg[3941]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3941),
      R => '0'
    );
\LOCKSTEP_Out_reg[3942]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3942),
      R => '0'
    );
\LOCKSTEP_Out_reg[3943]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3943),
      R => '0'
    );
\LOCKSTEP_Out_reg[3944]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3944),
      R => '0'
    );
\LOCKSTEP_Out_reg[3945]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3945),
      R => '0'
    );
\LOCKSTEP_Out_reg[3946]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3946),
      R => '0'
    );
\LOCKSTEP_Out_reg[3947]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3947),
      R => '0'
    );
\LOCKSTEP_Out_reg[3948]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3948),
      R => '0'
    );
\LOCKSTEP_Out_reg[3949]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3949),
      R => '0'
    );
\LOCKSTEP_Out_reg[394]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(394),
      R => Reset
    );
\LOCKSTEP_Out_reg[3950]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3950),
      R => '0'
    );
\LOCKSTEP_Out_reg[3951]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3951),
      R => '0'
    );
\LOCKSTEP_Out_reg[3952]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3952),
      R => '0'
    );
\LOCKSTEP_Out_reg[3953]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3953),
      R => '0'
    );
\LOCKSTEP_Out_reg[3954]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3954),
      R => '0'
    );
\LOCKSTEP_Out_reg[3955]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3955),
      R => '0'
    );
\LOCKSTEP_Out_reg[3956]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3956),
      R => '0'
    );
\LOCKSTEP_Out_reg[3957]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3957),
      R => '0'
    );
\LOCKSTEP_Out_reg[3958]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3958),
      R => '0'
    );
\LOCKSTEP_Out_reg[3959]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3959),
      R => '0'
    );
\LOCKSTEP_Out_reg[395]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(395),
      R => Reset
    );
\LOCKSTEP_Out_reg[3960]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3960),
      R => '0'
    );
\LOCKSTEP_Out_reg[3961]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3961),
      R => '0'
    );
\LOCKSTEP_Out_reg[3962]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3962),
      R => '0'
    );
\LOCKSTEP_Out_reg[3963]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3963),
      R => '0'
    );
\LOCKSTEP_Out_reg[3964]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3964),
      R => '0'
    );
\LOCKSTEP_Out_reg[3965]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3965),
      R => '0'
    );
\LOCKSTEP_Out_reg[3966]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3966),
      R => '0'
    );
\LOCKSTEP_Out_reg[3967]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3967),
      R => '0'
    );
\LOCKSTEP_Out_reg[3968]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3968),
      R => '0'
    );
\LOCKSTEP_Out_reg[3969]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3969),
      R => '0'
    );
\LOCKSTEP_Out_reg[396]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(396),
      R => Reset
    );
\LOCKSTEP_Out_reg[3970]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3970),
      R => '0'
    );
\LOCKSTEP_Out_reg[3971]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3971),
      R => '0'
    );
\LOCKSTEP_Out_reg[3972]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3972),
      R => '0'
    );
\LOCKSTEP_Out_reg[3973]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3973),
      R => '0'
    );
\LOCKSTEP_Out_reg[3974]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3974),
      R => '0'
    );
\LOCKSTEP_Out_reg[3975]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3975),
      R => '0'
    );
\LOCKSTEP_Out_reg[3976]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3976),
      R => '0'
    );
\LOCKSTEP_Out_reg[3977]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3977),
      R => '0'
    );
\LOCKSTEP_Out_reg[3978]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3978),
      R => '0'
    );
\LOCKSTEP_Out_reg[3979]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3979),
      R => '0'
    );
\LOCKSTEP_Out_reg[397]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(397),
      R => Reset
    );
\LOCKSTEP_Out_reg[3980]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3980),
      R => '0'
    );
\LOCKSTEP_Out_reg[3981]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3981),
      R => '0'
    );
\LOCKSTEP_Out_reg[3982]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3982),
      R => '0'
    );
\LOCKSTEP_Out_reg[3983]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3983),
      R => '0'
    );
\LOCKSTEP_Out_reg[3984]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3984),
      R => '0'
    );
\LOCKSTEP_Out_reg[3985]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3985),
      R => '0'
    );
\LOCKSTEP_Out_reg[3986]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3986),
      R => '0'
    );
\LOCKSTEP_Out_reg[3987]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3987),
      R => '0'
    );
\LOCKSTEP_Out_reg[3988]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3988),
      R => '0'
    );
\LOCKSTEP_Out_reg[3989]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3989),
      R => '0'
    );
\LOCKSTEP_Out_reg[398]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(398),
      R => Reset
    );
\LOCKSTEP_Out_reg[3990]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3990),
      R => '0'
    );
\LOCKSTEP_Out_reg[3991]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3991),
      R => '0'
    );
\LOCKSTEP_Out_reg[3992]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3992),
      R => '0'
    );
\LOCKSTEP_Out_reg[3993]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3993),
      R => '0'
    );
\LOCKSTEP_Out_reg[3994]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3994),
      R => '0'
    );
\LOCKSTEP_Out_reg[3995]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3995),
      R => '0'
    );
\LOCKSTEP_Out_reg[3996]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3996),
      R => '0'
    );
\LOCKSTEP_Out_reg[3997]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3997),
      R => '0'
    );
\LOCKSTEP_Out_reg[3998]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3998),
      R => '0'
    );
\LOCKSTEP_Out_reg[3999]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(3999),
      R => '0'
    );
\LOCKSTEP_Out_reg[399]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(399),
      R => Reset
    );
\LOCKSTEP_Out_reg[39]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(3),
      Q => LOCKSTEP_Out(39),
      R => Reset
    );
\LOCKSTEP_Out_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^i_as\,
      Q => LOCKSTEP_Out(3),
      R => Reset
    );
\LOCKSTEP_Out_reg[4000]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4000),
      R => '0'
    );
\LOCKSTEP_Out_reg[4001]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4001),
      R => '0'
    );
\LOCKSTEP_Out_reg[4002]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4002),
      R => '0'
    );
\LOCKSTEP_Out_reg[4003]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4003),
      R => '0'
    );
\LOCKSTEP_Out_reg[4004]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4004),
      R => '0'
    );
\LOCKSTEP_Out_reg[4005]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4005),
      R => '0'
    );
\LOCKSTEP_Out_reg[4006]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4006),
      R => '0'
    );
\LOCKSTEP_Out_reg[4007]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4007),
      R => '0'
    );
\LOCKSTEP_Out_reg[4008]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4008),
      R => '0'
    );
\LOCKSTEP_Out_reg[4009]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4009),
      R => '0'
    );
\LOCKSTEP_Out_reg[400]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(400),
      R => Reset
    );
\LOCKSTEP_Out_reg[4010]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4010),
      R => '0'
    );
\LOCKSTEP_Out_reg[4011]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4011),
      R => '0'
    );
\LOCKSTEP_Out_reg[4012]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4012),
      R => '0'
    );
\LOCKSTEP_Out_reg[4013]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4013),
      R => '0'
    );
\LOCKSTEP_Out_reg[4014]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4014),
      R => '0'
    );
\LOCKSTEP_Out_reg[4015]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4015),
      R => '0'
    );
\LOCKSTEP_Out_reg[4016]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4016),
      R => '0'
    );
\LOCKSTEP_Out_reg[4017]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4017),
      R => '0'
    );
\LOCKSTEP_Out_reg[4018]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4018),
      R => '0'
    );
\LOCKSTEP_Out_reg[4019]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4019),
      R => '0'
    );
\LOCKSTEP_Out_reg[401]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(401),
      R => Reset
    );
\LOCKSTEP_Out_reg[4020]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4020),
      R => '0'
    );
\LOCKSTEP_Out_reg[4021]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4021),
      R => '0'
    );
\LOCKSTEP_Out_reg[4022]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4022),
      R => '0'
    );
\LOCKSTEP_Out_reg[4023]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4023),
      R => '0'
    );
\LOCKSTEP_Out_reg[4024]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4024),
      R => '0'
    );
\LOCKSTEP_Out_reg[4025]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4025),
      R => '0'
    );
\LOCKSTEP_Out_reg[4026]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4026),
      R => '0'
    );
\LOCKSTEP_Out_reg[4027]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4027),
      R => '0'
    );
\LOCKSTEP_Out_reg[4028]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4028),
      R => '0'
    );
\LOCKSTEP_Out_reg[4029]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4029),
      R => '0'
    );
\LOCKSTEP_Out_reg[402]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(402),
      R => Reset
    );
\LOCKSTEP_Out_reg[4030]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4030),
      R => '0'
    );
\LOCKSTEP_Out_reg[4031]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4031),
      R => '0'
    );
\LOCKSTEP_Out_reg[4032]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4032),
      R => '0'
    );
\LOCKSTEP_Out_reg[4033]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4033),
      R => '0'
    );
\LOCKSTEP_Out_reg[4034]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4034),
      R => '0'
    );
\LOCKSTEP_Out_reg[4035]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4035),
      R => '0'
    );
\LOCKSTEP_Out_reg[4036]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4036),
      R => '0'
    );
\LOCKSTEP_Out_reg[4037]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4037),
      R => '0'
    );
\LOCKSTEP_Out_reg[4038]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4038),
      R => '0'
    );
\LOCKSTEP_Out_reg[4039]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4039),
      R => '0'
    );
\LOCKSTEP_Out_reg[403]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(403),
      R => Reset
    );
\LOCKSTEP_Out_reg[4040]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4040),
      R => '0'
    );
\LOCKSTEP_Out_reg[4041]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4041),
      R => '0'
    );
\LOCKSTEP_Out_reg[4042]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4042),
      R => '0'
    );
\LOCKSTEP_Out_reg[4043]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4043),
      R => '0'
    );
\LOCKSTEP_Out_reg[4044]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4044),
      R => '0'
    );
\LOCKSTEP_Out_reg[4045]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4045),
      R => '0'
    );
\LOCKSTEP_Out_reg[4046]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4046),
      R => '0'
    );
\LOCKSTEP_Out_reg[4047]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4047),
      R => '0'
    );
\LOCKSTEP_Out_reg[4048]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4048),
      R => '0'
    );
\LOCKSTEP_Out_reg[4049]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4049),
      R => '0'
    );
\LOCKSTEP_Out_reg[404]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(404),
      R => Reset
    );
\LOCKSTEP_Out_reg[4050]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4050),
      R => '0'
    );
\LOCKSTEP_Out_reg[4051]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4051),
      R => '0'
    );
\LOCKSTEP_Out_reg[4052]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4052),
      R => '0'
    );
\LOCKSTEP_Out_reg[4053]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4053),
      R => '0'
    );
\LOCKSTEP_Out_reg[4054]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4054),
      R => '0'
    );
\LOCKSTEP_Out_reg[4055]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4055),
      R => '0'
    );
\LOCKSTEP_Out_reg[4056]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4056),
      R => '0'
    );
\LOCKSTEP_Out_reg[4057]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4057),
      R => '0'
    );
\LOCKSTEP_Out_reg[4058]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4058),
      R => '0'
    );
\LOCKSTEP_Out_reg[4059]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4059),
      R => '0'
    );
\LOCKSTEP_Out_reg[405]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(405),
      R => Reset
    );
\LOCKSTEP_Out_reg[4060]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4060),
      R => '0'
    );
\LOCKSTEP_Out_reg[4061]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4061),
      R => '0'
    );
\LOCKSTEP_Out_reg[4062]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4062),
      R => '0'
    );
\LOCKSTEP_Out_reg[4063]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4063),
      R => '0'
    );
\LOCKSTEP_Out_reg[4064]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4064),
      R => '0'
    );
\LOCKSTEP_Out_reg[4065]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4065),
      R => '0'
    );
\LOCKSTEP_Out_reg[4066]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4066),
      R => '0'
    );
\LOCKSTEP_Out_reg[4067]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4067),
      R => '0'
    );
\LOCKSTEP_Out_reg[4068]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4068),
      R => '0'
    );
\LOCKSTEP_Out_reg[4069]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4069),
      R => '0'
    );
\LOCKSTEP_Out_reg[406]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(406),
      R => Reset
    );
\LOCKSTEP_Out_reg[4070]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4070),
      R => '0'
    );
\LOCKSTEP_Out_reg[4071]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4071),
      R => '0'
    );
\LOCKSTEP_Out_reg[4072]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4072),
      R => '0'
    );
\LOCKSTEP_Out_reg[4073]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4073),
      R => '0'
    );
\LOCKSTEP_Out_reg[4074]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4074),
      R => '0'
    );
\LOCKSTEP_Out_reg[4075]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4075),
      R => '0'
    );
\LOCKSTEP_Out_reg[4076]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4076),
      R => '0'
    );
\LOCKSTEP_Out_reg[4077]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4077),
      R => '0'
    );
\LOCKSTEP_Out_reg[4078]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4078),
      R => '0'
    );
\LOCKSTEP_Out_reg[4079]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4079),
      R => '0'
    );
\LOCKSTEP_Out_reg[407]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(407),
      R => Reset
    );
\LOCKSTEP_Out_reg[4080]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4080),
      R => '0'
    );
\LOCKSTEP_Out_reg[4081]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4081),
      R => '0'
    );
\LOCKSTEP_Out_reg[4082]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4082),
      R => '0'
    );
\LOCKSTEP_Out_reg[4083]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4083),
      R => '0'
    );
\LOCKSTEP_Out_reg[4084]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4084),
      R => '0'
    );
\LOCKSTEP_Out_reg[4085]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4085),
      R => '0'
    );
\LOCKSTEP_Out_reg[4086]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4086),
      R => '0'
    );
\LOCKSTEP_Out_reg[4087]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4087),
      R => '0'
    );
\LOCKSTEP_Out_reg[4088]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4088),
      R => '0'
    );
\LOCKSTEP_Out_reg[4089]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4089),
      R => '0'
    );
\LOCKSTEP_Out_reg[408]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(408),
      R => Reset
    );
\LOCKSTEP_Out_reg[4090]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4090),
      R => '0'
    );
\LOCKSTEP_Out_reg[4091]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4091),
      R => '0'
    );
\LOCKSTEP_Out_reg[4092]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4092),
      R => '0'
    );
\LOCKSTEP_Out_reg[4093]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4093),
      R => '0'
    );
\LOCKSTEP_Out_reg[4094]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4094),
      R => '0'
    );
\LOCKSTEP_Out_reg[4095]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(4095),
      R => '0'
    );
\LOCKSTEP_Out_reg[409]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(409),
      R => Reset
    );
\LOCKSTEP_Out_reg[40]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(4),
      Q => LOCKSTEP_Out(40),
      R => Reset
    );
\LOCKSTEP_Out_reg[410]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(410),
      R => Reset
    );
\LOCKSTEP_Out_reg[411]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(411),
      R => Reset
    );
\LOCKSTEP_Out_reg[412]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(412),
      R => Reset
    );
\LOCKSTEP_Out_reg[413]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(413),
      R => Reset
    );
\LOCKSTEP_Out_reg[414]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(414),
      R => Reset
    );
\LOCKSTEP_Out_reg[415]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(415),
      R => Reset
    );
\LOCKSTEP_Out_reg[416]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(416),
      R => Reset
    );
\LOCKSTEP_Out_reg[417]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(417),
      R => Reset
    );
\LOCKSTEP_Out_reg[418]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(418),
      R => Reset
    );
\LOCKSTEP_Out_reg[419]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(419),
      R => Reset
    );
\LOCKSTEP_Out_reg[41]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(5),
      Q => LOCKSTEP_Out(41),
      R => Reset
    );
\LOCKSTEP_Out_reg[420]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(420),
      R => Reset
    );
\LOCKSTEP_Out_reg[421]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(421),
      R => Reset
    );
\LOCKSTEP_Out_reg[422]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(422),
      R => Reset
    );
\LOCKSTEP_Out_reg[423]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(423),
      R => Reset
    );
\LOCKSTEP_Out_reg[424]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(424),
      R => Reset
    );
\LOCKSTEP_Out_reg[425]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(425),
      R => Reset
    );
\LOCKSTEP_Out_reg[426]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(426),
      R => Reset
    );
\LOCKSTEP_Out_reg[427]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(427),
      R => Reset
    );
\LOCKSTEP_Out_reg[428]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(428),
      R => Reset
    );
\LOCKSTEP_Out_reg[429]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(429),
      R => Reset
    );
\LOCKSTEP_Out_reg[42]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(6),
      Q => LOCKSTEP_Out(42),
      R => Reset
    );
\LOCKSTEP_Out_reg[430]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(430),
      R => Reset
    );
\LOCKSTEP_Out_reg[431]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(431),
      R => Reset
    );
\LOCKSTEP_Out_reg[432]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(432),
      R => Reset
    );
\LOCKSTEP_Out_reg[433]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(433),
      R => Reset
    );
\LOCKSTEP_Out_reg[434]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(434),
      R => Reset
    );
\LOCKSTEP_Out_reg[435]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(435),
      R => Reset
    );
\LOCKSTEP_Out_reg[436]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(436),
      R => Reset
    );
\LOCKSTEP_Out_reg[437]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(437),
      R => Reset
    );
\LOCKSTEP_Out_reg[438]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(438),
      R => Reset
    );
\LOCKSTEP_Out_reg[439]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(439),
      R => Reset
    );
\LOCKSTEP_Out_reg[43]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(7),
      Q => LOCKSTEP_Out(43),
      R => Reset
    );
\LOCKSTEP_Out_reg[440]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(440),
      R => Reset
    );
\LOCKSTEP_Out_reg[441]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(441),
      R => Reset
    );
\LOCKSTEP_Out_reg[442]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(442),
      R => Reset
    );
\LOCKSTEP_Out_reg[443]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(443),
      R => Reset
    );
\LOCKSTEP_Out_reg[444]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(444),
      R => Reset
    );
\LOCKSTEP_Out_reg[445]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(445),
      R => Reset
    );
\LOCKSTEP_Out_reg[446]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(446),
      R => Reset
    );
\LOCKSTEP_Out_reg[447]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(447),
      R => Reset
    );
\LOCKSTEP_Out_reg[448]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(448),
      R => Reset
    );
\LOCKSTEP_Out_reg[449]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(449),
      R => Reset
    );
\LOCKSTEP_Out_reg[44]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(8),
      Q => LOCKSTEP_Out(44),
      R => Reset
    );
\LOCKSTEP_Out_reg[450]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(450),
      R => Reset
    );
\LOCKSTEP_Out_reg[451]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(451),
      R => Reset
    );
\LOCKSTEP_Out_reg[452]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(452),
      R => Reset
    );
\LOCKSTEP_Out_reg[453]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(453),
      R => Reset
    );
\LOCKSTEP_Out_reg[454]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(454),
      R => Reset
    );
\LOCKSTEP_Out_reg[455]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(455),
      R => Reset
    );
\LOCKSTEP_Out_reg[456]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(456),
      R => Reset
    );
\LOCKSTEP_Out_reg[457]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(457),
      R => Reset
    );
\LOCKSTEP_Out_reg[458]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(458),
      R => Reset
    );
\LOCKSTEP_Out_reg[459]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(459),
      R => Reset
    );
\LOCKSTEP_Out_reg[45]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(9),
      Q => LOCKSTEP_Out(45),
      R => Reset
    );
\LOCKSTEP_Out_reg[460]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(460),
      R => Reset
    );
\LOCKSTEP_Out_reg[461]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(461),
      R => Reset
    );
\LOCKSTEP_Out_reg[462]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(462),
      R => Reset
    );
\LOCKSTEP_Out_reg[463]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(463),
      R => Reset
    );
\LOCKSTEP_Out_reg[464]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(464),
      R => Reset
    );
\LOCKSTEP_Out_reg[465]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(465),
      R => Reset
    );
\LOCKSTEP_Out_reg[466]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(466),
      R => Reset
    );
\LOCKSTEP_Out_reg[467]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(467),
      R => Reset
    );
\LOCKSTEP_Out_reg[468]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(468),
      R => Reset
    );
\LOCKSTEP_Out_reg[469]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(469),
      R => Reset
    );
\LOCKSTEP_Out_reg[46]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(10),
      Q => LOCKSTEP_Out(46),
      R => Reset
    );
\LOCKSTEP_Out_reg[470]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(470),
      R => Reset
    );
\LOCKSTEP_Out_reg[471]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(471),
      R => Reset
    );
\LOCKSTEP_Out_reg[472]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(472),
      R => Reset
    );
\LOCKSTEP_Out_reg[473]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(473),
      R => Reset
    );
\LOCKSTEP_Out_reg[474]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(474),
      R => Reset
    );
\LOCKSTEP_Out_reg[475]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(475),
      R => Reset
    );
\LOCKSTEP_Out_reg[476]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(476),
      R => Reset
    );
\LOCKSTEP_Out_reg[477]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(477),
      R => Reset
    );
\LOCKSTEP_Out_reg[478]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(478),
      R => Reset
    );
\LOCKSTEP_Out_reg[479]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(479),
      R => Reset
    );
\LOCKSTEP_Out_reg[47]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(11),
      Q => LOCKSTEP_Out(47),
      R => Reset
    );
\LOCKSTEP_Out_reg[480]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(480),
      R => Reset
    );
\LOCKSTEP_Out_reg[481]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(481),
      R => Reset
    );
\LOCKSTEP_Out_reg[482]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(482),
      R => Reset
    );
\LOCKSTEP_Out_reg[483]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(483),
      R => Reset
    );
\LOCKSTEP_Out_reg[484]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(484),
      R => Reset
    );
\LOCKSTEP_Out_reg[485]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(485),
      R => Reset
    );
\LOCKSTEP_Out_reg[486]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(486),
      R => Reset
    );
\LOCKSTEP_Out_reg[487]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(487),
      R => Reset
    );
\LOCKSTEP_Out_reg[488]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(488),
      R => Reset
    );
\LOCKSTEP_Out_reg[489]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(489),
      R => Reset
    );
\LOCKSTEP_Out_reg[48]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(12),
      Q => LOCKSTEP_Out(48),
      R => Reset
    );
\LOCKSTEP_Out_reg[490]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(490),
      R => Reset
    );
\LOCKSTEP_Out_reg[491]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(491),
      R => Reset
    );
\LOCKSTEP_Out_reg[492]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(492),
      R => Reset
    );
\LOCKSTEP_Out_reg[493]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(493),
      R => Reset
    );
\LOCKSTEP_Out_reg[494]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(494),
      R => Reset
    );
\LOCKSTEP_Out_reg[495]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(495),
      R => Reset
    );
\LOCKSTEP_Out_reg[496]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(496),
      R => Reset
    );
\LOCKSTEP_Out_reg[497]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(497),
      R => Reset
    );
\LOCKSTEP_Out_reg[498]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(498),
      R => Reset
    );
\LOCKSTEP_Out_reg[499]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(499),
      R => Reset
    );
\LOCKSTEP_Out_reg[49]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(13),
      Q => LOCKSTEP_Out(49),
      R => Reset
    );
\LOCKSTEP_Out_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(0),
      Q => LOCKSTEP_Out(4),
      R => Reset
    );
\LOCKSTEP_Out_reg[500]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(500),
      R => Reset
    );
\LOCKSTEP_Out_reg[501]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(501),
      R => Reset
    );
\LOCKSTEP_Out_reg[502]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(502),
      R => Reset
    );
\LOCKSTEP_Out_reg[503]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(503),
      R => Reset
    );
\LOCKSTEP_Out_reg[504]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(504),
      R => Reset
    );
\LOCKSTEP_Out_reg[505]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(505),
      R => Reset
    );
\LOCKSTEP_Out_reg[506]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(506),
      R => Reset
    );
\LOCKSTEP_Out_reg[507]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(507),
      R => Reset
    );
\LOCKSTEP_Out_reg[508]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(508),
      R => Reset
    );
\LOCKSTEP_Out_reg[509]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(509),
      R => Reset
    );
\LOCKSTEP_Out_reg[50]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(14),
      Q => LOCKSTEP_Out(50),
      R => Reset
    );
\LOCKSTEP_Out_reg[510]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(510),
      R => Reset
    );
\LOCKSTEP_Out_reg[511]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(511),
      R => Reset
    );
\LOCKSTEP_Out_reg[512]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(512),
      R => Reset
    );
\LOCKSTEP_Out_reg[513]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(513),
      R => Reset
    );
\LOCKSTEP_Out_reg[514]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(514),
      R => Reset
    );
\LOCKSTEP_Out_reg[515]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(515),
      R => Reset
    );
\LOCKSTEP_Out_reg[516]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(516),
      R => Reset
    );
\LOCKSTEP_Out_reg[517]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(517),
      R => Reset
    );
\LOCKSTEP_Out_reg[518]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(518),
      R => Reset
    );
\LOCKSTEP_Out_reg[519]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(519),
      R => Reset
    );
\LOCKSTEP_Out_reg[51]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(15),
      Q => LOCKSTEP_Out(51),
      R => Reset
    );
\LOCKSTEP_Out_reg[520]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(520),
      R => Reset
    );
\LOCKSTEP_Out_reg[521]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(521),
      R => Reset
    );
\LOCKSTEP_Out_reg[522]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(522),
      R => Reset
    );
\LOCKSTEP_Out_reg[523]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(523),
      R => Reset
    );
\LOCKSTEP_Out_reg[524]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(524),
      R => Reset
    );
\LOCKSTEP_Out_reg[525]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(525),
      R => Reset
    );
\LOCKSTEP_Out_reg[526]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(526),
      R => Reset
    );
\LOCKSTEP_Out_reg[527]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(527),
      R => Reset
    );
\LOCKSTEP_Out_reg[528]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(528),
      R => Reset
    );
\LOCKSTEP_Out_reg[529]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(529),
      R => Reset
    );
\LOCKSTEP_Out_reg[52]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(16),
      Q => LOCKSTEP_Out(52),
      R => Reset
    );
\LOCKSTEP_Out_reg[530]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(530),
      R => Reset
    );
\LOCKSTEP_Out_reg[531]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(531),
      R => Reset
    );
\LOCKSTEP_Out_reg[532]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(532),
      R => Reset
    );
\LOCKSTEP_Out_reg[533]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(533),
      R => Reset
    );
\LOCKSTEP_Out_reg[534]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(534),
      R => Reset
    );
\LOCKSTEP_Out_reg[535]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(535),
      R => Reset
    );
\LOCKSTEP_Out_reg[536]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(536),
      R => Reset
    );
\LOCKSTEP_Out_reg[537]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(537),
      R => Reset
    );
\LOCKSTEP_Out_reg[538]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(538),
      R => Reset
    );
\LOCKSTEP_Out_reg[539]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(539),
      R => Reset
    );
\LOCKSTEP_Out_reg[53]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(17),
      Q => LOCKSTEP_Out(53),
      R => Reset
    );
\LOCKSTEP_Out_reg[540]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(540),
      R => Reset
    );
\LOCKSTEP_Out_reg[541]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(541),
      R => Reset
    );
\LOCKSTEP_Out_reg[542]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(542),
      R => Reset
    );
\LOCKSTEP_Out_reg[543]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(543),
      R => Reset
    );
\LOCKSTEP_Out_reg[544]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(544),
      R => Reset
    );
\LOCKSTEP_Out_reg[545]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(545),
      R => Reset
    );
\LOCKSTEP_Out_reg[546]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(546),
      R => Reset
    );
\LOCKSTEP_Out_reg[547]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(547),
      R => Reset
    );
\LOCKSTEP_Out_reg[548]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(548),
      R => Reset
    );
\LOCKSTEP_Out_reg[549]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(549),
      R => Reset
    );
\LOCKSTEP_Out_reg[54]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(18),
      Q => LOCKSTEP_Out(54),
      R => Reset
    );
\LOCKSTEP_Out_reg[550]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(550),
      R => Reset
    );
\LOCKSTEP_Out_reg[551]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(551),
      R => Reset
    );
\LOCKSTEP_Out_reg[552]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(552),
      R => Reset
    );
\LOCKSTEP_Out_reg[553]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(553),
      R => Reset
    );
\LOCKSTEP_Out_reg[554]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(554),
      R => Reset
    );
\LOCKSTEP_Out_reg[555]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(555),
      R => Reset
    );
\LOCKSTEP_Out_reg[556]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(556),
      R => Reset
    );
\LOCKSTEP_Out_reg[557]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(557),
      R => Reset
    );
\LOCKSTEP_Out_reg[558]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(558),
      R => Reset
    );
\LOCKSTEP_Out_reg[559]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(559),
      R => Reset
    );
\LOCKSTEP_Out_reg[55]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(19),
      Q => LOCKSTEP_Out(55),
      R => Reset
    );
\LOCKSTEP_Out_reg[560]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(560),
      R => Reset
    );
\LOCKSTEP_Out_reg[561]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(561),
      R => Reset
    );
\LOCKSTEP_Out_reg[562]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(562),
      R => Reset
    );
\LOCKSTEP_Out_reg[563]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(563),
      R => Reset
    );
\LOCKSTEP_Out_reg[564]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(564),
      R => Reset
    );
\LOCKSTEP_Out_reg[565]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(565),
      R => Reset
    );
\LOCKSTEP_Out_reg[566]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(566),
      R => Reset
    );
\LOCKSTEP_Out_reg[567]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(567),
      R => Reset
    );
\LOCKSTEP_Out_reg[568]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(568),
      R => Reset
    );
\LOCKSTEP_Out_reg[569]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(569),
      R => Reset
    );
\LOCKSTEP_Out_reg[56]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(20),
      Q => LOCKSTEP_Out(56),
      R => Reset
    );
\LOCKSTEP_Out_reg[570]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(570),
      R => Reset
    );
\LOCKSTEP_Out_reg[571]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(571),
      R => Reset
    );
\LOCKSTEP_Out_reg[572]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(572),
      R => Reset
    );
\LOCKSTEP_Out_reg[573]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(573),
      R => Reset
    );
\LOCKSTEP_Out_reg[574]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(574),
      R => Reset
    );
\LOCKSTEP_Out_reg[575]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(575),
      R => Reset
    );
\LOCKSTEP_Out_reg[576]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(576),
      R => Reset
    );
\LOCKSTEP_Out_reg[577]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(577),
      R => Reset
    );
\LOCKSTEP_Out_reg[578]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(578),
      R => Reset
    );
\LOCKSTEP_Out_reg[579]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(579),
      R => Reset
    );
\LOCKSTEP_Out_reg[57]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(21),
      Q => LOCKSTEP_Out(57),
      R => Reset
    );
\LOCKSTEP_Out_reg[580]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(580),
      R => Reset
    );
\LOCKSTEP_Out_reg[581]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(581),
      R => Reset
    );
\LOCKSTEP_Out_reg[582]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(582),
      R => Reset
    );
\LOCKSTEP_Out_reg[583]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(583),
      R => Reset
    );
\LOCKSTEP_Out_reg[584]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(584),
      R => Reset
    );
\LOCKSTEP_Out_reg[585]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(585),
      R => Reset
    );
\LOCKSTEP_Out_reg[586]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(586),
      R => Reset
    );
\LOCKSTEP_Out_reg[587]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(587),
      R => Reset
    );
\LOCKSTEP_Out_reg[588]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(588),
      R => Reset
    );
\LOCKSTEP_Out_reg[589]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(589),
      R => Reset
    );
\LOCKSTEP_Out_reg[58]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(22),
      Q => LOCKSTEP_Out(58),
      R => Reset
    );
\LOCKSTEP_Out_reg[590]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(590),
      R => Reset
    );
\LOCKSTEP_Out_reg[591]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(591),
      R => Reset
    );
\LOCKSTEP_Out_reg[592]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(592),
      R => Reset
    );
\LOCKSTEP_Out_reg[593]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(593),
      R => Reset
    );
\LOCKSTEP_Out_reg[594]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(594),
      R => Reset
    );
\LOCKSTEP_Out_reg[595]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(595),
      R => Reset
    );
\LOCKSTEP_Out_reg[596]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(596),
      R => Reset
    );
\LOCKSTEP_Out_reg[597]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(597),
      R => Reset
    );
\LOCKSTEP_Out_reg[598]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(598),
      R => Reset
    );
\LOCKSTEP_Out_reg[599]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(599),
      R => Reset
    );
\LOCKSTEP_Out_reg[59]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(23),
      Q => LOCKSTEP_Out(59),
      R => Reset
    );
\LOCKSTEP_Out_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(1),
      Q => LOCKSTEP_Out(5),
      R => Reset
    );
\LOCKSTEP_Out_reg[600]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(600),
      R => Reset
    );
\LOCKSTEP_Out_reg[601]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(601),
      R => Reset
    );
\LOCKSTEP_Out_reg[602]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(602),
      R => Reset
    );
\LOCKSTEP_Out_reg[603]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(603),
      R => Reset
    );
\LOCKSTEP_Out_reg[604]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(604),
      R => Reset
    );
\LOCKSTEP_Out_reg[605]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(605),
      R => Reset
    );
\LOCKSTEP_Out_reg[606]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(606),
      R => Reset
    );
\LOCKSTEP_Out_reg[607]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(607),
      R => Reset
    );
\LOCKSTEP_Out_reg[608]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(608),
      R => Reset
    );
\LOCKSTEP_Out_reg[609]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(609),
      R => Reset
    );
\LOCKSTEP_Out_reg[60]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(24),
      Q => LOCKSTEP_Out(60),
      R => Reset
    );
\LOCKSTEP_Out_reg[610]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(610),
      R => Reset
    );
\LOCKSTEP_Out_reg[611]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(611),
      R => Reset
    );
\LOCKSTEP_Out_reg[612]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(612),
      R => Reset
    );
\LOCKSTEP_Out_reg[613]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(613),
      R => Reset
    );
\LOCKSTEP_Out_reg[614]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(614),
      R => Reset
    );
\LOCKSTEP_Out_reg[615]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(615),
      R => Reset
    );
\LOCKSTEP_Out_reg[616]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(616),
      R => Reset
    );
\LOCKSTEP_Out_reg[617]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(617),
      R => Reset
    );
\LOCKSTEP_Out_reg[618]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(618),
      R => Reset
    );
\LOCKSTEP_Out_reg[619]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(619),
      R => Reset
    );
\LOCKSTEP_Out_reg[61]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(25),
      Q => LOCKSTEP_Out(61),
      R => Reset
    );
\LOCKSTEP_Out_reg[620]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(620),
      R => Reset
    );
\LOCKSTEP_Out_reg[621]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(621),
      R => Reset
    );
\LOCKSTEP_Out_reg[622]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(622),
      R => Reset
    );
\LOCKSTEP_Out_reg[623]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(623),
      R => Reset
    );
\LOCKSTEP_Out_reg[624]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(624),
      R => Reset
    );
\LOCKSTEP_Out_reg[625]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(625),
      R => Reset
    );
\LOCKSTEP_Out_reg[626]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(626),
      R => Reset
    );
\LOCKSTEP_Out_reg[627]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(627),
      R => Reset
    );
\LOCKSTEP_Out_reg[628]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(628),
      R => Reset
    );
\LOCKSTEP_Out_reg[629]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(629),
      R => Reset
    );
\LOCKSTEP_Out_reg[62]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(26),
      Q => LOCKSTEP_Out(62),
      R => Reset
    );
\LOCKSTEP_Out_reg[630]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(630),
      R => Reset
    );
\LOCKSTEP_Out_reg[631]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(631),
      R => Reset
    );
\LOCKSTEP_Out_reg[632]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(632),
      R => Reset
    );
\LOCKSTEP_Out_reg[633]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(633),
      R => Reset
    );
\LOCKSTEP_Out_reg[634]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(634),
      R => Reset
    );
\LOCKSTEP_Out_reg[635]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(635),
      R => Reset
    );
\LOCKSTEP_Out_reg[636]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(636),
      R => Reset
    );
\LOCKSTEP_Out_reg[637]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(637),
      R => Reset
    );
\LOCKSTEP_Out_reg[638]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(638),
      R => Reset
    );
\LOCKSTEP_Out_reg[639]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(639),
      R => Reset
    );
\LOCKSTEP_Out_reg[63]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(27),
      Q => LOCKSTEP_Out(63),
      R => Reset
    );
\LOCKSTEP_Out_reg[640]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(640),
      R => Reset
    );
\LOCKSTEP_Out_reg[641]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(641),
      R => Reset
    );
\LOCKSTEP_Out_reg[642]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(642),
      R => Reset
    );
\LOCKSTEP_Out_reg[643]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(643),
      R => Reset
    );
\LOCKSTEP_Out_reg[644]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(644),
      R => Reset
    );
\LOCKSTEP_Out_reg[645]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(645),
      R => Reset
    );
\LOCKSTEP_Out_reg[646]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(646),
      R => Reset
    );
\LOCKSTEP_Out_reg[647]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(647),
      R => Reset
    );
\LOCKSTEP_Out_reg[648]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(648),
      R => Reset
    );
\LOCKSTEP_Out_reg[649]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(649),
      R => Reset
    );
\LOCKSTEP_Out_reg[64]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(28),
      Q => LOCKSTEP_Out(64),
      R => Reset
    );
\LOCKSTEP_Out_reg[650]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(650),
      R => Reset
    );
\LOCKSTEP_Out_reg[651]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(651),
      R => Reset
    );
\LOCKSTEP_Out_reg[652]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(652),
      R => Reset
    );
\LOCKSTEP_Out_reg[653]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(653),
      R => Reset
    );
\LOCKSTEP_Out_reg[654]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(654),
      R => Reset
    );
\LOCKSTEP_Out_reg[655]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(655),
      R => Reset
    );
\LOCKSTEP_Out_reg[656]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(656),
      R => Reset
    );
\LOCKSTEP_Out_reg[657]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(657),
      R => Reset
    );
\LOCKSTEP_Out_reg[658]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(658),
      R => Reset
    );
\LOCKSTEP_Out_reg[659]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(659),
      R => Reset
    );
\LOCKSTEP_Out_reg[65]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(29),
      Q => LOCKSTEP_Out(65),
      R => Reset
    );
\LOCKSTEP_Out_reg[660]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(660),
      R => Reset
    );
\LOCKSTEP_Out_reg[661]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(661),
      R => Reset
    );
\LOCKSTEP_Out_reg[662]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(662),
      R => Reset
    );
\LOCKSTEP_Out_reg[663]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(663),
      R => Reset
    );
\LOCKSTEP_Out_reg[664]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(664),
      R => Reset
    );
\LOCKSTEP_Out_reg[665]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(665),
      R => Reset
    );
\LOCKSTEP_Out_reg[666]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(666),
      R => Reset
    );
\LOCKSTEP_Out_reg[667]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(667),
      R => Reset
    );
\LOCKSTEP_Out_reg[668]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(668),
      R => Reset
    );
\LOCKSTEP_Out_reg[669]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(669),
      R => Reset
    );
\LOCKSTEP_Out_reg[66]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(30),
      Q => LOCKSTEP_Out(66),
      R => Reset
    );
\LOCKSTEP_Out_reg[670]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(670),
      R => Reset
    );
\LOCKSTEP_Out_reg[671]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(671),
      R => Reset
    );
\LOCKSTEP_Out_reg[672]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(672),
      R => Reset
    );
\LOCKSTEP_Out_reg[673]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(673),
      R => Reset
    );
\LOCKSTEP_Out_reg[674]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(674),
      R => Reset
    );
\LOCKSTEP_Out_reg[675]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(675),
      R => Reset
    );
\LOCKSTEP_Out_reg[676]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(676),
      R => Reset
    );
\LOCKSTEP_Out_reg[677]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(677),
      R => Reset
    );
\LOCKSTEP_Out_reg[678]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(678),
      R => Reset
    );
\LOCKSTEP_Out_reg[679]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(679),
      R => Reset
    );
\LOCKSTEP_Out_reg[67]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(31),
      Q => LOCKSTEP_Out(67),
      R => Reset
    );
\LOCKSTEP_Out_reg[680]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(680),
      R => Reset
    );
\LOCKSTEP_Out_reg[681]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(681),
      R => Reset
    );
\LOCKSTEP_Out_reg[682]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(682),
      R => Reset
    );
\LOCKSTEP_Out_reg[683]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(683),
      R => Reset
    );
\LOCKSTEP_Out_reg[684]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(684),
      R => Reset
    );
\LOCKSTEP_Out_reg[685]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(685),
      R => Reset
    );
\LOCKSTEP_Out_reg[686]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(686),
      R => Reset
    );
\LOCKSTEP_Out_reg[687]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(687),
      R => Reset
    );
\LOCKSTEP_Out_reg[688]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(688),
      R => Reset
    );
\LOCKSTEP_Out_reg[689]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(689),
      R => Reset
    );
\LOCKSTEP_Out_reg[68]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(0),
      Q => LOCKSTEP_Out(68),
      R => Reset
    );
\LOCKSTEP_Out_reg[690]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(690),
      R => Reset
    );
\LOCKSTEP_Out_reg[691]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(691),
      R => Reset
    );
\LOCKSTEP_Out_reg[692]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(692),
      R => Reset
    );
\LOCKSTEP_Out_reg[693]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(693),
      R => Reset
    );
\LOCKSTEP_Out_reg[694]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(694),
      R => Reset
    );
\LOCKSTEP_Out_reg[695]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(695),
      R => Reset
    );
\LOCKSTEP_Out_reg[696]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(696),
      R => Reset
    );
\LOCKSTEP_Out_reg[697]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(697),
      R => Reset
    );
\LOCKSTEP_Out_reg[698]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(698),
      R => Reset
    );
\LOCKSTEP_Out_reg[699]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(699),
      R => Reset
    );
\LOCKSTEP_Out_reg[69]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(1),
      Q => LOCKSTEP_Out(69),
      R => Reset
    );
\LOCKSTEP_Out_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(2),
      Q => LOCKSTEP_Out(6),
      R => Reset
    );
\LOCKSTEP_Out_reg[700]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(700),
      R => Reset
    );
\LOCKSTEP_Out_reg[701]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(701),
      R => Reset
    );
\LOCKSTEP_Out_reg[702]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(702),
      R => Reset
    );
\LOCKSTEP_Out_reg[703]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(703),
      R => Reset
    );
\LOCKSTEP_Out_reg[704]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(704),
      R => Reset
    );
\LOCKSTEP_Out_reg[705]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(705),
      R => Reset
    );
\LOCKSTEP_Out_reg[706]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(706),
      R => Reset
    );
\LOCKSTEP_Out_reg[707]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(707),
      R => Reset
    );
\LOCKSTEP_Out_reg[708]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(708),
      R => Reset
    );
\LOCKSTEP_Out_reg[709]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(709),
      R => Reset
    );
\LOCKSTEP_Out_reg[70]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(2),
      Q => LOCKSTEP_Out(70),
      R => Reset
    );
\LOCKSTEP_Out_reg[710]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(710),
      R => Reset
    );
\LOCKSTEP_Out_reg[711]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(711),
      R => Reset
    );
\LOCKSTEP_Out_reg[712]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(712),
      R => Reset
    );
\LOCKSTEP_Out_reg[713]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(713),
      R => Reset
    );
\LOCKSTEP_Out_reg[714]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(714),
      R => Reset
    );
\LOCKSTEP_Out_reg[715]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(715),
      R => Reset
    );
\LOCKSTEP_Out_reg[716]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(716),
      R => Reset
    );
\LOCKSTEP_Out_reg[717]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(717),
      R => Reset
    );
\LOCKSTEP_Out_reg[718]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(718),
      R => Reset
    );
\LOCKSTEP_Out_reg[719]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(719),
      R => Reset
    );
\LOCKSTEP_Out_reg[71]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(3),
      Q => LOCKSTEP_Out(71),
      R => Reset
    );
\LOCKSTEP_Out_reg[720]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(720),
      R => Reset
    );
\LOCKSTEP_Out_reg[721]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(721),
      R => Reset
    );
\LOCKSTEP_Out_reg[722]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(722),
      R => Reset
    );
\LOCKSTEP_Out_reg[723]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(723),
      R => Reset
    );
\LOCKSTEP_Out_reg[724]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(724),
      R => Reset
    );
\LOCKSTEP_Out_reg[725]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(725),
      R => Reset
    );
\LOCKSTEP_Out_reg[726]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(726),
      R => Reset
    );
\LOCKSTEP_Out_reg[727]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(727),
      R => Reset
    );
\LOCKSTEP_Out_reg[728]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(728),
      R => Reset
    );
\LOCKSTEP_Out_reg[729]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(729),
      R => Reset
    );
\LOCKSTEP_Out_reg[72]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(4),
      Q => LOCKSTEP_Out(72),
      R => Reset
    );
\LOCKSTEP_Out_reg[730]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(730),
      R => Reset
    );
\LOCKSTEP_Out_reg[731]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(731),
      R => Reset
    );
\LOCKSTEP_Out_reg[732]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(732),
      R => Reset
    );
\LOCKSTEP_Out_reg[733]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(733),
      R => Reset
    );
\LOCKSTEP_Out_reg[734]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(734),
      R => Reset
    );
\LOCKSTEP_Out_reg[735]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(735),
      R => Reset
    );
\LOCKSTEP_Out_reg[736]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(736),
      R => Reset
    );
\LOCKSTEP_Out_reg[737]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(737),
      R => Reset
    );
\LOCKSTEP_Out_reg[738]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(738),
      R => Reset
    );
\LOCKSTEP_Out_reg[739]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(739),
      R => Reset
    );
\LOCKSTEP_Out_reg[73]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(5),
      Q => LOCKSTEP_Out(73),
      R => Reset
    );
\LOCKSTEP_Out_reg[740]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(740),
      R => Reset
    );
\LOCKSTEP_Out_reg[741]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(741),
      R => Reset
    );
\LOCKSTEP_Out_reg[742]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(742),
      R => Reset
    );
\LOCKSTEP_Out_reg[743]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(743),
      R => Reset
    );
\LOCKSTEP_Out_reg[744]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(744),
      R => Reset
    );
\LOCKSTEP_Out_reg[745]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(745),
      R => Reset
    );
\LOCKSTEP_Out_reg[746]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(746),
      R => Reset
    );
\LOCKSTEP_Out_reg[747]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(747),
      R => Reset
    );
\LOCKSTEP_Out_reg[748]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(748),
      R => Reset
    );
\LOCKSTEP_Out_reg[749]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(749),
      R => Reset
    );
\LOCKSTEP_Out_reg[74]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(6),
      Q => LOCKSTEP_Out(74),
      R => Reset
    );
\LOCKSTEP_Out_reg[750]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(750),
      R => Reset
    );
\LOCKSTEP_Out_reg[751]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(751),
      R => Reset
    );
\LOCKSTEP_Out_reg[752]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(752),
      R => Reset
    );
\LOCKSTEP_Out_reg[753]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(753),
      R => Reset
    );
\LOCKSTEP_Out_reg[754]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(754),
      R => Reset
    );
\LOCKSTEP_Out_reg[755]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(755),
      R => Reset
    );
\LOCKSTEP_Out_reg[756]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(756),
      R => Reset
    );
\LOCKSTEP_Out_reg[757]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(757),
      R => Reset
    );
\LOCKSTEP_Out_reg[758]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(758),
      R => Reset
    );
\LOCKSTEP_Out_reg[759]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(759),
      R => Reset
    );
\LOCKSTEP_Out_reg[75]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(7),
      Q => LOCKSTEP_Out(75),
      R => Reset
    );
\LOCKSTEP_Out_reg[760]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(760),
      R => Reset
    );
\LOCKSTEP_Out_reg[761]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(761),
      R => Reset
    );
\LOCKSTEP_Out_reg[762]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(762),
      R => Reset
    );
\LOCKSTEP_Out_reg[763]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(763),
      R => Reset
    );
\LOCKSTEP_Out_reg[764]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(764),
      R => Reset
    );
\LOCKSTEP_Out_reg[765]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(765),
      R => Reset
    );
\LOCKSTEP_Out_reg[766]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(766),
      R => Reset
    );
\LOCKSTEP_Out_reg[767]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(767),
      R => Reset
    );
\LOCKSTEP_Out_reg[768]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(768),
      R => Reset
    );
\LOCKSTEP_Out_reg[769]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(769),
      R => Reset
    );
\LOCKSTEP_Out_reg[76]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(8),
      Q => LOCKSTEP_Out(76),
      R => Reset
    );
\LOCKSTEP_Out_reg[770]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(770),
      R => Reset
    );
\LOCKSTEP_Out_reg[771]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(771),
      R => Reset
    );
\LOCKSTEP_Out_reg[772]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(772),
      R => Reset
    );
\LOCKSTEP_Out_reg[773]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(773),
      R => Reset
    );
\LOCKSTEP_Out_reg[774]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(774),
      R => Reset
    );
\LOCKSTEP_Out_reg[775]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(775),
      R => Reset
    );
\LOCKSTEP_Out_reg[776]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(776),
      R => Reset
    );
\LOCKSTEP_Out_reg[777]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(777),
      R => Reset
    );
\LOCKSTEP_Out_reg[778]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(778),
      R => Reset
    );
\LOCKSTEP_Out_reg[779]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(779),
      R => Reset
    );
\LOCKSTEP_Out_reg[77]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(9),
      Q => LOCKSTEP_Out(77),
      R => Reset
    );
\LOCKSTEP_Out_reg[780]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(780),
      R => Reset
    );
\LOCKSTEP_Out_reg[781]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(781),
      R => Reset
    );
\LOCKSTEP_Out_reg[782]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(782),
      R => Reset
    );
\LOCKSTEP_Out_reg[783]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(783),
      R => Reset
    );
\LOCKSTEP_Out_reg[784]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(784),
      R => Reset
    );
\LOCKSTEP_Out_reg[785]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(785),
      R => Reset
    );
\LOCKSTEP_Out_reg[786]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(786),
      R => Reset
    );
\LOCKSTEP_Out_reg[787]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(787),
      R => Reset
    );
\LOCKSTEP_Out_reg[788]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(788),
      R => Reset
    );
\LOCKSTEP_Out_reg[789]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(789),
      R => Reset
    );
\LOCKSTEP_Out_reg[78]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(10),
      Q => LOCKSTEP_Out(78),
      R => Reset
    );
\LOCKSTEP_Out_reg[790]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(790),
      R => Reset
    );
\LOCKSTEP_Out_reg[791]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(791),
      R => Reset
    );
\LOCKSTEP_Out_reg[792]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(792),
      R => Reset
    );
\LOCKSTEP_Out_reg[793]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(793),
      R => Reset
    );
\LOCKSTEP_Out_reg[794]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(794),
      R => Reset
    );
\LOCKSTEP_Out_reg[795]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(795),
      R => Reset
    );
\LOCKSTEP_Out_reg[796]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(796),
      R => Reset
    );
\LOCKSTEP_Out_reg[797]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(797),
      R => Reset
    );
\LOCKSTEP_Out_reg[798]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(798),
      R => Reset
    );
\LOCKSTEP_Out_reg[799]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(799),
      R => Reset
    );
\LOCKSTEP_Out_reg[79]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(11),
      Q => LOCKSTEP_Out(79),
      R => Reset
    );
\LOCKSTEP_Out_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(3),
      Q => LOCKSTEP_Out(7),
      R => Reset
    );
\LOCKSTEP_Out_reg[800]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(800),
      R => Reset
    );
\LOCKSTEP_Out_reg[801]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(801),
      R => Reset
    );
\LOCKSTEP_Out_reg[802]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(802),
      R => Reset
    );
\LOCKSTEP_Out_reg[803]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(803),
      R => Reset
    );
\LOCKSTEP_Out_reg[804]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(804),
      R => Reset
    );
\LOCKSTEP_Out_reg[805]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(805),
      R => Reset
    );
\LOCKSTEP_Out_reg[806]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(806),
      R => Reset
    );
\LOCKSTEP_Out_reg[807]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(807),
      R => Reset
    );
\LOCKSTEP_Out_reg[808]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(808),
      R => Reset
    );
\LOCKSTEP_Out_reg[809]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(809),
      R => Reset
    );
\LOCKSTEP_Out_reg[80]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(12),
      Q => LOCKSTEP_Out(80),
      R => Reset
    );
\LOCKSTEP_Out_reg[810]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(810),
      R => Reset
    );
\LOCKSTEP_Out_reg[811]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(811),
      R => Reset
    );
\LOCKSTEP_Out_reg[812]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(812),
      R => Reset
    );
\LOCKSTEP_Out_reg[813]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(813),
      R => Reset
    );
\LOCKSTEP_Out_reg[814]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(814),
      R => Reset
    );
\LOCKSTEP_Out_reg[815]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(815),
      R => Reset
    );
\LOCKSTEP_Out_reg[816]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(816),
      R => Reset
    );
\LOCKSTEP_Out_reg[817]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(817),
      R => Reset
    );
\LOCKSTEP_Out_reg[818]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(818),
      R => Reset
    );
\LOCKSTEP_Out_reg[819]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(819),
      R => Reset
    );
\LOCKSTEP_Out_reg[81]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(13),
      Q => LOCKSTEP_Out(81),
      R => Reset
    );
\LOCKSTEP_Out_reg[820]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(820),
      R => Reset
    );
\LOCKSTEP_Out_reg[821]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(821),
      R => Reset
    );
\LOCKSTEP_Out_reg[822]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(822),
      R => Reset
    );
\LOCKSTEP_Out_reg[823]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(823),
      R => Reset
    );
\LOCKSTEP_Out_reg[824]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(824),
      R => Reset
    );
\LOCKSTEP_Out_reg[825]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(825),
      R => Reset
    );
\LOCKSTEP_Out_reg[826]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(826),
      R => Reset
    );
\LOCKSTEP_Out_reg[827]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(827),
      R => Reset
    );
\LOCKSTEP_Out_reg[828]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(828),
      R => Reset
    );
\LOCKSTEP_Out_reg[829]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(829),
      R => Reset
    );
\LOCKSTEP_Out_reg[82]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(14),
      Q => LOCKSTEP_Out(82),
      R => Reset
    );
\LOCKSTEP_Out_reg[830]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(830),
      R => Reset
    );
\LOCKSTEP_Out_reg[831]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(831),
      R => Reset
    );
\LOCKSTEP_Out_reg[832]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(832),
      R => Reset
    );
\LOCKSTEP_Out_reg[833]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(833),
      R => Reset
    );
\LOCKSTEP_Out_reg[834]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(834),
      R => Reset
    );
\LOCKSTEP_Out_reg[835]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(835),
      R => Reset
    );
\LOCKSTEP_Out_reg[836]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(836),
      R => Reset
    );
\LOCKSTEP_Out_reg[837]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(837),
      R => Reset
    );
\LOCKSTEP_Out_reg[838]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(838),
      R => Reset
    );
\LOCKSTEP_Out_reg[839]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(839),
      R => Reset
    );
\LOCKSTEP_Out_reg[83]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(15),
      Q => LOCKSTEP_Out(83),
      R => Reset
    );
\LOCKSTEP_Out_reg[840]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(840),
      R => Reset
    );
\LOCKSTEP_Out_reg[841]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(841),
      R => Reset
    );
\LOCKSTEP_Out_reg[842]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(842),
      R => Reset
    );
\LOCKSTEP_Out_reg[843]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(843),
      R => Reset
    );
\LOCKSTEP_Out_reg[844]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(844),
      R => Reset
    );
\LOCKSTEP_Out_reg[845]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(845),
      R => Reset
    );
\LOCKSTEP_Out_reg[846]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(846),
      R => Reset
    );
\LOCKSTEP_Out_reg[847]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(847),
      R => Reset
    );
\LOCKSTEP_Out_reg[848]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(848),
      R => Reset
    );
\LOCKSTEP_Out_reg[849]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(849),
      R => Reset
    );
\LOCKSTEP_Out_reg[84]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(16),
      Q => LOCKSTEP_Out(84),
      R => Reset
    );
\LOCKSTEP_Out_reg[850]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(850),
      R => Reset
    );
\LOCKSTEP_Out_reg[851]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(851),
      R => Reset
    );
\LOCKSTEP_Out_reg[852]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(852),
      R => Reset
    );
\LOCKSTEP_Out_reg[853]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(853),
      R => Reset
    );
\LOCKSTEP_Out_reg[854]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(854),
      R => Reset
    );
\LOCKSTEP_Out_reg[855]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(855),
      R => Reset
    );
\LOCKSTEP_Out_reg[856]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(856),
      R => Reset
    );
\LOCKSTEP_Out_reg[857]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(857),
      R => Reset
    );
\LOCKSTEP_Out_reg[858]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(858),
      R => Reset
    );
\LOCKSTEP_Out_reg[859]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(859),
      R => Reset
    );
\LOCKSTEP_Out_reg[85]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(17),
      Q => LOCKSTEP_Out(85),
      R => Reset
    );
\LOCKSTEP_Out_reg[860]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(860),
      R => Reset
    );
\LOCKSTEP_Out_reg[861]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(861),
      R => Reset
    );
\LOCKSTEP_Out_reg[862]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(862),
      R => Reset
    );
\LOCKSTEP_Out_reg[863]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(863),
      R => Reset
    );
\LOCKSTEP_Out_reg[864]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(864),
      R => Reset
    );
\LOCKSTEP_Out_reg[865]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(865),
      R => Reset
    );
\LOCKSTEP_Out_reg[866]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(866),
      R => Reset
    );
\LOCKSTEP_Out_reg[867]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(867),
      R => Reset
    );
\LOCKSTEP_Out_reg[868]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(868),
      R => Reset
    );
\LOCKSTEP_Out_reg[869]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(869),
      R => Reset
    );
\LOCKSTEP_Out_reg[86]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(18),
      Q => LOCKSTEP_Out(86),
      R => Reset
    );
\LOCKSTEP_Out_reg[870]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(870),
      R => Reset
    );
\LOCKSTEP_Out_reg[871]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(871),
      R => Reset
    );
\LOCKSTEP_Out_reg[872]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(872),
      R => Reset
    );
\LOCKSTEP_Out_reg[873]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(873),
      R => Reset
    );
\LOCKSTEP_Out_reg[874]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(874),
      R => Reset
    );
\LOCKSTEP_Out_reg[875]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(875),
      R => Reset
    );
\LOCKSTEP_Out_reg[876]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(876),
      R => Reset
    );
\LOCKSTEP_Out_reg[877]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(877),
      R => Reset
    );
\LOCKSTEP_Out_reg[878]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(878),
      R => Reset
    );
\LOCKSTEP_Out_reg[879]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(879),
      R => Reset
    );
\LOCKSTEP_Out_reg[87]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(19),
      Q => LOCKSTEP_Out(87),
      R => Reset
    );
\LOCKSTEP_Out_reg[880]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(880),
      R => Reset
    );
\LOCKSTEP_Out_reg[881]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(881),
      R => Reset
    );
\LOCKSTEP_Out_reg[882]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(882),
      R => Reset
    );
\LOCKSTEP_Out_reg[883]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(883),
      R => Reset
    );
\LOCKSTEP_Out_reg[884]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(884),
      R => Reset
    );
\LOCKSTEP_Out_reg[885]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(885),
      R => Reset
    );
\LOCKSTEP_Out_reg[886]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(886),
      R => Reset
    );
\LOCKSTEP_Out_reg[887]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(887),
      R => Reset
    );
\LOCKSTEP_Out_reg[888]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(888),
      R => Reset
    );
\LOCKSTEP_Out_reg[889]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(889),
      R => Reset
    );
\LOCKSTEP_Out_reg[88]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(20),
      Q => LOCKSTEP_Out(88),
      R => Reset
    );
\LOCKSTEP_Out_reg[890]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(890),
      R => Reset
    );
\LOCKSTEP_Out_reg[891]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(891),
      R => Reset
    );
\LOCKSTEP_Out_reg[892]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(892),
      R => Reset
    );
\LOCKSTEP_Out_reg[893]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(893),
      R => Reset
    );
\LOCKSTEP_Out_reg[894]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(894),
      R => Reset
    );
\LOCKSTEP_Out_reg[895]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(895),
      R => Reset
    );
\LOCKSTEP_Out_reg[896]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(31),
      Q => LOCKSTEP_Out(896),
      R => Reset
    );
\LOCKSTEP_Out_reg[897]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(30),
      Q => LOCKSTEP_Out(897),
      R => Reset
    );
\LOCKSTEP_Out_reg[898]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(29),
      Q => LOCKSTEP_Out(898),
      R => Reset
    );
\LOCKSTEP_Out_reg[899]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(28),
      Q => LOCKSTEP_Out(899),
      R => Reset
    );
\LOCKSTEP_Out_reg[89]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(21),
      Q => LOCKSTEP_Out(89),
      R => Reset
    );
\LOCKSTEP_Out_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(4),
      Q => LOCKSTEP_Out(8),
      R => Reset
    );
\LOCKSTEP_Out_reg[900]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(27),
      Q => LOCKSTEP_Out(900),
      R => Reset
    );
\LOCKSTEP_Out_reg[901]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(26),
      Q => LOCKSTEP_Out(901),
      R => Reset
    );
\LOCKSTEP_Out_reg[902]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(25),
      Q => LOCKSTEP_Out(902),
      R => Reset
    );
\LOCKSTEP_Out_reg[903]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(24),
      Q => LOCKSTEP_Out(903),
      R => Reset
    );
\LOCKSTEP_Out_reg[904]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(23),
      Q => LOCKSTEP_Out(904),
      R => Reset
    );
\LOCKSTEP_Out_reg[905]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(22),
      Q => LOCKSTEP_Out(905),
      R => Reset
    );
\LOCKSTEP_Out_reg[906]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(21),
      Q => LOCKSTEP_Out(906),
      R => Reset
    );
\LOCKSTEP_Out_reg[907]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(20),
      Q => LOCKSTEP_Out(907),
      R => Reset
    );
\LOCKSTEP_Out_reg[908]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(19),
      Q => LOCKSTEP_Out(908),
      R => Reset
    );
\LOCKSTEP_Out_reg[909]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(18),
      Q => LOCKSTEP_Out(909),
      R => Reset
    );
\LOCKSTEP_Out_reg[90]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(22),
      Q => LOCKSTEP_Out(90),
      R => Reset
    );
\LOCKSTEP_Out_reg[910]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(17),
      Q => LOCKSTEP_Out(910),
      R => Reset
    );
\LOCKSTEP_Out_reg[911]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(16),
      Q => LOCKSTEP_Out(911),
      R => Reset
    );
\LOCKSTEP_Out_reg[912]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(15),
      Q => LOCKSTEP_Out(912),
      R => Reset
    );
\LOCKSTEP_Out_reg[913]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(14),
      Q => LOCKSTEP_Out(913),
      R => Reset
    );
\LOCKSTEP_Out_reg[914]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(13),
      Q => LOCKSTEP_Out(914),
      R => Reset
    );
\LOCKSTEP_Out_reg[915]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(12),
      Q => LOCKSTEP_Out(915),
      R => Reset
    );
\LOCKSTEP_Out_reg[916]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(11),
      Q => LOCKSTEP_Out(916),
      R => Reset
    );
\LOCKSTEP_Out_reg[917]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(10),
      Q => LOCKSTEP_Out(917),
      R => Reset
    );
\LOCKSTEP_Out_reg[918]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(9),
      Q => LOCKSTEP_Out(918),
      R => Reset
    );
\LOCKSTEP_Out_reg[919]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(8),
      Q => LOCKSTEP_Out(919),
      R => Reset
    );
\LOCKSTEP_Out_reg[91]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(23),
      Q => LOCKSTEP_Out(91),
      R => Reset
    );
\LOCKSTEP_Out_reg[920]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(7),
      Q => LOCKSTEP_Out(920),
      R => Reset
    );
\LOCKSTEP_Out_reg[921]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(6),
      Q => LOCKSTEP_Out(921),
      R => Reset
    );
\LOCKSTEP_Out_reg[922]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(5),
      Q => LOCKSTEP_Out(922),
      R => Reset
    );
\LOCKSTEP_Out_reg[923]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(4),
      Q => LOCKSTEP_Out(923),
      R => Reset
    );
\LOCKSTEP_Out_reg[924]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(3),
      Q => LOCKSTEP_Out(924),
      R => Reset
    );
\LOCKSTEP_Out_reg[925]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(2),
      Q => LOCKSTEP_Out(925),
      R => Reset
    );
\LOCKSTEP_Out_reg[926]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(1),
      Q => LOCKSTEP_Out(926),
      R => Reset
    );
\LOCKSTEP_Out_reg[927]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(0),
      Q => LOCKSTEP_Out(927),
      R => Reset
    );
\LOCKSTEP_Out_reg[928]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(928),
      R => Reset
    );
\LOCKSTEP_Out_reg[929]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(929),
      R => Reset
    );
\LOCKSTEP_Out_reg[92]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(24),
      Q => LOCKSTEP_Out(92),
      R => Reset
    );
\LOCKSTEP_Out_reg[930]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(930),
      R => Reset
    );
\LOCKSTEP_Out_reg[931]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(931),
      R => Reset
    );
\LOCKSTEP_Out_reg[932]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(932),
      R => Reset
    );
\LOCKSTEP_Out_reg[933]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(933),
      R => Reset
    );
\LOCKSTEP_Out_reg[934]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(934),
      R => Reset
    );
\LOCKSTEP_Out_reg[935]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(935),
      R => Reset
    );
\LOCKSTEP_Out_reg[936]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(936),
      R => Reset
    );
\LOCKSTEP_Out_reg[937]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '1',
      Q => LOCKSTEP_Out(937),
      R => Reset
    );
\LOCKSTEP_Out_reg[938]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(938),
      R => Reset
    );
\LOCKSTEP_Out_reg[939]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(939),
      R => Reset
    );
\LOCKSTEP_Out_reg[93]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(25),
      Q => LOCKSTEP_Out(93),
      R => Reset
    );
\LOCKSTEP_Out_reg[940]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '1',
      Q => LOCKSTEP_Out(940),
      R => Reset
    );
\LOCKSTEP_Out_reg[941]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(941),
      R => Reset
    );
\LOCKSTEP_Out_reg[942]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(942),
      R => Reset
    );
\LOCKSTEP_Out_reg[943]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(943),
      R => Reset
    );
\LOCKSTEP_Out_reg[944]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '1',
      Q => LOCKSTEP_Out(944),
      R => Reset
    );
\LOCKSTEP_Out_reg[945]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '1',
      Q => LOCKSTEP_Out(945),
      R => Reset
    );
\LOCKSTEP_Out_reg[946]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(946),
      R => Reset
    );
\LOCKSTEP_Out_reg[947]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(947),
      R => Reset
    );
\LOCKSTEP_Out_reg[948]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(948),
      R => Reset
    );
\LOCKSTEP_Out_reg[949]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '1',
      Q => LOCKSTEP_Out(949),
      R => Reset
    );
\LOCKSTEP_Out_reg[94]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(26),
      Q => LOCKSTEP_Out(94),
      R => Reset
    );
\LOCKSTEP_Out_reg[950]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(950),
      R => Reset
    );
\LOCKSTEP_Out_reg[951]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(951),
      R => Reset
    );
\LOCKSTEP_Out_reg[952]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(952),
      R => Reset
    );
\LOCKSTEP_Out_reg[953]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awvalid\,
      Q => LOCKSTEP_Out(953),
      R => Reset
    );
\LOCKSTEP_Out_reg[954]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(31),
      Q => LOCKSTEP_Out(954),
      R => Reset
    );
\LOCKSTEP_Out_reg[955]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(30),
      Q => LOCKSTEP_Out(955),
      R => Reset
    );
\LOCKSTEP_Out_reg[956]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(29),
      Q => LOCKSTEP_Out(956),
      R => Reset
    );
\LOCKSTEP_Out_reg[957]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(28),
      Q => LOCKSTEP_Out(957),
      R => Reset
    );
\LOCKSTEP_Out_reg[958]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(27),
      Q => LOCKSTEP_Out(958),
      R => Reset
    );
\LOCKSTEP_Out_reg[959]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(26),
      Q => LOCKSTEP_Out(959),
      R => Reset
    );
\LOCKSTEP_Out_reg[95]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(27),
      Q => LOCKSTEP_Out(95),
      R => Reset
    );
\LOCKSTEP_Out_reg[960]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(25),
      Q => LOCKSTEP_Out(960),
      R => Reset
    );
\LOCKSTEP_Out_reg[961]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(24),
      Q => LOCKSTEP_Out(961),
      R => Reset
    );
\LOCKSTEP_Out_reg[962]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(23),
      Q => LOCKSTEP_Out(962),
      R => Reset
    );
\LOCKSTEP_Out_reg[963]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(22),
      Q => LOCKSTEP_Out(963),
      R => Reset
    );
\LOCKSTEP_Out_reg[964]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(21),
      Q => LOCKSTEP_Out(964),
      R => Reset
    );
\LOCKSTEP_Out_reg[965]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(20),
      Q => LOCKSTEP_Out(965),
      R => Reset
    );
\LOCKSTEP_Out_reg[966]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(19),
      Q => LOCKSTEP_Out(966),
      R => Reset
    );
\LOCKSTEP_Out_reg[967]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(18),
      Q => LOCKSTEP_Out(967),
      R => Reset
    );
\LOCKSTEP_Out_reg[968]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(17),
      Q => LOCKSTEP_Out(968),
      R => Reset
    );
\LOCKSTEP_Out_reg[969]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(16),
      Q => LOCKSTEP_Out(969),
      R => Reset
    );
\LOCKSTEP_Out_reg[96]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(28),
      Q => LOCKSTEP_Out(96),
      R => Reset
    );
\LOCKSTEP_Out_reg[970]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(15),
      Q => LOCKSTEP_Out(970),
      R => Reset
    );
\LOCKSTEP_Out_reg[971]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(14),
      Q => LOCKSTEP_Out(971),
      R => Reset
    );
\LOCKSTEP_Out_reg[972]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(13),
      Q => LOCKSTEP_Out(972),
      R => Reset
    );
\LOCKSTEP_Out_reg[973]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(12),
      Q => LOCKSTEP_Out(973),
      R => Reset
    );
\LOCKSTEP_Out_reg[974]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(11),
      Q => LOCKSTEP_Out(974),
      R => Reset
    );
\LOCKSTEP_Out_reg[975]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(10),
      Q => LOCKSTEP_Out(975),
      R => Reset
    );
\LOCKSTEP_Out_reg[976]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(9),
      Q => LOCKSTEP_Out(976),
      R => Reset
    );
\LOCKSTEP_Out_reg[977]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(8),
      Q => LOCKSTEP_Out(977),
      R => Reset
    );
\LOCKSTEP_Out_reg[978]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(7),
      Q => LOCKSTEP_Out(978),
      R => Reset
    );
\LOCKSTEP_Out_reg[979]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(6),
      Q => LOCKSTEP_Out(979),
      R => Reset
    );
\LOCKSTEP_Out_reg[97]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(29),
      Q => LOCKSTEP_Out(97),
      R => Reset
    );
\LOCKSTEP_Out_reg[980]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(5),
      Q => LOCKSTEP_Out(980),
      R => Reset
    );
\LOCKSTEP_Out_reg[981]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(4),
      Q => LOCKSTEP_Out(981),
      R => Reset
    );
\LOCKSTEP_Out_reg[982]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(3),
      Q => LOCKSTEP_Out(982),
      R => Reset
    );
\LOCKSTEP_Out_reg[983]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(2),
      Q => LOCKSTEP_Out(983),
      R => Reset
    );
\LOCKSTEP_Out_reg[984]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(1),
      Q => LOCKSTEP_Out(984),
      R => Reset
    );
\LOCKSTEP_Out_reg[985]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(0),
      Q => LOCKSTEP_Out(985),
      R => Reset
    );
\LOCKSTEP_Out_reg[986]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wstrb\(3),
      Q => LOCKSTEP_Out(986),
      R => Reset
    );
\LOCKSTEP_Out_reg[987]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wstrb\(2),
      Q => LOCKSTEP_Out(987),
      R => Reset
    );
\LOCKSTEP_Out_reg[988]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wstrb\(1),
      Q => LOCKSTEP_Out(988),
      R => Reset
    );
\LOCKSTEP_Out_reg[989]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wstrb\(0),
      Q => LOCKSTEP_Out(989),
      R => Reset
    );
\LOCKSTEP_Out_reg[98]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(30),
      Q => LOCKSTEP_Out(98),
      R => Reset
    );
\LOCKSTEP_Out_reg[990]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '1',
      Q => LOCKSTEP_Out(990),
      R => Reset
    );
\LOCKSTEP_Out_reg[991]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wvalid\,
      Q => LOCKSTEP_Out(991),
      R => Reset
    );
\LOCKSTEP_Out_reg[992]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '1',
      Q => LOCKSTEP_Out(992),
      R => Reset
    );
\LOCKSTEP_Out_reg[993]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '0',
      Q => LOCKSTEP_Out(993),
      R => Reset
    );
\LOCKSTEP_Out_reg[994]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(31),
      Q => LOCKSTEP_Out(994),
      R => Reset
    );
\LOCKSTEP_Out_reg[995]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(30),
      Q => LOCKSTEP_Out(995),
      R => Reset
    );
\LOCKSTEP_Out_reg[996]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(29),
      Q => LOCKSTEP_Out(996),
      R => Reset
    );
\LOCKSTEP_Out_reg[997]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(28),
      Q => LOCKSTEP_Out(997),
      R => Reset
    );
\LOCKSTEP_Out_reg[998]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(27),
      Q => LOCKSTEP_Out(998),
      R => Reset
    );
\LOCKSTEP_Out_reg[999]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_araddr\(26),
      Q => LOCKSTEP_Out(999),
      R => Reset
    );
\LOCKSTEP_Out_reg[99]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(31),
      Q => LOCKSTEP_Out(99),
      R => Reset
    );
\LOCKSTEP_Out_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(5),
      Q => LOCKSTEP_Out(9),
      R => Reset
    );
MicroBlaze_Core_I: entity work.system_microblaze_0_0_MicroBlaze_Core
     port map (
      Clk => Clk,
      D(362) => \^lockstep_master_out\(10),
      D(361) => \^ifetch\,
      D(360) => \^i_as\,
      D(359) => \^instr_addr\(0),
      D(358) => \^instr_addr\(1),
      D(357) => \^instr_addr\(2),
      D(356) => \^instr_addr\(3),
      D(355) => \^instr_addr\(4),
      D(354) => \^instr_addr\(5),
      D(353) => \^instr_addr\(6),
      D(352) => \^instr_addr\(7),
      D(351) => \^instr_addr\(8),
      D(350) => \^instr_addr\(9),
      D(349) => \^instr_addr\(10),
      D(348) => \^instr_addr\(11),
      D(347) => \^instr_addr\(12),
      D(346) => \^instr_addr\(13),
      D(345) => \^instr_addr\(14),
      D(344) => \^instr_addr\(15),
      D(343) => \^instr_addr\(16),
      D(342) => \^instr_addr\(17),
      D(341) => \^instr_addr\(18),
      D(340) => \^instr_addr\(19),
      D(339) => \^instr_addr\(20),
      D(338) => \^instr_addr\(21),
      D(337) => \^instr_addr\(22),
      D(336) => \^instr_addr\(23),
      D(335) => \^instr_addr\(24),
      D(334) => \^instr_addr\(25),
      D(333) => \^instr_addr\(26),
      D(332) => \^instr_addr\(27),
      D(331) => \^instr_addr\(28),
      D(330) => \^instr_addr\(29),
      D(329) => \^instr_addr\(30),
      D(328) => \^instr_addr\(31),
      D(327) => \^data_addr\(0),
      D(326) => \^data_addr\(1),
      D(325) => \^data_addr\(2),
      D(324) => \^data_addr\(3),
      D(323) => \^data_addr\(4),
      D(322) => \^data_addr\(5),
      D(321) => \^data_addr\(6),
      D(320) => \^data_addr\(7),
      D(319) => \^data_addr\(8),
      D(318) => \^data_addr\(9),
      D(317) => \^data_addr\(10),
      D(316) => \^data_addr\(11),
      D(315) => \^data_addr\(12),
      D(314) => \^data_addr\(13),
      D(313) => \^data_addr\(14),
      D(312) => \^data_addr\(15),
      D(311) => \^data_addr\(16),
      D(310) => \^data_addr\(17),
      D(309) => \^data_addr\(18),
      D(308) => \^data_addr\(19),
      D(307) => \^data_addr\(20),
      D(306) => \^data_addr\(21),
      D(305) => \^data_addr\(22),
      D(304) => \^data_addr\(23),
      D(303) => \^data_addr\(24),
      D(302) => \^data_addr\(25),
      D(301) => \^data_addr\(26),
      D(300) => \^data_addr\(27),
      D(299) => \^data_addr\(28),
      D(298) => \^data_addr\(29),
      D(297) => \^data_addr\(30),
      D(296) => \^data_addr\(31),
      D(295) => \^data_write\(0),
      D(294) => \^data_write\(1),
      D(293) => \^data_write\(2),
      D(292) => \^data_write\(3),
      D(291) => \^data_write\(4),
      D(290) => \^data_write\(5),
      D(289) => \^data_write\(6),
      D(288) => \^data_write\(7),
      D(287) => \^data_write\(8),
      D(286) => \^data_write\(9),
      D(285) => \^data_write\(10),
      D(284) => \^data_write\(11),
      D(283) => \^data_write\(12),
      D(282) => \^data_write\(13),
      D(281) => \^data_write\(14),
      D(280) => \^data_write\(15),
      D(279) => \^data_write\(16),
      D(278) => \^data_write\(17),
      D(277) => \^data_write\(18),
      D(276) => \^data_write\(19),
      D(275) => \^data_write\(20),
      D(274) => \^data_write\(21),
      D(273) => \^data_write\(22),
      D(272) => \^data_write\(23),
      D(271) => \^data_write\(24),
      D(270) => \^data_write\(25),
      D(269) => \^data_write\(26),
      D(268) => \^data_write\(27),
      D(267) => \^data_write\(28),
      D(266) => \^data_write\(29),
      D(265) => \^data_write\(30),
      D(264) => \^data_write\(31),
      D(263) => \^d_as\,
      D(262) => \^read_strobe\,
      D(261) => \^write_strobe\,
      D(260) => \^byte_enable\(0),
      D(259) => \^byte_enable\(1),
      D(258) => \^byte_enable\(2),
      D(257) => \^byte_enable\(3),
      D(256 downto 225) => \^m_axi_dp_araddr\(31 downto 0),
      D(224) => \^m_axi_dp_awvalid\,
      D(223 downto 192) => \^m_axi_dp_wdata\(31 downto 0),
      D(191 downto 188) => \^m_axi_dp_wstrb\(3 downto 0),
      D(187) => \^m_axi_dp_wvalid\,
      D(186) => \^m_axi_dp_arvalid\,
      D(185) => \^trace_instruction\(0),
      D(184) => \^trace_instruction\(1),
      D(183) => \^trace_instruction\(2),
      D(182) => \^trace_instruction\(3),
      D(181) => \^trace_instruction\(4),
      D(180) => \^trace_instruction\(5),
      D(179) => \^trace_instruction\(6),
      D(178) => \^trace_instruction\(7),
      D(177) => \^trace_instruction\(8),
      D(176) => \^trace_instruction\(9),
      D(175) => \^trace_instruction\(10),
      D(174) => \^trace_instruction\(11),
      D(173) => \^trace_instruction\(12),
      D(172) => \^trace_instruction\(13),
      D(171) => \^trace_instruction\(14),
      D(170) => \^trace_instruction\(15),
      D(169) => \^trace_instruction\(16),
      D(168) => \^trace_instruction\(17),
      D(167) => \^trace_instruction\(18),
      D(166) => \^trace_instruction\(19),
      D(165) => \^trace_instruction\(20),
      D(164) => \^trace_instruction\(21),
      D(163) => \^trace_instruction\(22),
      D(162) => \^trace_instruction\(23),
      D(161) => \^trace_instruction\(24),
      D(160) => \^trace_instruction\(25),
      D(159) => \^trace_instruction\(26),
      D(158) => \^trace_instruction\(27),
      D(157) => \^trace_instruction\(28),
      D(156) => \^trace_instruction\(29),
      D(155) => \^trace_instruction\(30),
      D(154) => \^trace_instruction\(31),
      D(153) => \^trace_valid_instr\,
      D(152) => \^trace_pc\(0),
      D(151) => \^trace_pc\(1),
      D(150) => \^trace_pc\(2),
      D(149) => \^trace_pc\(3),
      D(148) => \^trace_pc\(4),
      D(147) => \^trace_pc\(5),
      D(146) => \^trace_pc\(6),
      D(145) => \^trace_pc\(7),
      D(144) => \^trace_pc\(8),
      D(143) => \^trace_pc\(9),
      D(142) => \^trace_pc\(10),
      D(141) => \^trace_pc\(11),
      D(140) => \^trace_pc\(12),
      D(139) => \^trace_pc\(13),
      D(138) => \^trace_pc\(14),
      D(137) => \^trace_pc\(15),
      D(136) => \^trace_pc\(16),
      D(135) => \^trace_pc\(17),
      D(134) => \^trace_pc\(18),
      D(133) => \^trace_pc\(19),
      D(132) => \^trace_pc\(20),
      D(131) => \^trace_pc\(21),
      D(130) => \^trace_pc\(22),
      D(129) => \^trace_pc\(23),
      D(128) => \^trace_pc\(24),
      D(127) => \^trace_pc\(25),
      D(126) => \^trace_pc\(26),
      D(125) => \^trace_pc\(27),
      D(124) => \^trace_pc\(28),
      D(123) => \^trace_pc\(29),
      D(122) => \^trace_pc\(30),
      D(121) => \^trace_pc\(31),
      D(120) => \^trace_reg_write\,
      D(119) => \^trace_reg_addr\(0),
      D(118) => \^trace_reg_addr\(1),
      D(117) => \^trace_reg_addr\(2),
      D(116) => \^trace_reg_addr\(3),
      D(115) => \^trace_reg_addr\(4),
      D(114) => \^trace_msr_reg\(11),
      D(113) => \^trace_msr_reg\(12),
      D(112) => \^trace_msr_reg\(13),
      D(111) => \^trace_new_reg_value\(0),
      D(110) => \^trace_new_reg_value\(1),
      D(109) => \^trace_new_reg_value\(2),
      D(108) => \^trace_new_reg_value\(3),
      D(107) => \^trace_new_reg_value\(4),
      D(106) => \^trace_new_reg_value\(5),
      D(105) => \^trace_new_reg_value\(6),
      D(104) => \^trace_new_reg_value\(7),
      D(103) => \^trace_new_reg_value\(8),
      D(102) => \^trace_new_reg_value\(9),
      D(101) => \^trace_new_reg_value\(10),
      D(100) => \^trace_new_reg_value\(11),
      D(99) => \^trace_new_reg_value\(12),
      D(98) => \^trace_new_reg_value\(13),
      D(97) => \^trace_new_reg_value\(14),
      D(96) => \^trace_new_reg_value\(15),
      D(95) => \^trace_new_reg_value\(16),
      D(94) => \^trace_new_reg_value\(17),
      D(93) => \^trace_new_reg_value\(18),
      D(92) => \^trace_new_reg_value\(19),
      D(91) => \^trace_new_reg_value\(20),
      D(90) => \^trace_new_reg_value\(21),
      D(89) => \^trace_new_reg_value\(22),
      D(88) => \^trace_new_reg_value\(23),
      D(87) => \^trace_new_reg_value\(24),
      D(86) => \^trace_new_reg_value\(25),
      D(85) => \^trace_new_reg_value\(26),
      D(84) => \^trace_new_reg_value\(27),
      D(83) => \^trace_new_reg_value\(28),
      D(82) => \^trace_new_reg_value\(29),
      D(81) => \^trace_new_reg_value\(30),
      D(80) => \^trace_new_reg_value\(31),
      D(79) => \^trace_exception_taken\,
      D(78) => \^trace_exception_kind\(0),
      D(77) => \^trace_exception_kind\(1),
      D(76) => \^trace_exception_kind\(2),
      D(75) => \^trace_exception_kind\(3),
      D(74) => \^trace_exception_kind\(4),
      D(73) => \^trace_jump_taken\,
      D(72) => \^trace_delay_slot\,
      D(71) => \^trace_data_address\(0),
      D(70) => \^trace_data_address\(1),
      D(69) => \^trace_data_address\(2),
      D(68) => \^trace_data_address\(3),
      D(67) => \^trace_data_address\(4),
      D(66) => \^trace_data_address\(5),
      D(65) => \^trace_data_address\(6),
      D(64) => \^trace_data_address\(7),
      D(63) => \^trace_data_address\(8),
      D(62) => \^trace_data_address\(9),
      D(61) => \^trace_data_address\(10),
      D(60) => \^trace_data_address\(11),
      D(59) => \^trace_data_address\(12),
      D(58) => \^trace_data_address\(13),
      D(57) => \^trace_data_address\(14),
      D(56) => \^trace_data_address\(15),
      D(55) => \^trace_data_address\(16),
      D(54) => \^trace_data_address\(17),
      D(53) => \^trace_data_address\(18),
      D(52) => \^trace_data_address\(19),
      D(51) => \^trace_data_address\(20),
      D(50) => \^trace_data_address\(21),
      D(49) => \^trace_data_address\(22),
      D(48) => \^trace_data_address\(23),
      D(47) => \^trace_data_address\(24),
      D(46) => \^trace_data_address\(25),
      D(45) => \^trace_data_address\(26),
      D(44) => \^trace_data_address\(27),
      D(43) => \^trace_data_address\(28),
      D(42) => \^trace_data_address\(29),
      D(41) => \^trace_data_address\(30),
      D(40) => \^trace_data_address\(31),
      D(39) => \^trace_data_write_value\(0),
      D(38) => \^trace_data_write_value\(1),
      D(37) => \^trace_data_write_value\(2),
      D(36) => \^trace_data_write_value\(3),
      D(35) => \^trace_data_write_value\(4),
      D(34) => \^trace_data_write_value\(5),
      D(33) => \^trace_data_write_value\(6),
      D(32) => \^trace_data_write_value\(7),
      D(31) => \^trace_data_write_value\(8),
      D(30) => \^trace_data_write_value\(9),
      D(29) => \^trace_data_write_value\(10),
      D(28) => \^trace_data_write_value\(11),
      D(27) => \^trace_data_write_value\(12),
      D(26) => \^trace_data_write_value\(13),
      D(25) => \^trace_data_write_value\(14),
      D(24) => \^trace_data_write_value\(15),
      D(23) => \^trace_data_write_value\(16),
      D(22) => \^trace_data_write_value\(17),
      D(21) => \^trace_data_write_value\(18),
      D(20) => \^trace_data_write_value\(19),
      D(19) => \^trace_data_write_value\(20),
      D(18) => \^trace_data_write_value\(21),
      D(17) => \^trace_data_write_value\(22),
      D(16) => \^trace_data_write_value\(23),
      D(15) => \^trace_data_write_value\(24),
      D(14) => \^trace_data_write_value\(25),
      D(13) => \^trace_data_write_value\(26),
      D(12) => \^trace_data_write_value\(27),
      D(11) => \^trace_data_write_value\(28),
      D(10) => \^trace_data_write_value\(29),
      D(9) => \^trace_data_write_value\(30),
      D(8) => \^trace_data_write_value\(31),
      D(7) => \^trace_data_byte_enable\(0),
      D(6) => \^trace_data_byte_enable\(1),
      D(5) => \^trace_data_byte_enable\(2),
      D(4) => \^trace_data_byte_enable\(3),
      D(3) => \^trace_data_access\,
      D(2) => \^trace_data_read\,
      D(1) => \^trace_data_write\,
      D(0) => \^trace_jump_hit\,
      DReady => DReady,
      DWait => DWait,
      Data_Read(0 to 31) => Data_Read(0 to 31),
      Dbg_Capture => Dbg_Capture,
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => Dbg_Disable,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      \Dbg_Reg_En[2]_0\ => Dbg_TDO_INST_0_i_6_n_0,
      \Dbg_Reg_En[2]_1\ => Dbg_TDO_INST_0_i_12_n_0,
      \Dbg_Reg_En_2__s_port_]\ => Dbg_TDO_INST_0_i_4_n_0,
      Dbg_Shift => Dbg_Shift,
      Dbg_Stop => Dbg_Stop,
      Dbg_TDI => Dbg_TDI,
      Dbg_TDO => Dbg_TDO,
      Dbg_Trig_Ack_In(1) => Dbg_Trig_Ack_In(0),
      Dbg_Trig_Ack_In(0) => Dbg_Trig_Ack_In(1),
      Dbg_Trig_Ack_Out(1) => \^dbg_trig_ack_out\(0),
      Dbg_Trig_Ack_Out(0) => \^dbg_trig_ack_out\(1),
      Dbg_Trig_In(1) => \^dbg_trig_in\(0),
      Dbg_Trig_In(0) => \^dbg_trig_in\(1),
      Dbg_Trig_Out(1) => Dbg_Trig_Out(0),
      Dbg_Trig_Out(0) => Dbg_Trig_Out(1),
      Dbg_Update => Dbg_Update,
      Debug_Rst => Debug_Rst,
      IReady => IReady,
      Instr(0 to 31) => Instr(0 to 31),
      Interrupt => Interrupt,
      Interrupt_Ack(0 to 1) => Interrupt_Ack(0 to 1),
      Interrupt_Address(0 to 31) => Interrupt_Address(0 to 31),
      LOCKSTEP_Master_Out(41) => \^lockstep_master_out\(1),
      LOCKSTEP_Master_Out(40) => \^lockstep_master_out\(3),
      LOCKSTEP_Master_Out(39) => \^lockstep_master_out\(4),
      LOCKSTEP_Master_Out(38) => \^lockstep_master_out\(5),
      LOCKSTEP_Master_Out(37) => \^lockstep_master_out\(6),
      LOCKSTEP_Master_Out(36) => \^lockstep_master_out\(7),
      LOCKSTEP_Master_Out(35) => \^lockstep_master_out\(8),
      LOCKSTEP_Master_Out(34) => \^lockstep_master_out\(11),
      LOCKSTEP_Master_Out(33) => \^lockstep_master_out\(12),
      LOCKSTEP_Master_Out(32) => \^lockstep_master_out\(13),
      LOCKSTEP_Master_Out(31) => \^lockstep_master_out\(14),
      LOCKSTEP_Master_Out(30) => \^lockstep_master_out\(15),
      LOCKSTEP_Master_Out(29) => \^lockstep_master_out\(16),
      LOCKSTEP_Master_Out(28) => \^lockstep_master_out\(17),
      LOCKSTEP_Master_Out(27) => \^lockstep_master_out\(18),
      LOCKSTEP_Master_Out(26) => \^lockstep_master_out\(19),
      LOCKSTEP_Master_Out(25) => \^lockstep_master_out\(20),
      LOCKSTEP_Master_Out(24) => \^lockstep_master_out\(21),
      LOCKSTEP_Master_Out(23) => \^lockstep_master_out\(22),
      LOCKSTEP_Master_Out(22) => \^lockstep_master_out\(23),
      LOCKSTEP_Master_Out(21) => \^lockstep_master_out\(24),
      LOCKSTEP_Master_Out(20) => \^lockstep_master_out\(25),
      LOCKSTEP_Master_Out(19) => \^lockstep_master_out\(26),
      LOCKSTEP_Master_Out(18) => \^lockstep_master_out\(27),
      LOCKSTEP_Master_Out(17) => \^lockstep_master_out\(28),
      LOCKSTEP_Master_Out(16) => \^lockstep_master_out\(29),
      LOCKSTEP_Master_Out(15) => \^lockstep_master_out\(30),
      LOCKSTEP_Master_Out(14) => \^lockstep_master_out\(31),
      LOCKSTEP_Master_Out(13) => \^lockstep_master_out\(32),
      LOCKSTEP_Master_Out(12) => \^lockstep_master_out\(33),
      LOCKSTEP_Master_Out(11) => \^lockstep_master_out\(34),
      LOCKSTEP_Master_Out(10) => \^lockstep_master_out\(35),
      LOCKSTEP_Master_Out(9) => \^lockstep_master_out\(36),
      LOCKSTEP_Master_Out(8) => \^lockstep_master_out\(37),
      LOCKSTEP_Master_Out(7) => \^lockstep_master_out\(38),
      LOCKSTEP_Master_Out(6) => \^lockstep_master_out\(39),
      LOCKSTEP_Master_Out(5) => \^lockstep_master_out\(40),
      LOCKSTEP_Master_Out(4) => \^lockstep_master_out\(41),
      LOCKSTEP_Master_Out(3) => \^lockstep_master_out\(42),
      LOCKSTEP_Master_Out(2) => \^lockstep_master_out\(43),
      LOCKSTEP_Master_Out(1) => \^lockstep_master_out\(44),
      LOCKSTEP_Master_Out(0) => \^lockstep_master_out\(45),
      M_AXI_DP_ARREADY => M_AXI_DP_ARREADY,
      M_AXI_DP_AWREADY => M_AXI_DP_AWREADY,
      M_AXI_DP_BVALID => M_AXI_DP_BVALID,
      M_AXI_DP_RDATA(31 downto 0) => M_AXI_DP_RDATA(31 downto 0),
      M_AXI_DP_RVALID => M_AXI_DP_RVALID,
      M_AXI_DP_WREADY => M_AXI_DP_WREADY,
      Mb_Reset => Mb_Reset,
      Reset => Reset,
      Reset_Mode(0 to 1) => Reset_Mode(0 to 1),
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel,
      Sleep => Sleep,
      Trace_WB_Jump_Hit_reg => \^trace_mem_piperun\,
      \Using_FPGA.Native\ => \^trace_ex_piperun\,
      Wakeup(0 to 1) => Wakeup(0 to 1),
      use_Reg_Neg_S_reg => \^trace_of_piperun\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity system_microblaze_0_0 is
  port (
    Clk : in STD_LOGIC;
    Reset : in STD_LOGIC;
    Interrupt : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    Interrupt_Ack : out STD_LOGIC_VECTOR ( 0 to 1 );
    Instr_Addr : out STD_LOGIC_VECTOR ( 0 to 31 );
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    IFetch : out STD_LOGIC;
    I_AS : out STD_LOGIC;
    IReady : in STD_LOGIC;
    IWAIT : in STD_LOGIC;
    ICE : in STD_LOGIC;
    IUE : in STD_LOGIC;
    Data_Addr : out STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 31 );
    D_AS : out STD_LOGIC;
    Read_Strobe : out STD_LOGIC;
    Write_Strobe : out STD_LOGIC;
    DReady : in STD_LOGIC;
    DWait : in STD_LOGIC;
    DCE : in STD_LOGIC;
    DUE : in STD_LOGIC;
    Byte_Enable : out STD_LOGIC_VECTOR ( 0 to 3 );
    M_AXI_DP_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_AWVALID : out STD_LOGIC;
    M_AXI_DP_AWREADY : in STD_LOGIC;
    M_AXI_DP_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_WVALID : out STD_LOGIC;
    M_AXI_DP_WREADY : in STD_LOGIC;
    M_AXI_DP_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_BVALID : in STD_LOGIC;
    M_AXI_DP_BREADY : out STD_LOGIC;
    M_AXI_DP_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_ARVALID : out STD_LOGIC;
    M_AXI_DP_ARREADY : in STD_LOGIC;
    M_AXI_DP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_RVALID : in STD_LOGIC;
    M_AXI_DP_RREADY : out STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Dbg_TDI : in STD_LOGIC;
    Dbg_TDO : out STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Shift : in STD_LOGIC;
    Dbg_Capture : in STD_LOGIC;
    Dbg_Update : in STD_LOGIC;
    Debug_Rst : in STD_LOGIC
  );
  attribute NotValidForBitStream : boolean;
  attribute NotValidForBitStream of system_microblaze_0_0 : entity is true;
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of system_microblaze_0_0 : entity is "system_microblaze_0_0,MicroBlaze,{}";
  attribute core_generation_info : string;
  attribute core_generation_info of system_microblaze_0_0 : entity is "system_microblaze_0_0,MicroBlaze,{x_ipProduct=Vivado 2015.4.2,x_ipVendor=xilinx.com,x_ipLibrary=ip,x_ipName=microblaze,x_ipVersion=9.5,x_ipCoreRevision=3,x_ipLanguage=VHDL,x_ipSimLanguage=VHDL,C_SCO=0,C_FREQ=100000000,C_USE_CONFIG_RESET=0,C_NUM_SYNC_FF_CLK=2,C_NUM_SYNC_FF_CLK_IRQ=1,C_NUM_SYNC_FF_CLK_DEBUG=2,C_NUM_SYNC_FF_DBG_CLK=1,C_FAULT_TOLERANT=0,C_ECC_USE_CE_EXCEPTION=0,C_LOCKSTEP_SLAVE=0,C_ENDIANNESS=1,C_FAMILY=artix7,C_DATA_SIZE=32,C_INSTANCE=system_microblaze_0_0,C_AVOID_PRIMITIVES=0,C_AREA_OPTIMIZED=0,C_OPTIMIZATION=0,C_INTERCONNECT=2,C_BASE_VECTORS=0x00000000,C_M_AXI_DP_THREAD_ID_WIDTH=1,C_M_AXI_DP_DATA_WIDTH=32,C_M_AXI_DP_ADDR_WIDTH=32,C_M_AXI_DP_EXCLUSIVE_ACCESS=0,C_M_AXI_D_BUS_EXCEPTION=0,C_M_AXI_IP_THREAD_ID_WIDTH=1,C_M_AXI_IP_DATA_WIDTH=32,C_M_AXI_IP_ADDR_WIDTH=32,C_M_AXI_I_BUS_EXCEPTION=0,C_D_LMB=1,C_D_AXI=1,C_I_LMB=1,C_I_AXI=0,C_USE_MSR_INSTR=0,C_USE_PCMP_INSTR=0,C_USE_BARREL=0,C_USE_DIV=0,C_USE_HW_MUL=0,C_USE_FPU=0,C_USE_REORDER_INSTR=1,C_UNALIGNED_EXCEPTIONS=0,C_ILL_OPCODE_EXCEPTION=0,C_DIV_ZERO_EXCEPTION=0,C_FPU_EXCEPTION=0,C_FSL_LINKS=0,C_USE_EXTENDED_FSL_INSTR=0,C_FSL_EXCEPTION=0,C_USE_STACK_PROTECTION=0,C_IMPRECISE_EXCEPTIONS=0,C_USE_INTERRUPT=2,C_USE_EXT_BRK=0,C_USE_EXT_NM_BRK=0,C_USE_MMU=0,C_MMU_DTLB_SIZE=4,C_MMU_ITLB_SIZE=2,C_MMU_TLB_ACCESS=3,C_MMU_ZONES=16,C_MMU_PRIVILEGED_INSTR=0,C_USE_BRANCH_TARGET_CACHE=0,C_BRANCH_TARGET_CACHE_SIZE=0,C_PC_WIDTH=32,C_PVR=0,C_PVR_USER1=0x00,C_PVR_USER2=0x00000000,C_DYNAMIC_BUS_SIZING=0,C_RESET_MSR=0x00000000,C_OPCODE_0x0_ILLEGAL=0,C_DEBUG_ENABLED=1,C_NUMBER_OF_PC_BRK=1,C_NUMBER_OF_RD_ADDR_BRK=0,C_NUMBER_OF_WR_ADDR_BRK=0,C_DEBUG_EVENT_COUNTERS=5,C_DEBUG_LATENCY_COUNTERS=1,C_DEBUG_COUNTER_WIDTH=32,C_DEBUG_TRACE_SIZE=8192,C_DEBUG_EXTERNAL_TRACE=0,C_DEBUG_PROFILE_SIZE=0,C_INTERRUPT_IS_EDGE=0,C_EDGE_IS_POSITIVE=1,C_ASYNC_INTERRUPT=1,C_M0_AXIS_DATA_WIDTH=32,C_S0_AXIS_DATA_WIDTH=32,C_M1_AXIS_DATA_WIDTH=32,C_S1_AXIS_DATA_WIDTH=32,C_M2_AXIS_DATA_WIDTH=32,C_S2_AXIS_DATA_WIDTH=32,C_M3_AXIS_DATA_WIDTH=32,C_S3_AXIS_DATA_WIDTH=32,C_M4_AXIS_DATA_WIDTH=32,C_S4_AXIS_DATA_WIDTH=32,C_M5_AXIS_DATA_WIDTH=32,C_S5_AXIS_DATA_WIDTH=32,C_M6_AXIS_DATA_WIDTH=32,C_S6_AXIS_DATA_WIDTH=32,C_M7_AXIS_DATA_WIDTH=32,C_S7_AXIS_DATA_WIDTH=32,C_M8_AXIS_DATA_WIDTH=32,C_S8_AXIS_DATA_WIDTH=32,C_M9_AXIS_DATA_WIDTH=32,C_S9_AXIS_DATA_WIDTH=32,C_M10_AXIS_DATA_WIDTH=32,C_S10_AXIS_DATA_WIDTH=32,C_M11_AXIS_DATA_WIDTH=32,C_S11_AXIS_DATA_WIDTH=32,C_M12_AXIS_DATA_WIDTH=32,C_S12_AXIS_DATA_WIDTH=32,C_M13_AXIS_DATA_WIDTH=32,C_S13_AXIS_DATA_WIDTH=32,C_M14_AXIS_DATA_WIDTH=32,C_S14_AXIS_DATA_WIDTH=32,C_M15_AXIS_DATA_WIDTH=32,C_S15_AXIS_DATA_WIDTH=32,C_ICACHE_BASEADDR=0x00000000,C_ICACHE_HIGHADDR=0x3FFFFFFF,C_USE_ICACHE=0,C_ALLOW_ICACHE_WR=1,C_ADDR_TAG_BITS=17,C_CACHE_BYTE_SIZE=8192,C_ICACHE_LINE_LEN=4,C_ICACHE_ALWAYS_USED=0,C_ICACHE_STREAMS=0,C_ICACHE_VICTIMS=0,C_ICACHE_FORCE_TAG_LUTRAM=0,C_ICACHE_DATA_WIDTH=0,C_M_AXI_IC_THREAD_ID_WIDTH=1,C_M_AXI_IC_DATA_WIDTH=32,C_M_AXI_IC_ADDR_WIDTH=32,C_M_AXI_IC_USER_VALUE=31,C_M_AXI_IC_AWUSER_WIDTH=5,C_M_AXI_IC_ARUSER_WIDTH=5,C_M_AXI_IC_WUSER_WIDTH=1,C_M_AXI_IC_RUSER_WIDTH=1,C_M_AXI_IC_BUSER_WIDTH=1,C_DCACHE_BASEADDR=0x00000000,C_DCACHE_HIGHADDR=0x3FFFFFFF,C_USE_DCACHE=0,C_ALLOW_DCACHE_WR=1,C_DCACHE_ADDR_TAG=17,C_DCACHE_BYTE_SIZE=8192,C_DCACHE_LINE_LEN=4,C_DCACHE_ALWAYS_USED=0,C_DCACHE_USE_WRITEBACK=0,C_DCACHE_VICTIMS=0,C_DCACHE_FORCE_TAG_LUTRAM=0,C_DCACHE_DATA_WIDTH=0,C_M_AXI_DC_THREAD_ID_WIDTH=1,C_M_AXI_DC_DATA_WIDTH=32,C_M_AXI_DC_ADDR_WIDTH=32,C_M_AXI_DC_EXCLUSIVE_ACCESS=0,C_M_AXI_DC_USER_VALUE=31,C_M_AXI_DC_AWUSER_WIDTH=5,C_M_AXI_DC_ARUSER_WIDTH=5,C_M_AXI_DC_WUSER_WIDTH=1,C_M_AXI_DC_RUSER_WIDTH=1,C_M_AXI_DC_BUSER_WIDTH=1}";
  attribute downgradeipidentifiedwarnings : string;
  attribute downgradeipidentifiedwarnings of system_microblaze_0_0 : entity is "yes";
  attribute x_core_info : string;
  attribute x_core_info of system_microblaze_0_0 : entity is "MicroBlaze,Vivado 2015.4.2";
end system_microblaze_0_0;

architecture STRUCTURE of system_microblaze_0_0 is
  signal NLW_U0_Dbg_Intr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_Trace_Valid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_Wakeup_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M0_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M0_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M10_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M10_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M11_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M11_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M12_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M12_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M13_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M13_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M14_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M14_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M15_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M15_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M1_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M1_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M2_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M2_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M3_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M3_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M4_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M4_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M5_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M5_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M6_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M6_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M7_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M7_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M8_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M8_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M9_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M9_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_MB_Error_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_MB_Halted_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_ACREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_ARLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_ARVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_AWLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_AWVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_BREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_CDLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_CDVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_CRVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_RACK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_RREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_WACK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_WLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_WVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DP_ARLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DP_AWLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DP_WLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_ACREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_ARLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_ARVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_AWLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_AWVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_BREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_CDLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_CDVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_CRVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_RACK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_RREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_WACK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_WLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_WVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_ARLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_ARVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_AWLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_AWVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_BREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_RREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_WLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_WVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S0_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S10_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S11_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S12_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S13_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S14_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S15_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S1_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S2_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S3_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S4_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S5_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S6_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S7_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S8_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S9_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Sleep_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_DCache_Hit_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_DCache_Rdy_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_DCache_Read_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_DCache_Req_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Data_Access_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Data_Read_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Data_Write_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Delay_Slot_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_EX_PipeRun_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Exception_Taken_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_ICache_Hit_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_ICache_Rdy_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_ICache_Req_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Jump_Hit_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Jump_Taken_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_MB_Halted_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_MEM_PipeRun_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_OF_PipeRun_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Reg_Write_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Valid_Instr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_Trace_Data_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 35 );
  signal NLW_U0_Dbg_Trig_Ack_Out_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 7 );
  signal NLW_U0_Dbg_Trig_In_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 7 );
  signal NLW_U0_LOCKSTEP_Master_Out_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 4095 );
  signal NLW_U0_LOCKSTEP_Out_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 4095 );
  signal NLW_U0_M0_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M10_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M11_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M12_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M13_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M14_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M15_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M1_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M2_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M3_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M4_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M5_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M6_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M7_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M8_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M9_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DC_ARADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DC_ARBAR_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_ARBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_ARCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_ARDOMAIN_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_ARID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_DC_ARLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_DC_ARPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DC_ARQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_ARSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DC_ARSNOOP_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_ARUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_DC_AWADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DC_AWBAR_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_AWBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_AWCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_AWDOMAIN_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_AWID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_DC_AWLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_DC_AWPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DC_AWQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_AWSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DC_AWSNOOP_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DC_AWUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_DC_CDDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DC_CRRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_DC_WDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DC_WSTRB_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_WUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_DP_ARBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DP_ARCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DP_ARID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_DP_ARLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_DP_ARQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DP_ARSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DP_AWBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DP_AWCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DP_AWID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_DP_AWLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_DP_AWQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DP_AWSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_ARADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IC_ARBAR_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_ARBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_ARCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_ARDOMAIN_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_ARID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_IC_ARLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_IC_ARPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_ARQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_ARSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_ARSNOOP_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_ARUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_IC_AWADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IC_AWBAR_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_AWBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_AWCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_AWDOMAIN_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_AWID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_IC_AWLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_IC_AWPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_AWQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_AWSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_AWSNOOP_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_AWUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_IC_CDDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IC_CRRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_IC_WDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IC_WSTRB_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_WUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_IP_ARADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IP_ARBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IP_ARCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IP_ARID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_IP_ARLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_IP_ARPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IP_ARQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IP_ARSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IP_AWADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IP_AWBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IP_AWCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IP_AWID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_IP_AWLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_IP_AWPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IP_AWQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IP_AWSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IP_WDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IP_WSTRB_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_Trace_Data_Address_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_Data_Byte_Enable_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 3 );
  signal NLW_U0_Trace_Data_Write_Value_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_Exception_Kind_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 4 );
  signal NLW_U0_Trace_Instruction_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_MSR_Reg_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 14 );
  signal NLW_U0_Trace_New_Reg_Value_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_PC_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_PID_Reg_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 7 );
  signal NLW_U0_Trace_Reg_Addr_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 4 );
  attribute C_ADDR_TAG_BITS : integer;
  attribute C_ADDR_TAG_BITS of U0 : label is 17;
  attribute C_ALLOW_DCACHE_WR : integer;
  attribute C_ALLOW_DCACHE_WR of U0 : label is 1;
  attribute C_ALLOW_ICACHE_WR : integer;
  attribute C_ALLOW_ICACHE_WR of U0 : label is 1;
  attribute C_AREA_OPTIMIZED : integer;
  attribute C_AREA_OPTIMIZED of U0 : label is 0;
  attribute C_ASYNC_INTERRUPT : integer;
  attribute C_ASYNC_INTERRUPT of U0 : label is 1;
  attribute C_AVOID_PRIMITIVES : integer;
  attribute C_AVOID_PRIMITIVES of U0 : label is 0;
  attribute C_BASE_VECTORS : integer;
  attribute C_BASE_VECTORS of U0 : label is 0;
  attribute C_BRANCH_TARGET_CACHE_SIZE : integer;
  attribute C_BRANCH_TARGET_CACHE_SIZE of U0 : label is 0;
  attribute C_CACHE_BYTE_SIZE : integer;
  attribute C_CACHE_BYTE_SIZE of U0 : label is 8192;
  attribute C_DATA_SIZE : integer;
  attribute C_DATA_SIZE of U0 : label is 32;
  attribute C_DCACHE_ADDR_TAG : integer;
  attribute C_DCACHE_ADDR_TAG of U0 : label is 17;
  attribute C_DCACHE_ALWAYS_USED : integer;
  attribute C_DCACHE_ALWAYS_USED of U0 : label is 0;
  attribute C_DCACHE_BASEADDR : integer;
  attribute C_DCACHE_BASEADDR of U0 : label is 0;
  attribute C_DCACHE_BYTE_SIZE : integer;
  attribute C_DCACHE_BYTE_SIZE of U0 : label is 8192;
  attribute C_DCACHE_DATA_WIDTH : integer;
  attribute C_DCACHE_DATA_WIDTH of U0 : label is 0;
  attribute C_DCACHE_FORCE_TAG_LUTRAM : integer;
  attribute C_DCACHE_FORCE_TAG_LUTRAM of U0 : label is 0;
  attribute C_DCACHE_HIGHADDR : integer;
  attribute C_DCACHE_HIGHADDR of U0 : label is 1073741823;
  attribute C_DCACHE_LINE_LEN : integer;
  attribute C_DCACHE_LINE_LEN of U0 : label is 4;
  attribute C_DCACHE_USE_WRITEBACK : integer;
  attribute C_DCACHE_USE_WRITEBACK of U0 : label is 0;
  attribute C_DCACHE_VICTIMS : integer;
  attribute C_DCACHE_VICTIMS of U0 : label is 0;
  attribute C_DEBUG_COUNTER_WIDTH : integer;
  attribute C_DEBUG_COUNTER_WIDTH of U0 : label is 32;
  attribute C_DEBUG_ENABLED : integer;
  attribute C_DEBUG_ENABLED of U0 : label is 1;
  attribute C_DEBUG_EVENT_COUNTERS : integer;
  attribute C_DEBUG_EVENT_COUNTERS of U0 : label is 5;
  attribute C_DEBUG_EXTERNAL_TRACE : integer;
  attribute C_DEBUG_EXTERNAL_TRACE of U0 : label is 0;
  attribute C_DEBUG_LATENCY_COUNTERS : integer;
  attribute C_DEBUG_LATENCY_COUNTERS of U0 : label is 1;
  attribute C_DEBUG_PROFILE_SIZE : integer;
  attribute C_DEBUG_PROFILE_SIZE of U0 : label is 0;
  attribute C_DEBUG_TRACE_SIZE : integer;
  attribute C_DEBUG_TRACE_SIZE of U0 : label is 8192;
  attribute C_DIV_ZERO_EXCEPTION : integer;
  attribute C_DIV_ZERO_EXCEPTION of U0 : label is 0;
  attribute C_DYNAMIC_BUS_SIZING : integer;
  attribute C_DYNAMIC_BUS_SIZING of U0 : label is 0;
  attribute C_D_AXI : integer;
  attribute C_D_AXI of U0 : label is 1;
  attribute C_D_LMB : integer;
  attribute C_D_LMB of U0 : label is 1;
  attribute C_ECC_USE_CE_EXCEPTION : integer;
  attribute C_ECC_USE_CE_EXCEPTION of U0 : label is 0;
  attribute C_EDGE_IS_POSITIVE : integer;
  attribute C_EDGE_IS_POSITIVE of U0 : label is 1;
  attribute C_ENDIANNESS : integer;
  attribute C_ENDIANNESS of U0 : label is 1;
  attribute C_FAMILY : string;
  attribute C_FAMILY of U0 : label is "artix7";
  attribute C_FAULT_TOLERANT : integer;
  attribute C_FAULT_TOLERANT of U0 : label is 0;
  attribute C_FPU_EXCEPTION : integer;
  attribute C_FPU_EXCEPTION of U0 : label is 0;
  attribute C_FREQ : integer;
  attribute C_FREQ of U0 : label is 100000000;
  attribute C_FSL_EXCEPTION : integer;
  attribute C_FSL_EXCEPTION of U0 : label is 0;
  attribute C_FSL_LINKS : integer;
  attribute C_FSL_LINKS of U0 : label is 0;
  attribute C_ICACHE_ALWAYS_USED : integer;
  attribute C_ICACHE_ALWAYS_USED of U0 : label is 0;
  attribute C_ICACHE_BASEADDR : integer;
  attribute C_ICACHE_BASEADDR of U0 : label is 0;
  attribute C_ICACHE_DATA_WIDTH : integer;
  attribute C_ICACHE_DATA_WIDTH of U0 : label is 0;
  attribute C_ICACHE_FORCE_TAG_LUTRAM : integer;
  attribute C_ICACHE_FORCE_TAG_LUTRAM of U0 : label is 0;
  attribute C_ICACHE_HIGHADDR : integer;
  attribute C_ICACHE_HIGHADDR of U0 : label is 1073741823;
  attribute C_ICACHE_LINE_LEN : integer;
  attribute C_ICACHE_LINE_LEN of U0 : label is 4;
  attribute C_ICACHE_STREAMS : integer;
  attribute C_ICACHE_STREAMS of U0 : label is 0;
  attribute C_ICACHE_VICTIMS : integer;
  attribute C_ICACHE_VICTIMS of U0 : label is 0;
  attribute C_ILL_OPCODE_EXCEPTION : integer;
  attribute C_ILL_OPCODE_EXCEPTION of U0 : label is 0;
  attribute C_IMPRECISE_EXCEPTIONS : integer;
  attribute C_IMPRECISE_EXCEPTIONS of U0 : label is 0;
  attribute C_INSTANCE : string;
  attribute C_INSTANCE of U0 : label is "system_microblaze_0_0";
  attribute C_INTERCONNECT : integer;
  attribute C_INTERCONNECT of U0 : label is 2;
  attribute C_INTERRUPT_IS_EDGE : integer;
  attribute C_INTERRUPT_IS_EDGE of U0 : label is 0;
  attribute C_I_AXI : integer;
  attribute C_I_AXI of U0 : label is 0;
  attribute C_I_LMB : integer;
  attribute C_I_LMB of U0 : label is 1;
  attribute C_LOCKSTEP_SLAVE : integer;
  attribute C_LOCKSTEP_SLAVE of U0 : label is 0;
  attribute C_M0_AXIS_DATA_WIDTH : integer;
  attribute C_M0_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M10_AXIS_DATA_WIDTH : integer;
  attribute C_M10_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M11_AXIS_DATA_WIDTH : integer;
  attribute C_M11_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M12_AXIS_DATA_WIDTH : integer;
  attribute C_M12_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M13_AXIS_DATA_WIDTH : integer;
  attribute C_M13_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M14_AXIS_DATA_WIDTH : integer;
  attribute C_M14_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M15_AXIS_DATA_WIDTH : integer;
  attribute C_M15_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M1_AXIS_DATA_WIDTH : integer;
  attribute C_M1_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M2_AXIS_DATA_WIDTH : integer;
  attribute C_M2_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M3_AXIS_DATA_WIDTH : integer;
  attribute C_M3_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M4_AXIS_DATA_WIDTH : integer;
  attribute C_M4_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M5_AXIS_DATA_WIDTH : integer;
  attribute C_M5_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M6_AXIS_DATA_WIDTH : integer;
  attribute C_M6_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M7_AXIS_DATA_WIDTH : integer;
  attribute C_M7_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M8_AXIS_DATA_WIDTH : integer;
  attribute C_M8_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M9_AXIS_DATA_WIDTH : integer;
  attribute C_M9_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_MMU_DTLB_SIZE : integer;
  attribute C_MMU_DTLB_SIZE of U0 : label is 4;
  attribute C_MMU_ITLB_SIZE : integer;
  attribute C_MMU_ITLB_SIZE of U0 : label is 2;
  attribute C_MMU_PRIVILEGED_INSTR : integer;
  attribute C_MMU_PRIVILEGED_INSTR of U0 : label is 0;
  attribute C_MMU_TLB_ACCESS : integer;
  attribute C_MMU_TLB_ACCESS of U0 : label is 3;
  attribute C_MMU_ZONES : integer;
  attribute C_MMU_ZONES of U0 : label is 16;
  attribute C_M_AXI_DC_ADDR_WIDTH : integer;
  attribute C_M_AXI_DC_ADDR_WIDTH of U0 : label is 32;
  attribute C_M_AXI_DC_ARUSER_WIDTH : integer;
  attribute C_M_AXI_DC_ARUSER_WIDTH of U0 : label is 5;
  attribute C_M_AXI_DC_AWUSER_WIDTH : integer;
  attribute C_M_AXI_DC_AWUSER_WIDTH of U0 : label is 5;
  attribute C_M_AXI_DC_BUSER_WIDTH : integer;
  attribute C_M_AXI_DC_BUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_DC_DATA_WIDTH : integer;
  attribute C_M_AXI_DC_DATA_WIDTH of U0 : label is 32;
  attribute C_M_AXI_DC_EXCLUSIVE_ACCESS : integer;
  attribute C_M_AXI_DC_EXCLUSIVE_ACCESS of U0 : label is 0;
  attribute C_M_AXI_DC_RUSER_WIDTH : integer;
  attribute C_M_AXI_DC_RUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_DC_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_DC_THREAD_ID_WIDTH of U0 : label is 1;
  attribute C_M_AXI_DC_USER_VALUE : integer;
  attribute C_M_AXI_DC_USER_VALUE of U0 : label is 31;
  attribute C_M_AXI_DC_WUSER_WIDTH : integer;
  attribute C_M_AXI_DC_WUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_DP_ADDR_WIDTH : integer;
  attribute C_M_AXI_DP_ADDR_WIDTH of U0 : label is 32;
  attribute C_M_AXI_DP_DATA_WIDTH : integer;
  attribute C_M_AXI_DP_DATA_WIDTH of U0 : label is 32;
  attribute C_M_AXI_DP_EXCLUSIVE_ACCESS : integer;
  attribute C_M_AXI_DP_EXCLUSIVE_ACCESS of U0 : label is 0;
  attribute C_M_AXI_DP_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_DP_THREAD_ID_WIDTH of U0 : label is 1;
  attribute C_M_AXI_D_BUS_EXCEPTION : integer;
  attribute C_M_AXI_D_BUS_EXCEPTION of U0 : label is 0;
  attribute C_M_AXI_IC_ADDR_WIDTH : integer;
  attribute C_M_AXI_IC_ADDR_WIDTH of U0 : label is 32;
  attribute C_M_AXI_IC_ARUSER_WIDTH : integer;
  attribute C_M_AXI_IC_ARUSER_WIDTH of U0 : label is 5;
  attribute C_M_AXI_IC_AWUSER_WIDTH : integer;
  attribute C_M_AXI_IC_AWUSER_WIDTH of U0 : label is 5;
  attribute C_M_AXI_IC_BUSER_WIDTH : integer;
  attribute C_M_AXI_IC_BUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_IC_DATA_WIDTH : integer;
  attribute C_M_AXI_IC_DATA_WIDTH of U0 : label is 32;
  attribute C_M_AXI_IC_RUSER_WIDTH : integer;
  attribute C_M_AXI_IC_RUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_IC_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_IC_THREAD_ID_WIDTH of U0 : label is 1;
  attribute C_M_AXI_IC_USER_VALUE : integer;
  attribute C_M_AXI_IC_USER_VALUE of U0 : label is 31;
  attribute C_M_AXI_IC_WUSER_WIDTH : integer;
  attribute C_M_AXI_IC_WUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_IP_ADDR_WIDTH : integer;
  attribute C_M_AXI_IP_ADDR_WIDTH of U0 : label is 32;
  attribute C_M_AXI_IP_DATA_WIDTH : integer;
  attribute C_M_AXI_IP_DATA_WIDTH of U0 : label is 32;
  attribute C_M_AXI_IP_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_IP_THREAD_ID_WIDTH of U0 : label is 1;
  attribute C_M_AXI_I_BUS_EXCEPTION : integer;
  attribute C_M_AXI_I_BUS_EXCEPTION of U0 : label is 0;
  attribute C_NUMBER_OF_PC_BRK : integer;
  attribute C_NUMBER_OF_PC_BRK of U0 : label is 1;
  attribute C_NUMBER_OF_RD_ADDR_BRK : integer;
  attribute C_NUMBER_OF_RD_ADDR_BRK of U0 : label is 0;
  attribute C_NUMBER_OF_WR_ADDR_BRK : integer;
  attribute C_NUMBER_OF_WR_ADDR_BRK of U0 : label is 0;
  attribute C_NUM_SYNC_FF_CLK : integer;
  attribute C_NUM_SYNC_FF_CLK of U0 : label is 2;
  attribute C_NUM_SYNC_FF_CLK_DEBUG : integer;
  attribute C_NUM_SYNC_FF_CLK_DEBUG of U0 : label is 2;
  attribute C_NUM_SYNC_FF_CLK_IRQ : integer;
  attribute C_NUM_SYNC_FF_CLK_IRQ of U0 : label is 1;
  attribute C_NUM_SYNC_FF_DBG_CLK : integer;
  attribute C_NUM_SYNC_FF_DBG_CLK of U0 : label is 1;
  attribute C_OPCODE_0x0_ILLEGAL : integer;
  attribute C_OPCODE_0x0_ILLEGAL of U0 : label is 0;
  attribute C_OPTIMIZATION : integer;
  attribute C_OPTIMIZATION of U0 : label is 0;
  attribute C_PC_WIDTH : integer;
  attribute C_PC_WIDTH of U0 : label is 32;
  attribute C_PVR : integer;
  attribute C_PVR of U0 : label is 0;
  attribute C_PVR_USER1 : string;
  attribute C_PVR_USER1 of U0 : label is "8'b00000000";
  attribute C_PVR_USER2 : integer;
  attribute C_PVR_USER2 of U0 : label is 0;
  attribute C_RESET_MSR : integer;
  attribute C_RESET_MSR of U0 : label is 0;
  attribute C_S0_AXIS_DATA_WIDTH : integer;
  attribute C_S0_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S10_AXIS_DATA_WIDTH : integer;
  attribute C_S10_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S11_AXIS_DATA_WIDTH : integer;
  attribute C_S11_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S12_AXIS_DATA_WIDTH : integer;
  attribute C_S12_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S13_AXIS_DATA_WIDTH : integer;
  attribute C_S13_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S14_AXIS_DATA_WIDTH : integer;
  attribute C_S14_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S15_AXIS_DATA_WIDTH : integer;
  attribute C_S15_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S1_AXIS_DATA_WIDTH : integer;
  attribute C_S1_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S2_AXIS_DATA_WIDTH : integer;
  attribute C_S2_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S3_AXIS_DATA_WIDTH : integer;
  attribute C_S3_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S4_AXIS_DATA_WIDTH : integer;
  attribute C_S4_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S5_AXIS_DATA_WIDTH : integer;
  attribute C_S5_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S6_AXIS_DATA_WIDTH : integer;
  attribute C_S6_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S7_AXIS_DATA_WIDTH : integer;
  attribute C_S7_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S8_AXIS_DATA_WIDTH : integer;
  attribute C_S8_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S9_AXIS_DATA_WIDTH : integer;
  attribute C_S9_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_SCO : integer;
  attribute C_SCO of U0 : label is 0;
  attribute C_UNALIGNED_EXCEPTIONS : integer;
  attribute C_UNALIGNED_EXCEPTIONS of U0 : label is 0;
  attribute C_USE_BARREL : integer;
  attribute C_USE_BARREL of U0 : label is 0;
  attribute C_USE_BRANCH_TARGET_CACHE : integer;
  attribute C_USE_BRANCH_TARGET_CACHE of U0 : label is 0;
  attribute C_USE_CONFIG_RESET : integer;
  attribute C_USE_CONFIG_RESET of U0 : label is 0;
  attribute C_USE_DCACHE : integer;
  attribute C_USE_DCACHE of U0 : label is 0;
  attribute C_USE_DIV : integer;
  attribute C_USE_DIV of U0 : label is 0;
  attribute C_USE_EXTENDED_FSL_INSTR : integer;
  attribute C_USE_EXTENDED_FSL_INSTR of U0 : label is 0;
  attribute C_USE_EXT_BRK : integer;
  attribute C_USE_EXT_BRK of U0 : label is 0;
  attribute C_USE_EXT_NM_BRK : integer;
  attribute C_USE_EXT_NM_BRK of U0 : label is 0;
  attribute C_USE_FPU : integer;
  attribute C_USE_FPU of U0 : label is 0;
  attribute C_USE_HW_MUL : integer;
  attribute C_USE_HW_MUL of U0 : label is 0;
  attribute C_USE_ICACHE : integer;
  attribute C_USE_ICACHE of U0 : label is 0;
  attribute C_USE_INTERRUPT : integer;
  attribute C_USE_INTERRUPT of U0 : label is 2;
  attribute C_USE_MMU : integer;
  attribute C_USE_MMU of U0 : label is 0;
  attribute C_USE_MSR_INSTR : integer;
  attribute C_USE_MSR_INSTR of U0 : label is 0;
  attribute C_USE_PCMP_INSTR : integer;
  attribute C_USE_PCMP_INSTR of U0 : label is 0;
  attribute C_USE_REORDER_INSTR : integer;
  attribute C_USE_REORDER_INSTR of U0 : label is 1;
  attribute C_USE_STACK_PROTECTION : integer;
  attribute C_USE_STACK_PROTECTION of U0 : label is 0;
  attribute downgradeipidentifiedwarnings of U0 : label is "yes";
begin
U0: entity work.system_microblaze_0_0_MicroBlaze
     port map (
      Byte_Enable(0 to 3) => Byte_Enable(0 to 3),
      Clk => Clk,
      Config_Reset => '0',
      DCE => DCE,
      DReady => DReady,
      DUE => DUE,
      DWait => DWait,
      D_AS => D_AS,
      Data_Addr(0 to 31) => Data_Addr(0 to 31),
      Data_Read(0 to 31) => Data_Read(0 to 31),
      Data_Write(0 to 31) => Data_Write(0 to 31),
      Dbg_Capture => Dbg_Capture,
      Dbg_Clk => Dbg_Clk,
      Dbg_Disable => '0',
      Dbg_Intr => NLW_U0_Dbg_Intr_UNCONNECTED,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      Dbg_Shift => Dbg_Shift,
      Dbg_Stop => '0',
      Dbg_TDI => Dbg_TDI,
      Dbg_TDO => Dbg_TDO,
      Dbg_Trace_Clk => '0',
      Dbg_Trace_Data(0 to 35) => NLW_U0_Dbg_Trace_Data_UNCONNECTED(0 to 35),
      Dbg_Trace_Ready => '0',
      Dbg_Trace_Valid => NLW_U0_Dbg_Trace_Valid_UNCONNECTED,
      Dbg_Trig_Ack_In(0 to 7) => B"00000000",
      Dbg_Trig_Ack_Out(0 to 7) => NLW_U0_Dbg_Trig_Ack_Out_UNCONNECTED(0 to 7),
      Dbg_Trig_In(0 to 7) => NLW_U0_Dbg_Trig_In_UNCONNECTED(0 to 7),
      Dbg_Trig_Out(0 to 7) => B"00000000",
      Dbg_Update => Dbg_Update,
      Dbg_Wakeup => NLW_U0_Dbg_Wakeup_UNCONNECTED,
      Debug_Rst => Debug_Rst,
      Ext_BRK => '0',
      Ext_NM_BRK => '0',
      ICE => ICE,
      IFetch => IFetch,
      IReady => IReady,
      IUE => IUE,
      IWAIT => IWAIT,
      I_AS => I_AS,
      Instr(0 to 31) => Instr(0 to 31),
      Instr_Addr(0 to 31) => Instr_Addr(0 to 31),
      Interrupt => Interrupt,
      Interrupt_Ack(0 to 1) => Interrupt_Ack(0 to 1),
      Interrupt_Address(0 to 31) => Interrupt_Address(0 to 31),
      LOCKSTEP_Master_Out(0 to 4095) => NLW_U0_LOCKSTEP_Master_Out_UNCONNECTED(0 to 4095),
      LOCKSTEP_Out(0 to 4095) => NLW_U0_LOCKSTEP_Out_UNCONNECTED(0 to 4095),
      LOCKSTEP_Slave_In(0 to
      M0_AXIS_TDATA(31 downto 0) => NLW_U0_M0_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M0_AXIS_TLAST => NLW_U0_M0_AXIS_TLAST_UNCONNECTED,
      M0_AXIS_TREADY => '0',
      M0_AXIS_TVALID => NLW_U0_M0_AXIS_TVALID_UNCONNECTED,
      M10_AXIS_TDATA(31 downto 0) => NLW_U0_M10_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M10_AXIS_TLAST => NLW_U0_M10_AXIS_TLAST_UNCONNECTED,
      M10_AXIS_TREADY => '0',
      M10_AXIS_TVALID => NLW_U0_M10_AXIS_TVALID_UNCONNECTED,
      M11_AXIS_TDATA(31 downto 0) => NLW_U0_M11_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M11_AXIS_TLAST => NLW_U0_M11_AXIS_TLAST_UNCONNECTED,
      M11_AXIS_TREADY => '0',
      M11_AXIS_TVALID => NLW_U0_M11_AXIS_TVALID_UNCONNECTED,
      M12_AXIS_TDATA(31 downto 0) => NLW_U0_M12_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M12_AXIS_TLAST => NLW_U0_M12_AXIS_TLAST_UNCONNECTED,
      M12_AXIS_TREADY => '0',
      M12_AXIS_TVALID => NLW_U0_M12_AXIS_TVALID_UNCONNECTED,
      M13_AXIS_TDATA(31 downto 0) => NLW_U0_M13_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M13_AXIS_TLAST => NLW_U0_M13_AXIS_TLAST_UNCONNECTED,
      M13_AXIS_TREADY => '0',
      M13_AXIS_TVALID => NLW_U0_M13_AXIS_TVALID_UNCONNECTED,
      M14_AXIS_TDATA(31 downto 0) => NLW_U0_M14_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M14_AXIS_TLAST => NLW_U0_M14_AXIS_TLAST_UNCONNECTED,
      M14_AXIS_TREADY => '0',
      M14_AXIS_TVALID => NLW_U0_M14_AXIS_TVALID_UNCONNECTED,
      M15_AXIS_TDATA(31 downto 0) => NLW_U0_M15_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M15_AXIS_TLAST => NLW_U0_M15_AXIS_TLAST_UNCONNECTED,
      M15_AXIS_TREADY => '0',
      M15_AXIS_TVALID => NLW_U0_M15_AXIS_TVALID_UNCONNECTED,
      M1_AXIS_TDATA(31 downto 0) => NLW_U0_M1_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M1_AXIS_TLAST => NLW_U0_M1_AXIS_TLAST_UNCONNECTED,
      M1_AXIS_TREADY => '0',
      M1_AXIS_TVALID => NLW_U0_M1_AXIS_TVALID_UNCONNECTED,
      M2_AXIS_TDATA(31 downto 0) => NLW_U0_M2_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M2_AXIS_TLAST => NLW_U0_M2_AXIS_TLAST_UNCONNECTED,
      M2_AXIS_TREADY => '0',
      M2_AXIS_TVALID => NLW_U0_M2_AXIS_TVALID_UNCONNECTED,
      M3_AXIS_TDATA(31 downto 0) => NLW_U0_M3_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M3_AXIS_TLAST => NLW_U0_M3_AXIS_TLAST_UNCONNECTED,
      M3_AXIS_TREADY => '0',
      M3_AXIS_TVALID => NLW_U0_M3_AXIS_TVALID_UNCONNECTED,
      M4_AXIS_TDATA(31 downto 0) => NLW_U0_M4_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M4_AXIS_TLAST => NLW_U0_M4_AXIS_TLAST_UNCONNECTED,
      M4_AXIS_TREADY => '0',
      M4_AXIS_TVALID => NLW_U0_M4_AXIS_TVALID_UNCONNECTED,
      M5_AXIS_TDATA(31 downto 0) => NLW_U0_M5_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M5_AXIS_TLAST => NLW_U0_M5_AXIS_TLAST_UNCONNECTED,
      M5_AXIS_TREADY => '0',
      M5_AXIS_TVALID => NLW_U0_M5_AXIS_TVALID_UNCONNECTED,
      M6_AXIS_TDATA(31 downto 0) => NLW_U0_M6_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M6_AXIS_TLAST => NLW_U0_M6_AXIS_TLAST_UNCONNECTED,
      M6_AXIS_TREADY => '0',
      M6_AXIS_TVALID => NLW_U0_M6_AXIS_TVALID_UNCONNECTED,
      M7_AXIS_TDATA(31 downto 0) => NLW_U0_M7_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M7_AXIS_TLAST => NLW_U0_M7_AXIS_TLAST_UNCONNECTED,
      M7_AXIS_TREADY => '0',
      M7_AXIS_TVALID => NLW_U0_M7_AXIS_TVALID_UNCONNECTED,
      M8_AXIS_TDATA(31 downto 0) => NLW_U0_M8_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M8_AXIS_TLAST => NLW_U0_M8_AXIS_TLAST_UNCONNECTED,
      M8_AXIS_TREADY => '0',
      M8_AXIS_TVALID => NLW_U0_M8_AXIS_TVALID_UNCONNECTED,
      M9_AXIS_TDATA(31 downto 0) => NLW_U0_M9_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M9_AXIS_TLAST => NLW_U0_M9_AXIS_TLAST_UNCONNECTED,
      M9_AXIS_TREADY => '0',
      M9_AXIS_TVALID => NLW_U0_M9_AXIS_TVALID_UNCONNECTED,
      MB_Error => NLW_U0_MB_Error_UNCONNECTED,
      MB_Halted => NLW_U0_MB_Halted_UNCONNECTED,
      M_AXI_DC_ACADDR(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_DC_ACPROT(2 downto 0) => B"000",
      M_AXI_DC_ACREADY => NLW_U0_M_AXI_DC_ACREADY_UNCONNECTED,
      M_AXI_DC_ACSNOOP(3 downto 0) => B"0000",
      M_AXI_DC_ACVALID => '0',
      M_AXI_DC_ARADDR(31 downto 0) => NLW_U0_M_AXI_DC_ARADDR_UNCONNECTED(31 downto 0),
      M_AXI_DC_ARBAR(1 downto 0) => NLW_U0_M_AXI_DC_ARBAR_UNCONNECTED(1 downto 0),
      M_AXI_DC_ARBURST(1 downto 0) => NLW_U0_M_AXI_DC_ARBURST_UNCONNECTED(1 downto 0),
      M_AXI_DC_ARCACHE(3 downto 0) => NLW_U0_M_AXI_DC_ARCACHE_UNCONNECTED(3 downto 0),
      M_AXI_DC_ARDOMAIN(1 downto 0) => NLW_U0_M_AXI_DC_ARDOMAIN_UNCONNECTED(1 downto 0),
      M_AXI_DC_ARID(0) => NLW_U0_M_AXI_DC_ARID_UNCONNECTED(0),
      M_AXI_DC_ARLEN(7 downto 0) => NLW_U0_M_AXI_DC_ARLEN_UNCONNECTED(7 downto 0),
      M_AXI_DC_ARLOCK => NLW_U0_M_AXI_DC_ARLOCK_UNCONNECTED,
      M_AXI_DC_ARPROT(2 downto 0) => NLW_U0_M_AXI_DC_ARPROT_UNCONNECTED(2 downto 0),
      M_AXI_DC_ARQOS(3 downto 0) => NLW_U0_M_AXI_DC_ARQOS_UNCONNECTED(3 downto 0),
      M_AXI_DC_ARREADY => '0',
      M_AXI_DC_ARSIZE(2 downto 0) => NLW_U0_M_AXI_DC_ARSIZE_UNCONNECTED(2 downto 0),
      M_AXI_DC_ARSNOOP(3 downto 0) => NLW_U0_M_AXI_DC_ARSNOOP_UNCONNECTED(3 downto 0),
      M_AXI_DC_ARUSER(4 downto 0) => NLW_U0_M_AXI_DC_ARUSER_UNCONNECTED(4 downto 0),
      M_AXI_DC_ARVALID => NLW_U0_M_AXI_DC_ARVALID_UNCONNECTED,
      M_AXI_DC_AWADDR(31 downto 0) => NLW_U0_M_AXI_DC_AWADDR_UNCONNECTED(31 downto 0),
      M_AXI_DC_AWBAR(1 downto 0) => NLW_U0_M_AXI_DC_AWBAR_UNCONNECTED(1 downto 0),
      M_AXI_DC_AWBURST(1 downto 0) => NLW_U0_M_AXI_DC_AWBURST_UNCONNECTED(1 downto 0),
      M_AXI_DC_AWCACHE(3 downto 0) => NLW_U0_M_AXI_DC_AWCACHE_UNCONNECTED(3 downto 0),
      M_AXI_DC_AWDOMAIN(1 downto 0) => NLW_U0_M_AXI_DC_AWDOMAIN_UNCONNECTED(1 downto 0),
      M_AXI_DC_AWID(0) => NLW_U0_M_AXI_DC_AWID_UNCONNECTED(0),
      M_AXI_DC_AWLEN(7 downto 0) => NLW_U0_M_AXI_DC_AWLEN_UNCONNECTED(7 downto 0),
      M_AXI_DC_AWLOCK => NLW_U0_M_AXI_DC_AWLOCK_UNCONNECTED,
      M_AXI_DC_AWPROT(2 downto 0) => NLW_U0_M_AXI_DC_AWPROT_UNCONNECTED(2 downto 0),
      M_AXI_DC_AWQOS(3 downto 0) => NLW_U0_M_AXI_DC_AWQOS_UNCONNECTED(3 downto 0),
      M_AXI_DC_AWREADY => '0',
      M_AXI_DC_AWSIZE(2 downto 0) => NLW_U0_M_AXI_DC_AWSIZE_UNCONNECTED(2 downto 0),
      M_AXI_DC_AWSNOOP(2 downto 0) => NLW_U0_M_AXI_DC_AWSNOOP_UNCONNECTED(2 downto 0),
      M_AXI_DC_AWUSER(4 downto 0) => NLW_U0_M_AXI_DC_AWUSER_UNCONNECTED(4 downto 0),
      M_AXI_DC_AWVALID => NLW_U0_M_AXI_DC_AWVALID_UNCONNECTED,
      M_AXI_DC_BID(0) => '0',
      M_AXI_DC_BREADY => NLW_U0_M_AXI_DC_BREADY_UNCONNECTED,
      M_AXI_DC_BRESP(1 downto 0) => B"00",
      M_AXI_DC_BUSER(0) => '0',
      M_AXI_DC_BVALID => '0',
      M_AXI_DC_CDDATA(31 downto 0) => NLW_U0_M_AXI_DC_CDDATA_UNCONNECTED(31 downto 0),
      M_AXI_DC_CDLAST => NLW_U0_M_AXI_DC_CDLAST_UNCONNECTED,
      M_AXI_DC_CDREADY => '0',
      M_AXI_DC_CDVALID => NLW_U0_M_AXI_DC_CDVALID_UNCONNECTED,
      M_AXI_DC_CRREADY => '0',
      M_AXI_DC_CRRESP(4 downto 0) => NLW_U0_M_AXI_DC_CRRESP_UNCONNECTED(4 downto 0),
      M_AXI_DC_CRVALID => NLW_U0_M_AXI_DC_CRVALID_UNCONNECTED,
      M_AXI_DC_RACK => NLW_U0_M_AXI_DC_RACK_UNCONNECTED,
      M_AXI_DC_RDATA(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_DC_RID(0) => '0',
      M_AXI_DC_RLAST => '0',
      M_AXI_DC_RREADY => NLW_U0_M_AXI_DC_RREADY_UNCONNECTED,
      M_AXI_DC_RRESP(1 downto 0) => B"00",
      M_AXI_DC_RUSER(0) => '0',
      M_AXI_DC_RVALID => '0',
      M_AXI_DC_WACK => NLW_U0_M_AXI_DC_WACK_UNCONNECTED,
      M_AXI_DC_WDATA(31 downto 0) => NLW_U0_M_AXI_DC_WDATA_UNCONNECTED(31 downto 0),
      M_AXI_DC_WLAST => NLW_U0_M_AXI_DC_WLAST_UNCONNECTED,
      M_AXI_DC_WREADY => '0',
      M_AXI_DC_WSTRB(3 downto 0) => NLW_U0_M_AXI_DC_WSTRB_UNCONNECTED(3 downto 0),
      M_AXI_DC_WUSER(0) => NLW_U0_M_AXI_DC_WUSER_UNCONNECTED(0),
      M_AXI_DC_WVALID => NLW_U0_M_AXI_DC_WVALID_UNCONNECTED,
      M_AXI_DP_ARADDR(31 downto 0) => M_AXI_DP_ARADDR(31 downto 0),
      M_AXI_DP_ARBURST(1 downto 0) => NLW_U0_M_AXI_DP_ARBURST_UNCONNECTED(1 downto 0),
      M_AXI_DP_ARCACHE(3 downto 0) => NLW_U0_M_AXI_DP_ARCACHE_UNCONNECTED(3 downto 0),
      M_AXI_DP_ARID(0) => NLW_U0_M_AXI_DP_ARID_UNCONNECTED(0),
      M_AXI_DP_ARLEN(7 downto 0) => NLW_U0_M_AXI_DP_ARLEN_UNCONNECTED(7 downto 0),
      M_AXI_DP_ARLOCK => NLW_U0_M_AXI_DP_ARLOCK_UNCONNECTED,
      M_AXI_DP_ARPROT(2 downto 0) => M_AXI_DP_ARPROT(2 downto 0),
      M_AXI_DP_ARQOS(3 downto 0) => NLW_U0_M_AXI_DP_ARQOS_UNCONNECTED(3 downto 0),
      M_AXI_DP_ARREADY => M_AXI_DP_ARREADY,
      M_AXI_DP_ARSIZE(2 downto 0) => NLW_U0_M_AXI_DP_ARSIZE_UNCONNECTED(2 downto 0),
      M_AXI_DP_ARVALID => M_AXI_DP_ARVALID,
      M_AXI_DP_AWADDR(31 downto 0) => M_AXI_DP_AWADDR(31 downto 0),
      M_AXI_DP_AWBURST(1 downto 0) => NLW_U0_M_AXI_DP_AWBURST_UNCONNECTED(1 downto 0),
      M_AXI_DP_AWCACHE(3 downto 0) => NLW_U0_M_AXI_DP_AWCACHE_UNCONNECTED(3 downto 0),
      M_AXI_DP_AWID(0) => NLW_U0_M_AXI_DP_AWID_UNCONNECTED(0),
      M_AXI_DP_AWLEN(7 downto 0) => NLW_U0_M_AXI_DP_AWLEN_UNCONNECTED(7 downto 0),
      M_AXI_DP_AWLOCK => NLW_U0_M_AXI_DP_AWLOCK_UNCONNECTED,
      M_AXI_DP_AWPROT(2 downto 0) => M_AXI_DP_AWPROT(2 downto 0),
      M_AXI_DP_AWQOS(3 downto 0) => NLW_U0_M_AXI_DP_AWQOS_UNCONNECTED(3 downto 0),
      M_AXI_DP_AWREADY => M_AXI_DP_AWREADY,
      M_AXI_DP_AWSIZE(2 downto 0) => NLW_U0_M_AXI_DP_AWSIZE_UNCONNECTED(2 downto 0),
      M_AXI_DP_AWVALID => M_AXI_DP_AWVALID,
      M_AXI_DP_BID(0) => '0',
      M_AXI_DP_BREADY => M_AXI_DP_BREADY,
      M_AXI_DP_BRESP(1 downto 0) => M_AXI_DP_BRESP(1 downto 0),
      M_AXI_DP_BVALID => M_AXI_DP_BVALID,
      M_AXI_DP_RDATA(31 downto 0) => M_AXI_DP_RDATA(31 downto 0),
      M_AXI_DP_RID(0) => '0',
      M_AXI_DP_RLAST => '0',
      M_AXI_DP_RREADY => M_AXI_DP_RREADY,
      M_AXI_DP_RRESP(1 downto 0) => M_AXI_DP_RRESP(1 downto 0),
      M_AXI_DP_RVALID => M_AXI_DP_RVALID,
      M_AXI_DP_WDATA(31 downto 0) => M_AXI_DP_WDATA(31 downto 0),
      M_AXI_DP_WLAST => NLW_U0_M_AXI_DP_WLAST_UNCONNECTED,
      M_AXI_DP_WREADY => M_AXI_DP_WREADY,
      M_AXI_DP_WSTRB(3 downto 0) => M_AXI_DP_WSTRB(3 downto 0),
      M_AXI_DP_WVALID => M_AXI_DP_WVALID,
      M_AXI_IC_ACADDR(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_IC_ACPROT(2 downto 0) => B"000",
      M_AXI_IC_ACREADY => NLW_U0_M_AXI_IC_ACREADY_UNCONNECTED,
      M_AXI_IC_ACSNOOP(3 downto 0) => B"0000",
      M_AXI_IC_ACVALID => '0',
      M_AXI_IC_ARADDR(31 downto 0) => NLW_U0_M_AXI_IC_ARADDR_UNCONNECTED(31 downto 0),
      M_AXI_IC_ARBAR(1 downto 0) => NLW_U0_M_AXI_IC_ARBAR_UNCONNECTED(1 downto 0),
      M_AXI_IC_ARBURST(1 downto 0) => NLW_U0_M_AXI_IC_ARBURST_UNCONNECTED(1 downto 0),
      M_AXI_IC_ARCACHE(3 downto 0) => NLW_U0_M_AXI_IC_ARCACHE_UNCONNECTED(3 downto 0),
      M_AXI_IC_ARDOMAIN(1 downto 0) => NLW_U0_M_AXI_IC_ARDOMAIN_UNCONNECTED(1 downto 0),
      M_AXI_IC_ARID(0) => NLW_U0_M_AXI_IC_ARID_UNCONNECTED(0),
      M_AXI_IC_ARLEN(7 downto 0) => NLW_U0_M_AXI_IC_ARLEN_UNCONNECTED(7 downto 0),
      M_AXI_IC_ARLOCK => NLW_U0_M_AXI_IC_ARLOCK_UNCONNECTED,
      M_AXI_IC_ARPROT(2 downto 0) => NLW_U0_M_AXI_IC_ARPROT_UNCONNECTED(2 downto 0),
      M_AXI_IC_ARQOS(3 downto 0) => NLW_U0_M_AXI_IC_ARQOS_UNCONNECTED(3 downto 0),
      M_AXI_IC_ARREADY => '0',
      M_AXI_IC_ARSIZE(2 downto 0) => NLW_U0_M_AXI_IC_ARSIZE_UNCONNECTED(2 downto 0),
      M_AXI_IC_ARSNOOP(3 downto 0) => NLW_U0_M_AXI_IC_ARSNOOP_UNCONNECTED(3 downto 0),
      M_AXI_IC_ARUSER(4 downto 0) => NLW_U0_M_AXI_IC_ARUSER_UNCONNECTED(4 downto 0),
      M_AXI_IC_ARVALID => NLW_U0_M_AXI_IC_ARVALID_UNCONNECTED,
      M_AXI_IC_AWADDR(31 downto 0) => NLW_U0_M_AXI_IC_AWADDR_UNCONNECTED(31 downto 0),
      M_AXI_IC_AWBAR(1 downto 0) => NLW_U0_M_AXI_IC_AWBAR_UNCONNECTED(1 downto 0),
      M_AXI_IC_AWBURST(1 downto 0) => NLW_U0_M_AXI_IC_AWBURST_UNCONNECTED(1 downto 0),
      M_AXI_IC_AWCACHE(3 downto 0) => NLW_U0_M_AXI_IC_AWCACHE_UNCONNECTED(3 downto 0),
      M_AXI_IC_AWDOMAIN(1 downto 0) => NLW_U0_M_AXI_IC_AWDOMAIN_UNCONNECTED(1 downto 0),
      M_AXI_IC_AWID(0) => NLW_U0_M_AXI_IC_AWID_UNCONNECTED(0),
      M_AXI_IC_AWLEN(7 downto 0) => NLW_U0_M_AXI_IC_AWLEN_UNCONNECTED(7 downto 0),
      M_AXI_IC_AWLOCK => NLW_U0_M_AXI_IC_AWLOCK_UNCONNECTED,
      M_AXI_IC_AWPROT(2 downto 0) => NLW_U0_M_AXI_IC_AWPROT_UNCONNECTED(2 downto 0),
      M_AXI_IC_AWQOS(3 downto 0) => NLW_U0_M_AXI_IC_AWQOS_UNCONNECTED(3 downto 0),
      M_AXI_IC_AWREADY => '0',
      M_AXI_IC_AWSIZE(2 downto 0) => NLW_U0_M_AXI_IC_AWSIZE_UNCONNECTED(2 downto 0),
      M_AXI_IC_AWSNOOP(2 downto 0) => NLW_U0_M_AXI_IC_AWSNOOP_UNCONNECTED(2 downto 0),
      M_AXI_IC_AWUSER(4 downto 0) => NLW_U0_M_AXI_IC_AWUSER_UNCONNECTED(4 downto 0),
      M_AXI_IC_AWVALID => NLW_U0_M_AXI_IC_AWVALID_UNCONNECTED,
      M_AXI_IC_BID(0) => '0',
      M_AXI_IC_BREADY => NLW_U0_M_AXI_IC_BREADY_UNCONNECTED,
      M_AXI_IC_BRESP(1 downto 0) => B"00",
      M_AXI_IC_BUSER(0) => '0',
      M_AXI_IC_BVALID => '0',
      M_AXI_IC_CDDATA(31 downto 0) => NLW_U0_M_AXI_IC_CDDATA_UNCONNECTED(31 downto 0),
      M_AXI_IC_CDLAST => NLW_U0_M_AXI_IC_CDLAST_UNCONNECTED,
      M_AXI_IC_CDREADY => '0',
      M_AXI_IC_CDVALID => NLW_U0_M_AXI_IC_CDVALID_UNCONNECTED,
      M_AXI_IC_CRREADY => '0',
      M_AXI_IC_CRRESP(4 downto 0) => NLW_U0_M_AXI_IC_CRRESP_UNCONNECTED(4 downto 0),
      M_AXI_IC_CRVALID => NLW_U0_M_AXI_IC_CRVALID_UNCONNECTED,
      M_AXI_IC_RACK => NLW_U0_M_AXI_IC_RACK_UNCONNECTED,
      M_AXI_IC_RDATA(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_IC_RID(0) => '0',
      M_AXI_IC_RLAST => '0',
      M_AXI_IC_RREADY => NLW_U0_M_AXI_IC_RREADY_UNCONNECTED,
      M_AXI_IC_RRESP(1 downto 0) => B"00",
      M_AXI_IC_RUSER(0) => '0',
      M_AXI_IC_RVALID => '0',
      M_AXI_IC_WACK => NLW_U0_M_AXI_IC_WACK_UNCONNECTED,
      M_AXI_IC_WDATA(31 downto 0) => NLW_U0_M_AXI_IC_WDATA_UNCONNECTED(31 downto 0),
      M_AXI_IC_WLAST => NLW_U0_M_AXI_IC_WLAST_UNCONNECTED,
      M_AXI_IC_WREADY => '0',
      M_AXI_IC_WSTRB(3 downto 0) => NLW_U0_M_AXI_IC_WSTRB_UNCONNECTED(3 downto 0),
      M_AXI_IC_WUSER(0) => NLW_U0_M_AXI_IC_WUSER_UNCONNECTED(0),
      M_AXI_IC_WVALID => NLW_U0_M_AXI_IC_WVALID_UNCONNECTED,
      M_AXI_IP_ARADDR(31 downto 0) => NLW_U0_M_AXI_IP_ARADDR_UNCONNECTED(31 downto 0),
      M_AXI_IP_ARBURST(1 downto 0) => NLW_U0_M_AXI_IP_ARBURST_UNCONNECTED(1 downto 0),
      M_AXI_IP_ARCACHE(3 downto 0) => NLW_U0_M_AXI_IP_ARCACHE_UNCONNECTED(3 downto 0),
      M_AXI_IP_ARID(0) => NLW_U0_M_AXI_IP_ARID_UNCONNECTED(0),
      M_AXI_IP_ARLEN(7 downto 0) => NLW_U0_M_AXI_IP_ARLEN_UNCONNECTED(7 downto 0),
      M_AXI_IP_ARLOCK => NLW_U0_M_AXI_IP_ARLOCK_UNCONNECTED,
      M_AXI_IP_ARPROT(2 downto 0) => NLW_U0_M_AXI_IP_ARPROT_UNCONNECTED(2 downto 0),
      M_AXI_IP_ARQOS(3 downto 0) => NLW_U0_M_AXI_IP_ARQOS_UNCONNECTED(3 downto 0),
      M_AXI_IP_ARREADY => '0',
      M_AXI_IP_ARSIZE(2 downto 0) => NLW_U0_M_AXI_IP_ARSIZE_UNCONNECTED(2 downto 0),
      M_AXI_IP_ARVALID => NLW_U0_M_AXI_IP_ARVALID_UNCONNECTED,
      M_AXI_IP_AWADDR(31 downto 0) => NLW_U0_M_AXI_IP_AWADDR_UNCONNECTED(31 downto 0),
      M_AXI_IP_AWBURST(1 downto 0) => NLW_U0_M_AXI_IP_AWBURST_UNCONNECTED(1 downto 0),
      M_AXI_IP_AWCACHE(3 downto 0) => NLW_U0_M_AXI_IP_AWCACHE_UNCONNECTED(3 downto 0),
      M_AXI_IP_AWID(0) => NLW_U0_M_AXI_IP_AWID_UNCONNECTED(0),
      M_AXI_IP_AWLEN(7 downto 0) => NLW_U0_M_AXI_IP_AWLEN_UNCONNECTED(7 downto 0),
      M_AXI_IP_AWLOCK => NLW_U0_M_AXI_IP_AWLOCK_UNCONNECTED,
      M_AXI_IP_AWPROT(2 downto 0) => NLW_U0_M_AXI_IP_AWPROT_UNCONNECTED(2 downto 0),
      M_AXI_IP_AWQOS(3 downto 0) => NLW_U0_M_AXI_IP_AWQOS_UNCONNECTED(3 downto 0),
      M_AXI_IP_AWREADY => '0',
      M_AXI_IP_AWSIZE(2 downto 0) => NLW_U0_M_AXI_IP_AWSIZE_UNCONNECTED(2 downto 0),
      M_AXI_IP_AWVALID => NLW_U0_M_AXI_IP_AWVALID_UNCONNECTED,
      M_AXI_IP_BID(0) => '0',
      M_AXI_IP_BREADY => NLW_U0_M_AXI_IP_BREADY_UNCONNECTED,
      M_AXI_IP_BRESP(1 downto 0) => B"00",
      M_AXI_IP_BVALID => '0',
      M_AXI_IP_RDATA(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_IP_RID(0) => '0',
      M_AXI_IP_RLAST => '0',
      M_AXI_IP_RREADY => NLW_U0_M_AXI_IP_RREADY_UNCONNECTED,
      M_AXI_IP_RRESP(1 downto 0) => B"00",
      M_AXI_IP_RVALID => '0',
      M_AXI_IP_WDATA(31 downto 0) => NLW_U0_M_AXI_IP_WDATA_UNCONNECTED(31 downto 0),
      M_AXI_IP_WLAST => NLW_U0_M_AXI_IP_WLAST_UNCONNECTED,
      M_AXI_IP_WREADY => '0',
      M_AXI_IP_WSTRB(3 downto 0) => NLW_U0_M_AXI_IP_WSTRB_UNCONNECTED(3 downto 0),
      M_AXI_IP_WVALID => NLW_U0_M_AXI_IP_WVALID_UNCONNECTED,
      Mb_Reset => '0',
      Read_Strobe => Read_Strobe,
      Reset => Reset,
      Reset_Mode(0 to 1) => B"00",
      S0_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S0_AXIS_TLAST => '0',
      S0_AXIS_TREADY => NLW_U0_S0_AXIS_TREADY_UNCONNECTED,
      S0_AXIS_TVALID => '0',
      S10_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S10_AXIS_TLAST => '0',
      S10_AXIS_TREADY => NLW_U0_S10_AXIS_TREADY_UNCONNECTED,
      S10_AXIS_TVALID => '0',
      S11_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S11_AXIS_TLAST => '0',
      S11_AXIS_TREADY => NLW_U0_S11_AXIS_TREADY_UNCONNECTED,
      S11_AXIS_TVALID => '0',
      S12_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S12_AXIS_TLAST => '0',
      S12_AXIS_TREADY => NLW_U0_S12_AXIS_TREADY_UNCONNECTED,
      S12_AXIS_TVALID => '0',
      S13_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S13_AXIS_TLAST => '0',
      S13_AXIS_TREADY => NLW_U0_S13_AXIS_TREADY_UNCONNECTED,
      S13_AXIS_TVALID => '0',
      S14_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S14_AXIS_TLAST => '0',
      S14_AXIS_TREADY => NLW_U0_S14_AXIS_TREADY_UNCONNECTED,
      S14_AXIS_TVALID => '0',
      S15_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S15_AXIS_TLAST => '0',
      S15_AXIS_TREADY => NLW_U0_S15_AXIS_TREADY_UNCONNECTED,
      S15_AXIS_TVALID => '0',
      S1_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S1_AXIS_TLAST => '0',
      S1_AXIS_TREADY => NLW_U0_S1_AXIS_TREADY_UNCONNECTED,
      S1_AXIS_TVALID => '0',
      S2_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S2_AXIS_TLAST => '0',
      S2_AXIS_TREADY => NLW_U0_S2_AXIS_TREADY_UNCONNECTED,
      S2_AXIS_TVALID => '0',
      S3_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S3_AXIS_TLAST => '0',
      S3_AXIS_TREADY => NLW_U0_S3_AXIS_TREADY_UNCONNECTED,
      S3_AXIS_TVALID => '0',
      S4_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S4_AXIS_TLAST => '0',
      S4_AXIS_TREADY => NLW_U0_S4_AXIS_TREADY_UNCONNECTED,
      S4_AXIS_TVALID => '0',
      S5_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S5_AXIS_TLAST => '0',
      S5_AXIS_TREADY => NLW_U0_S5_AXIS_TREADY_UNCONNECTED,
      S5_AXIS_TVALID => '0',
      S6_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S6_AXIS_TLAST => '0',
      S6_AXIS_TREADY => NLW_U0_S6_AXIS_TREADY_UNCONNECTED,
      S6_AXIS_TVALID => '0',
      S7_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S7_AXIS_TLAST => '0',
      S7_AXIS_TREADY => NLW_U0_S7_AXIS_TREADY_UNCONNECTED,
      S7_AXIS_TVALID => '0',
      S8_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S8_AXIS_TLAST => '0',
      S8_AXIS_TREADY => NLW_U0_S8_AXIS_TREADY_UNCONNECTED,
      S8_AXIS_TVALID => '0',
      S9_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S9_AXIS_TLAST => '0',
      S9_AXIS_TREADY => NLW_U0_S9_AXIS_TREADY_UNCONNECTED,
      S9_AXIS_TVALID => '0',
      Scan_Reset => '0',
      Scan_Reset_Sel => '0',
      Sleep => NLW_U0_Sleep_UNCONNECTED,
      Trace_DCache_Hit => NLW_U0_Trace_DCache_Hit_UNCONNECTED,
      Trace_DCache_Rdy => NLW_U0_Trace_DCache_Rdy_UNCONNECTED,
      Trace_DCache_Read => NLW_U0_Trace_DCache_Read_UNCONNECTED,
      Trace_DCache_Req => NLW_U0_Trace_DCache_Req_UNCONNECTED,
      Trace_Data_Access => NLW_U0_Trace_Data_Access_UNCONNECTED,
      Trace_Data_Address(0 to 31) => NLW_U0_Trace_Data_Address_UNCONNECTED(0 to 31),
      Trace_Data_Byte_Enable(0 to 3) => NLW_U0_Trace_Data_Byte_Enable_UNCONNECTED(0 to 3),
      Trace_Data_Read => NLW_U0_Trace_Data_Read_UNCONNECTED,
      Trace_Data_Write => NLW_U0_Trace_Data_Write_UNCONNECTED,
      Trace_Data_Write_Value(0 to 31) => NLW_U0_Trace_Data_Write_Value_UNCONNECTED(0 to 31),
      Trace_Delay_Slot => NLW_U0_Trace_Delay_Slot_UNCONNECTED,
      Trace_EX_PipeRun => NLW_U0_Trace_EX_PipeRun_UNCONNECTED,
      Trace_Exception_Kind(0 to 4) => NLW_U0_Trace_Exception_Kind_UNCONNECTED(0 to 4),
      Trace_Exception_Taken => NLW_U0_Trace_Exception_Taken_UNCONNECTED,
      Trace_ICache_Hit => NLW_U0_Trace_ICache_Hit_UNCONNECTED,
      Trace_ICache_Rdy => NLW_U0_Trace_ICache_Rdy_UNCONNECTED,
      Trace_ICache_Req => NLW_U0_Trace_ICache_Req_UNCONNECTED,
      Trace_Instruction(0 to 31) => NLW_U0_Trace_Instruction_UNCONNECTED(0 to 31),
      Trace_Jump_Hit => NLW_U0_Trace_Jump_Hit_UNCONNECTED,
      Trace_Jump_Taken => NLW_U0_Trace_Jump_Taken_UNCONNECTED,
      Trace_MB_Halted => NLW_U0_Trace_MB_Halted_UNCONNECTED,
      Trace_MEM_PipeRun => NLW_U0_Trace_MEM_PipeRun_UNCONNECTED,
      Trace_MSR_Reg(0 to 14) => NLW_U0_Trace_MSR_Reg_UNCONNECTED(0 to 14),
      Trace_New_Reg_Value(0 to 31) => NLW_U0_Trace_New_Reg_Value_UNCONNECTED(0 to 31),
      Trace_OF_PipeRun => NLW_U0_Trace_OF_PipeRun_UNCONNECTED,
      Trace_PC(0 to 31) => NLW_U0_Trace_PC_UNCONNECTED(0 to 31),
      Trace_PID_Reg(0 to 7) => NLW_U0_Trace_PID_Reg_UNCONNECTED(0 to 7),
      Trace_Reg_Addr(0 to 4) => NLW_U0_Trace_Reg_Addr_UNCONNECTED(0 to 4),
      Trace_Reg_Write => NLW_U0_Trace_Reg_Write_UNCONNECTED,
      Trace_Valid_Instr => NLW_U0_Trace_Valid_Instr_UNCONNECTED,
      Wakeup(0 to 1) => B"00",
      Write_Strobe => Write_Strobe
    );
end STRUCTURE;
